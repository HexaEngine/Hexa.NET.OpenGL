// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using HexaGen.Runtime;
using System.Runtime.CompilerServices;
using System.Numerics;

namespace Hexa.NET.OpenGL.EXT
{
	public static unsafe partial class GLEXTColorSubtable
	{
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void ColorSubTableEXTNative(GLColorTableTarget target, int start, int count, GLPixelFormat format, GLPixelType type, void* data)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<GLColorTableTarget, int, int, GLPixelFormat, GLPixelType, void*, void>)funcTable[0])(target, start, count, format, type, data);
			#else
			((delegate* unmanaged[Cdecl]<GLColorTableTarget, int, int, GLPixelFormat, GLPixelType, nint, void>)funcTable[0])(target, start, count, format, type, (nint)data);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_color_subtable</remarks>
		public static void ColorSubTableEXT(GLColorTableTarget target, int start, int count, GLPixelFormat format, GLPixelType type, void* data)
		{
			ColorSubTableEXTNative(target, start, count, format, type, data);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_color_subtable</remarks>
		public static void ColorSubTableEXT(GLColorTableTarget target, int start, int count, GLPixelFormat format, GLPixelType type, nint data)
		{
			ColorSubTableEXTNative(target, start, count, format, type, (void*)data);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_color_subtable</remarks>
		public static void ColorSubTableEXT<TData>(GLColorTableTarget target, int start, int count, GLPixelFormat format, GLPixelType type, Span<TData> data) where TData : unmanaged
		{
			fixed (TData* pdata0 = data)
			{
				ColorSubTableEXTNative(target, start, count, format, type, pdata0);
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void CopyColorSubTableEXTNative(GLColorTableTarget target, int start, int x, int y, int width)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<GLColorTableTarget, int, int, int, int, void>)funcTable[1])(target, start, x, y, width);
			#else
			((delegate* unmanaged[Cdecl]<GLColorTableTarget, int, int, int, int, void>)funcTable[1])(target, start, x, y, width);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_color_subtable</remarks>
		public static void CopyColorSubTableEXT(GLColorTableTarget target, int start, int x, int y, int width)
		{
			CopyColorSubTableEXTNative(target, start, x, y, width);
		}

	}
}
