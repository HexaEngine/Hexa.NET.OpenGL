// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using HexaGen.Runtime;
using System.Runtime.CompilerServices;
using System.Numerics;

namespace Hexa.NET.OpenGL.EXT
{
	public static unsafe partial class GLEXTMultiDrawArrays
	{
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void MultiDrawArraysEXTNative(GLPrimitiveType mode, int* first, int* count, int primcount)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<GLPrimitiveType, int*, int*, int, void>)funcTable[0])(mode, first, count, primcount);
			#else
			((delegate* unmanaged[Cdecl]<GLPrimitiveType, nint, nint, int, void>)funcTable[0])(mode, (nint)first, (nint)count, primcount);
			#endif
		}

		public static void MultiDrawArraysEXT(GLPrimitiveType mode, int* first, int* count, int primcount)
		{
			MultiDrawArraysEXTNative(mode, first, count, primcount);
		}

		public static void MultiDrawArraysEXT(GLPrimitiveType mode, ref int first, int* count, int primcount)
		{
			fixed (int* pfirst0 = &first)
			{
				MultiDrawArraysEXTNative(mode, pfirst0, count, primcount);
			}
		}

		public static void MultiDrawArraysEXT(GLPrimitiveType mode, int* first, ref int count, int primcount)
		{
			fixed (int* pcount0 = &count)
			{
				MultiDrawArraysEXTNative(mode, first, pcount0, primcount);
			}
		}

		public static void MultiDrawArraysEXT(GLPrimitiveType mode, ref int first, ref int count, int primcount)
		{
			fixed (int* pfirst0 = &first)
			{
				fixed (int* pcount1 = &count)
				{
					MultiDrawArraysEXTNative(mode, pfirst0, pcount1, primcount);
				}
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void MultiDrawElementsEXTNative(GLPrimitiveType mode, int* count, GLDrawElementsType type, void** indices, int primcount)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<GLPrimitiveType, int*, GLDrawElementsType, void**, int, void>)funcTable[1])(mode, count, type, indices, primcount);
			#else
			((delegate* unmanaged[Cdecl]<GLPrimitiveType, nint, GLDrawElementsType, nint, int, void>)funcTable[1])(mode, (nint)count, type, (nint)indices, primcount);
			#endif
		}

		public static void MultiDrawElementsEXT(GLPrimitiveType mode, int* count, GLDrawElementsType type, void** indices, int primcount)
		{
			MultiDrawElementsEXTNative(mode, count, type, indices, primcount);
		}

		public static void MultiDrawElementsEXT(GLPrimitiveType mode, ref int count, GLDrawElementsType type, void** indices, int primcount)
		{
			fixed (int* pcount0 = &count)
			{
				MultiDrawElementsEXTNative(mode, pcount0, type, indices, primcount);
			}
		}

	}
}
