// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using HexaGen.Runtime;
using System.Numerics;
using Hexa.NET.OpenGL;

namespace Hexa.NET.OpenGL.EXT
{
	public unsafe partial class GLEXTVertexShader
	{
		internal static FunctionTable funcTable;

		public static bool Initialized => funcTable != null;

		/// <summary>
		/// Initializes the function table of the extension, call before you access any function.
		/// </summary>
		public static void InitExtension()
		{
			if (funcTable != null) return;
			if (GLBase.NativeContext == null) throw new InvalidOperationException("OpenGL is not initialized, call GL.InitApi.");
			funcTable = new FunctionTable(GLBase.NativeContext, 42);
			funcTable.Load(0, "glBeginVertexShaderEXT");
			funcTable.Load(1, "glBindLightParameterEXT");
			funcTable.Load(2, "glBindMaterialParameterEXT");
			funcTable.Load(3, "glBindParameterEXT");
			funcTable.Load(4, "glBindTexGenParameterEXT");
			funcTable.Load(5, "glBindTextureUnitParameterEXT");
			funcTable.Load(6, "glBindVertexShaderEXT");
			funcTable.Load(7, "glDeleteVertexShaderEXT");
			funcTable.Load(8, "glDisableVariantClientStateEXT");
			funcTable.Load(9, "glEnableVariantClientStateEXT");
			funcTable.Load(10, "glEndVertexShaderEXT");
			funcTable.Load(11, "glExtractComponentEXT");
			funcTable.Load(12, "glGenSymbolsEXT");
			funcTable.Load(13, "glGenVertexShadersEXT");
			funcTable.Load(14, "glGetInvariantBooleanvEXT");
			funcTable.Load(15, "glGetInvariantFloatvEXT");
			funcTable.Load(16, "glGetInvariantIntegervEXT");
			funcTable.Load(17, "glGetLocalConstantBooleanvEXT");
			funcTable.Load(18, "glGetLocalConstantFloatvEXT");
			funcTable.Load(19, "glGetLocalConstantIntegervEXT");
			funcTable.Load(20, "glGetVariantBooleanvEXT");
			funcTable.Load(21, "glGetVariantFloatvEXT");
			funcTable.Load(22, "glGetVariantIntegervEXT");
			funcTable.Load(23, "glGetVariantPointervEXT");
			funcTable.Load(24, "glInsertComponentEXT");
			funcTable.Load(25, "glIsVariantEnabledEXT");
			funcTable.Load(26, "glSetInvariantEXT");
			funcTable.Load(27, "glSetLocalConstantEXT");
			funcTable.Load(28, "glShaderOp1EXT");
			funcTable.Load(29, "glShaderOp2EXT");
			funcTable.Load(30, "glShaderOp3EXT");
			funcTable.Load(31, "glSwizzleEXT");
			funcTable.Load(32, "glVariantPointerEXT");
			funcTable.Load(33, "glVariantbvEXT");
			funcTable.Load(34, "glVariantdvEXT");
			funcTable.Load(35, "glVariantfvEXT");
			funcTable.Load(36, "glVariantivEXT");
			funcTable.Load(37, "glVariantsvEXT");
			funcTable.Load(38, "glVariantubvEXT");
			funcTable.Load(39, "glVariantuivEXT");
			funcTable.Load(40, "glVariantusvEXT");
			funcTable.Load(41, "glWriteMaskEXT");
		}

		public static void FreeExtension()
		{
			if (funcTable == null) return;
			funcTable.Free();
			funcTable = null;
		}
	}
}
