// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using HexaGen.Runtime;
using System.Runtime.CompilerServices;
using System.Numerics;

namespace Hexa.NET.OpenGL.EXT
{
	public static unsafe partial class GLEXTX11SyncObject
	{
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static GLSync ImportSyncEXTNative(GLEnum externalSyncType, nint externalSync, uint flags)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<GLEnum, nint, uint, GLSync>)funcTable[0])(externalSyncType, externalSync, flags);
			#else
			return (GLSync)((delegate* unmanaged[Cdecl]<GLEnum, nint, uint, GLSync>)funcTable[0])(externalSyncType, externalSync, flags);
			#endif
		}

		public static GLSync ImportSyncEXT(GLEnum externalSyncType, nint externalSync, uint flags)
		{
			GLSync ret = ImportSyncEXTNative(externalSyncType, externalSync, flags);
			return ret;
		}

	}
}
