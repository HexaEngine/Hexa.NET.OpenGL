// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using HexaGen.Runtime;
using System.Runtime.CompilerServices;
using System.Numerics;

namespace Hexa.NET.OpenGL.OVR
{
	public static unsafe partial class GLOVRMultiview
	{
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void FramebufferTextureMultiviewOVRNative(GLFramebufferTarget target, GLFramebufferAttachment attachment, uint texture, int level, int baseViewIndex, int numViews)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<GLFramebufferTarget, GLFramebufferAttachment, uint, int, int, int, void>)funcTable[0])(target, attachment, texture, level, baseViewIndex, numViews);
			#else
			((delegate* unmanaged[Cdecl]<GLFramebufferTarget, GLFramebufferAttachment, uint, int, int, int, void>)funcTable[0])(target, attachment, texture, level, baseViewIndex, numViews);
			#endif
		}

		public static void FramebufferTextureMultiviewOVR(GLFramebufferTarget target, GLFramebufferAttachment attachment, uint texture, int level, int baseViewIndex, int numViews)
		{
			FramebufferTextureMultiviewOVRNative(target, attachment, texture, level, baseViewIndex, numViews);
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void NamedFramebufferTextureMultiviewOVRNative(uint framebuffer, GLFramebufferAttachment attachment, uint texture, int level, int baseViewIndex, int numViews)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<uint, GLFramebufferAttachment, uint, int, int, int, void>)funcTable[1])(framebuffer, attachment, texture, level, baseViewIndex, numViews);
			#else
			((delegate* unmanaged[Cdecl]<uint, GLFramebufferAttachment, uint, int, int, int, void>)funcTable[1])(framebuffer, attachment, texture, level, baseViewIndex, numViews);
			#endif
		}

		public static void NamedFramebufferTextureMultiviewOVR(uint framebuffer, GLFramebufferAttachment attachment, uint texture, int level, int baseViewIndex, int numViews)
		{
			NamedFramebufferTextureMultiviewOVRNative(framebuffer, attachment, texture, level, baseViewIndex, numViews);
		}

	}
}
