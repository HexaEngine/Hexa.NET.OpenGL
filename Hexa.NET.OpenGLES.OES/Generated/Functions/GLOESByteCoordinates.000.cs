// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using HexaGen.Runtime;
using System.Runtime.CompilerServices;
using System.Numerics;

namespace Hexa.NET.OpenGLES.OES
{
	public static unsafe partial class GLOESByteCoordinates
	{
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void MultiTexCoord1bOESNative(GLTextureUnit texture, sbyte s)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<GLTextureUnit, sbyte, void>)funcTable[0])(texture, s);
			#else
			((delegate* unmanaged[Cdecl]<GLTextureUnit, sbyte, void>)funcTable[0])(texture, s);
			#endif
		}

		public static void MultiTexCoord1bOES(GLTextureUnit texture, sbyte s)
		{
			MultiTexCoord1bOESNative(texture, s);
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void MultiTexCoord1bvOESNative(GLTextureUnit texture, sbyte* coords)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<GLTextureUnit, sbyte*, void>)funcTable[1])(texture, coords);
			#else
			((delegate* unmanaged[Cdecl]<GLTextureUnit, nint, void>)funcTable[1])(texture, (nint)coords);
			#endif
		}

		public static void MultiTexCoord1bvOES(GLTextureUnit texture, sbyte* coords)
		{
			MultiTexCoord1bvOESNative(texture, coords);
		}

		public static void MultiTexCoord1bvOES(GLTextureUnit texture, ref sbyte coords)
		{
			fixed (sbyte* pcoords0 = &coords)
			{
				MultiTexCoord1bvOESNative(texture, pcoords0);
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void MultiTexCoord2bOESNative(GLTextureUnit texture, sbyte s, sbyte t)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<GLTextureUnit, sbyte, sbyte, void>)funcTable[2])(texture, s, t);
			#else
			((delegate* unmanaged[Cdecl]<GLTextureUnit, sbyte, sbyte, void>)funcTable[2])(texture, s, t);
			#endif
		}

		public static void MultiTexCoord2bOES(GLTextureUnit texture, sbyte s, sbyte t)
		{
			MultiTexCoord2bOESNative(texture, s, t);
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void MultiTexCoord2bvOESNative(GLTextureUnit texture, sbyte* coords)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<GLTextureUnit, sbyte*, void>)funcTable[3])(texture, coords);
			#else
			((delegate* unmanaged[Cdecl]<GLTextureUnit, nint, void>)funcTable[3])(texture, (nint)coords);
			#endif
		}

		public static void MultiTexCoord2bvOES(GLTextureUnit texture, sbyte* coords)
		{
			MultiTexCoord2bvOESNative(texture, coords);
		}

		public static void MultiTexCoord2bvOES(GLTextureUnit texture, ref sbyte coords)
		{
			fixed (sbyte* pcoords0 = &coords)
			{
				MultiTexCoord2bvOESNative(texture, pcoords0);
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void MultiTexCoord3bOESNative(GLTextureUnit texture, sbyte s, sbyte t, sbyte r)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<GLTextureUnit, sbyte, sbyte, sbyte, void>)funcTable[4])(texture, s, t, r);
			#else
			((delegate* unmanaged[Cdecl]<GLTextureUnit, sbyte, sbyte, sbyte, void>)funcTable[4])(texture, s, t, r);
			#endif
		}

		public static void MultiTexCoord3bOES(GLTextureUnit texture, sbyte s, sbyte t, sbyte r)
		{
			MultiTexCoord3bOESNative(texture, s, t, r);
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void MultiTexCoord3bvOESNative(GLTextureUnit texture, sbyte* coords)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<GLTextureUnit, sbyte*, void>)funcTable[5])(texture, coords);
			#else
			((delegate* unmanaged[Cdecl]<GLTextureUnit, nint, void>)funcTable[5])(texture, (nint)coords);
			#endif
		}

		public static void MultiTexCoord3bvOES(GLTextureUnit texture, sbyte* coords)
		{
			MultiTexCoord3bvOESNative(texture, coords);
		}

		public static void MultiTexCoord3bvOES(GLTextureUnit texture, ref sbyte coords)
		{
			fixed (sbyte* pcoords0 = &coords)
			{
				MultiTexCoord3bvOESNative(texture, pcoords0);
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void MultiTexCoord4bOESNative(GLTextureUnit texture, sbyte s, sbyte t, sbyte r, sbyte q)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<GLTextureUnit, sbyte, sbyte, sbyte, sbyte, void>)funcTable[6])(texture, s, t, r, q);
			#else
			((delegate* unmanaged[Cdecl]<GLTextureUnit, sbyte, sbyte, sbyte, sbyte, void>)funcTable[6])(texture, s, t, r, q);
			#endif
		}

		public static void MultiTexCoord4bOES(GLTextureUnit texture, sbyte s, sbyte t, sbyte r, sbyte q)
		{
			MultiTexCoord4bOESNative(texture, s, t, r, q);
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void MultiTexCoord4bvOESNative(GLTextureUnit texture, sbyte* coords)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<GLTextureUnit, sbyte*, void>)funcTable[7])(texture, coords);
			#else
			((delegate* unmanaged[Cdecl]<GLTextureUnit, nint, void>)funcTable[7])(texture, (nint)coords);
			#endif
		}

		public static void MultiTexCoord4bvOES(GLTextureUnit texture, sbyte* coords)
		{
			MultiTexCoord4bvOESNative(texture, coords);
		}

		public static void MultiTexCoord4bvOES(GLTextureUnit texture, ref sbyte coords)
		{
			fixed (sbyte* pcoords0 = &coords)
			{
				MultiTexCoord4bvOESNative(texture, pcoords0);
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void TexCoord1bOESNative(sbyte s)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<sbyte, void>)funcTable[8])(s);
			#else
			((delegate* unmanaged[Cdecl]<sbyte, void>)funcTable[8])(s);
			#endif
		}

		public static void TexCoord1bOES(sbyte s)
		{
			TexCoord1bOESNative(s);
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void TexCoord1bvOESNative(sbyte* coords)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<sbyte*, void>)funcTable[9])(coords);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)funcTable[9])((nint)coords);
			#endif
		}

		public static void TexCoord1bvOES(sbyte* coords)
		{
			TexCoord1bvOESNative(coords);
		}

		public static void TexCoord1bvOES(ref sbyte coords)
		{
			fixed (sbyte* pcoords0 = &coords)
			{
				TexCoord1bvOESNative(pcoords0);
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void TexCoord2bOESNative(sbyte s, sbyte t)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<sbyte, sbyte, void>)funcTable[10])(s, t);
			#else
			((delegate* unmanaged[Cdecl]<sbyte, sbyte, void>)funcTable[10])(s, t);
			#endif
		}

		public static void TexCoord2bOES(sbyte s, sbyte t)
		{
			TexCoord2bOESNative(s, t);
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void TexCoord2bvOESNative(sbyte* coords)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<sbyte*, void>)funcTable[11])(coords);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)funcTable[11])((nint)coords);
			#endif
		}

		public static void TexCoord2bvOES(sbyte* coords)
		{
			TexCoord2bvOESNative(coords);
		}

		public static void TexCoord2bvOES(ref sbyte coords)
		{
			fixed (sbyte* pcoords0 = &coords)
			{
				TexCoord2bvOESNative(pcoords0);
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void TexCoord3bOESNative(sbyte s, sbyte t, sbyte r)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<sbyte, sbyte, sbyte, void>)funcTable[12])(s, t, r);
			#else
			((delegate* unmanaged[Cdecl]<sbyte, sbyte, sbyte, void>)funcTable[12])(s, t, r);
			#endif
		}

		public static void TexCoord3bOES(sbyte s, sbyte t, sbyte r)
		{
			TexCoord3bOESNative(s, t, r);
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void TexCoord3bvOESNative(sbyte* coords)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<sbyte*, void>)funcTable[13])(coords);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)funcTable[13])((nint)coords);
			#endif
		}

		public static void TexCoord3bvOES(sbyte* coords)
		{
			TexCoord3bvOESNative(coords);
		}

		public static void TexCoord3bvOES(ref sbyte coords)
		{
			fixed (sbyte* pcoords0 = &coords)
			{
				TexCoord3bvOESNative(pcoords0);
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void TexCoord4bOESNative(sbyte s, sbyte t, sbyte r, sbyte q)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<sbyte, sbyte, sbyte, sbyte, void>)funcTable[14])(s, t, r, q);
			#else
			((delegate* unmanaged[Cdecl]<sbyte, sbyte, sbyte, sbyte, void>)funcTable[14])(s, t, r, q);
			#endif
		}

		public static void TexCoord4bOES(sbyte s, sbyte t, sbyte r, sbyte q)
		{
			TexCoord4bOESNative(s, t, r, q);
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void TexCoord4bvOESNative(sbyte* coords)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<sbyte*, void>)funcTable[15])(coords);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)funcTable[15])((nint)coords);
			#endif
		}

		public static void TexCoord4bvOES(sbyte* coords)
		{
			TexCoord4bvOESNative(coords);
		}

		public static void TexCoord4bvOES(ref sbyte coords)
		{
			fixed (sbyte* pcoords0 = &coords)
			{
				TexCoord4bvOESNative(pcoords0);
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void Vertex2bOESNative(sbyte x, sbyte y)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<sbyte, sbyte, void>)funcTable[16])(x, y);
			#else
			((delegate* unmanaged[Cdecl]<sbyte, sbyte, void>)funcTable[16])(x, y);
			#endif
		}

		public static void Vertex2bOES(sbyte x, sbyte y)
		{
			Vertex2bOESNative(x, y);
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void Vertex2bvOESNative(sbyte* coords)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<sbyte*, void>)funcTable[17])(coords);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)funcTable[17])((nint)coords);
			#endif
		}

		public static void Vertex2bvOES(sbyte* coords)
		{
			Vertex2bvOESNative(coords);
		}

		public static void Vertex2bvOES(ref sbyte coords)
		{
			fixed (sbyte* pcoords0 = &coords)
			{
				Vertex2bvOESNative(pcoords0);
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void Vertex3bOESNative(sbyte x, sbyte y, sbyte z)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<sbyte, sbyte, sbyte, void>)funcTable[18])(x, y, z);
			#else
			((delegate* unmanaged[Cdecl]<sbyte, sbyte, sbyte, void>)funcTable[18])(x, y, z);
			#endif
		}

		public static void Vertex3bOES(sbyte x, sbyte y, sbyte z)
		{
			Vertex3bOESNative(x, y, z);
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void Vertex3bvOESNative(sbyte* coords)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<sbyte*, void>)funcTable[19])(coords);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)funcTable[19])((nint)coords);
			#endif
		}

		public static void Vertex3bvOES(sbyte* coords)
		{
			Vertex3bvOESNative(coords);
		}

		public static void Vertex3bvOES(ref sbyte coords)
		{
			fixed (sbyte* pcoords0 = &coords)
			{
				Vertex3bvOESNative(pcoords0);
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void Vertex4bOESNative(sbyte x, sbyte y, sbyte z, sbyte w)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<sbyte, sbyte, sbyte, sbyte, void>)funcTable[20])(x, y, z, w);
			#else
			((delegate* unmanaged[Cdecl]<sbyte, sbyte, sbyte, sbyte, void>)funcTable[20])(x, y, z, w);
			#endif
		}

		public static void Vertex4bOES(sbyte x, sbyte y, sbyte z, sbyte w)
		{
			Vertex4bOESNative(x, y, z, w);
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void Vertex4bvOESNative(sbyte* coords)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<sbyte*, void>)funcTable[21])(coords);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)funcTable[21])((nint)coords);
			#endif
		}

		public static void Vertex4bvOES(sbyte* coords)
		{
			Vertex4bvOESNative(coords);
		}

		public static void Vertex4bvOES(ref sbyte coords)
		{
			fixed (sbyte* pcoords0 = &coords)
			{
				Vertex4bvOESNative(pcoords0);
			}
		}

	}
}
