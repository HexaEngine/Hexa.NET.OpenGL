// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using HexaGen.Runtime;
using System.Runtime.CompilerServices;
using System.Numerics;

namespace Hexa.NET.OpenGLES.OES
{
	public static unsafe partial class GLOESTextureBorderClamp
	{
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void GetSamplerParameterIivOESNative(uint sampler, GLSamplerParameterI pname, int* @params)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<uint, GLSamplerParameterI, int*, void>)funcTable[0])(sampler, pname, @params);
			#else
			((delegate* unmanaged[Cdecl]<uint, GLSamplerParameterI, nint, void>)funcTable[0])(sampler, pname, (nint)@params);
			#endif
		}

		public static void GetSamplerParameterIivOES(uint sampler, GLSamplerParameterI pname, int* @params)
		{
			GetSamplerParameterIivOESNative(sampler, pname, @params);
		}

		public static void GetSamplerParameterIivOES(uint sampler, GLSamplerParameterI pname, out int @params)
		{
			int pparams;
			GetSamplerParameterIivOESNative(sampler, pname, &pparams);
			@params = pparams;
		}

		public static void GetSamplerParameterIivOES(uint sampler, GLSamplerParameterI pname, Span<int> @params)
		{
			fixed (int* pparams = @params)
			{
				GetSamplerParameterIivOESNative(sampler, pname, pparams);
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void GetSamplerParameterIuivOESNative(uint sampler, GLSamplerParameterI pname, uint* @params)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<uint, GLSamplerParameterI, uint*, void>)funcTable[1])(sampler, pname, @params);
			#else
			((delegate* unmanaged[Cdecl]<uint, GLSamplerParameterI, nint, void>)funcTable[1])(sampler, pname, (nint)@params);
			#endif
		}

		public static void GetSamplerParameterIuivOES(uint sampler, GLSamplerParameterI pname, uint* @params)
		{
			GetSamplerParameterIuivOESNative(sampler, pname, @params);
		}

		public static void GetSamplerParameterIuivOES(uint sampler, GLSamplerParameterI pname, out uint @params)
		{
			uint pparams;
			GetSamplerParameterIuivOESNative(sampler, pname, &pparams);
			@params = pparams;
		}

		public static void GetSamplerParameterIuivOES(uint sampler, GLSamplerParameterI pname, Span<uint> @params)
		{
			fixed (uint* pparams = @params)
			{
				GetSamplerParameterIuivOESNative(sampler, pname, pparams);
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void GetTexParameterIivOESNative(GLTextureTarget target, GLGetTextureParameter pname, int* @params)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<GLTextureTarget, GLGetTextureParameter, int*, void>)funcTable[2])(target, pname, @params);
			#else
			((delegate* unmanaged[Cdecl]<GLTextureTarget, GLGetTextureParameter, nint, void>)funcTable[2])(target, pname, (nint)@params);
			#endif
		}

		public static void GetTexParameterIivOES(GLTextureTarget target, GLGetTextureParameter pname, int* @params)
		{
			GetTexParameterIivOESNative(target, pname, @params);
		}

		public static void GetTexParameterIivOES(GLTextureTarget target, GLGetTextureParameter pname, out int @params)
		{
			int pparams;
			GetTexParameterIivOESNative(target, pname, &pparams);
			@params = pparams;
		}

		public static void GetTexParameterIivOES(GLTextureTarget target, GLGetTextureParameter pname, Span<int> @params)
		{
			fixed (int* pparams = @params)
			{
				GetTexParameterIivOESNative(target, pname, pparams);
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void GetTexParameterIuivOESNative(GLTextureTarget target, GLGetTextureParameter pname, uint* @params)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<GLTextureTarget, GLGetTextureParameter, uint*, void>)funcTable[3])(target, pname, @params);
			#else
			((delegate* unmanaged[Cdecl]<GLTextureTarget, GLGetTextureParameter, nint, void>)funcTable[3])(target, pname, (nint)@params);
			#endif
		}

		public static void GetTexParameterIuivOES(GLTextureTarget target, GLGetTextureParameter pname, uint* @params)
		{
			GetTexParameterIuivOESNative(target, pname, @params);
		}

		public static void GetTexParameterIuivOES(GLTextureTarget target, GLGetTextureParameter pname, out uint @params)
		{
			uint pparams;
			GetTexParameterIuivOESNative(target, pname, &pparams);
			@params = pparams;
		}

		public static void GetTexParameterIuivOES(GLTextureTarget target, GLGetTextureParameter pname, Span<uint> @params)
		{
			fixed (uint* pparams = @params)
			{
				GetTexParameterIuivOESNative(target, pname, pparams);
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void SamplerParameterIivOESNative(uint sampler, GLSamplerParameterI pname, int* param)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<uint, GLSamplerParameterI, int*, void>)funcTable[4])(sampler, pname, param);
			#else
			((delegate* unmanaged[Cdecl]<uint, GLSamplerParameterI, nint, void>)funcTable[4])(sampler, pname, (nint)param);
			#endif
		}

		public static void SamplerParameterIivOES(uint sampler, GLSamplerParameterI pname, int* param)
		{
			SamplerParameterIivOESNative(sampler, pname, param);
		}

		public static void SamplerParameterIivOES(uint sampler, GLSamplerParameterI pname, out int param)
		{
			int pparam;
			SamplerParameterIivOESNative(sampler, pname, &pparam);
			param = pparam;
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void SamplerParameterIuivOESNative(uint sampler, GLSamplerParameterI pname, uint* param)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<uint, GLSamplerParameterI, uint*, void>)funcTable[5])(sampler, pname, param);
			#else
			((delegate* unmanaged[Cdecl]<uint, GLSamplerParameterI, nint, void>)funcTable[5])(sampler, pname, (nint)param);
			#endif
		}

		public static void SamplerParameterIuivOES(uint sampler, GLSamplerParameterI pname, uint* param)
		{
			SamplerParameterIuivOESNative(sampler, pname, param);
		}

		public static void SamplerParameterIuivOES(uint sampler, GLSamplerParameterI pname, out uint param)
		{
			uint pparam;
			SamplerParameterIuivOESNative(sampler, pname, &pparam);
			param = pparam;
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void TexParameterIivOESNative(GLTextureTarget target, GLTextureParameterName pname, int* @params)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<GLTextureTarget, GLTextureParameterName, int*, void>)funcTable[6])(target, pname, @params);
			#else
			((delegate* unmanaged[Cdecl]<GLTextureTarget, GLTextureParameterName, nint, void>)funcTable[6])(target, pname, (nint)@params);
			#endif
		}

		public static void TexParameterIivOES(GLTextureTarget target, GLTextureParameterName pname, int* @params)
		{
			TexParameterIivOESNative(target, pname, @params);
		}

		public static void TexParameterIivOES(GLTextureTarget target, GLTextureParameterName pname, out int @params)
		{
			int pparams;
			TexParameterIivOESNative(target, pname, &pparams);
			@params = pparams;
		}

		public static void TexParameterIivOES(GLTextureTarget target, GLTextureParameterName pname, Span<int> @params)
		{
			fixed (int* pparams = @params)
			{
				TexParameterIivOESNative(target, pname, pparams);
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void TexParameterIuivOESNative(GLTextureTarget target, GLTextureParameterName pname, uint* @params)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<GLTextureTarget, GLTextureParameterName, uint*, void>)funcTable[7])(target, pname, @params);
			#else
			((delegate* unmanaged[Cdecl]<GLTextureTarget, GLTextureParameterName, nint, void>)funcTable[7])(target, pname, (nint)@params);
			#endif
		}

		public static void TexParameterIuivOES(GLTextureTarget target, GLTextureParameterName pname, uint* @params)
		{
			TexParameterIuivOESNative(target, pname, @params);
		}

		public static void TexParameterIuivOES(GLTextureTarget target, GLTextureParameterName pname, out uint @params)
		{
			uint pparams;
			TexParameterIuivOESNative(target, pname, &pparams);
			@params = pparams;
		}

		public static void TexParameterIuivOES(GLTextureTarget target, GLTextureParameterName pname, Span<uint> @params)
		{
			fixed (uint* pparams = @params)
			{
				TexParameterIuivOESNative(target, pname, pparams);
			}
		}

	}
}
