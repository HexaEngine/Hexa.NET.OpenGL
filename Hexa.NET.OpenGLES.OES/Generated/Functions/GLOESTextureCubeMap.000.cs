// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using HexaGen.Runtime;
using System.Runtime.CompilerServices;
using System.Numerics;

namespace Hexa.NET.OpenGLES.OES
{
	public static unsafe partial class GLOESTextureCubeMap
	{
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void GetTexGenfvOESNative(GLTextureCoordName coord, GLTextureGenParameter pname, float* @params)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<GLTextureCoordName, GLTextureGenParameter, float*, void>)funcTable[0])(coord, pname, @params);
			#else
			((delegate* unmanaged[Cdecl]<GLTextureCoordName, GLTextureGenParameter, nint, void>)funcTable[0])(coord, pname, (nint)@params);
			#endif
		}

		public static void GetTexGenfvOES(GLTextureCoordName coord, GLTextureGenParameter pname, float* @params)
		{
			GetTexGenfvOESNative(coord, pname, @params);
		}

		public static void GetTexGenfvOES(GLTextureCoordName coord, GLTextureGenParameter pname, ref float @params)
		{
			fixed (float* pparams0 = &@params)
			{
				GetTexGenfvOESNative(coord, pname, pparams0);
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void GetTexGenivOESNative(GLTextureCoordName coord, GLTextureGenParameter pname, int* @params)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<GLTextureCoordName, GLTextureGenParameter, int*, void>)funcTable[1])(coord, pname, @params);
			#else
			((delegate* unmanaged[Cdecl]<GLTextureCoordName, GLTextureGenParameter, nint, void>)funcTable[1])(coord, pname, (nint)@params);
			#endif
		}

		public static void GetTexGenivOES(GLTextureCoordName coord, GLTextureGenParameter pname, int* @params)
		{
			GetTexGenivOESNative(coord, pname, @params);
		}

		public static void GetTexGenivOES(GLTextureCoordName coord, GLTextureGenParameter pname, ref int @params)
		{
			fixed (int* pparams0 = &@params)
			{
				GetTexGenivOESNative(coord, pname, pparams0);
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void GetTexGenxvOESNative(GLTextureCoordName coord, GLTextureGenParameter pname, int* @params)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<GLTextureCoordName, GLTextureGenParameter, int*, void>)funcTable[2])(coord, pname, @params);
			#else
			((delegate* unmanaged[Cdecl]<GLTextureCoordName, GLTextureGenParameter, nint, void>)funcTable[2])(coord, pname, (nint)@params);
			#endif
		}

		public static void GetTexGenxvOES(GLTextureCoordName coord, GLTextureGenParameter pname, int* @params)
		{
			GetTexGenxvOESNative(coord, pname, @params);
		}

		public static void GetTexGenxvOES(GLTextureCoordName coord, GLTextureGenParameter pname, ref int @params)
		{
			fixed (int* pparams0 = &@params)
			{
				GetTexGenxvOESNative(coord, pname, pparams0);
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void TexGenfOESNative(GLTextureCoordName coord, GLTextureGenParameter pname, float param)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<GLTextureCoordName, GLTextureGenParameter, float, void>)funcTable[3])(coord, pname, param);
			#else
			((delegate* unmanaged[Cdecl]<GLTextureCoordName, GLTextureGenParameter, float, void>)funcTable[3])(coord, pname, param);
			#endif
		}

		public static void TexGenfOES(GLTextureCoordName coord, GLTextureGenParameter pname, float param)
		{
			TexGenfOESNative(coord, pname, param);
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void TexGenfvOESNative(GLTextureCoordName coord, GLTextureGenParameter pname, float* @params)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<GLTextureCoordName, GLTextureGenParameter, float*, void>)funcTable[4])(coord, pname, @params);
			#else
			((delegate* unmanaged[Cdecl]<GLTextureCoordName, GLTextureGenParameter, nint, void>)funcTable[4])(coord, pname, (nint)@params);
			#endif
		}

		public static void TexGenfvOES(GLTextureCoordName coord, GLTextureGenParameter pname, float* @params)
		{
			TexGenfvOESNative(coord, pname, @params);
		}

		public static void TexGenfvOES(GLTextureCoordName coord, GLTextureGenParameter pname, ref float @params)
		{
			fixed (float* pparams0 = &@params)
			{
				TexGenfvOESNative(coord, pname, pparams0);
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void TexGeniOESNative(GLTextureCoordName coord, GLTextureGenParameter pname, int param)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<GLTextureCoordName, GLTextureGenParameter, int, void>)funcTable[5])(coord, pname, param);
			#else
			((delegate* unmanaged[Cdecl]<GLTextureCoordName, GLTextureGenParameter, int, void>)funcTable[5])(coord, pname, param);
			#endif
		}

		public static void TexGeniOES(GLTextureCoordName coord, GLTextureGenParameter pname, int param)
		{
			TexGeniOESNative(coord, pname, param);
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void TexGenivOESNative(GLTextureCoordName coord, GLTextureGenParameter pname, int* @params)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<GLTextureCoordName, GLTextureGenParameter, int*, void>)funcTable[6])(coord, pname, @params);
			#else
			((delegate* unmanaged[Cdecl]<GLTextureCoordName, GLTextureGenParameter, nint, void>)funcTable[6])(coord, pname, (nint)@params);
			#endif
		}

		public static void TexGenivOES(GLTextureCoordName coord, GLTextureGenParameter pname, int* @params)
		{
			TexGenivOESNative(coord, pname, @params);
		}

		public static void TexGenivOES(GLTextureCoordName coord, GLTextureGenParameter pname, ref int @params)
		{
			fixed (int* pparams0 = &@params)
			{
				TexGenivOESNative(coord, pname, pparams0);
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void TexGenxOESNative(GLTextureCoordName coord, GLTextureGenParameter pname, int param)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<GLTextureCoordName, GLTextureGenParameter, int, void>)funcTable[7])(coord, pname, param);
			#else
			((delegate* unmanaged[Cdecl]<GLTextureCoordName, GLTextureGenParameter, int, void>)funcTable[7])(coord, pname, param);
			#endif
		}

		public static void TexGenxOES(GLTextureCoordName coord, GLTextureGenParameter pname, int param)
		{
			TexGenxOESNative(coord, pname, param);
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void TexGenxvOESNative(GLTextureCoordName coord, GLTextureGenParameter pname, int* @params)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<GLTextureCoordName, GLTextureGenParameter, int*, void>)funcTable[8])(coord, pname, @params);
			#else
			((delegate* unmanaged[Cdecl]<GLTextureCoordName, GLTextureGenParameter, nint, void>)funcTable[8])(coord, pname, (nint)@params);
			#endif
		}

		public static void TexGenxvOES(GLTextureCoordName coord, GLTextureGenParameter pname, int* @params)
		{
			TexGenxvOESNative(coord, pname, @params);
		}

		public static void TexGenxvOES(GLTextureCoordName coord, GLTextureGenParameter pname, ref int @params)
		{
			fixed (int* pparams0 = &@params)
			{
				TexGenxvOESNative(coord, pname, pparams0);
			}
		}

	}
}
