// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using HexaGen.Runtime;
using System.Numerics;
using Hexa.NET.OpenGL;

namespace Hexa.NET.OpenGL.ARB
{
	public unsafe partial class GLARBDirectStateAccess
	{
		internal static FunctionTable funcTable;

		public static bool Initialized => funcTable != null;

		/// <summary>
		/// Initializes the function table of the extension, call before you access any function.
		/// </summary>
		public static void InitExtension()
		{
			if (funcTable != null) return;
			if (GLBase.NativeContext == null) throw new InvalidOperationException("OpenGL is not initialized, call GL.InitApi.");
			funcTable = new FunctionTable(GLBase.NativeContext, 97);
			funcTable.Load(0, "glBindTextureUnit");
			funcTable.Load(1, "glBlitNamedFramebuffer");
			funcTable.Load(2, "glCheckNamedFramebufferStatus");
			funcTable.Load(3, "glClearNamedBufferData");
			funcTable.Load(4, "glClearNamedBufferSubData");
			funcTable.Load(5, "glClearNamedFramebufferfi");
			funcTable.Load(6, "glClearNamedFramebufferfv");
			funcTable.Load(7, "glClearNamedFramebufferiv");
			funcTable.Load(8, "glClearNamedFramebufferuiv");
			funcTable.Load(9, "glCompressedTextureSubImage1D");
			funcTable.Load(10, "glCompressedTextureSubImage2D");
			funcTable.Load(11, "glCompressedTextureSubImage3D");
			funcTable.Load(12, "glCopyNamedBufferSubData");
			funcTable.Load(13, "glCopyTextureSubImage1D");
			funcTable.Load(14, "glCopyTextureSubImage2D");
			funcTable.Load(15, "glCopyTextureSubImage3D");
			funcTable.Load(16, "glCreateBuffers");
			funcTable.Load(17, "glCreateFramebuffers");
			funcTable.Load(18, "glCreateProgramPipelines");
			funcTable.Load(19, "glCreateQueries");
			funcTable.Load(20, "glCreateRenderbuffers");
			funcTable.Load(21, "glCreateSamplers");
			funcTable.Load(22, "glCreateTextures");
			funcTable.Load(23, "glCreateTransformFeedbacks");
			funcTable.Load(24, "glCreateVertexArrays");
			funcTable.Load(25, "glDisableVertexArrayAttrib");
			funcTable.Load(26, "glEnableVertexArrayAttrib");
			funcTable.Load(27, "glFlushMappedNamedBufferRange");
			funcTable.Load(28, "glGenerateTextureMipmap");
			funcTable.Load(29, "glGetCompressedTextureImage");
			funcTable.Load(30, "glGetNamedBufferParameteri64v");
			funcTable.Load(31, "glGetNamedBufferParameteriv");
			funcTable.Load(32, "glGetNamedBufferPointerv");
			funcTable.Load(33, "glGetNamedBufferSubData");
			funcTable.Load(34, "glGetNamedFramebufferAttachmentParameteriv");
			funcTable.Load(35, "glGetNamedFramebufferParameteriv");
			funcTable.Load(36, "glGetNamedRenderbufferParameteriv");
			funcTable.Load(37, "glGetQueryBufferObjecti64v");
			funcTable.Load(38, "glGetQueryBufferObjectiv");
			funcTable.Load(39, "glGetQueryBufferObjectui64v");
			funcTable.Load(40, "glGetQueryBufferObjectuiv");
			funcTable.Load(41, "glGetTextureImage");
			funcTable.Load(42, "glGetTextureLevelParameterfv");
			funcTable.Load(43, "glGetTextureLevelParameteriv");
			funcTable.Load(44, "glGetTextureParameterIiv");
			funcTable.Load(45, "glGetTextureParameterIuiv");
			funcTable.Load(46, "glGetTextureParameterfv");
			funcTable.Load(47, "glGetTextureParameteriv");
			funcTable.Load(48, "glGetTransformFeedbacki64_v");
			funcTable.Load(49, "glGetTransformFeedbacki_v");
			funcTable.Load(50, "glGetTransformFeedbackiv");
			funcTable.Load(51, "glGetVertexArrayIndexed64iv");
			funcTable.Load(52, "glGetVertexArrayIndexediv");
			funcTable.Load(53, "glGetVertexArrayiv");
			funcTable.Load(54, "glInvalidateNamedFramebufferData");
			funcTable.Load(55, "glInvalidateNamedFramebufferSubData");
			funcTable.Load(56, "glMapNamedBuffer");
			funcTable.Load(57, "glMapNamedBufferRange");
			funcTable.Load(58, "glNamedBufferData");
			funcTable.Load(59, "glNamedBufferStorage");
			funcTable.Load(60, "glNamedBufferSubData");
			funcTable.Load(61, "glNamedFramebufferDrawBuffer");
			funcTable.Load(62, "glNamedFramebufferDrawBuffers");
			funcTable.Load(63, "glNamedFramebufferParameteri");
			funcTable.Load(64, "glNamedFramebufferReadBuffer");
			funcTable.Load(65, "glNamedFramebufferRenderbuffer");
			funcTable.Load(66, "glNamedFramebufferTexture");
			funcTable.Load(67, "glNamedFramebufferTextureLayer");
			funcTable.Load(68, "glNamedRenderbufferStorage");
			funcTable.Load(69, "glNamedRenderbufferStorageMultisample");
			funcTable.Load(70, "glTextureBuffer");
			funcTable.Load(71, "glTextureBufferRange");
			funcTable.Load(72, "glTextureParameterIiv");
			funcTable.Load(73, "glTextureParameterIuiv");
			funcTable.Load(74, "glTextureParameterf");
			funcTable.Load(75, "glTextureParameterfv");
			funcTable.Load(76, "glTextureParameteri");
			funcTable.Load(77, "glTextureParameteriv");
			funcTable.Load(78, "glTextureStorage1D");
			funcTable.Load(79, "glTextureStorage2D");
			funcTable.Load(80, "glTextureStorage2DMultisample");
			funcTable.Load(81, "glTextureStorage3D");
			funcTable.Load(82, "glTextureStorage3DMultisample");
			funcTable.Load(83, "glTextureSubImage1D");
			funcTable.Load(84, "glTextureSubImage2D");
			funcTable.Load(85, "glTextureSubImage3D");
			funcTable.Load(86, "glTransformFeedbackBufferBase");
			funcTable.Load(87, "glTransformFeedbackBufferRange");
			funcTable.Load(88, "glUnmapNamedBuffer");
			funcTable.Load(89, "glVertexArrayAttribBinding");
			funcTable.Load(90, "glVertexArrayAttribFormat");
			funcTable.Load(91, "glVertexArrayAttribIFormat");
			funcTable.Load(92, "glVertexArrayAttribLFormat");
			funcTable.Load(93, "glVertexArrayBindingDivisor");
			funcTable.Load(94, "glVertexArrayElementBuffer");
			funcTable.Load(95, "glVertexArrayVertexBuffer");
			funcTable.Load(96, "glVertexArrayVertexBuffers");
		}

		public static void FreeExtension()
		{
			if (funcTable == null) return;
			funcTable.Free();
			funcTable = null;
		}
	}
}
