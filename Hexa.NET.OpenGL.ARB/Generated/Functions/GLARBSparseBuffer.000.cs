// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using HexaGen.Runtime;
using System.Runtime.CompilerServices;
using System.Numerics;

namespace Hexa.NET.OpenGL.ARB
{
	public static unsafe partial class GLARBSparseBuffer
	{
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void BufferPageCommitmentARBNative(GLEnum target, nint offset, nint size, bool commit)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<GLEnum, nint, nint, byte, void>)funcTable[0])(target, offset, size, *((byte*)(&commit)));
			#else
			((delegate* unmanaged[Cdecl]<GLEnum, nint, nint, byte, void>)funcTable[0])(target, offset, size, *((byte*)(&commit)));
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_sparse_buffer</remarks>
		public static void BufferPageCommitmentARB(GLEnum target, nint offset, nint size, bool commit)
		{
			BufferPageCommitmentARBNative(target, offset, size, commit);
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void NamedBufferPageCommitmentARBNative(uint buffer, nint offset, nint size, bool commit)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<uint, nint, nint, byte, void>)funcTable[1])(buffer, offset, size, *((byte*)(&commit)));
			#else
			((delegate* unmanaged[Cdecl]<uint, nint, nint, byte, void>)funcTable[1])(buffer, offset, size, *((byte*)(&commit)));
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_sparse_buffer</remarks>
		public static void NamedBufferPageCommitmentARB(uint buffer, nint offset, nint size, bool commit)
		{
			NamedBufferPageCommitmentARBNative(buffer, offset, size, commit);
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void NamedBufferPageCommitmentEXTNative(uint buffer, nint offset, nint size, bool commit)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<uint, nint, nint, byte, void>)funcTable[2])(buffer, offset, size, *((byte*)(&commit)));
			#else
			((delegate* unmanaged[Cdecl]<uint, nint, nint, byte, void>)funcTable[2])(buffer, offset, size, *((byte*)(&commit)));
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_sparse_buffer</remarks>
		public static void NamedBufferPageCommitmentEXT(uint buffer, nint offset, nint size, bool commit)
		{
			NamedBufferPageCommitmentEXTNative(buffer, offset, size, commit);
		}

	}
}
