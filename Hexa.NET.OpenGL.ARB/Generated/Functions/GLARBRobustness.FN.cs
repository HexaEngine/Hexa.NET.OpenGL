// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using HexaGen.Runtime;
using System.Numerics;
using Hexa.NET.OpenGL;

namespace Hexa.NET.OpenGL.ARB
{
	public unsafe partial class GLARBRobustness : GLExtension, IDisposable
	{
		public const string ExtensionName = "GL_ARB_robustness";

		public GLARBRobustness() : base(20)
		{
		}

		public override bool IsSupported(IGLContext context)
		{
			return context.IsExtensionSupported(ExtensionName);
		}

		protected override void InitTable(FunctionTable funcTable)
		{
			funcTable.Load(0, "glGetGraphicsResetStatusARB");
			funcTable.Load(1, "glGetnColorTableARB");
			funcTable.Load(2, "glGetnCompressedTexImageARB");
			funcTable.Load(3, "glGetnConvolutionFilterARB");
			funcTable.Load(4, "glGetnHistogramARB");
			funcTable.Load(5, "glGetnMapdvARB");
			funcTable.Load(6, "glGetnMapfvARB");
			funcTable.Load(7, "glGetnMapivARB");
			funcTable.Load(8, "glGetnMinmaxARB");
			funcTable.Load(9, "glGetnPixelMapfvARB");
			funcTable.Load(10, "glGetnPixelMapuivARB");
			funcTable.Load(11, "glGetnPixelMapusvARB");
			funcTable.Load(12, "glGetnPolygonStippleARB");
			funcTable.Load(13, "glGetnSeparableFilterARB");
			funcTable.Load(14, "glGetnTexImageARB");
			funcTable.Load(15, "glGetnUniformdvARB");
			funcTable.Load(16, "glGetnUniformfvARB");
			funcTable.Load(17, "glGetnUniformivARB");
			funcTable.Load(18, "glGetnUniformuivARB");
			funcTable.Load(19, "glReadnPixelsARB");
		}

		public void Dispose()
		{
			funcTable.Dispose();
		}
	}
}
