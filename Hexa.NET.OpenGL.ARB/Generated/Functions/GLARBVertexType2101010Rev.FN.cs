// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using HexaGen.Runtime;
using System.Numerics;
using Hexa.NET.OpenGL;

namespace Hexa.NET.OpenGL.ARB
{
	public unsafe partial class GLARBVertexType2101010Rev
	{
		internal static FunctionTable funcTable;

		public static bool Initialized => funcTable != null;

		/// <summary>
		/// Initializes the function table of the extension, call before you access any function.
		/// </summary>
		public static void InitExtension()
		{
			if (funcTable != null) return;
			if (GLBase.NativeContext == null) throw new InvalidOperationException("OpenGL is not initialized, call GL.InitApi.");
			funcTable = new FunctionTable(GLBase.NativeContext, 38);
			funcTable.Load(0, "glColorP3ui");
			funcTable.Load(1, "glColorP3uiv");
			funcTable.Load(2, "glColorP4ui");
			funcTable.Load(3, "glColorP4uiv");
			funcTable.Load(4, "glMultiTexCoordP1ui");
			funcTable.Load(5, "glMultiTexCoordP1uiv");
			funcTable.Load(6, "glMultiTexCoordP2ui");
			funcTable.Load(7, "glMultiTexCoordP2uiv");
			funcTable.Load(8, "glMultiTexCoordP3ui");
			funcTable.Load(9, "glMultiTexCoordP3uiv");
			funcTable.Load(10, "glMultiTexCoordP4ui");
			funcTable.Load(11, "glMultiTexCoordP4uiv");
			funcTable.Load(12, "glNormalP3ui");
			funcTable.Load(13, "glNormalP3uiv");
			funcTable.Load(14, "glSecondaryColorP3ui");
			funcTable.Load(15, "glSecondaryColorP3uiv");
			funcTable.Load(16, "glTexCoordP1ui");
			funcTable.Load(17, "glTexCoordP1uiv");
			funcTable.Load(18, "glTexCoordP2ui");
			funcTable.Load(19, "glTexCoordP2uiv");
			funcTable.Load(20, "glTexCoordP3ui");
			funcTable.Load(21, "glTexCoordP3uiv");
			funcTable.Load(22, "glTexCoordP4ui");
			funcTable.Load(23, "glTexCoordP4uiv");
			funcTable.Load(24, "glVertexAttribP1ui");
			funcTable.Load(25, "glVertexAttribP1uiv");
			funcTable.Load(26, "glVertexAttribP2ui");
			funcTable.Load(27, "glVertexAttribP2uiv");
			funcTable.Load(28, "glVertexAttribP3ui");
			funcTable.Load(29, "glVertexAttribP3uiv");
			funcTable.Load(30, "glVertexAttribP4ui");
			funcTable.Load(31, "glVertexAttribP4uiv");
			funcTable.Load(32, "glVertexP2ui");
			funcTable.Load(33, "glVertexP2uiv");
			funcTable.Load(34, "glVertexP3ui");
			funcTable.Load(35, "glVertexP3uiv");
			funcTable.Load(36, "glVertexP4ui");
			funcTable.Load(37, "glVertexP4uiv");
		}

		public static void FreeExtension()
		{
			if (funcTable == null) return;
			funcTable.Free();
			funcTable = null;
		}
	}
}
