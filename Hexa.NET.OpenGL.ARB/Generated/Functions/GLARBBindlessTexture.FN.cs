// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using HexaGen.Runtime;
using System.Numerics;
using Hexa.NET.OpenGL;

namespace Hexa.NET.OpenGL.ARB
{
	public unsafe partial class GLARBBindlessTexture : GLExtension, IDisposable
	{
		public const string ExtensionName = "GL_ARB_bindless_texture";

		public GLARBBindlessTexture() : base(16)
		{
		}

		public override bool IsSupported(IGLContext context)
		{
			return context.IsExtensionSupported(ExtensionName);
		}

		protected override void InitTable(FunctionTable funcTable)
		{
			funcTable.Load(0, "glGetImageHandleARB");
			funcTable.Load(1, "glGetTextureHandleARB");
			funcTable.Load(2, "glGetTextureSamplerHandleARB");
			funcTable.Load(3, "glGetVertexAttribLui64vARB");
			funcTable.Load(4, "glIsImageHandleResidentARB");
			funcTable.Load(5, "glIsTextureHandleResidentARB");
			funcTable.Load(6, "glMakeImageHandleNonResidentARB");
			funcTable.Load(7, "glMakeImageHandleResidentARB");
			funcTable.Load(8, "glMakeTextureHandleNonResidentARB");
			funcTable.Load(9, "glMakeTextureHandleResidentARB");
			funcTable.Load(10, "glProgramUniformHandleui64ARB");
			funcTable.Load(11, "glProgramUniformHandleui64vARB");
			funcTable.Load(12, "glUniformHandleui64ARB");
			funcTable.Load(13, "glUniformHandleui64vARB");
			funcTable.Load(14, "glVertexAttribL1ui64ARB");
			funcTable.Load(15, "glVertexAttribL1ui64vARB");
		}

		public void Dispose()
		{
			funcTable.Dispose();
		}
	}
}
