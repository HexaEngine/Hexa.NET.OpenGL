// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using HexaGen.Runtime;
using System.Numerics;
using Hexa.NET.OpenGL;

namespace Hexa.NET.OpenGL.ARB
{
	public unsafe partial class GLARBSamplerObjects : GLExtension, IDisposable
	{
		public const string ExtensionName = "GL_ARB_sampler_objects";

		public GLARBSamplerObjects() : base(14)
		{
		}

		public override bool IsSupported(IGLContext context)
		{
			return context.IsExtensionSupported(ExtensionName);
		}

		protected override void InitTable(FunctionTable funcTable)
		{
			funcTable.Load(0, "glBindSampler");
			funcTable.Load(1, "glDeleteSamplers");
			funcTable.Load(2, "glGenSamplers");
			funcTable.Load(3, "glGetSamplerParameterIiv");
			funcTable.Load(4, "glGetSamplerParameterIuiv");
			funcTable.Load(5, "glGetSamplerParameterfv");
			funcTable.Load(6, "glGetSamplerParameteriv");
			funcTable.Load(7, "glIsSampler");
			funcTable.Load(8, "glSamplerParameterIiv");
			funcTable.Load(9, "glSamplerParameterIuiv");
			funcTable.Load(10, "glSamplerParameterf");
			funcTable.Load(11, "glSamplerParameterfv");
			funcTable.Load(12, "glSamplerParameteri");
			funcTable.Load(13, "glSamplerParameteriv");
		}

		public void Dispose()
		{
			funcTable.Dispose();
		}
	}
}
