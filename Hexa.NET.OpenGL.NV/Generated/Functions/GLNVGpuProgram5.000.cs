// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using HexaGen.Runtime;
using System.Runtime.CompilerServices;
using System.Numerics;

namespace Hexa.NET.OpenGL.NV
{
	public static unsafe partial class GLNVGpuProgram5
	{
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void GetProgramSubroutineParameteruivNVNative(GLEnum target, uint index, uint* param)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<GLEnum, uint, uint*, void>)funcTable[0])(target, index, param);
			#else
			((delegate* unmanaged[Cdecl]<GLEnum, uint, nint, void>)funcTable[0])(target, index, (nint)param);
			#endif
		}

		public static void GetProgramSubroutineParameteruivNV(GLEnum target, uint index, uint* param)
		{
			GetProgramSubroutineParameteruivNVNative(target, index, param);
		}

		public static void GetProgramSubroutineParameteruivNV(GLEnum target, uint index, ref uint param)
		{
			fixed (uint* pparam0 = &param)
			{
				GetProgramSubroutineParameteruivNVNative(target, index, pparam0);
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void ProgramSubroutineParametersuivNVNative(GLEnum target, int count, uint* @params)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<GLEnum, int, uint*, void>)funcTable[1])(target, count, @params);
			#else
			((delegate* unmanaged[Cdecl]<GLEnum, int, nint, void>)funcTable[1])(target, count, (nint)@params);
			#endif
		}

		public static void ProgramSubroutineParametersuivNV(GLEnum target, int count, uint* @params)
		{
			ProgramSubroutineParametersuivNVNative(target, count, @params);
		}

		public static void ProgramSubroutineParametersuivNV(GLEnum target, int count, ref uint @params)
		{
			fixed (uint* pparams0 = &@params)
			{
				ProgramSubroutineParametersuivNVNative(target, count, pparams0);
			}
		}

	}
}
