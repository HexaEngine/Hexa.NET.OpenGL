// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using HexaGen.Runtime;
using System.Numerics;
using Hexa.NET.OpenGL;

namespace Hexa.NET.OpenGL.NV
{
	public unsafe partial class GLNVVertexProgram4
	{
		internal static FunctionTable funcTable;

		public static bool Initialized => funcTable != null;

		/// <summary>
		/// Initializes the function table of the extension, call before you access any function.
		/// </summary>
		public static void InitExtension()
		{
			if (funcTable != null) return;
			if (GLBase.NativeContext == null) throw new InvalidOperationException("OpenGL is not initialized, call GL.InitApi.");
			funcTable = new FunctionTable(GLBase.NativeContext, 23);
			funcTable.Load(0, "glGetVertexAttribIivEXT");
			funcTable.Load(1, "glGetVertexAttribIuivEXT");
			funcTable.Load(2, "glVertexAttribI1iEXT");
			funcTable.Load(3, "glVertexAttribI1ivEXT");
			funcTable.Load(4, "glVertexAttribI1uiEXT");
			funcTable.Load(5, "glVertexAttribI1uivEXT");
			funcTable.Load(6, "glVertexAttribI2iEXT");
			funcTable.Load(7, "glVertexAttribI2ivEXT");
			funcTable.Load(8, "glVertexAttribI2uiEXT");
			funcTable.Load(9, "glVertexAttribI2uivEXT");
			funcTable.Load(10, "glVertexAttribI3iEXT");
			funcTable.Load(11, "glVertexAttribI3ivEXT");
			funcTable.Load(12, "glVertexAttribI3uiEXT");
			funcTable.Load(13, "glVertexAttribI3uivEXT");
			funcTable.Load(14, "glVertexAttribI4bvEXT");
			funcTable.Load(15, "glVertexAttribI4iEXT");
			funcTable.Load(16, "glVertexAttribI4ivEXT");
			funcTable.Load(17, "glVertexAttribI4svEXT");
			funcTable.Load(18, "glVertexAttribI4ubvEXT");
			funcTable.Load(19, "glVertexAttribI4uiEXT");
			funcTable.Load(20, "glVertexAttribI4uivEXT");
			funcTable.Load(21, "glVertexAttribI4usvEXT");
			funcTable.Load(22, "glVertexAttribIPointerEXT");
		}

		public static void FreeExtension()
		{
			if (funcTable == null) return;
			funcTable.Free();
			funcTable = null;
		}
	}
}
