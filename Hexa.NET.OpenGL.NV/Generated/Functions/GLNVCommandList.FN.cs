// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using HexaGen.Runtime;
using System.Numerics;
using Hexa.NET.OpenGL;

namespace Hexa.NET.OpenGL.NV
{
	public unsafe partial class GLNVCommandList : GLExtension, IDisposable
	{
		public const string ExtensionName = "GL_NV_command_list";

		public GLNVCommandList() : base(17)
		{
		}

		public override bool IsSupported(IGLContext context)
		{
			return context.IsExtensionSupported(ExtensionName);
		}

		protected override void InitTable(FunctionTable funcTable)
		{
			funcTable.Load(0, "glCallCommandListNV");
			funcTable.Load(1, "glCommandListSegmentsNV");
			funcTable.Load(2, "glCompileCommandListNV");
			funcTable.Load(3, "glCreateCommandListsNV");
			funcTable.Load(4, "glCreateStatesNV");
			funcTable.Load(5, "glDeleteCommandListsNV");
			funcTable.Load(6, "glDeleteStatesNV");
			funcTable.Load(7, "glDrawCommandsAddressNV");
			funcTable.Load(8, "glDrawCommandsNV");
			funcTable.Load(9, "glDrawCommandsStatesAddressNV");
			funcTable.Load(10, "glDrawCommandsStatesNV");
			funcTable.Load(11, "glGetCommandHeaderNV");
			funcTable.Load(12, "glGetStageIndexNV");
			funcTable.Load(13, "glIsCommandListNV");
			funcTable.Load(14, "glIsStateNV");
			funcTable.Load(15, "glListDrawCommandsStatesClientNV");
			funcTable.Load(16, "glStateCaptureNV");
		}

		public void Dispose()
		{
			funcTable.Dispose();
		}
	}
}
