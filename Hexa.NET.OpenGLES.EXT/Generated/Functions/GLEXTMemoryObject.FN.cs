// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using HexaGen.Runtime;
using System.Numerics;
using Hexa.NET.OpenGLES;

namespace Hexa.NET.OpenGLES.EXT
{
	public unsafe partial class GLEXTMemoryObject : GLExtension, IDisposable
	{
		public const string ExtensionName = "GL_EXT_memory_object";

		public GLEXTMemoryObject() : base(19)
		{
		}

		public override bool IsSupported(IGLContext context)
		{
			return context.IsExtensionSupported(ExtensionName);
		}

		protected override void InitTable(FunctionTable funcTable)
		{
			funcTable.Load(0, "glBufferStorageMemEXT");
			funcTable.Load(1, "glCreateMemoryObjectsEXT");
			funcTable.Load(2, "glDeleteMemoryObjectsEXT");
			funcTable.Load(3, "glGetMemoryObjectParameterivEXT");
			funcTable.Load(4, "glGetUnsignedBytevEXT");
			funcTable.Load(5, "glGetUnsignedBytei_vEXT");
			funcTable.Load(6, "glIsMemoryObjectEXT");
			funcTable.Load(7, "glMemoryObjectParameterivEXT");
			funcTable.Load(8, "glNamedBufferStorageMemEXT");
			funcTable.Load(9, "glTexStorageMem1DEXT");
			funcTable.Load(10, "glTexStorageMem2DEXT");
			funcTable.Load(11, "glTexStorageMem2DMultisampleEXT");
			funcTable.Load(12, "glTexStorageMem3DEXT");
			funcTable.Load(13, "glTexStorageMem3DMultisampleEXT");
			funcTable.Load(14, "glTextureStorageMem1DEXT");
			funcTable.Load(15, "glTextureStorageMem2DEXT");
			funcTable.Load(16, "glTextureStorageMem2DMultisampleEXT");
			funcTable.Load(17, "glTextureStorageMem3DEXT");
			funcTable.Load(18, "glTextureStorageMem3DMultisampleEXT");
		}

		public void Dispose()
		{
			funcTable.Dispose();
		}
	}
}
