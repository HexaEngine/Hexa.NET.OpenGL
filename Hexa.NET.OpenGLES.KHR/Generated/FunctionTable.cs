// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.OpenGLES.KHR
{
	public unsafe partial class GLKHR
	{
		internal static FunctionTable funcTable;

		/// <summary>
		/// Initializes the function table, call before you access any function.
		/// </summary>
		public static void InitApi(INativeContext context)
		{
			funcTable = new FunctionTable(context, 34);
			funcTable.Load(0, "glBlendBarrierKHR");
			funcTable.Load(1, "glDebugMessageCallback");
			funcTable.Load(2, "glDebugMessageCallbackKHR");
			funcTable.Load(3, "glDebugMessageControl");
			funcTable.Load(4, "glDebugMessageControlKHR");
			funcTable.Load(5, "glDebugMessageInsert");
			funcTable.Load(6, "glDebugMessageInsertKHR");
			funcTable.Load(7, "glGetDebugMessageLog");
			funcTable.Load(8, "glGetDebugMessageLogKHR");
			funcTable.Load(9, "glGetGraphicsResetStatus");
			funcTable.Load(10, "glGetGraphicsResetStatusKHR");
			funcTable.Load(11, "glGetObjectLabel");
			funcTable.Load(12, "glGetObjectLabelKHR");
			funcTable.Load(13, "glGetObjectPtrLabel");
			funcTable.Load(14, "glGetObjectPtrLabelKHR");
			funcTable.Load(15, "glGetPointerv");
			funcTable.Load(16, "glGetPointervKHR");
			funcTable.Load(17, "glGetnUniformfv");
			funcTable.Load(18, "glGetnUniformfvKHR");
			funcTable.Load(19, "glGetnUniformiv");
			funcTable.Load(20, "glGetnUniformivKHR");
			funcTable.Load(21, "glGetnUniformuiv");
			funcTable.Load(22, "glGetnUniformuivKHR");
			funcTable.Load(23, "glMaxShaderCompilerThreadsKHR");
			funcTable.Load(24, "glObjectLabel");
			funcTable.Load(25, "glObjectLabelKHR");
			funcTable.Load(26, "glObjectPtrLabel");
			funcTable.Load(27, "glObjectPtrLabelKHR");
			funcTable.Load(28, "glPopDebugGroup");
			funcTable.Load(29, "glPopDebugGroupKHR");
			funcTable.Load(30, "glPushDebugGroup");
			funcTable.Load(31, "glPushDebugGroupKHR");
			funcTable.Load(32, "glReadnPixels");
			funcTable.Load(33, "glReadnPixelsKHR");
		}

		public static void FreeApi()
		{
			funcTable.Free();
		}
	}
}
