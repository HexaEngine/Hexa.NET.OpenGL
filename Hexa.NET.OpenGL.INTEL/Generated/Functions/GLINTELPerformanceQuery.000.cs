// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using HexaGen.Runtime;
using System.Runtime.CompilerServices;
using System.Numerics;

namespace Hexa.NET.OpenGL.INTEL
{
	public static unsafe partial class GLINTELPerformanceQuery
	{
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void BeginPerfQueryINTELNative(uint queryHandle)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<uint, void>)funcTable[0])(queryHandle);
			#else
			((delegate* unmanaged[Cdecl]<uint, void>)funcTable[0])(queryHandle);
			#endif
		}

		public static void BeginPerfQueryINTEL(uint queryHandle)
		{
			BeginPerfQueryINTELNative(queryHandle);
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void CreatePerfQueryINTELNative(uint queryId, uint* queryHandle)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<uint, uint*, void>)funcTable[1])(queryId, queryHandle);
			#else
			((delegate* unmanaged[Cdecl]<uint, nint, void>)funcTable[1])(queryId, (nint)queryHandle);
			#endif
		}

		public static void CreatePerfQueryINTEL(uint queryId, uint* queryHandle)
		{
			CreatePerfQueryINTELNative(queryId, queryHandle);
		}

		public static void CreatePerfQueryINTEL(uint queryId, Span<uint> queryHandle)
		{
			fixed (uint* pqueryHandle0 = queryHandle)
			{
				CreatePerfQueryINTELNative(queryId, pqueryHandle0);
			}
		}

		public static void CreatePerfQueryINTEL(uint queryId, ref uint queryHandle)
		{
			fixed (uint* pqueryHandle0 = &queryHandle)
			{
				CreatePerfQueryINTELNative(queryId, pqueryHandle0);
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void DeletePerfQueryINTELNative(uint queryHandle)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<uint, void>)funcTable[2])(queryHandle);
			#else
			((delegate* unmanaged[Cdecl]<uint, void>)funcTable[2])(queryHandle);
			#endif
		}

		public static void DeletePerfQueryINTEL(uint queryHandle)
		{
			DeletePerfQueryINTELNative(queryHandle);
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void EndPerfQueryINTELNative(uint queryHandle)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<uint, void>)funcTable[3])(queryHandle);
			#else
			((delegate* unmanaged[Cdecl]<uint, void>)funcTable[3])(queryHandle);
			#endif
		}

		public static void EndPerfQueryINTEL(uint queryHandle)
		{
			EndPerfQueryINTELNative(queryHandle);
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void GetFirstPerfQueryIdINTELNative(uint* queryId)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<uint*, void>)funcTable[4])(queryId);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)funcTable[4])((nint)queryId);
			#endif
		}

		public static void GetFirstPerfQueryIdINTEL(uint* queryId)
		{
			GetFirstPerfQueryIdINTELNative(queryId);
		}

		public static void GetFirstPerfQueryIdINTEL(Span<uint> queryId)
		{
			fixed (uint* pqueryId0 = queryId)
			{
				GetFirstPerfQueryIdINTELNative(pqueryId0);
			}
		}

		public static void GetFirstPerfQueryIdINTEL(ref uint queryId)
		{
			fixed (uint* pqueryId0 = &queryId)
			{
				GetFirstPerfQueryIdINTELNative(pqueryId0);
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void GetNextPerfQueryIdINTELNative(uint queryId, uint* nextQueryId)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<uint, uint*, void>)funcTable[5])(queryId, nextQueryId);
			#else
			((delegate* unmanaged[Cdecl]<uint, nint, void>)funcTable[5])(queryId, (nint)nextQueryId);
			#endif
		}

		public static void GetNextPerfQueryIdINTEL(uint queryId, uint* nextQueryId)
		{
			GetNextPerfQueryIdINTELNative(queryId, nextQueryId);
		}

		public static void GetNextPerfQueryIdINTEL(uint queryId, Span<uint> nextQueryId)
		{
			fixed (uint* pnextQueryId0 = nextQueryId)
			{
				GetNextPerfQueryIdINTELNative(queryId, pnextQueryId0);
			}
		}

		public static void GetNextPerfQueryIdINTEL(uint queryId, ref uint nextQueryId)
		{
			fixed (uint* pnextQueryId0 = &nextQueryId)
			{
				GetNextPerfQueryIdINTELNative(queryId, pnextQueryId0);
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void GetPerfCounterInfoINTELNative(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, uint* counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<uint, uint, uint, byte*, uint, byte*, uint*, uint*, uint*, uint*, ulong*, void>)funcTable[6])(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, counterDataSize, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue);
			#else
			((delegate* unmanaged[Cdecl]<uint, uint, uint, nint, uint, nint, nint, nint, nint, nint, nint, void>)funcTable[6])(queryId, counterId, counterNameLength, (nint)counterName, counterDescLength, (nint)counterDesc, (nint)counterOffset, (nint)counterDataSize, (nint)counterTypeEnum, (nint)counterDataTypeEnum, (nint)rawCounterMaxValue);
			#endif
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, uint* counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, counterDataSize, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue);
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, string counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, uint* counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (counterName != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(counterName);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(counterName, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pStr0, counterDescLength, counterDesc, counterOffset, counterDataSize, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, uint* counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, counterOffset, counterDataSize, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue);
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, uint* counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, counterOffset, counterDataSize, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue);
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, string counterDesc, uint* counterOffset, uint* counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (counterDesc != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(counterDesc);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(counterDesc, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pStr0, counterOffset, counterDataSize, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, Span<byte> counterDesc, uint* counterOffset, uint* counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = counterDesc)
			{
				GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, counterOffset, counterDataSize, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue);
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, ref byte counterDesc, uint* counterOffset, uint* counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = &counterDesc)
			{
				GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, counterOffset, counterDataSize, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue);
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, string counterName, uint counterDescLength, string counterDesc, uint* counterOffset, uint* counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (counterName != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(counterName);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(counterName, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			byte* pStr1 = null;
			int pStrSize1 = 0;
			if (counterDesc != null)
			{
				pStrSize1 = Utils.GetByteCountUTF8(counterDesc);
				if (pStrSize1 >= Utils.MaxStackallocSize)
				{
					pStr1 = Utils.Alloc<byte>(pStrSize1 + 1);
				}
				else
				{
					byte* pStrStack1 = stackalloc byte[pStrSize1 + 1];
					pStr1 = pStrStack1;
				}
				int pStrOffset1 = Utils.EncodeStringUTF8(counterDesc, pStr1, pStrSize1);
				pStr1[pStrOffset1] = 0;
			}
			GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pStr0, counterDescLength, pStr1, counterOffset, counterDataSize, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
			if (pStrSize1 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr1);
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, Span<byte> counterDesc, uint* counterOffset, uint* counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (byte* pcounterDesc1 = counterDesc)
				{
					GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, counterOffset, counterDataSize, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue);
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, ref byte counterDesc, uint* counterOffset, uint* counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (byte* pcounterDesc1 = &counterDesc)
				{
					GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, counterOffset, counterDataSize, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue);
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, Span<uint> counterOffset, uint* counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (uint* pcounterOffset0 = counterOffset)
			{
				GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, pcounterOffset0, counterDataSize, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue);
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, ref uint counterOffset, uint* counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (uint* pcounterOffset0 = &counterOffset)
			{
				GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, pcounterOffset0, counterDataSize, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue);
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, byte* counterDesc, Span<uint> counterOffset, uint* counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (uint* pcounterOffset1 = counterOffset)
				{
					GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, pcounterOffset1, counterDataSize, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue);
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, byte* counterDesc, ref uint counterOffset, uint* counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (uint* pcounterOffset1 = &counterOffset)
				{
					GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, pcounterOffset1, counterDataSize, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue);
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, Span<byte> counterDesc, Span<uint> counterOffset, uint* counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = counterDesc)
			{
				fixed (uint* pcounterOffset1 = counterOffset)
				{
					GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, pcounterOffset1, counterDataSize, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue);
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, ref byte counterDesc, ref uint counterOffset, uint* counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = &counterDesc)
			{
				fixed (uint* pcounterOffset1 = &counterOffset)
				{
					GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, pcounterOffset1, counterDataSize, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue);
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, Span<byte> counterDesc, Span<uint> counterOffset, uint* counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (byte* pcounterDesc1 = counterDesc)
				{
					fixed (uint* pcounterOffset2 = counterOffset)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, pcounterOffset2, counterDataSize, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, ref byte counterDesc, ref uint counterOffset, uint* counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (byte* pcounterDesc1 = &counterDesc)
				{
					fixed (uint* pcounterOffset2 = &counterOffset)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, pcounterOffset2, counterDataSize, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, Span<uint> counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (uint* pcounterDataSize0 = counterDataSize)
			{
				GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, pcounterDataSize0, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue);
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, ref uint counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (uint* pcounterDataSize0 = &counterDataSize)
			{
				GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, pcounterDataSize0, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue);
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, Span<uint> counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (uint* pcounterDataSize1 = counterDataSize)
				{
					GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, counterOffset, pcounterDataSize1, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue);
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, ref uint counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (uint* pcounterDataSize1 = &counterDataSize)
				{
					GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, counterOffset, pcounterDataSize1, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue);
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, Span<byte> counterDesc, uint* counterOffset, Span<uint> counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = counterDesc)
			{
				fixed (uint* pcounterDataSize1 = counterDataSize)
				{
					GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, counterOffset, pcounterDataSize1, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue);
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, ref byte counterDesc, uint* counterOffset, ref uint counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = &counterDesc)
			{
				fixed (uint* pcounterDataSize1 = &counterDataSize)
				{
					GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, counterOffset, pcounterDataSize1, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue);
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, Span<byte> counterDesc, uint* counterOffset, Span<uint> counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (byte* pcounterDesc1 = counterDesc)
				{
					fixed (uint* pcounterDataSize2 = counterDataSize)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, counterOffset, pcounterDataSize2, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, ref byte counterDesc, uint* counterOffset, ref uint counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (byte* pcounterDesc1 = &counterDesc)
				{
					fixed (uint* pcounterDataSize2 = &counterDataSize)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, counterOffset, pcounterDataSize2, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, Span<uint> counterOffset, Span<uint> counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (uint* pcounterOffset0 = counterOffset)
			{
				fixed (uint* pcounterDataSize1 = counterDataSize)
				{
					GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, pcounterOffset0, pcounterDataSize1, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue);
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, ref uint counterOffset, ref uint counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (uint* pcounterOffset0 = &counterOffset)
			{
				fixed (uint* pcounterDataSize1 = &counterDataSize)
				{
					GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, pcounterOffset0, pcounterDataSize1, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue);
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, byte* counterDesc, Span<uint> counterOffset, Span<uint> counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (uint* pcounterOffset1 = counterOffset)
				{
					fixed (uint* pcounterDataSize2 = counterDataSize)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, pcounterOffset1, pcounterDataSize2, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, byte* counterDesc, ref uint counterOffset, ref uint counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (uint* pcounterOffset1 = &counterOffset)
				{
					fixed (uint* pcounterDataSize2 = &counterDataSize)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, pcounterOffset1, pcounterDataSize2, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, Span<byte> counterDesc, Span<uint> counterOffset, Span<uint> counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = counterDesc)
			{
				fixed (uint* pcounterOffset1 = counterOffset)
				{
					fixed (uint* pcounterDataSize2 = counterDataSize)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, pcounterOffset1, pcounterDataSize2, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, ref byte counterDesc, ref uint counterOffset, ref uint counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = &counterDesc)
			{
				fixed (uint* pcounterOffset1 = &counterOffset)
				{
					fixed (uint* pcounterDataSize2 = &counterDataSize)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, pcounterOffset1, pcounterDataSize2, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, Span<byte> counterDesc, Span<uint> counterOffset, Span<uint> counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (byte* pcounterDesc1 = counterDesc)
				{
					fixed (uint* pcounterOffset2 = counterOffset)
					{
						fixed (uint* pcounterDataSize3 = counterDataSize)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, pcounterOffset2, pcounterDataSize3, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, ref byte counterDesc, ref uint counterOffset, ref uint counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (byte* pcounterDesc1 = &counterDesc)
				{
					fixed (uint* pcounterOffset2 = &counterOffset)
					{
						fixed (uint* pcounterDataSize3 = &counterDataSize)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, pcounterOffset2, pcounterDataSize3, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, uint* counterDataSize, Span<uint> counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (uint* pcounterTypeEnum0 = counterTypeEnum)
			{
				GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, counterDataSize, pcounterTypeEnum0, counterDataTypeEnum, rawCounterMaxValue);
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, uint* counterDataSize, ref uint counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (uint* pcounterTypeEnum0 = &counterTypeEnum)
			{
				GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, counterDataSize, pcounterTypeEnum0, counterDataTypeEnum, rawCounterMaxValue);
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, uint* counterDataSize, Span<uint> counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (uint* pcounterTypeEnum1 = counterTypeEnum)
				{
					GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, counterOffset, counterDataSize, pcounterTypeEnum1, counterDataTypeEnum, rawCounterMaxValue);
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, uint* counterDataSize, ref uint counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (uint* pcounterTypeEnum1 = &counterTypeEnum)
				{
					GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, counterOffset, counterDataSize, pcounterTypeEnum1, counterDataTypeEnum, rawCounterMaxValue);
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, Span<byte> counterDesc, uint* counterOffset, uint* counterDataSize, Span<uint> counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = counterDesc)
			{
				fixed (uint* pcounterTypeEnum1 = counterTypeEnum)
				{
					GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, counterOffset, counterDataSize, pcounterTypeEnum1, counterDataTypeEnum, rawCounterMaxValue);
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, ref byte counterDesc, uint* counterOffset, uint* counterDataSize, ref uint counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = &counterDesc)
			{
				fixed (uint* pcounterTypeEnum1 = &counterTypeEnum)
				{
					GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, counterOffset, counterDataSize, pcounterTypeEnum1, counterDataTypeEnum, rawCounterMaxValue);
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, Span<byte> counterDesc, uint* counterOffset, uint* counterDataSize, Span<uint> counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (byte* pcounterDesc1 = counterDesc)
				{
					fixed (uint* pcounterTypeEnum2 = counterTypeEnum)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, counterOffset, counterDataSize, pcounterTypeEnum2, counterDataTypeEnum, rawCounterMaxValue);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, ref byte counterDesc, uint* counterOffset, uint* counterDataSize, ref uint counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (byte* pcounterDesc1 = &counterDesc)
				{
					fixed (uint* pcounterTypeEnum2 = &counterTypeEnum)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, counterOffset, counterDataSize, pcounterTypeEnum2, counterDataTypeEnum, rawCounterMaxValue);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, Span<uint> counterOffset, uint* counterDataSize, Span<uint> counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (uint* pcounterOffset0 = counterOffset)
			{
				fixed (uint* pcounterTypeEnum1 = counterTypeEnum)
				{
					GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, pcounterOffset0, counterDataSize, pcounterTypeEnum1, counterDataTypeEnum, rawCounterMaxValue);
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, ref uint counterOffset, uint* counterDataSize, ref uint counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (uint* pcounterOffset0 = &counterOffset)
			{
				fixed (uint* pcounterTypeEnum1 = &counterTypeEnum)
				{
					GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, pcounterOffset0, counterDataSize, pcounterTypeEnum1, counterDataTypeEnum, rawCounterMaxValue);
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, byte* counterDesc, Span<uint> counterOffset, uint* counterDataSize, Span<uint> counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (uint* pcounterOffset1 = counterOffset)
				{
					fixed (uint* pcounterTypeEnum2 = counterTypeEnum)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, pcounterOffset1, counterDataSize, pcounterTypeEnum2, counterDataTypeEnum, rawCounterMaxValue);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, byte* counterDesc, ref uint counterOffset, uint* counterDataSize, ref uint counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (uint* pcounterOffset1 = &counterOffset)
				{
					fixed (uint* pcounterTypeEnum2 = &counterTypeEnum)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, pcounterOffset1, counterDataSize, pcounterTypeEnum2, counterDataTypeEnum, rawCounterMaxValue);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, Span<byte> counterDesc, Span<uint> counterOffset, uint* counterDataSize, Span<uint> counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = counterDesc)
			{
				fixed (uint* pcounterOffset1 = counterOffset)
				{
					fixed (uint* pcounterTypeEnum2 = counterTypeEnum)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, pcounterOffset1, counterDataSize, pcounterTypeEnum2, counterDataTypeEnum, rawCounterMaxValue);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, ref byte counterDesc, ref uint counterOffset, uint* counterDataSize, ref uint counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = &counterDesc)
			{
				fixed (uint* pcounterOffset1 = &counterOffset)
				{
					fixed (uint* pcounterTypeEnum2 = &counterTypeEnum)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, pcounterOffset1, counterDataSize, pcounterTypeEnum2, counterDataTypeEnum, rawCounterMaxValue);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, Span<byte> counterDesc, Span<uint> counterOffset, uint* counterDataSize, Span<uint> counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (byte* pcounterDesc1 = counterDesc)
				{
					fixed (uint* pcounterOffset2 = counterOffset)
					{
						fixed (uint* pcounterTypeEnum3 = counterTypeEnum)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, pcounterOffset2, counterDataSize, pcounterTypeEnum3, counterDataTypeEnum, rawCounterMaxValue);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, ref byte counterDesc, ref uint counterOffset, uint* counterDataSize, ref uint counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (byte* pcounterDesc1 = &counterDesc)
				{
					fixed (uint* pcounterOffset2 = &counterOffset)
					{
						fixed (uint* pcounterTypeEnum3 = &counterTypeEnum)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, pcounterOffset2, counterDataSize, pcounterTypeEnum3, counterDataTypeEnum, rawCounterMaxValue);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, Span<uint> counterDataSize, Span<uint> counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (uint* pcounterDataSize0 = counterDataSize)
			{
				fixed (uint* pcounterTypeEnum1 = counterTypeEnum)
				{
					GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, pcounterDataSize0, pcounterTypeEnum1, counterDataTypeEnum, rawCounterMaxValue);
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, ref uint counterDataSize, ref uint counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (uint* pcounterDataSize0 = &counterDataSize)
			{
				fixed (uint* pcounterTypeEnum1 = &counterTypeEnum)
				{
					GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, pcounterDataSize0, pcounterTypeEnum1, counterDataTypeEnum, rawCounterMaxValue);
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, Span<uint> counterDataSize, Span<uint> counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (uint* pcounterDataSize1 = counterDataSize)
				{
					fixed (uint* pcounterTypeEnum2 = counterTypeEnum)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, counterOffset, pcounterDataSize1, pcounterTypeEnum2, counterDataTypeEnum, rawCounterMaxValue);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, ref uint counterDataSize, ref uint counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (uint* pcounterDataSize1 = &counterDataSize)
				{
					fixed (uint* pcounterTypeEnum2 = &counterTypeEnum)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, counterOffset, pcounterDataSize1, pcounterTypeEnum2, counterDataTypeEnum, rawCounterMaxValue);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, Span<byte> counterDesc, uint* counterOffset, Span<uint> counterDataSize, Span<uint> counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = counterDesc)
			{
				fixed (uint* pcounterDataSize1 = counterDataSize)
				{
					fixed (uint* pcounterTypeEnum2 = counterTypeEnum)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, counterOffset, pcounterDataSize1, pcounterTypeEnum2, counterDataTypeEnum, rawCounterMaxValue);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, ref byte counterDesc, uint* counterOffset, ref uint counterDataSize, ref uint counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = &counterDesc)
			{
				fixed (uint* pcounterDataSize1 = &counterDataSize)
				{
					fixed (uint* pcounterTypeEnum2 = &counterTypeEnum)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, counterOffset, pcounterDataSize1, pcounterTypeEnum2, counterDataTypeEnum, rawCounterMaxValue);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, Span<byte> counterDesc, uint* counterOffset, Span<uint> counterDataSize, Span<uint> counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (byte* pcounterDesc1 = counterDesc)
				{
					fixed (uint* pcounterDataSize2 = counterDataSize)
					{
						fixed (uint* pcounterTypeEnum3 = counterTypeEnum)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, counterOffset, pcounterDataSize2, pcounterTypeEnum3, counterDataTypeEnum, rawCounterMaxValue);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, ref byte counterDesc, uint* counterOffset, ref uint counterDataSize, ref uint counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (byte* pcounterDesc1 = &counterDesc)
				{
					fixed (uint* pcounterDataSize2 = &counterDataSize)
					{
						fixed (uint* pcounterTypeEnum3 = &counterTypeEnum)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, counterOffset, pcounterDataSize2, pcounterTypeEnum3, counterDataTypeEnum, rawCounterMaxValue);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, Span<uint> counterOffset, Span<uint> counterDataSize, Span<uint> counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (uint* pcounterOffset0 = counterOffset)
			{
				fixed (uint* pcounterDataSize1 = counterDataSize)
				{
					fixed (uint* pcounterTypeEnum2 = counterTypeEnum)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, pcounterOffset0, pcounterDataSize1, pcounterTypeEnum2, counterDataTypeEnum, rawCounterMaxValue);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, ref uint counterOffset, ref uint counterDataSize, ref uint counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (uint* pcounterOffset0 = &counterOffset)
			{
				fixed (uint* pcounterDataSize1 = &counterDataSize)
				{
					fixed (uint* pcounterTypeEnum2 = &counterTypeEnum)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, pcounterOffset0, pcounterDataSize1, pcounterTypeEnum2, counterDataTypeEnum, rawCounterMaxValue);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, byte* counterDesc, Span<uint> counterOffset, Span<uint> counterDataSize, Span<uint> counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (uint* pcounterOffset1 = counterOffset)
				{
					fixed (uint* pcounterDataSize2 = counterDataSize)
					{
						fixed (uint* pcounterTypeEnum3 = counterTypeEnum)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, pcounterOffset1, pcounterDataSize2, pcounterTypeEnum3, counterDataTypeEnum, rawCounterMaxValue);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, byte* counterDesc, ref uint counterOffset, ref uint counterDataSize, ref uint counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (uint* pcounterOffset1 = &counterOffset)
				{
					fixed (uint* pcounterDataSize2 = &counterDataSize)
					{
						fixed (uint* pcounterTypeEnum3 = &counterTypeEnum)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, pcounterOffset1, pcounterDataSize2, pcounterTypeEnum3, counterDataTypeEnum, rawCounterMaxValue);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, Span<byte> counterDesc, Span<uint> counterOffset, Span<uint> counterDataSize, Span<uint> counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = counterDesc)
			{
				fixed (uint* pcounterOffset1 = counterOffset)
				{
					fixed (uint* pcounterDataSize2 = counterDataSize)
					{
						fixed (uint* pcounterTypeEnum3 = counterTypeEnum)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, pcounterOffset1, pcounterDataSize2, pcounterTypeEnum3, counterDataTypeEnum, rawCounterMaxValue);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, ref byte counterDesc, ref uint counterOffset, ref uint counterDataSize, ref uint counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = &counterDesc)
			{
				fixed (uint* pcounterOffset1 = &counterOffset)
				{
					fixed (uint* pcounterDataSize2 = &counterDataSize)
					{
						fixed (uint* pcounterTypeEnum3 = &counterTypeEnum)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, pcounterOffset1, pcounterDataSize2, pcounterTypeEnum3, counterDataTypeEnum, rawCounterMaxValue);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, Span<byte> counterDesc, Span<uint> counterOffset, Span<uint> counterDataSize, Span<uint> counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (byte* pcounterDesc1 = counterDesc)
				{
					fixed (uint* pcounterOffset2 = counterOffset)
					{
						fixed (uint* pcounterDataSize3 = counterDataSize)
						{
							fixed (uint* pcounterTypeEnum4 = counterTypeEnum)
							{
								GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, pcounterOffset2, pcounterDataSize3, pcounterTypeEnum4, counterDataTypeEnum, rawCounterMaxValue);
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, ref byte counterDesc, ref uint counterOffset, ref uint counterDataSize, ref uint counterTypeEnum, uint* counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (byte* pcounterDesc1 = &counterDesc)
				{
					fixed (uint* pcounterOffset2 = &counterOffset)
					{
						fixed (uint* pcounterDataSize3 = &counterDataSize)
						{
							fixed (uint* pcounterTypeEnum4 = &counterTypeEnum)
							{
								GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, pcounterOffset2, pcounterDataSize3, pcounterTypeEnum4, counterDataTypeEnum, rawCounterMaxValue);
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, uint* counterDataSize, uint* counterTypeEnum, Span<uint> counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (uint* pcounterDataTypeEnum0 = counterDataTypeEnum)
			{
				GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, counterDataSize, counterTypeEnum, pcounterDataTypeEnum0, rawCounterMaxValue);
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, uint* counterDataSize, uint* counterTypeEnum, ref uint counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (uint* pcounterDataTypeEnum0 = &counterDataTypeEnum)
			{
				GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, counterDataSize, counterTypeEnum, pcounterDataTypeEnum0, rawCounterMaxValue);
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, uint* counterDataSize, uint* counterTypeEnum, Span<uint> counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (uint* pcounterDataTypeEnum1 = counterDataTypeEnum)
				{
					GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, counterOffset, counterDataSize, counterTypeEnum, pcounterDataTypeEnum1, rawCounterMaxValue);
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, uint* counterDataSize, uint* counterTypeEnum, ref uint counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (uint* pcounterDataTypeEnum1 = &counterDataTypeEnum)
				{
					GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, counterOffset, counterDataSize, counterTypeEnum, pcounterDataTypeEnum1, rawCounterMaxValue);
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, Span<byte> counterDesc, uint* counterOffset, uint* counterDataSize, uint* counterTypeEnum, Span<uint> counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = counterDesc)
			{
				fixed (uint* pcounterDataTypeEnum1 = counterDataTypeEnum)
				{
					GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, counterOffset, counterDataSize, counterTypeEnum, pcounterDataTypeEnum1, rawCounterMaxValue);
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, ref byte counterDesc, uint* counterOffset, uint* counterDataSize, uint* counterTypeEnum, ref uint counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = &counterDesc)
			{
				fixed (uint* pcounterDataTypeEnum1 = &counterDataTypeEnum)
				{
					GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, counterOffset, counterDataSize, counterTypeEnum, pcounterDataTypeEnum1, rawCounterMaxValue);
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, Span<byte> counterDesc, uint* counterOffset, uint* counterDataSize, uint* counterTypeEnum, Span<uint> counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (byte* pcounterDesc1 = counterDesc)
				{
					fixed (uint* pcounterDataTypeEnum2 = counterDataTypeEnum)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, counterOffset, counterDataSize, counterTypeEnum, pcounterDataTypeEnum2, rawCounterMaxValue);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, ref byte counterDesc, uint* counterOffset, uint* counterDataSize, uint* counterTypeEnum, ref uint counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (byte* pcounterDesc1 = &counterDesc)
				{
					fixed (uint* pcounterDataTypeEnum2 = &counterDataTypeEnum)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, counterOffset, counterDataSize, counterTypeEnum, pcounterDataTypeEnum2, rawCounterMaxValue);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, Span<uint> counterOffset, uint* counterDataSize, uint* counterTypeEnum, Span<uint> counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (uint* pcounterOffset0 = counterOffset)
			{
				fixed (uint* pcounterDataTypeEnum1 = counterDataTypeEnum)
				{
					GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, pcounterOffset0, counterDataSize, counterTypeEnum, pcounterDataTypeEnum1, rawCounterMaxValue);
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, ref uint counterOffset, uint* counterDataSize, uint* counterTypeEnum, ref uint counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (uint* pcounterOffset0 = &counterOffset)
			{
				fixed (uint* pcounterDataTypeEnum1 = &counterDataTypeEnum)
				{
					GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, pcounterOffset0, counterDataSize, counterTypeEnum, pcounterDataTypeEnum1, rawCounterMaxValue);
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, byte* counterDesc, Span<uint> counterOffset, uint* counterDataSize, uint* counterTypeEnum, Span<uint> counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (uint* pcounterOffset1 = counterOffset)
				{
					fixed (uint* pcounterDataTypeEnum2 = counterDataTypeEnum)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, pcounterOffset1, counterDataSize, counterTypeEnum, pcounterDataTypeEnum2, rawCounterMaxValue);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, byte* counterDesc, ref uint counterOffset, uint* counterDataSize, uint* counterTypeEnum, ref uint counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (uint* pcounterOffset1 = &counterOffset)
				{
					fixed (uint* pcounterDataTypeEnum2 = &counterDataTypeEnum)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, pcounterOffset1, counterDataSize, counterTypeEnum, pcounterDataTypeEnum2, rawCounterMaxValue);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, Span<byte> counterDesc, Span<uint> counterOffset, uint* counterDataSize, uint* counterTypeEnum, Span<uint> counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = counterDesc)
			{
				fixed (uint* pcounterOffset1 = counterOffset)
				{
					fixed (uint* pcounterDataTypeEnum2 = counterDataTypeEnum)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, pcounterOffset1, counterDataSize, counterTypeEnum, pcounterDataTypeEnum2, rawCounterMaxValue);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, ref byte counterDesc, ref uint counterOffset, uint* counterDataSize, uint* counterTypeEnum, ref uint counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = &counterDesc)
			{
				fixed (uint* pcounterOffset1 = &counterOffset)
				{
					fixed (uint* pcounterDataTypeEnum2 = &counterDataTypeEnum)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, pcounterOffset1, counterDataSize, counterTypeEnum, pcounterDataTypeEnum2, rawCounterMaxValue);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, Span<byte> counterDesc, Span<uint> counterOffset, uint* counterDataSize, uint* counterTypeEnum, Span<uint> counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (byte* pcounterDesc1 = counterDesc)
				{
					fixed (uint* pcounterOffset2 = counterOffset)
					{
						fixed (uint* pcounterDataTypeEnum3 = counterDataTypeEnum)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, pcounterOffset2, counterDataSize, counterTypeEnum, pcounterDataTypeEnum3, rawCounterMaxValue);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, ref byte counterDesc, ref uint counterOffset, uint* counterDataSize, uint* counterTypeEnum, ref uint counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (byte* pcounterDesc1 = &counterDesc)
				{
					fixed (uint* pcounterOffset2 = &counterOffset)
					{
						fixed (uint* pcounterDataTypeEnum3 = &counterDataTypeEnum)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, pcounterOffset2, counterDataSize, counterTypeEnum, pcounterDataTypeEnum3, rawCounterMaxValue);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, Span<uint> counterDataSize, uint* counterTypeEnum, Span<uint> counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (uint* pcounterDataSize0 = counterDataSize)
			{
				fixed (uint* pcounterDataTypeEnum1 = counterDataTypeEnum)
				{
					GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, pcounterDataSize0, counterTypeEnum, pcounterDataTypeEnum1, rawCounterMaxValue);
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, ref uint counterDataSize, uint* counterTypeEnum, ref uint counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (uint* pcounterDataSize0 = &counterDataSize)
			{
				fixed (uint* pcounterDataTypeEnum1 = &counterDataTypeEnum)
				{
					GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, pcounterDataSize0, counterTypeEnum, pcounterDataTypeEnum1, rawCounterMaxValue);
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, Span<uint> counterDataSize, uint* counterTypeEnum, Span<uint> counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (uint* pcounterDataSize1 = counterDataSize)
				{
					fixed (uint* pcounterDataTypeEnum2 = counterDataTypeEnum)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, counterOffset, pcounterDataSize1, counterTypeEnum, pcounterDataTypeEnum2, rawCounterMaxValue);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, ref uint counterDataSize, uint* counterTypeEnum, ref uint counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (uint* pcounterDataSize1 = &counterDataSize)
				{
					fixed (uint* pcounterDataTypeEnum2 = &counterDataTypeEnum)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, counterOffset, pcounterDataSize1, counterTypeEnum, pcounterDataTypeEnum2, rawCounterMaxValue);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, Span<byte> counterDesc, uint* counterOffset, Span<uint> counterDataSize, uint* counterTypeEnum, Span<uint> counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = counterDesc)
			{
				fixed (uint* pcounterDataSize1 = counterDataSize)
				{
					fixed (uint* pcounterDataTypeEnum2 = counterDataTypeEnum)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, counterOffset, pcounterDataSize1, counterTypeEnum, pcounterDataTypeEnum2, rawCounterMaxValue);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, ref byte counterDesc, uint* counterOffset, ref uint counterDataSize, uint* counterTypeEnum, ref uint counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = &counterDesc)
			{
				fixed (uint* pcounterDataSize1 = &counterDataSize)
				{
					fixed (uint* pcounterDataTypeEnum2 = &counterDataTypeEnum)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, counterOffset, pcounterDataSize1, counterTypeEnum, pcounterDataTypeEnum2, rawCounterMaxValue);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, Span<byte> counterDesc, uint* counterOffset, Span<uint> counterDataSize, uint* counterTypeEnum, Span<uint> counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (byte* pcounterDesc1 = counterDesc)
				{
					fixed (uint* pcounterDataSize2 = counterDataSize)
					{
						fixed (uint* pcounterDataTypeEnum3 = counterDataTypeEnum)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, counterOffset, pcounterDataSize2, counterTypeEnum, pcounterDataTypeEnum3, rawCounterMaxValue);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, ref byte counterDesc, uint* counterOffset, ref uint counterDataSize, uint* counterTypeEnum, ref uint counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (byte* pcounterDesc1 = &counterDesc)
				{
					fixed (uint* pcounterDataSize2 = &counterDataSize)
					{
						fixed (uint* pcounterDataTypeEnum3 = &counterDataTypeEnum)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, counterOffset, pcounterDataSize2, counterTypeEnum, pcounterDataTypeEnum3, rawCounterMaxValue);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, Span<uint> counterOffset, Span<uint> counterDataSize, uint* counterTypeEnum, Span<uint> counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (uint* pcounterOffset0 = counterOffset)
			{
				fixed (uint* pcounterDataSize1 = counterDataSize)
				{
					fixed (uint* pcounterDataTypeEnum2 = counterDataTypeEnum)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, pcounterOffset0, pcounterDataSize1, counterTypeEnum, pcounterDataTypeEnum2, rawCounterMaxValue);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, ref uint counterOffset, ref uint counterDataSize, uint* counterTypeEnum, ref uint counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (uint* pcounterOffset0 = &counterOffset)
			{
				fixed (uint* pcounterDataSize1 = &counterDataSize)
				{
					fixed (uint* pcounterDataTypeEnum2 = &counterDataTypeEnum)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, pcounterOffset0, pcounterDataSize1, counterTypeEnum, pcounterDataTypeEnum2, rawCounterMaxValue);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, byte* counterDesc, Span<uint> counterOffset, Span<uint> counterDataSize, uint* counterTypeEnum, Span<uint> counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (uint* pcounterOffset1 = counterOffset)
				{
					fixed (uint* pcounterDataSize2 = counterDataSize)
					{
						fixed (uint* pcounterDataTypeEnum3 = counterDataTypeEnum)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, pcounterOffset1, pcounterDataSize2, counterTypeEnum, pcounterDataTypeEnum3, rawCounterMaxValue);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, byte* counterDesc, ref uint counterOffset, ref uint counterDataSize, uint* counterTypeEnum, ref uint counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (uint* pcounterOffset1 = &counterOffset)
				{
					fixed (uint* pcounterDataSize2 = &counterDataSize)
					{
						fixed (uint* pcounterDataTypeEnum3 = &counterDataTypeEnum)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, pcounterOffset1, pcounterDataSize2, counterTypeEnum, pcounterDataTypeEnum3, rawCounterMaxValue);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, Span<byte> counterDesc, Span<uint> counterOffset, Span<uint> counterDataSize, uint* counterTypeEnum, Span<uint> counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = counterDesc)
			{
				fixed (uint* pcounterOffset1 = counterOffset)
				{
					fixed (uint* pcounterDataSize2 = counterDataSize)
					{
						fixed (uint* pcounterDataTypeEnum3 = counterDataTypeEnum)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, pcounterOffset1, pcounterDataSize2, counterTypeEnum, pcounterDataTypeEnum3, rawCounterMaxValue);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, ref byte counterDesc, ref uint counterOffset, ref uint counterDataSize, uint* counterTypeEnum, ref uint counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = &counterDesc)
			{
				fixed (uint* pcounterOffset1 = &counterOffset)
				{
					fixed (uint* pcounterDataSize2 = &counterDataSize)
					{
						fixed (uint* pcounterDataTypeEnum3 = &counterDataTypeEnum)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, pcounterOffset1, pcounterDataSize2, counterTypeEnum, pcounterDataTypeEnum3, rawCounterMaxValue);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, Span<byte> counterDesc, Span<uint> counterOffset, Span<uint> counterDataSize, uint* counterTypeEnum, Span<uint> counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (byte* pcounterDesc1 = counterDesc)
				{
					fixed (uint* pcounterOffset2 = counterOffset)
					{
						fixed (uint* pcounterDataSize3 = counterDataSize)
						{
							fixed (uint* pcounterDataTypeEnum4 = counterDataTypeEnum)
							{
								GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, pcounterOffset2, pcounterDataSize3, counterTypeEnum, pcounterDataTypeEnum4, rawCounterMaxValue);
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, ref byte counterDesc, ref uint counterOffset, ref uint counterDataSize, uint* counterTypeEnum, ref uint counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (byte* pcounterDesc1 = &counterDesc)
				{
					fixed (uint* pcounterOffset2 = &counterOffset)
					{
						fixed (uint* pcounterDataSize3 = &counterDataSize)
						{
							fixed (uint* pcounterDataTypeEnum4 = &counterDataTypeEnum)
							{
								GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, pcounterOffset2, pcounterDataSize3, counterTypeEnum, pcounterDataTypeEnum4, rawCounterMaxValue);
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, uint* counterDataSize, Span<uint> counterTypeEnum, Span<uint> counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (uint* pcounterTypeEnum0 = counterTypeEnum)
			{
				fixed (uint* pcounterDataTypeEnum1 = counterDataTypeEnum)
				{
					GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, counterDataSize, pcounterTypeEnum0, pcounterDataTypeEnum1, rawCounterMaxValue);
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, uint* counterDataSize, ref uint counterTypeEnum, ref uint counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (uint* pcounterTypeEnum0 = &counterTypeEnum)
			{
				fixed (uint* pcounterDataTypeEnum1 = &counterDataTypeEnum)
				{
					GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, counterDataSize, pcounterTypeEnum0, pcounterDataTypeEnum1, rawCounterMaxValue);
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, uint* counterDataSize, Span<uint> counterTypeEnum, Span<uint> counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (uint* pcounterTypeEnum1 = counterTypeEnum)
				{
					fixed (uint* pcounterDataTypeEnum2 = counterDataTypeEnum)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, counterOffset, counterDataSize, pcounterTypeEnum1, pcounterDataTypeEnum2, rawCounterMaxValue);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, uint* counterDataSize, ref uint counterTypeEnum, ref uint counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (uint* pcounterTypeEnum1 = &counterTypeEnum)
				{
					fixed (uint* pcounterDataTypeEnum2 = &counterDataTypeEnum)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, counterOffset, counterDataSize, pcounterTypeEnum1, pcounterDataTypeEnum2, rawCounterMaxValue);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, Span<byte> counterDesc, uint* counterOffset, uint* counterDataSize, Span<uint> counterTypeEnum, Span<uint> counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = counterDesc)
			{
				fixed (uint* pcounterTypeEnum1 = counterTypeEnum)
				{
					fixed (uint* pcounterDataTypeEnum2 = counterDataTypeEnum)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, counterOffset, counterDataSize, pcounterTypeEnum1, pcounterDataTypeEnum2, rawCounterMaxValue);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, ref byte counterDesc, uint* counterOffset, uint* counterDataSize, ref uint counterTypeEnum, ref uint counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = &counterDesc)
			{
				fixed (uint* pcounterTypeEnum1 = &counterTypeEnum)
				{
					fixed (uint* pcounterDataTypeEnum2 = &counterDataTypeEnum)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, counterOffset, counterDataSize, pcounterTypeEnum1, pcounterDataTypeEnum2, rawCounterMaxValue);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, Span<byte> counterDesc, uint* counterOffset, uint* counterDataSize, Span<uint> counterTypeEnum, Span<uint> counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (byte* pcounterDesc1 = counterDesc)
				{
					fixed (uint* pcounterTypeEnum2 = counterTypeEnum)
					{
						fixed (uint* pcounterDataTypeEnum3 = counterDataTypeEnum)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, counterOffset, counterDataSize, pcounterTypeEnum2, pcounterDataTypeEnum3, rawCounterMaxValue);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, ref byte counterDesc, uint* counterOffset, uint* counterDataSize, ref uint counterTypeEnum, ref uint counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (byte* pcounterDesc1 = &counterDesc)
				{
					fixed (uint* pcounterTypeEnum2 = &counterTypeEnum)
					{
						fixed (uint* pcounterDataTypeEnum3 = &counterDataTypeEnum)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, counterOffset, counterDataSize, pcounterTypeEnum2, pcounterDataTypeEnum3, rawCounterMaxValue);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, Span<uint> counterOffset, uint* counterDataSize, Span<uint> counterTypeEnum, Span<uint> counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (uint* pcounterOffset0 = counterOffset)
			{
				fixed (uint* pcounterTypeEnum1 = counterTypeEnum)
				{
					fixed (uint* pcounterDataTypeEnum2 = counterDataTypeEnum)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, pcounterOffset0, counterDataSize, pcounterTypeEnum1, pcounterDataTypeEnum2, rawCounterMaxValue);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, ref uint counterOffset, uint* counterDataSize, ref uint counterTypeEnum, ref uint counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (uint* pcounterOffset0 = &counterOffset)
			{
				fixed (uint* pcounterTypeEnum1 = &counterTypeEnum)
				{
					fixed (uint* pcounterDataTypeEnum2 = &counterDataTypeEnum)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, pcounterOffset0, counterDataSize, pcounterTypeEnum1, pcounterDataTypeEnum2, rawCounterMaxValue);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, byte* counterDesc, Span<uint> counterOffset, uint* counterDataSize, Span<uint> counterTypeEnum, Span<uint> counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (uint* pcounterOffset1 = counterOffset)
				{
					fixed (uint* pcounterTypeEnum2 = counterTypeEnum)
					{
						fixed (uint* pcounterDataTypeEnum3 = counterDataTypeEnum)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, pcounterOffset1, counterDataSize, pcounterTypeEnum2, pcounterDataTypeEnum3, rawCounterMaxValue);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, byte* counterDesc, ref uint counterOffset, uint* counterDataSize, ref uint counterTypeEnum, ref uint counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (uint* pcounterOffset1 = &counterOffset)
				{
					fixed (uint* pcounterTypeEnum2 = &counterTypeEnum)
					{
						fixed (uint* pcounterDataTypeEnum3 = &counterDataTypeEnum)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, pcounterOffset1, counterDataSize, pcounterTypeEnum2, pcounterDataTypeEnum3, rawCounterMaxValue);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, Span<byte> counterDesc, Span<uint> counterOffset, uint* counterDataSize, Span<uint> counterTypeEnum, Span<uint> counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = counterDesc)
			{
				fixed (uint* pcounterOffset1 = counterOffset)
				{
					fixed (uint* pcounterTypeEnum2 = counterTypeEnum)
					{
						fixed (uint* pcounterDataTypeEnum3 = counterDataTypeEnum)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, pcounterOffset1, counterDataSize, pcounterTypeEnum2, pcounterDataTypeEnum3, rawCounterMaxValue);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, ref byte counterDesc, ref uint counterOffset, uint* counterDataSize, ref uint counterTypeEnum, ref uint counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = &counterDesc)
			{
				fixed (uint* pcounterOffset1 = &counterOffset)
				{
					fixed (uint* pcounterTypeEnum2 = &counterTypeEnum)
					{
						fixed (uint* pcounterDataTypeEnum3 = &counterDataTypeEnum)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, pcounterOffset1, counterDataSize, pcounterTypeEnum2, pcounterDataTypeEnum3, rawCounterMaxValue);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, Span<byte> counterDesc, Span<uint> counterOffset, uint* counterDataSize, Span<uint> counterTypeEnum, Span<uint> counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (byte* pcounterDesc1 = counterDesc)
				{
					fixed (uint* pcounterOffset2 = counterOffset)
					{
						fixed (uint* pcounterTypeEnum3 = counterTypeEnum)
						{
							fixed (uint* pcounterDataTypeEnum4 = counterDataTypeEnum)
							{
								GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, pcounterOffset2, counterDataSize, pcounterTypeEnum3, pcounterDataTypeEnum4, rawCounterMaxValue);
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, ref byte counterDesc, ref uint counterOffset, uint* counterDataSize, ref uint counterTypeEnum, ref uint counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (byte* pcounterDesc1 = &counterDesc)
				{
					fixed (uint* pcounterOffset2 = &counterOffset)
					{
						fixed (uint* pcounterTypeEnum3 = &counterTypeEnum)
						{
							fixed (uint* pcounterDataTypeEnum4 = &counterDataTypeEnum)
							{
								GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, pcounterOffset2, counterDataSize, pcounterTypeEnum3, pcounterDataTypeEnum4, rawCounterMaxValue);
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, Span<uint> counterDataSize, Span<uint> counterTypeEnum, Span<uint> counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (uint* pcounterDataSize0 = counterDataSize)
			{
				fixed (uint* pcounterTypeEnum1 = counterTypeEnum)
				{
					fixed (uint* pcounterDataTypeEnum2 = counterDataTypeEnum)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, pcounterDataSize0, pcounterTypeEnum1, pcounterDataTypeEnum2, rawCounterMaxValue);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, ref uint counterDataSize, ref uint counterTypeEnum, ref uint counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (uint* pcounterDataSize0 = &counterDataSize)
			{
				fixed (uint* pcounterTypeEnum1 = &counterTypeEnum)
				{
					fixed (uint* pcounterDataTypeEnum2 = &counterDataTypeEnum)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, pcounterDataSize0, pcounterTypeEnum1, pcounterDataTypeEnum2, rawCounterMaxValue);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, Span<uint> counterDataSize, Span<uint> counterTypeEnum, Span<uint> counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (uint* pcounterDataSize1 = counterDataSize)
				{
					fixed (uint* pcounterTypeEnum2 = counterTypeEnum)
					{
						fixed (uint* pcounterDataTypeEnum3 = counterDataTypeEnum)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, counterOffset, pcounterDataSize1, pcounterTypeEnum2, pcounterDataTypeEnum3, rawCounterMaxValue);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, ref uint counterDataSize, ref uint counterTypeEnum, ref uint counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (uint* pcounterDataSize1 = &counterDataSize)
				{
					fixed (uint* pcounterTypeEnum2 = &counterTypeEnum)
					{
						fixed (uint* pcounterDataTypeEnum3 = &counterDataTypeEnum)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, counterOffset, pcounterDataSize1, pcounterTypeEnum2, pcounterDataTypeEnum3, rawCounterMaxValue);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, Span<byte> counterDesc, uint* counterOffset, Span<uint> counterDataSize, Span<uint> counterTypeEnum, Span<uint> counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = counterDesc)
			{
				fixed (uint* pcounterDataSize1 = counterDataSize)
				{
					fixed (uint* pcounterTypeEnum2 = counterTypeEnum)
					{
						fixed (uint* pcounterDataTypeEnum3 = counterDataTypeEnum)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, counterOffset, pcounterDataSize1, pcounterTypeEnum2, pcounterDataTypeEnum3, rawCounterMaxValue);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, ref byte counterDesc, uint* counterOffset, ref uint counterDataSize, ref uint counterTypeEnum, ref uint counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = &counterDesc)
			{
				fixed (uint* pcounterDataSize1 = &counterDataSize)
				{
					fixed (uint* pcounterTypeEnum2 = &counterTypeEnum)
					{
						fixed (uint* pcounterDataTypeEnum3 = &counterDataTypeEnum)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, counterOffset, pcounterDataSize1, pcounterTypeEnum2, pcounterDataTypeEnum3, rawCounterMaxValue);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, Span<byte> counterDesc, uint* counterOffset, Span<uint> counterDataSize, Span<uint> counterTypeEnum, Span<uint> counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (byte* pcounterDesc1 = counterDesc)
				{
					fixed (uint* pcounterDataSize2 = counterDataSize)
					{
						fixed (uint* pcounterTypeEnum3 = counterTypeEnum)
						{
							fixed (uint* pcounterDataTypeEnum4 = counterDataTypeEnum)
							{
								GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, counterOffset, pcounterDataSize2, pcounterTypeEnum3, pcounterDataTypeEnum4, rawCounterMaxValue);
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, ref byte counterDesc, uint* counterOffset, ref uint counterDataSize, ref uint counterTypeEnum, ref uint counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (byte* pcounterDesc1 = &counterDesc)
				{
					fixed (uint* pcounterDataSize2 = &counterDataSize)
					{
						fixed (uint* pcounterTypeEnum3 = &counterTypeEnum)
						{
							fixed (uint* pcounterDataTypeEnum4 = &counterDataTypeEnum)
							{
								GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, counterOffset, pcounterDataSize2, pcounterTypeEnum3, pcounterDataTypeEnum4, rawCounterMaxValue);
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, Span<uint> counterOffset, Span<uint> counterDataSize, Span<uint> counterTypeEnum, Span<uint> counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (uint* pcounterOffset0 = counterOffset)
			{
				fixed (uint* pcounterDataSize1 = counterDataSize)
				{
					fixed (uint* pcounterTypeEnum2 = counterTypeEnum)
					{
						fixed (uint* pcounterDataTypeEnum3 = counterDataTypeEnum)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, pcounterOffset0, pcounterDataSize1, pcounterTypeEnum2, pcounterDataTypeEnum3, rawCounterMaxValue);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, ref uint counterOffset, ref uint counterDataSize, ref uint counterTypeEnum, ref uint counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (uint* pcounterOffset0 = &counterOffset)
			{
				fixed (uint* pcounterDataSize1 = &counterDataSize)
				{
					fixed (uint* pcounterTypeEnum2 = &counterTypeEnum)
					{
						fixed (uint* pcounterDataTypeEnum3 = &counterDataTypeEnum)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, pcounterOffset0, pcounterDataSize1, pcounterTypeEnum2, pcounterDataTypeEnum3, rawCounterMaxValue);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, byte* counterDesc, Span<uint> counterOffset, Span<uint> counterDataSize, Span<uint> counterTypeEnum, Span<uint> counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (uint* pcounterOffset1 = counterOffset)
				{
					fixed (uint* pcounterDataSize2 = counterDataSize)
					{
						fixed (uint* pcounterTypeEnum3 = counterTypeEnum)
						{
							fixed (uint* pcounterDataTypeEnum4 = counterDataTypeEnum)
							{
								GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, pcounterOffset1, pcounterDataSize2, pcounterTypeEnum3, pcounterDataTypeEnum4, rawCounterMaxValue);
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, byte* counterDesc, ref uint counterOffset, ref uint counterDataSize, ref uint counterTypeEnum, ref uint counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (uint* pcounterOffset1 = &counterOffset)
				{
					fixed (uint* pcounterDataSize2 = &counterDataSize)
					{
						fixed (uint* pcounterTypeEnum3 = &counterTypeEnum)
						{
							fixed (uint* pcounterDataTypeEnum4 = &counterDataTypeEnum)
							{
								GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, pcounterOffset1, pcounterDataSize2, pcounterTypeEnum3, pcounterDataTypeEnum4, rawCounterMaxValue);
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, Span<byte> counterDesc, Span<uint> counterOffset, Span<uint> counterDataSize, Span<uint> counterTypeEnum, Span<uint> counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = counterDesc)
			{
				fixed (uint* pcounterOffset1 = counterOffset)
				{
					fixed (uint* pcounterDataSize2 = counterDataSize)
					{
						fixed (uint* pcounterTypeEnum3 = counterTypeEnum)
						{
							fixed (uint* pcounterDataTypeEnum4 = counterDataTypeEnum)
							{
								GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, pcounterOffset1, pcounterDataSize2, pcounterTypeEnum3, pcounterDataTypeEnum4, rawCounterMaxValue);
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, ref byte counterDesc, ref uint counterOffset, ref uint counterDataSize, ref uint counterTypeEnum, ref uint counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = &counterDesc)
			{
				fixed (uint* pcounterOffset1 = &counterOffset)
				{
					fixed (uint* pcounterDataSize2 = &counterDataSize)
					{
						fixed (uint* pcounterTypeEnum3 = &counterTypeEnum)
						{
							fixed (uint* pcounterDataTypeEnum4 = &counterDataTypeEnum)
							{
								GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, pcounterOffset1, pcounterDataSize2, pcounterTypeEnum3, pcounterDataTypeEnum4, rawCounterMaxValue);
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, Span<byte> counterDesc, Span<uint> counterOffset, Span<uint> counterDataSize, Span<uint> counterTypeEnum, Span<uint> counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (byte* pcounterDesc1 = counterDesc)
				{
					fixed (uint* pcounterOffset2 = counterOffset)
					{
						fixed (uint* pcounterDataSize3 = counterDataSize)
						{
							fixed (uint* pcounterTypeEnum4 = counterTypeEnum)
							{
								fixed (uint* pcounterDataTypeEnum5 = counterDataTypeEnum)
								{
									GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, pcounterOffset2, pcounterDataSize3, pcounterTypeEnum4, pcounterDataTypeEnum5, rawCounterMaxValue);
								}
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, ref byte counterDesc, ref uint counterOffset, ref uint counterDataSize, ref uint counterTypeEnum, ref uint counterDataTypeEnum, ulong* rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (byte* pcounterDesc1 = &counterDesc)
				{
					fixed (uint* pcounterOffset2 = &counterOffset)
					{
						fixed (uint* pcounterDataSize3 = &counterDataSize)
						{
							fixed (uint* pcounterTypeEnum4 = &counterTypeEnum)
							{
								fixed (uint* pcounterDataTypeEnum5 = &counterDataTypeEnum)
								{
									GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, pcounterOffset2, pcounterDataSize3, pcounterTypeEnum4, pcounterDataTypeEnum5, rawCounterMaxValue);
								}
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, uint* counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (ulong* prawCounterMaxValue0 = rawCounterMaxValue)
			{
				GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, counterDataSize, counterTypeEnum, counterDataTypeEnum, prawCounterMaxValue0);
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, uint* counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (ulong* prawCounterMaxValue0 = &rawCounterMaxValue)
			{
				GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, counterDataSize, counterTypeEnum, counterDataTypeEnum, prawCounterMaxValue0);
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, uint* counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (ulong* prawCounterMaxValue1 = rawCounterMaxValue)
				{
					GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, counterOffset, counterDataSize, counterTypeEnum, counterDataTypeEnum, prawCounterMaxValue1);
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, uint* counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (ulong* prawCounterMaxValue1 = &rawCounterMaxValue)
				{
					GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, counterOffset, counterDataSize, counterTypeEnum, counterDataTypeEnum, prawCounterMaxValue1);
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, Span<byte> counterDesc, uint* counterOffset, uint* counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = counterDesc)
			{
				fixed (ulong* prawCounterMaxValue1 = rawCounterMaxValue)
				{
					GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, counterOffset, counterDataSize, counterTypeEnum, counterDataTypeEnum, prawCounterMaxValue1);
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, ref byte counterDesc, uint* counterOffset, uint* counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = &counterDesc)
			{
				fixed (ulong* prawCounterMaxValue1 = &rawCounterMaxValue)
				{
					GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, counterOffset, counterDataSize, counterTypeEnum, counterDataTypeEnum, prawCounterMaxValue1);
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, Span<byte> counterDesc, uint* counterOffset, uint* counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (byte* pcounterDesc1 = counterDesc)
				{
					fixed (ulong* prawCounterMaxValue2 = rawCounterMaxValue)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, counterOffset, counterDataSize, counterTypeEnum, counterDataTypeEnum, prawCounterMaxValue2);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, ref byte counterDesc, uint* counterOffset, uint* counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (byte* pcounterDesc1 = &counterDesc)
				{
					fixed (ulong* prawCounterMaxValue2 = &rawCounterMaxValue)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, counterOffset, counterDataSize, counterTypeEnum, counterDataTypeEnum, prawCounterMaxValue2);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, Span<uint> counterOffset, uint* counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (uint* pcounterOffset0 = counterOffset)
			{
				fixed (ulong* prawCounterMaxValue1 = rawCounterMaxValue)
				{
					GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, pcounterOffset0, counterDataSize, counterTypeEnum, counterDataTypeEnum, prawCounterMaxValue1);
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, ref uint counterOffset, uint* counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (uint* pcounterOffset0 = &counterOffset)
			{
				fixed (ulong* prawCounterMaxValue1 = &rawCounterMaxValue)
				{
					GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, pcounterOffset0, counterDataSize, counterTypeEnum, counterDataTypeEnum, prawCounterMaxValue1);
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, byte* counterDesc, Span<uint> counterOffset, uint* counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (uint* pcounterOffset1 = counterOffset)
				{
					fixed (ulong* prawCounterMaxValue2 = rawCounterMaxValue)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, pcounterOffset1, counterDataSize, counterTypeEnum, counterDataTypeEnum, prawCounterMaxValue2);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, byte* counterDesc, ref uint counterOffset, uint* counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (uint* pcounterOffset1 = &counterOffset)
				{
					fixed (ulong* prawCounterMaxValue2 = &rawCounterMaxValue)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, pcounterOffset1, counterDataSize, counterTypeEnum, counterDataTypeEnum, prawCounterMaxValue2);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, Span<byte> counterDesc, Span<uint> counterOffset, uint* counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = counterDesc)
			{
				fixed (uint* pcounterOffset1 = counterOffset)
				{
					fixed (ulong* prawCounterMaxValue2 = rawCounterMaxValue)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, pcounterOffset1, counterDataSize, counterTypeEnum, counterDataTypeEnum, prawCounterMaxValue2);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, ref byte counterDesc, ref uint counterOffset, uint* counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = &counterDesc)
			{
				fixed (uint* pcounterOffset1 = &counterOffset)
				{
					fixed (ulong* prawCounterMaxValue2 = &rawCounterMaxValue)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, pcounterOffset1, counterDataSize, counterTypeEnum, counterDataTypeEnum, prawCounterMaxValue2);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, Span<byte> counterDesc, Span<uint> counterOffset, uint* counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (byte* pcounterDesc1 = counterDesc)
				{
					fixed (uint* pcounterOffset2 = counterOffset)
					{
						fixed (ulong* prawCounterMaxValue3 = rawCounterMaxValue)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, pcounterOffset2, counterDataSize, counterTypeEnum, counterDataTypeEnum, prawCounterMaxValue3);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, ref byte counterDesc, ref uint counterOffset, uint* counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (byte* pcounterDesc1 = &counterDesc)
				{
					fixed (uint* pcounterOffset2 = &counterOffset)
					{
						fixed (ulong* prawCounterMaxValue3 = &rawCounterMaxValue)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, pcounterOffset2, counterDataSize, counterTypeEnum, counterDataTypeEnum, prawCounterMaxValue3);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, Span<uint> counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (uint* pcounterDataSize0 = counterDataSize)
			{
				fixed (ulong* prawCounterMaxValue1 = rawCounterMaxValue)
				{
					GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, pcounterDataSize0, counterTypeEnum, counterDataTypeEnum, prawCounterMaxValue1);
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, ref uint counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (uint* pcounterDataSize0 = &counterDataSize)
			{
				fixed (ulong* prawCounterMaxValue1 = &rawCounterMaxValue)
				{
					GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, pcounterDataSize0, counterTypeEnum, counterDataTypeEnum, prawCounterMaxValue1);
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, Span<uint> counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (uint* pcounterDataSize1 = counterDataSize)
				{
					fixed (ulong* prawCounterMaxValue2 = rawCounterMaxValue)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, counterOffset, pcounterDataSize1, counterTypeEnum, counterDataTypeEnum, prawCounterMaxValue2);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, ref uint counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (uint* pcounterDataSize1 = &counterDataSize)
				{
					fixed (ulong* prawCounterMaxValue2 = &rawCounterMaxValue)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, counterOffset, pcounterDataSize1, counterTypeEnum, counterDataTypeEnum, prawCounterMaxValue2);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, Span<byte> counterDesc, uint* counterOffset, Span<uint> counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = counterDesc)
			{
				fixed (uint* pcounterDataSize1 = counterDataSize)
				{
					fixed (ulong* prawCounterMaxValue2 = rawCounterMaxValue)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, counterOffset, pcounterDataSize1, counterTypeEnum, counterDataTypeEnum, prawCounterMaxValue2);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, ref byte counterDesc, uint* counterOffset, ref uint counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = &counterDesc)
			{
				fixed (uint* pcounterDataSize1 = &counterDataSize)
				{
					fixed (ulong* prawCounterMaxValue2 = &rawCounterMaxValue)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, counterOffset, pcounterDataSize1, counterTypeEnum, counterDataTypeEnum, prawCounterMaxValue2);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, Span<byte> counterDesc, uint* counterOffset, Span<uint> counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (byte* pcounterDesc1 = counterDesc)
				{
					fixed (uint* pcounterDataSize2 = counterDataSize)
					{
						fixed (ulong* prawCounterMaxValue3 = rawCounterMaxValue)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, counterOffset, pcounterDataSize2, counterTypeEnum, counterDataTypeEnum, prawCounterMaxValue3);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, ref byte counterDesc, uint* counterOffset, ref uint counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (byte* pcounterDesc1 = &counterDesc)
				{
					fixed (uint* pcounterDataSize2 = &counterDataSize)
					{
						fixed (ulong* prawCounterMaxValue3 = &rawCounterMaxValue)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, counterOffset, pcounterDataSize2, counterTypeEnum, counterDataTypeEnum, prawCounterMaxValue3);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, Span<uint> counterOffset, Span<uint> counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (uint* pcounterOffset0 = counterOffset)
			{
				fixed (uint* pcounterDataSize1 = counterDataSize)
				{
					fixed (ulong* prawCounterMaxValue2 = rawCounterMaxValue)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, pcounterOffset0, pcounterDataSize1, counterTypeEnum, counterDataTypeEnum, prawCounterMaxValue2);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, ref uint counterOffset, ref uint counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (uint* pcounterOffset0 = &counterOffset)
			{
				fixed (uint* pcounterDataSize1 = &counterDataSize)
				{
					fixed (ulong* prawCounterMaxValue2 = &rawCounterMaxValue)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, pcounterOffset0, pcounterDataSize1, counterTypeEnum, counterDataTypeEnum, prawCounterMaxValue2);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, byte* counterDesc, Span<uint> counterOffset, Span<uint> counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (uint* pcounterOffset1 = counterOffset)
				{
					fixed (uint* pcounterDataSize2 = counterDataSize)
					{
						fixed (ulong* prawCounterMaxValue3 = rawCounterMaxValue)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, pcounterOffset1, pcounterDataSize2, counterTypeEnum, counterDataTypeEnum, prawCounterMaxValue3);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, byte* counterDesc, ref uint counterOffset, ref uint counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (uint* pcounterOffset1 = &counterOffset)
				{
					fixed (uint* pcounterDataSize2 = &counterDataSize)
					{
						fixed (ulong* prawCounterMaxValue3 = &rawCounterMaxValue)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, pcounterOffset1, pcounterDataSize2, counterTypeEnum, counterDataTypeEnum, prawCounterMaxValue3);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, Span<byte> counterDesc, Span<uint> counterOffset, Span<uint> counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = counterDesc)
			{
				fixed (uint* pcounterOffset1 = counterOffset)
				{
					fixed (uint* pcounterDataSize2 = counterDataSize)
					{
						fixed (ulong* prawCounterMaxValue3 = rawCounterMaxValue)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, pcounterOffset1, pcounterDataSize2, counterTypeEnum, counterDataTypeEnum, prawCounterMaxValue3);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, ref byte counterDesc, ref uint counterOffset, ref uint counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = &counterDesc)
			{
				fixed (uint* pcounterOffset1 = &counterOffset)
				{
					fixed (uint* pcounterDataSize2 = &counterDataSize)
					{
						fixed (ulong* prawCounterMaxValue3 = &rawCounterMaxValue)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, pcounterOffset1, pcounterDataSize2, counterTypeEnum, counterDataTypeEnum, prawCounterMaxValue3);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, Span<byte> counterDesc, Span<uint> counterOffset, Span<uint> counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (byte* pcounterDesc1 = counterDesc)
				{
					fixed (uint* pcounterOffset2 = counterOffset)
					{
						fixed (uint* pcounterDataSize3 = counterDataSize)
						{
							fixed (ulong* prawCounterMaxValue4 = rawCounterMaxValue)
							{
								GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, pcounterOffset2, pcounterDataSize3, counterTypeEnum, counterDataTypeEnum, prawCounterMaxValue4);
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, ref byte counterDesc, ref uint counterOffset, ref uint counterDataSize, uint* counterTypeEnum, uint* counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (byte* pcounterDesc1 = &counterDesc)
				{
					fixed (uint* pcounterOffset2 = &counterOffset)
					{
						fixed (uint* pcounterDataSize3 = &counterDataSize)
						{
							fixed (ulong* prawCounterMaxValue4 = &rawCounterMaxValue)
							{
								GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, pcounterOffset2, pcounterDataSize3, counterTypeEnum, counterDataTypeEnum, prawCounterMaxValue4);
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, uint* counterDataSize, Span<uint> counterTypeEnum, uint* counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (uint* pcounterTypeEnum0 = counterTypeEnum)
			{
				fixed (ulong* prawCounterMaxValue1 = rawCounterMaxValue)
				{
					GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, counterDataSize, pcounterTypeEnum0, counterDataTypeEnum, prawCounterMaxValue1);
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, uint* counterDataSize, ref uint counterTypeEnum, uint* counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (uint* pcounterTypeEnum0 = &counterTypeEnum)
			{
				fixed (ulong* prawCounterMaxValue1 = &rawCounterMaxValue)
				{
					GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, counterDataSize, pcounterTypeEnum0, counterDataTypeEnum, prawCounterMaxValue1);
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, uint* counterDataSize, Span<uint> counterTypeEnum, uint* counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (uint* pcounterTypeEnum1 = counterTypeEnum)
				{
					fixed (ulong* prawCounterMaxValue2 = rawCounterMaxValue)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, counterOffset, counterDataSize, pcounterTypeEnum1, counterDataTypeEnum, prawCounterMaxValue2);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, uint* counterDataSize, ref uint counterTypeEnum, uint* counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (uint* pcounterTypeEnum1 = &counterTypeEnum)
				{
					fixed (ulong* prawCounterMaxValue2 = &rawCounterMaxValue)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, counterOffset, counterDataSize, pcounterTypeEnum1, counterDataTypeEnum, prawCounterMaxValue2);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, Span<byte> counterDesc, uint* counterOffset, uint* counterDataSize, Span<uint> counterTypeEnum, uint* counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = counterDesc)
			{
				fixed (uint* pcounterTypeEnum1 = counterTypeEnum)
				{
					fixed (ulong* prawCounterMaxValue2 = rawCounterMaxValue)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, counterOffset, counterDataSize, pcounterTypeEnum1, counterDataTypeEnum, prawCounterMaxValue2);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, ref byte counterDesc, uint* counterOffset, uint* counterDataSize, ref uint counterTypeEnum, uint* counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = &counterDesc)
			{
				fixed (uint* pcounterTypeEnum1 = &counterTypeEnum)
				{
					fixed (ulong* prawCounterMaxValue2 = &rawCounterMaxValue)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, counterOffset, counterDataSize, pcounterTypeEnum1, counterDataTypeEnum, prawCounterMaxValue2);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, Span<byte> counterDesc, uint* counterOffset, uint* counterDataSize, Span<uint> counterTypeEnum, uint* counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (byte* pcounterDesc1 = counterDesc)
				{
					fixed (uint* pcounterTypeEnum2 = counterTypeEnum)
					{
						fixed (ulong* prawCounterMaxValue3 = rawCounterMaxValue)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, counterOffset, counterDataSize, pcounterTypeEnum2, counterDataTypeEnum, prawCounterMaxValue3);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, ref byte counterDesc, uint* counterOffset, uint* counterDataSize, ref uint counterTypeEnum, uint* counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (byte* pcounterDesc1 = &counterDesc)
				{
					fixed (uint* pcounterTypeEnum2 = &counterTypeEnum)
					{
						fixed (ulong* prawCounterMaxValue3 = &rawCounterMaxValue)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, counterOffset, counterDataSize, pcounterTypeEnum2, counterDataTypeEnum, prawCounterMaxValue3);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, Span<uint> counterOffset, uint* counterDataSize, Span<uint> counterTypeEnum, uint* counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (uint* pcounterOffset0 = counterOffset)
			{
				fixed (uint* pcounterTypeEnum1 = counterTypeEnum)
				{
					fixed (ulong* prawCounterMaxValue2 = rawCounterMaxValue)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, pcounterOffset0, counterDataSize, pcounterTypeEnum1, counterDataTypeEnum, prawCounterMaxValue2);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, ref uint counterOffset, uint* counterDataSize, ref uint counterTypeEnum, uint* counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (uint* pcounterOffset0 = &counterOffset)
			{
				fixed (uint* pcounterTypeEnum1 = &counterTypeEnum)
				{
					fixed (ulong* prawCounterMaxValue2 = &rawCounterMaxValue)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, pcounterOffset0, counterDataSize, pcounterTypeEnum1, counterDataTypeEnum, prawCounterMaxValue2);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, byte* counterDesc, Span<uint> counterOffset, uint* counterDataSize, Span<uint> counterTypeEnum, uint* counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (uint* pcounterOffset1 = counterOffset)
				{
					fixed (uint* pcounterTypeEnum2 = counterTypeEnum)
					{
						fixed (ulong* prawCounterMaxValue3 = rawCounterMaxValue)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, pcounterOffset1, counterDataSize, pcounterTypeEnum2, counterDataTypeEnum, prawCounterMaxValue3);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, byte* counterDesc, ref uint counterOffset, uint* counterDataSize, ref uint counterTypeEnum, uint* counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (uint* pcounterOffset1 = &counterOffset)
				{
					fixed (uint* pcounterTypeEnum2 = &counterTypeEnum)
					{
						fixed (ulong* prawCounterMaxValue3 = &rawCounterMaxValue)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, pcounterOffset1, counterDataSize, pcounterTypeEnum2, counterDataTypeEnum, prawCounterMaxValue3);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, Span<byte> counterDesc, Span<uint> counterOffset, uint* counterDataSize, Span<uint> counterTypeEnum, uint* counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = counterDesc)
			{
				fixed (uint* pcounterOffset1 = counterOffset)
				{
					fixed (uint* pcounterTypeEnum2 = counterTypeEnum)
					{
						fixed (ulong* prawCounterMaxValue3 = rawCounterMaxValue)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, pcounterOffset1, counterDataSize, pcounterTypeEnum2, counterDataTypeEnum, prawCounterMaxValue3);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, ref byte counterDesc, ref uint counterOffset, uint* counterDataSize, ref uint counterTypeEnum, uint* counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = &counterDesc)
			{
				fixed (uint* pcounterOffset1 = &counterOffset)
				{
					fixed (uint* pcounterTypeEnum2 = &counterTypeEnum)
					{
						fixed (ulong* prawCounterMaxValue3 = &rawCounterMaxValue)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, pcounterOffset1, counterDataSize, pcounterTypeEnum2, counterDataTypeEnum, prawCounterMaxValue3);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, Span<byte> counterDesc, Span<uint> counterOffset, uint* counterDataSize, Span<uint> counterTypeEnum, uint* counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (byte* pcounterDesc1 = counterDesc)
				{
					fixed (uint* pcounterOffset2 = counterOffset)
					{
						fixed (uint* pcounterTypeEnum3 = counterTypeEnum)
						{
							fixed (ulong* prawCounterMaxValue4 = rawCounterMaxValue)
							{
								GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, pcounterOffset2, counterDataSize, pcounterTypeEnum3, counterDataTypeEnum, prawCounterMaxValue4);
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, ref byte counterDesc, ref uint counterOffset, uint* counterDataSize, ref uint counterTypeEnum, uint* counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (byte* pcounterDesc1 = &counterDesc)
				{
					fixed (uint* pcounterOffset2 = &counterOffset)
					{
						fixed (uint* pcounterTypeEnum3 = &counterTypeEnum)
						{
							fixed (ulong* prawCounterMaxValue4 = &rawCounterMaxValue)
							{
								GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, pcounterOffset2, counterDataSize, pcounterTypeEnum3, counterDataTypeEnum, prawCounterMaxValue4);
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, Span<uint> counterDataSize, Span<uint> counterTypeEnum, uint* counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (uint* pcounterDataSize0 = counterDataSize)
			{
				fixed (uint* pcounterTypeEnum1 = counterTypeEnum)
				{
					fixed (ulong* prawCounterMaxValue2 = rawCounterMaxValue)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, pcounterDataSize0, pcounterTypeEnum1, counterDataTypeEnum, prawCounterMaxValue2);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, ref uint counterDataSize, ref uint counterTypeEnum, uint* counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (uint* pcounterDataSize0 = &counterDataSize)
			{
				fixed (uint* pcounterTypeEnum1 = &counterTypeEnum)
				{
					fixed (ulong* prawCounterMaxValue2 = &rawCounterMaxValue)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, pcounterDataSize0, pcounterTypeEnum1, counterDataTypeEnum, prawCounterMaxValue2);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, Span<uint> counterDataSize, Span<uint> counterTypeEnum, uint* counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (uint* pcounterDataSize1 = counterDataSize)
				{
					fixed (uint* pcounterTypeEnum2 = counterTypeEnum)
					{
						fixed (ulong* prawCounterMaxValue3 = rawCounterMaxValue)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, counterOffset, pcounterDataSize1, pcounterTypeEnum2, counterDataTypeEnum, prawCounterMaxValue3);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, ref uint counterDataSize, ref uint counterTypeEnum, uint* counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (uint* pcounterDataSize1 = &counterDataSize)
				{
					fixed (uint* pcounterTypeEnum2 = &counterTypeEnum)
					{
						fixed (ulong* prawCounterMaxValue3 = &rawCounterMaxValue)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, counterOffset, pcounterDataSize1, pcounterTypeEnum2, counterDataTypeEnum, prawCounterMaxValue3);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, Span<byte> counterDesc, uint* counterOffset, Span<uint> counterDataSize, Span<uint> counterTypeEnum, uint* counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = counterDesc)
			{
				fixed (uint* pcounterDataSize1 = counterDataSize)
				{
					fixed (uint* pcounterTypeEnum2 = counterTypeEnum)
					{
						fixed (ulong* prawCounterMaxValue3 = rawCounterMaxValue)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, counterOffset, pcounterDataSize1, pcounterTypeEnum2, counterDataTypeEnum, prawCounterMaxValue3);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, ref byte counterDesc, uint* counterOffset, ref uint counterDataSize, ref uint counterTypeEnum, uint* counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = &counterDesc)
			{
				fixed (uint* pcounterDataSize1 = &counterDataSize)
				{
					fixed (uint* pcounterTypeEnum2 = &counterTypeEnum)
					{
						fixed (ulong* prawCounterMaxValue3 = &rawCounterMaxValue)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, counterOffset, pcounterDataSize1, pcounterTypeEnum2, counterDataTypeEnum, prawCounterMaxValue3);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, Span<byte> counterDesc, uint* counterOffset, Span<uint> counterDataSize, Span<uint> counterTypeEnum, uint* counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (byte* pcounterDesc1 = counterDesc)
				{
					fixed (uint* pcounterDataSize2 = counterDataSize)
					{
						fixed (uint* pcounterTypeEnum3 = counterTypeEnum)
						{
							fixed (ulong* prawCounterMaxValue4 = rawCounterMaxValue)
							{
								GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, counterOffset, pcounterDataSize2, pcounterTypeEnum3, counterDataTypeEnum, prawCounterMaxValue4);
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, ref byte counterDesc, uint* counterOffset, ref uint counterDataSize, ref uint counterTypeEnum, uint* counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (byte* pcounterDesc1 = &counterDesc)
				{
					fixed (uint* pcounterDataSize2 = &counterDataSize)
					{
						fixed (uint* pcounterTypeEnum3 = &counterTypeEnum)
						{
							fixed (ulong* prawCounterMaxValue4 = &rawCounterMaxValue)
							{
								GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, counterOffset, pcounterDataSize2, pcounterTypeEnum3, counterDataTypeEnum, prawCounterMaxValue4);
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, Span<uint> counterOffset, Span<uint> counterDataSize, Span<uint> counterTypeEnum, uint* counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (uint* pcounterOffset0 = counterOffset)
			{
				fixed (uint* pcounterDataSize1 = counterDataSize)
				{
					fixed (uint* pcounterTypeEnum2 = counterTypeEnum)
					{
						fixed (ulong* prawCounterMaxValue3 = rawCounterMaxValue)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, pcounterOffset0, pcounterDataSize1, pcounterTypeEnum2, counterDataTypeEnum, prawCounterMaxValue3);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, ref uint counterOffset, ref uint counterDataSize, ref uint counterTypeEnum, uint* counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (uint* pcounterOffset0 = &counterOffset)
			{
				fixed (uint* pcounterDataSize1 = &counterDataSize)
				{
					fixed (uint* pcounterTypeEnum2 = &counterTypeEnum)
					{
						fixed (ulong* prawCounterMaxValue3 = &rawCounterMaxValue)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, pcounterOffset0, pcounterDataSize1, pcounterTypeEnum2, counterDataTypeEnum, prawCounterMaxValue3);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, byte* counterDesc, Span<uint> counterOffset, Span<uint> counterDataSize, Span<uint> counterTypeEnum, uint* counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (uint* pcounterOffset1 = counterOffset)
				{
					fixed (uint* pcounterDataSize2 = counterDataSize)
					{
						fixed (uint* pcounterTypeEnum3 = counterTypeEnum)
						{
							fixed (ulong* prawCounterMaxValue4 = rawCounterMaxValue)
							{
								GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, pcounterOffset1, pcounterDataSize2, pcounterTypeEnum3, counterDataTypeEnum, prawCounterMaxValue4);
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, byte* counterDesc, ref uint counterOffset, ref uint counterDataSize, ref uint counterTypeEnum, uint* counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (uint* pcounterOffset1 = &counterOffset)
				{
					fixed (uint* pcounterDataSize2 = &counterDataSize)
					{
						fixed (uint* pcounterTypeEnum3 = &counterTypeEnum)
						{
							fixed (ulong* prawCounterMaxValue4 = &rawCounterMaxValue)
							{
								GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, pcounterOffset1, pcounterDataSize2, pcounterTypeEnum3, counterDataTypeEnum, prawCounterMaxValue4);
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, Span<byte> counterDesc, Span<uint> counterOffset, Span<uint> counterDataSize, Span<uint> counterTypeEnum, uint* counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = counterDesc)
			{
				fixed (uint* pcounterOffset1 = counterOffset)
				{
					fixed (uint* pcounterDataSize2 = counterDataSize)
					{
						fixed (uint* pcounterTypeEnum3 = counterTypeEnum)
						{
							fixed (ulong* prawCounterMaxValue4 = rawCounterMaxValue)
							{
								GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, pcounterOffset1, pcounterDataSize2, pcounterTypeEnum3, counterDataTypeEnum, prawCounterMaxValue4);
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, ref byte counterDesc, ref uint counterOffset, ref uint counterDataSize, ref uint counterTypeEnum, uint* counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = &counterDesc)
			{
				fixed (uint* pcounterOffset1 = &counterOffset)
				{
					fixed (uint* pcounterDataSize2 = &counterDataSize)
					{
						fixed (uint* pcounterTypeEnum3 = &counterTypeEnum)
						{
							fixed (ulong* prawCounterMaxValue4 = &rawCounterMaxValue)
							{
								GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, pcounterOffset1, pcounterDataSize2, pcounterTypeEnum3, counterDataTypeEnum, prawCounterMaxValue4);
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, Span<byte> counterDesc, Span<uint> counterOffset, Span<uint> counterDataSize, Span<uint> counterTypeEnum, uint* counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (byte* pcounterDesc1 = counterDesc)
				{
					fixed (uint* pcounterOffset2 = counterOffset)
					{
						fixed (uint* pcounterDataSize3 = counterDataSize)
						{
							fixed (uint* pcounterTypeEnum4 = counterTypeEnum)
							{
								fixed (ulong* prawCounterMaxValue5 = rawCounterMaxValue)
								{
									GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, pcounterOffset2, pcounterDataSize3, pcounterTypeEnum4, counterDataTypeEnum, prawCounterMaxValue5);
								}
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, ref byte counterDesc, ref uint counterOffset, ref uint counterDataSize, ref uint counterTypeEnum, uint* counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (byte* pcounterDesc1 = &counterDesc)
				{
					fixed (uint* pcounterOffset2 = &counterOffset)
					{
						fixed (uint* pcounterDataSize3 = &counterDataSize)
						{
							fixed (uint* pcounterTypeEnum4 = &counterTypeEnum)
							{
								fixed (ulong* prawCounterMaxValue5 = &rawCounterMaxValue)
								{
									GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, pcounterOffset2, pcounterDataSize3, pcounterTypeEnum4, counterDataTypeEnum, prawCounterMaxValue5);
								}
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, uint* counterDataSize, uint* counterTypeEnum, Span<uint> counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (uint* pcounterDataTypeEnum0 = counterDataTypeEnum)
			{
				fixed (ulong* prawCounterMaxValue1 = rawCounterMaxValue)
				{
					GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, counterDataSize, counterTypeEnum, pcounterDataTypeEnum0, prawCounterMaxValue1);
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, uint* counterDataSize, uint* counterTypeEnum, ref uint counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (uint* pcounterDataTypeEnum0 = &counterDataTypeEnum)
			{
				fixed (ulong* prawCounterMaxValue1 = &rawCounterMaxValue)
				{
					GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, counterDataSize, counterTypeEnum, pcounterDataTypeEnum0, prawCounterMaxValue1);
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, uint* counterDataSize, uint* counterTypeEnum, Span<uint> counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (uint* pcounterDataTypeEnum1 = counterDataTypeEnum)
				{
					fixed (ulong* prawCounterMaxValue2 = rawCounterMaxValue)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, counterOffset, counterDataSize, counterTypeEnum, pcounterDataTypeEnum1, prawCounterMaxValue2);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, uint* counterDataSize, uint* counterTypeEnum, ref uint counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (uint* pcounterDataTypeEnum1 = &counterDataTypeEnum)
				{
					fixed (ulong* prawCounterMaxValue2 = &rawCounterMaxValue)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, counterOffset, counterDataSize, counterTypeEnum, pcounterDataTypeEnum1, prawCounterMaxValue2);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, Span<byte> counterDesc, uint* counterOffset, uint* counterDataSize, uint* counterTypeEnum, Span<uint> counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = counterDesc)
			{
				fixed (uint* pcounterDataTypeEnum1 = counterDataTypeEnum)
				{
					fixed (ulong* prawCounterMaxValue2 = rawCounterMaxValue)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, counterOffset, counterDataSize, counterTypeEnum, pcounterDataTypeEnum1, prawCounterMaxValue2);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, ref byte counterDesc, uint* counterOffset, uint* counterDataSize, uint* counterTypeEnum, ref uint counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = &counterDesc)
			{
				fixed (uint* pcounterDataTypeEnum1 = &counterDataTypeEnum)
				{
					fixed (ulong* prawCounterMaxValue2 = &rawCounterMaxValue)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, counterOffset, counterDataSize, counterTypeEnum, pcounterDataTypeEnum1, prawCounterMaxValue2);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, Span<byte> counterDesc, uint* counterOffset, uint* counterDataSize, uint* counterTypeEnum, Span<uint> counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (byte* pcounterDesc1 = counterDesc)
				{
					fixed (uint* pcounterDataTypeEnum2 = counterDataTypeEnum)
					{
						fixed (ulong* prawCounterMaxValue3 = rawCounterMaxValue)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, counterOffset, counterDataSize, counterTypeEnum, pcounterDataTypeEnum2, prawCounterMaxValue3);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, ref byte counterDesc, uint* counterOffset, uint* counterDataSize, uint* counterTypeEnum, ref uint counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (byte* pcounterDesc1 = &counterDesc)
				{
					fixed (uint* pcounterDataTypeEnum2 = &counterDataTypeEnum)
					{
						fixed (ulong* prawCounterMaxValue3 = &rawCounterMaxValue)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, counterOffset, counterDataSize, counterTypeEnum, pcounterDataTypeEnum2, prawCounterMaxValue3);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, Span<uint> counterOffset, uint* counterDataSize, uint* counterTypeEnum, Span<uint> counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (uint* pcounterOffset0 = counterOffset)
			{
				fixed (uint* pcounterDataTypeEnum1 = counterDataTypeEnum)
				{
					fixed (ulong* prawCounterMaxValue2 = rawCounterMaxValue)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, pcounterOffset0, counterDataSize, counterTypeEnum, pcounterDataTypeEnum1, prawCounterMaxValue2);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, ref uint counterOffset, uint* counterDataSize, uint* counterTypeEnum, ref uint counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (uint* pcounterOffset0 = &counterOffset)
			{
				fixed (uint* pcounterDataTypeEnum1 = &counterDataTypeEnum)
				{
					fixed (ulong* prawCounterMaxValue2 = &rawCounterMaxValue)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, pcounterOffset0, counterDataSize, counterTypeEnum, pcounterDataTypeEnum1, prawCounterMaxValue2);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, byte* counterDesc, Span<uint> counterOffset, uint* counterDataSize, uint* counterTypeEnum, Span<uint> counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (uint* pcounterOffset1 = counterOffset)
				{
					fixed (uint* pcounterDataTypeEnum2 = counterDataTypeEnum)
					{
						fixed (ulong* prawCounterMaxValue3 = rawCounterMaxValue)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, pcounterOffset1, counterDataSize, counterTypeEnum, pcounterDataTypeEnum2, prawCounterMaxValue3);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, byte* counterDesc, ref uint counterOffset, uint* counterDataSize, uint* counterTypeEnum, ref uint counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (uint* pcounterOffset1 = &counterOffset)
				{
					fixed (uint* pcounterDataTypeEnum2 = &counterDataTypeEnum)
					{
						fixed (ulong* prawCounterMaxValue3 = &rawCounterMaxValue)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, pcounterOffset1, counterDataSize, counterTypeEnum, pcounterDataTypeEnum2, prawCounterMaxValue3);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, Span<byte> counterDesc, Span<uint> counterOffset, uint* counterDataSize, uint* counterTypeEnum, Span<uint> counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = counterDesc)
			{
				fixed (uint* pcounterOffset1 = counterOffset)
				{
					fixed (uint* pcounterDataTypeEnum2 = counterDataTypeEnum)
					{
						fixed (ulong* prawCounterMaxValue3 = rawCounterMaxValue)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, pcounterOffset1, counterDataSize, counterTypeEnum, pcounterDataTypeEnum2, prawCounterMaxValue3);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, ref byte counterDesc, ref uint counterOffset, uint* counterDataSize, uint* counterTypeEnum, ref uint counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = &counterDesc)
			{
				fixed (uint* pcounterOffset1 = &counterOffset)
				{
					fixed (uint* pcounterDataTypeEnum2 = &counterDataTypeEnum)
					{
						fixed (ulong* prawCounterMaxValue3 = &rawCounterMaxValue)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, pcounterOffset1, counterDataSize, counterTypeEnum, pcounterDataTypeEnum2, prawCounterMaxValue3);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, Span<byte> counterDesc, Span<uint> counterOffset, uint* counterDataSize, uint* counterTypeEnum, Span<uint> counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (byte* pcounterDesc1 = counterDesc)
				{
					fixed (uint* pcounterOffset2 = counterOffset)
					{
						fixed (uint* pcounterDataTypeEnum3 = counterDataTypeEnum)
						{
							fixed (ulong* prawCounterMaxValue4 = rawCounterMaxValue)
							{
								GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, pcounterOffset2, counterDataSize, counterTypeEnum, pcounterDataTypeEnum3, prawCounterMaxValue4);
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, ref byte counterDesc, ref uint counterOffset, uint* counterDataSize, uint* counterTypeEnum, ref uint counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (byte* pcounterDesc1 = &counterDesc)
				{
					fixed (uint* pcounterOffset2 = &counterOffset)
					{
						fixed (uint* pcounterDataTypeEnum3 = &counterDataTypeEnum)
						{
							fixed (ulong* prawCounterMaxValue4 = &rawCounterMaxValue)
							{
								GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, pcounterOffset2, counterDataSize, counterTypeEnum, pcounterDataTypeEnum3, prawCounterMaxValue4);
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, Span<uint> counterDataSize, uint* counterTypeEnum, Span<uint> counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (uint* pcounterDataSize0 = counterDataSize)
			{
				fixed (uint* pcounterDataTypeEnum1 = counterDataTypeEnum)
				{
					fixed (ulong* prawCounterMaxValue2 = rawCounterMaxValue)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, pcounterDataSize0, counterTypeEnum, pcounterDataTypeEnum1, prawCounterMaxValue2);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, ref uint counterDataSize, uint* counterTypeEnum, ref uint counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (uint* pcounterDataSize0 = &counterDataSize)
			{
				fixed (uint* pcounterDataTypeEnum1 = &counterDataTypeEnum)
				{
					fixed (ulong* prawCounterMaxValue2 = &rawCounterMaxValue)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, pcounterDataSize0, counterTypeEnum, pcounterDataTypeEnum1, prawCounterMaxValue2);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, Span<uint> counterDataSize, uint* counterTypeEnum, Span<uint> counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (uint* pcounterDataSize1 = counterDataSize)
				{
					fixed (uint* pcounterDataTypeEnum2 = counterDataTypeEnum)
					{
						fixed (ulong* prawCounterMaxValue3 = rawCounterMaxValue)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, counterOffset, pcounterDataSize1, counterTypeEnum, pcounterDataTypeEnum2, prawCounterMaxValue3);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, ref uint counterDataSize, uint* counterTypeEnum, ref uint counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (uint* pcounterDataSize1 = &counterDataSize)
				{
					fixed (uint* pcounterDataTypeEnum2 = &counterDataTypeEnum)
					{
						fixed (ulong* prawCounterMaxValue3 = &rawCounterMaxValue)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, counterOffset, pcounterDataSize1, counterTypeEnum, pcounterDataTypeEnum2, prawCounterMaxValue3);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, Span<byte> counterDesc, uint* counterOffset, Span<uint> counterDataSize, uint* counterTypeEnum, Span<uint> counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = counterDesc)
			{
				fixed (uint* pcounterDataSize1 = counterDataSize)
				{
					fixed (uint* pcounterDataTypeEnum2 = counterDataTypeEnum)
					{
						fixed (ulong* prawCounterMaxValue3 = rawCounterMaxValue)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, counterOffset, pcounterDataSize1, counterTypeEnum, pcounterDataTypeEnum2, prawCounterMaxValue3);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, ref byte counterDesc, uint* counterOffset, ref uint counterDataSize, uint* counterTypeEnum, ref uint counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = &counterDesc)
			{
				fixed (uint* pcounterDataSize1 = &counterDataSize)
				{
					fixed (uint* pcounterDataTypeEnum2 = &counterDataTypeEnum)
					{
						fixed (ulong* prawCounterMaxValue3 = &rawCounterMaxValue)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, counterOffset, pcounterDataSize1, counterTypeEnum, pcounterDataTypeEnum2, prawCounterMaxValue3);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, Span<byte> counterDesc, uint* counterOffset, Span<uint> counterDataSize, uint* counterTypeEnum, Span<uint> counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (byte* pcounterDesc1 = counterDesc)
				{
					fixed (uint* pcounterDataSize2 = counterDataSize)
					{
						fixed (uint* pcounterDataTypeEnum3 = counterDataTypeEnum)
						{
							fixed (ulong* prawCounterMaxValue4 = rawCounterMaxValue)
							{
								GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, counterOffset, pcounterDataSize2, counterTypeEnum, pcounterDataTypeEnum3, prawCounterMaxValue4);
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, ref byte counterDesc, uint* counterOffset, ref uint counterDataSize, uint* counterTypeEnum, ref uint counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (byte* pcounterDesc1 = &counterDesc)
				{
					fixed (uint* pcounterDataSize2 = &counterDataSize)
					{
						fixed (uint* pcounterDataTypeEnum3 = &counterDataTypeEnum)
						{
							fixed (ulong* prawCounterMaxValue4 = &rawCounterMaxValue)
							{
								GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, counterOffset, pcounterDataSize2, counterTypeEnum, pcounterDataTypeEnum3, prawCounterMaxValue4);
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, Span<uint> counterOffset, Span<uint> counterDataSize, uint* counterTypeEnum, Span<uint> counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (uint* pcounterOffset0 = counterOffset)
			{
				fixed (uint* pcounterDataSize1 = counterDataSize)
				{
					fixed (uint* pcounterDataTypeEnum2 = counterDataTypeEnum)
					{
						fixed (ulong* prawCounterMaxValue3 = rawCounterMaxValue)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, pcounterOffset0, pcounterDataSize1, counterTypeEnum, pcounterDataTypeEnum2, prawCounterMaxValue3);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, ref uint counterOffset, ref uint counterDataSize, uint* counterTypeEnum, ref uint counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (uint* pcounterOffset0 = &counterOffset)
			{
				fixed (uint* pcounterDataSize1 = &counterDataSize)
				{
					fixed (uint* pcounterDataTypeEnum2 = &counterDataTypeEnum)
					{
						fixed (ulong* prawCounterMaxValue3 = &rawCounterMaxValue)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, pcounterOffset0, pcounterDataSize1, counterTypeEnum, pcounterDataTypeEnum2, prawCounterMaxValue3);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, byte* counterDesc, Span<uint> counterOffset, Span<uint> counterDataSize, uint* counterTypeEnum, Span<uint> counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (uint* pcounterOffset1 = counterOffset)
				{
					fixed (uint* pcounterDataSize2 = counterDataSize)
					{
						fixed (uint* pcounterDataTypeEnum3 = counterDataTypeEnum)
						{
							fixed (ulong* prawCounterMaxValue4 = rawCounterMaxValue)
							{
								GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, pcounterOffset1, pcounterDataSize2, counterTypeEnum, pcounterDataTypeEnum3, prawCounterMaxValue4);
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, byte* counterDesc, ref uint counterOffset, ref uint counterDataSize, uint* counterTypeEnum, ref uint counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (uint* pcounterOffset1 = &counterOffset)
				{
					fixed (uint* pcounterDataSize2 = &counterDataSize)
					{
						fixed (uint* pcounterDataTypeEnum3 = &counterDataTypeEnum)
						{
							fixed (ulong* prawCounterMaxValue4 = &rawCounterMaxValue)
							{
								GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, pcounterOffset1, pcounterDataSize2, counterTypeEnum, pcounterDataTypeEnum3, prawCounterMaxValue4);
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, Span<byte> counterDesc, Span<uint> counterOffset, Span<uint> counterDataSize, uint* counterTypeEnum, Span<uint> counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = counterDesc)
			{
				fixed (uint* pcounterOffset1 = counterOffset)
				{
					fixed (uint* pcounterDataSize2 = counterDataSize)
					{
						fixed (uint* pcounterDataTypeEnum3 = counterDataTypeEnum)
						{
							fixed (ulong* prawCounterMaxValue4 = rawCounterMaxValue)
							{
								GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, pcounterOffset1, pcounterDataSize2, counterTypeEnum, pcounterDataTypeEnum3, prawCounterMaxValue4);
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, ref byte counterDesc, ref uint counterOffset, ref uint counterDataSize, uint* counterTypeEnum, ref uint counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = &counterDesc)
			{
				fixed (uint* pcounterOffset1 = &counterOffset)
				{
					fixed (uint* pcounterDataSize2 = &counterDataSize)
					{
						fixed (uint* pcounterDataTypeEnum3 = &counterDataTypeEnum)
						{
							fixed (ulong* prawCounterMaxValue4 = &rawCounterMaxValue)
							{
								GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, pcounterOffset1, pcounterDataSize2, counterTypeEnum, pcounterDataTypeEnum3, prawCounterMaxValue4);
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, Span<byte> counterDesc, Span<uint> counterOffset, Span<uint> counterDataSize, uint* counterTypeEnum, Span<uint> counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (byte* pcounterDesc1 = counterDesc)
				{
					fixed (uint* pcounterOffset2 = counterOffset)
					{
						fixed (uint* pcounterDataSize3 = counterDataSize)
						{
							fixed (uint* pcounterDataTypeEnum4 = counterDataTypeEnum)
							{
								fixed (ulong* prawCounterMaxValue5 = rawCounterMaxValue)
								{
									GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, pcounterOffset2, pcounterDataSize3, counterTypeEnum, pcounterDataTypeEnum4, prawCounterMaxValue5);
								}
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, ref byte counterDesc, ref uint counterOffset, ref uint counterDataSize, uint* counterTypeEnum, ref uint counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (byte* pcounterDesc1 = &counterDesc)
				{
					fixed (uint* pcounterOffset2 = &counterOffset)
					{
						fixed (uint* pcounterDataSize3 = &counterDataSize)
						{
							fixed (uint* pcounterDataTypeEnum4 = &counterDataTypeEnum)
							{
								fixed (ulong* prawCounterMaxValue5 = &rawCounterMaxValue)
								{
									GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, pcounterOffset2, pcounterDataSize3, counterTypeEnum, pcounterDataTypeEnum4, prawCounterMaxValue5);
								}
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, uint* counterDataSize, Span<uint> counterTypeEnum, Span<uint> counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (uint* pcounterTypeEnum0 = counterTypeEnum)
			{
				fixed (uint* pcounterDataTypeEnum1 = counterDataTypeEnum)
				{
					fixed (ulong* prawCounterMaxValue2 = rawCounterMaxValue)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, counterDataSize, pcounterTypeEnum0, pcounterDataTypeEnum1, prawCounterMaxValue2);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, uint* counterDataSize, ref uint counterTypeEnum, ref uint counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (uint* pcounterTypeEnum0 = &counterTypeEnum)
			{
				fixed (uint* pcounterDataTypeEnum1 = &counterDataTypeEnum)
				{
					fixed (ulong* prawCounterMaxValue2 = &rawCounterMaxValue)
					{
						GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, counterDataSize, pcounterTypeEnum0, pcounterDataTypeEnum1, prawCounterMaxValue2);
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, uint* counterDataSize, Span<uint> counterTypeEnum, Span<uint> counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (uint* pcounterTypeEnum1 = counterTypeEnum)
				{
					fixed (uint* pcounterDataTypeEnum2 = counterDataTypeEnum)
					{
						fixed (ulong* prawCounterMaxValue3 = rawCounterMaxValue)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, counterOffset, counterDataSize, pcounterTypeEnum1, pcounterDataTypeEnum2, prawCounterMaxValue3);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, uint* counterDataSize, ref uint counterTypeEnum, ref uint counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (uint* pcounterTypeEnum1 = &counterTypeEnum)
				{
					fixed (uint* pcounterDataTypeEnum2 = &counterDataTypeEnum)
					{
						fixed (ulong* prawCounterMaxValue3 = &rawCounterMaxValue)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, counterOffset, counterDataSize, pcounterTypeEnum1, pcounterDataTypeEnum2, prawCounterMaxValue3);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, Span<byte> counterDesc, uint* counterOffset, uint* counterDataSize, Span<uint> counterTypeEnum, Span<uint> counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = counterDesc)
			{
				fixed (uint* pcounterTypeEnum1 = counterTypeEnum)
				{
					fixed (uint* pcounterDataTypeEnum2 = counterDataTypeEnum)
					{
						fixed (ulong* prawCounterMaxValue3 = rawCounterMaxValue)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, counterOffset, counterDataSize, pcounterTypeEnum1, pcounterDataTypeEnum2, prawCounterMaxValue3);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, ref byte counterDesc, uint* counterOffset, uint* counterDataSize, ref uint counterTypeEnum, ref uint counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = &counterDesc)
			{
				fixed (uint* pcounterTypeEnum1 = &counterTypeEnum)
				{
					fixed (uint* pcounterDataTypeEnum2 = &counterDataTypeEnum)
					{
						fixed (ulong* prawCounterMaxValue3 = &rawCounterMaxValue)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, counterOffset, counterDataSize, pcounterTypeEnum1, pcounterDataTypeEnum2, prawCounterMaxValue3);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, Span<byte> counterDesc, uint* counterOffset, uint* counterDataSize, Span<uint> counterTypeEnum, Span<uint> counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (byte* pcounterDesc1 = counterDesc)
				{
					fixed (uint* pcounterTypeEnum2 = counterTypeEnum)
					{
						fixed (uint* pcounterDataTypeEnum3 = counterDataTypeEnum)
						{
							fixed (ulong* prawCounterMaxValue4 = rawCounterMaxValue)
							{
								GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, counterOffset, counterDataSize, pcounterTypeEnum2, pcounterDataTypeEnum3, prawCounterMaxValue4);
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, ref byte counterDesc, uint* counterOffset, uint* counterDataSize, ref uint counterTypeEnum, ref uint counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (byte* pcounterDesc1 = &counterDesc)
				{
					fixed (uint* pcounterTypeEnum2 = &counterTypeEnum)
					{
						fixed (uint* pcounterDataTypeEnum3 = &counterDataTypeEnum)
						{
							fixed (ulong* prawCounterMaxValue4 = &rawCounterMaxValue)
							{
								GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, counterOffset, counterDataSize, pcounterTypeEnum2, pcounterDataTypeEnum3, prawCounterMaxValue4);
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, Span<uint> counterOffset, uint* counterDataSize, Span<uint> counterTypeEnum, Span<uint> counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (uint* pcounterOffset0 = counterOffset)
			{
				fixed (uint* pcounterTypeEnum1 = counterTypeEnum)
				{
					fixed (uint* pcounterDataTypeEnum2 = counterDataTypeEnum)
					{
						fixed (ulong* prawCounterMaxValue3 = rawCounterMaxValue)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, pcounterOffset0, counterDataSize, pcounterTypeEnum1, pcounterDataTypeEnum2, prawCounterMaxValue3);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, ref uint counterOffset, uint* counterDataSize, ref uint counterTypeEnum, ref uint counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (uint* pcounterOffset0 = &counterOffset)
			{
				fixed (uint* pcounterTypeEnum1 = &counterTypeEnum)
				{
					fixed (uint* pcounterDataTypeEnum2 = &counterDataTypeEnum)
					{
						fixed (ulong* prawCounterMaxValue3 = &rawCounterMaxValue)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, pcounterOffset0, counterDataSize, pcounterTypeEnum1, pcounterDataTypeEnum2, prawCounterMaxValue3);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, byte* counterDesc, Span<uint> counterOffset, uint* counterDataSize, Span<uint> counterTypeEnum, Span<uint> counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (uint* pcounterOffset1 = counterOffset)
				{
					fixed (uint* pcounterTypeEnum2 = counterTypeEnum)
					{
						fixed (uint* pcounterDataTypeEnum3 = counterDataTypeEnum)
						{
							fixed (ulong* prawCounterMaxValue4 = rawCounterMaxValue)
							{
								GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, pcounterOffset1, counterDataSize, pcounterTypeEnum2, pcounterDataTypeEnum3, prawCounterMaxValue4);
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, byte* counterDesc, ref uint counterOffset, uint* counterDataSize, ref uint counterTypeEnum, ref uint counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (uint* pcounterOffset1 = &counterOffset)
				{
					fixed (uint* pcounterTypeEnum2 = &counterTypeEnum)
					{
						fixed (uint* pcounterDataTypeEnum3 = &counterDataTypeEnum)
						{
							fixed (ulong* prawCounterMaxValue4 = &rawCounterMaxValue)
							{
								GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, pcounterOffset1, counterDataSize, pcounterTypeEnum2, pcounterDataTypeEnum3, prawCounterMaxValue4);
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, Span<byte> counterDesc, Span<uint> counterOffset, uint* counterDataSize, Span<uint> counterTypeEnum, Span<uint> counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = counterDesc)
			{
				fixed (uint* pcounterOffset1 = counterOffset)
				{
					fixed (uint* pcounterTypeEnum2 = counterTypeEnum)
					{
						fixed (uint* pcounterDataTypeEnum3 = counterDataTypeEnum)
						{
							fixed (ulong* prawCounterMaxValue4 = rawCounterMaxValue)
							{
								GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, pcounterOffset1, counterDataSize, pcounterTypeEnum2, pcounterDataTypeEnum3, prawCounterMaxValue4);
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, ref byte counterDesc, ref uint counterOffset, uint* counterDataSize, ref uint counterTypeEnum, ref uint counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = &counterDesc)
			{
				fixed (uint* pcounterOffset1 = &counterOffset)
				{
					fixed (uint* pcounterTypeEnum2 = &counterTypeEnum)
					{
						fixed (uint* pcounterDataTypeEnum3 = &counterDataTypeEnum)
						{
							fixed (ulong* prawCounterMaxValue4 = &rawCounterMaxValue)
							{
								GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, pcounterOffset1, counterDataSize, pcounterTypeEnum2, pcounterDataTypeEnum3, prawCounterMaxValue4);
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, Span<byte> counterDesc, Span<uint> counterOffset, uint* counterDataSize, Span<uint> counterTypeEnum, Span<uint> counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (byte* pcounterDesc1 = counterDesc)
				{
					fixed (uint* pcounterOffset2 = counterOffset)
					{
						fixed (uint* pcounterTypeEnum3 = counterTypeEnum)
						{
							fixed (uint* pcounterDataTypeEnum4 = counterDataTypeEnum)
							{
								fixed (ulong* prawCounterMaxValue5 = rawCounterMaxValue)
								{
									GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, pcounterOffset2, counterDataSize, pcounterTypeEnum3, pcounterDataTypeEnum4, prawCounterMaxValue5);
								}
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, ref byte counterDesc, ref uint counterOffset, uint* counterDataSize, ref uint counterTypeEnum, ref uint counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (byte* pcounterDesc1 = &counterDesc)
				{
					fixed (uint* pcounterOffset2 = &counterOffset)
					{
						fixed (uint* pcounterTypeEnum3 = &counterTypeEnum)
						{
							fixed (uint* pcounterDataTypeEnum4 = &counterDataTypeEnum)
							{
								fixed (ulong* prawCounterMaxValue5 = &rawCounterMaxValue)
								{
									GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, pcounterOffset2, counterDataSize, pcounterTypeEnum3, pcounterDataTypeEnum4, prawCounterMaxValue5);
								}
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, Span<uint> counterDataSize, Span<uint> counterTypeEnum, Span<uint> counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (uint* pcounterDataSize0 = counterDataSize)
			{
				fixed (uint* pcounterTypeEnum1 = counterTypeEnum)
				{
					fixed (uint* pcounterDataTypeEnum2 = counterDataTypeEnum)
					{
						fixed (ulong* prawCounterMaxValue3 = rawCounterMaxValue)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, pcounterDataSize0, pcounterTypeEnum1, pcounterDataTypeEnum2, prawCounterMaxValue3);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, ref uint counterDataSize, ref uint counterTypeEnum, ref uint counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (uint* pcounterDataSize0 = &counterDataSize)
			{
				fixed (uint* pcounterTypeEnum1 = &counterTypeEnum)
				{
					fixed (uint* pcounterDataTypeEnum2 = &counterDataTypeEnum)
					{
						fixed (ulong* prawCounterMaxValue3 = &rawCounterMaxValue)
						{
							GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, pcounterDataSize0, pcounterTypeEnum1, pcounterDataTypeEnum2, prawCounterMaxValue3);
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, Span<uint> counterDataSize, Span<uint> counterTypeEnum, Span<uint> counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (uint* pcounterDataSize1 = counterDataSize)
				{
					fixed (uint* pcounterTypeEnum2 = counterTypeEnum)
					{
						fixed (uint* pcounterDataTypeEnum3 = counterDataTypeEnum)
						{
							fixed (ulong* prawCounterMaxValue4 = rawCounterMaxValue)
							{
								GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, counterOffset, pcounterDataSize1, pcounterTypeEnum2, pcounterDataTypeEnum3, prawCounterMaxValue4);
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, byte* counterDesc, uint* counterOffset, ref uint counterDataSize, ref uint counterTypeEnum, ref uint counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (uint* pcounterDataSize1 = &counterDataSize)
				{
					fixed (uint* pcounterTypeEnum2 = &counterTypeEnum)
					{
						fixed (uint* pcounterDataTypeEnum3 = &counterDataTypeEnum)
						{
							fixed (ulong* prawCounterMaxValue4 = &rawCounterMaxValue)
							{
								GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, counterOffset, pcounterDataSize1, pcounterTypeEnum2, pcounterDataTypeEnum3, prawCounterMaxValue4);
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, Span<byte> counterDesc, uint* counterOffset, Span<uint> counterDataSize, Span<uint> counterTypeEnum, Span<uint> counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = counterDesc)
			{
				fixed (uint* pcounterDataSize1 = counterDataSize)
				{
					fixed (uint* pcounterTypeEnum2 = counterTypeEnum)
					{
						fixed (uint* pcounterDataTypeEnum3 = counterDataTypeEnum)
						{
							fixed (ulong* prawCounterMaxValue4 = rawCounterMaxValue)
							{
								GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, counterOffset, pcounterDataSize1, pcounterTypeEnum2, pcounterDataTypeEnum3, prawCounterMaxValue4);
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, ref byte counterDesc, uint* counterOffset, ref uint counterDataSize, ref uint counterTypeEnum, ref uint counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = &counterDesc)
			{
				fixed (uint* pcounterDataSize1 = &counterDataSize)
				{
					fixed (uint* pcounterTypeEnum2 = &counterTypeEnum)
					{
						fixed (uint* pcounterDataTypeEnum3 = &counterDataTypeEnum)
						{
							fixed (ulong* prawCounterMaxValue4 = &rawCounterMaxValue)
							{
								GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, counterOffset, pcounterDataSize1, pcounterTypeEnum2, pcounterDataTypeEnum3, prawCounterMaxValue4);
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, Span<byte> counterDesc, uint* counterOffset, Span<uint> counterDataSize, Span<uint> counterTypeEnum, Span<uint> counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (byte* pcounterDesc1 = counterDesc)
				{
					fixed (uint* pcounterDataSize2 = counterDataSize)
					{
						fixed (uint* pcounterTypeEnum3 = counterTypeEnum)
						{
							fixed (uint* pcounterDataTypeEnum4 = counterDataTypeEnum)
							{
								fixed (ulong* prawCounterMaxValue5 = rawCounterMaxValue)
								{
									GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, counterOffset, pcounterDataSize2, pcounterTypeEnum3, pcounterDataTypeEnum4, prawCounterMaxValue5);
								}
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, ref byte counterDesc, uint* counterOffset, ref uint counterDataSize, ref uint counterTypeEnum, ref uint counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (byte* pcounterDesc1 = &counterDesc)
				{
					fixed (uint* pcounterDataSize2 = &counterDataSize)
					{
						fixed (uint* pcounterTypeEnum3 = &counterTypeEnum)
						{
							fixed (uint* pcounterDataTypeEnum4 = &counterDataTypeEnum)
							{
								fixed (ulong* prawCounterMaxValue5 = &rawCounterMaxValue)
								{
									GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, counterOffset, pcounterDataSize2, pcounterTypeEnum3, pcounterDataTypeEnum4, prawCounterMaxValue5);
								}
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, Span<uint> counterOffset, Span<uint> counterDataSize, Span<uint> counterTypeEnum, Span<uint> counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (uint* pcounterOffset0 = counterOffset)
			{
				fixed (uint* pcounterDataSize1 = counterDataSize)
				{
					fixed (uint* pcounterTypeEnum2 = counterTypeEnum)
					{
						fixed (uint* pcounterDataTypeEnum3 = counterDataTypeEnum)
						{
							fixed (ulong* prawCounterMaxValue4 = rawCounterMaxValue)
							{
								GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, pcounterOffset0, pcounterDataSize1, pcounterTypeEnum2, pcounterDataTypeEnum3, prawCounterMaxValue4);
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, byte* counterDesc, ref uint counterOffset, ref uint counterDataSize, ref uint counterTypeEnum, ref uint counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (uint* pcounterOffset0 = &counterOffset)
			{
				fixed (uint* pcounterDataSize1 = &counterDataSize)
				{
					fixed (uint* pcounterTypeEnum2 = &counterTypeEnum)
					{
						fixed (uint* pcounterDataTypeEnum3 = &counterDataTypeEnum)
						{
							fixed (ulong* prawCounterMaxValue4 = &rawCounterMaxValue)
							{
								GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, pcounterOffset0, pcounterDataSize1, pcounterTypeEnum2, pcounterDataTypeEnum3, prawCounterMaxValue4);
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, byte* counterDesc, Span<uint> counterOffset, Span<uint> counterDataSize, Span<uint> counterTypeEnum, Span<uint> counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (uint* pcounterOffset1 = counterOffset)
				{
					fixed (uint* pcounterDataSize2 = counterDataSize)
					{
						fixed (uint* pcounterTypeEnum3 = counterTypeEnum)
						{
							fixed (uint* pcounterDataTypeEnum4 = counterDataTypeEnum)
							{
								fixed (ulong* prawCounterMaxValue5 = rawCounterMaxValue)
								{
									GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, pcounterOffset1, pcounterDataSize2, pcounterTypeEnum3, pcounterDataTypeEnum4, prawCounterMaxValue5);
								}
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, byte* counterDesc, ref uint counterOffset, ref uint counterDataSize, ref uint counterTypeEnum, ref uint counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (uint* pcounterOffset1 = &counterOffset)
				{
					fixed (uint* pcounterDataSize2 = &counterDataSize)
					{
						fixed (uint* pcounterTypeEnum3 = &counterTypeEnum)
						{
							fixed (uint* pcounterDataTypeEnum4 = &counterDataTypeEnum)
							{
								fixed (ulong* prawCounterMaxValue5 = &rawCounterMaxValue)
								{
									GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, counterDesc, pcounterOffset1, pcounterDataSize2, pcounterTypeEnum3, pcounterDataTypeEnum4, prawCounterMaxValue5);
								}
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, Span<byte> counterDesc, Span<uint> counterOffset, Span<uint> counterDataSize, Span<uint> counterTypeEnum, Span<uint> counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = counterDesc)
			{
				fixed (uint* pcounterOffset1 = counterOffset)
				{
					fixed (uint* pcounterDataSize2 = counterDataSize)
					{
						fixed (uint* pcounterTypeEnum3 = counterTypeEnum)
						{
							fixed (uint* pcounterDataTypeEnum4 = counterDataTypeEnum)
							{
								fixed (ulong* prawCounterMaxValue5 = rawCounterMaxValue)
								{
									GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, pcounterOffset1, pcounterDataSize2, pcounterTypeEnum3, pcounterDataTypeEnum4, prawCounterMaxValue5);
								}
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, byte* counterName, uint counterDescLength, ref byte counterDesc, ref uint counterOffset, ref uint counterDataSize, ref uint counterTypeEnum, ref uint counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterDesc0 = &counterDesc)
			{
				fixed (uint* pcounterOffset1 = &counterOffset)
				{
					fixed (uint* pcounterDataSize2 = &counterDataSize)
					{
						fixed (uint* pcounterTypeEnum3 = &counterTypeEnum)
						{
							fixed (uint* pcounterDataTypeEnum4 = &counterDataTypeEnum)
							{
								fixed (ulong* prawCounterMaxValue5 = &rawCounterMaxValue)
								{
									GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, counterName, counterDescLength, pcounterDesc0, pcounterOffset1, pcounterDataSize2, pcounterTypeEnum3, pcounterDataTypeEnum4, prawCounterMaxValue5);
								}
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, Span<byte> counterName, uint counterDescLength, Span<byte> counterDesc, Span<uint> counterOffset, Span<uint> counterDataSize, Span<uint> counterTypeEnum, Span<uint> counterDataTypeEnum, Span<ulong> rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = counterName)
			{
				fixed (byte* pcounterDesc1 = counterDesc)
				{
					fixed (uint* pcounterOffset2 = counterOffset)
					{
						fixed (uint* pcounterDataSize3 = counterDataSize)
						{
							fixed (uint* pcounterTypeEnum4 = counterTypeEnum)
							{
								fixed (uint* pcounterDataTypeEnum5 = counterDataTypeEnum)
								{
									fixed (ulong* prawCounterMaxValue6 = rawCounterMaxValue)
									{
										GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, pcounterOffset2, pcounterDataSize3, pcounterTypeEnum4, pcounterDataTypeEnum5, prawCounterMaxValue6);
									}
								}
							}
						}
					}
				}
			}
		}

		public static void GetPerfCounterInfoINTEL(uint queryId, uint counterId, uint counterNameLength, ref byte counterName, uint counterDescLength, ref byte counterDesc, ref uint counterOffset, ref uint counterDataSize, ref uint counterTypeEnum, ref uint counterDataTypeEnum, ref ulong rawCounterMaxValue)
		{
			fixed (byte* pcounterName0 = &counterName)
			{
				fixed (byte* pcounterDesc1 = &counterDesc)
				{
					fixed (uint* pcounterOffset2 = &counterOffset)
					{
						fixed (uint* pcounterDataSize3 = &counterDataSize)
						{
							fixed (uint* pcounterTypeEnum4 = &counterTypeEnum)
							{
								fixed (uint* pcounterDataTypeEnum5 = &counterDataTypeEnum)
								{
									fixed (ulong* prawCounterMaxValue6 = &rawCounterMaxValue)
									{
										GetPerfCounterInfoINTELNative(queryId, counterId, counterNameLength, pcounterName0, counterDescLength, pcounterDesc1, pcounterOffset2, pcounterDataSize3, pcounterTypeEnum4, pcounterDataTypeEnum5, prawCounterMaxValue6);
									}
								}
							}
						}
					}
				}
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void GetPerfQueryDataINTELNative(uint queryHandle, GLPerfQueryDataFlags flags, int dataSize, void* data, uint* bytesWritten)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<uint, GLPerfQueryDataFlags, int, void*, uint*, void>)funcTable[7])(queryHandle, flags, dataSize, data, bytesWritten);
			#else
			((delegate* unmanaged[Cdecl]<uint, GLPerfQueryDataFlags, int, nint, nint, void>)funcTable[7])(queryHandle, flags, dataSize, (nint)data, (nint)bytesWritten);
			#endif
		}

		public static void GetPerfQueryDataINTEL(uint queryHandle, GLPerfQueryDataFlags flags, int dataSize, void* data, uint* bytesWritten)
		{
			GetPerfQueryDataINTELNative(queryHandle, flags, dataSize, data, bytesWritten);
		}

		public static void GetPerfQueryDataINTEL(uint queryHandle, GLPerfQueryDataFlags flags, int dataSize, nint data, uint* bytesWritten)
		{
			GetPerfQueryDataINTELNative(queryHandle, flags, dataSize, (void*)data, bytesWritten);
		}

		public static void GetPerfQueryDataINTEL<TData>(uint queryHandle, GLPerfQueryDataFlags flags, int dataSize, Span<TData> data, uint* bytesWritten) where TData : unmanaged
		{
			fixed (TData* pdata0 = data)
			{
				GetPerfQueryDataINTELNative(queryHandle, flags, dataSize, pdata0, bytesWritten);
			}
		}

		public static void GetPerfQueryDataINTEL(uint queryHandle, GLPerfQueryDataFlags flags, int dataSize, void* data, Span<uint> bytesWritten)
		{
			fixed (uint* pbytesWritten0 = bytesWritten)
			{
				GetPerfQueryDataINTELNative(queryHandle, flags, dataSize, data, pbytesWritten0);
			}
		}

		public static void GetPerfQueryDataINTEL(uint queryHandle, GLPerfQueryDataFlags flags, int dataSize, void* data, ref uint bytesWritten)
		{
			fixed (uint* pbytesWritten0 = &bytesWritten)
			{
				GetPerfQueryDataINTELNative(queryHandle, flags, dataSize, data, pbytesWritten0);
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void GetPerfQueryIdByNameINTELNative(byte* queryName, uint* queryId)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<byte*, uint*, void>)funcTable[8])(queryName, queryId);
			#else
			((delegate* unmanaged[Cdecl]<nint, nint, void>)funcTable[8])((nint)queryName, (nint)queryId);
			#endif
		}

		public static void GetPerfQueryIdByNameINTEL(byte* queryName, uint* queryId)
		{
			GetPerfQueryIdByNameINTELNative(queryName, queryId);
		}

		public static void GetPerfQueryIdByNameINTEL(string queryName, uint* queryId)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (queryName != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(queryName);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(queryName, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			GetPerfQueryIdByNameINTELNative(pStr0, queryId);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
		}

		public static void GetPerfQueryIdByNameINTEL(Span<byte> queryName, uint* queryId)
		{
			fixed (byte* pqueryName0 = queryName)
			{
				GetPerfQueryIdByNameINTELNative(pqueryName0, queryId);
			}
		}

		public static void GetPerfQueryIdByNameINTEL(ref byte queryName, uint* queryId)
		{
			fixed (byte* pqueryName0 = &queryName)
			{
				GetPerfQueryIdByNameINTELNative(pqueryName0, queryId);
			}
		}

		public static void GetPerfQueryIdByNameINTEL(byte* queryName, Span<uint> queryId)
		{
			fixed (uint* pqueryId0 = queryId)
			{
				GetPerfQueryIdByNameINTELNative(queryName, pqueryId0);
			}
		}

		public static void GetPerfQueryIdByNameINTEL(byte* queryName, ref uint queryId)
		{
			fixed (uint* pqueryId0 = &queryId)
			{
				GetPerfQueryIdByNameINTELNative(queryName, pqueryId0);
			}
		}

		public static void GetPerfQueryIdByNameINTEL(Span<byte> queryName, Span<uint> queryId)
		{
			fixed (byte* pqueryName0 = queryName)
			{
				fixed (uint* pqueryId1 = queryId)
				{
					GetPerfQueryIdByNameINTELNative(pqueryName0, pqueryId1);
				}
			}
		}

		public static void GetPerfQueryIdByNameINTEL(ref byte queryName, ref uint queryId)
		{
			fixed (byte* pqueryName0 = &queryName)
			{
				fixed (uint* pqueryId1 = &queryId)
				{
					GetPerfQueryIdByNameINTELNative(pqueryName0, pqueryId1);
				}
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void GetPerfQueryInfoINTELNative(uint queryId, uint queryNameLength, byte* queryName, uint* dataSize, uint* noCounters, uint* noInstances, GLPerformanceQueryCapsMaskINTEL capsMask)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<uint, uint, byte*, uint*, uint*, uint*, GLPerformanceQueryCapsMaskINTEL, void>)funcTable[9])(queryId, queryNameLength, queryName, dataSize, noCounters, noInstances, capsMask);
			#else
			((delegate* unmanaged[Cdecl]<uint, uint, nint, nint, nint, nint, GLPerformanceQueryCapsMaskINTEL, void>)funcTable[9])(queryId, queryNameLength, (nint)queryName, (nint)dataSize, (nint)noCounters, (nint)noInstances, capsMask);
			#endif
		}

		public static void GetPerfQueryInfoINTEL(uint queryId, uint queryNameLength, byte* queryName, uint* dataSize, uint* noCounters, uint* noInstances, GLPerformanceQueryCapsMaskINTEL capsMask)
		{
			GetPerfQueryInfoINTELNative(queryId, queryNameLength, queryName, dataSize, noCounters, noInstances, capsMask);
		}

		public static void GetPerfQueryInfoINTEL(uint queryId, uint queryNameLength, string queryName, uint* dataSize, uint* noCounters, uint* noInstances, GLPerformanceQueryCapsMaskINTEL capsMask)
		{
			byte* pStr0 = null;
			int pStrSize0 = 0;
			if (queryName != null)
			{
				pStrSize0 = Utils.GetByteCountUTF8(queryName);
				if (pStrSize0 >= Utils.MaxStackallocSize)
				{
					pStr0 = Utils.Alloc<byte>(pStrSize0 + 1);
				}
				else
				{
					byte* pStrStack0 = stackalloc byte[pStrSize0 + 1];
					pStr0 = pStrStack0;
				}
				int pStrOffset0 = Utils.EncodeStringUTF8(queryName, pStr0, pStrSize0);
				pStr0[pStrOffset0] = 0;
			}
			GetPerfQueryInfoINTELNative(queryId, queryNameLength, pStr0, dataSize, noCounters, noInstances, capsMask);
			if (pStrSize0 >= Utils.MaxStackallocSize)
			{
				Utils.Free(pStr0);
			}
		}

		public static void GetPerfQueryInfoINTEL(uint queryId, uint queryNameLength, Span<byte> queryName, uint* dataSize, uint* noCounters, uint* noInstances, GLPerformanceQueryCapsMaskINTEL capsMask)
		{
			fixed (byte* pqueryName0 = queryName)
			{
				GetPerfQueryInfoINTELNative(queryId, queryNameLength, pqueryName0, dataSize, noCounters, noInstances, capsMask);
			}
		}

		public static void GetPerfQueryInfoINTEL(uint queryId, uint queryNameLength, ref byte queryName, uint* dataSize, uint* noCounters, uint* noInstances, GLPerformanceQueryCapsMaskINTEL capsMask)
		{
			fixed (byte* pqueryName0 = &queryName)
			{
				GetPerfQueryInfoINTELNative(queryId, queryNameLength, pqueryName0, dataSize, noCounters, noInstances, capsMask);
			}
		}

		public static void GetPerfQueryInfoINTEL(uint queryId, uint queryNameLength, byte* queryName, Span<uint> dataSize, uint* noCounters, uint* noInstances, GLPerformanceQueryCapsMaskINTEL capsMask)
		{
			fixed (uint* pdataSize0 = dataSize)
			{
				GetPerfQueryInfoINTELNative(queryId, queryNameLength, queryName, pdataSize0, noCounters, noInstances, capsMask);
			}
		}

		public static void GetPerfQueryInfoINTEL(uint queryId, uint queryNameLength, byte* queryName, ref uint dataSize, uint* noCounters, uint* noInstances, GLPerformanceQueryCapsMaskINTEL capsMask)
		{
			fixed (uint* pdataSize0 = &dataSize)
			{
				GetPerfQueryInfoINTELNative(queryId, queryNameLength, queryName, pdataSize0, noCounters, noInstances, capsMask);
			}
		}

		public static void GetPerfQueryInfoINTEL(uint queryId, uint queryNameLength, Span<byte> queryName, Span<uint> dataSize, uint* noCounters, uint* noInstances, GLPerformanceQueryCapsMaskINTEL capsMask)
		{
			fixed (byte* pqueryName0 = queryName)
			{
				fixed (uint* pdataSize1 = dataSize)
				{
					GetPerfQueryInfoINTELNative(queryId, queryNameLength, pqueryName0, pdataSize1, noCounters, noInstances, capsMask);
				}
			}
		}

		public static void GetPerfQueryInfoINTEL(uint queryId, uint queryNameLength, ref byte queryName, ref uint dataSize, uint* noCounters, uint* noInstances, GLPerformanceQueryCapsMaskINTEL capsMask)
		{
			fixed (byte* pqueryName0 = &queryName)
			{
				fixed (uint* pdataSize1 = &dataSize)
				{
					GetPerfQueryInfoINTELNative(queryId, queryNameLength, pqueryName0, pdataSize1, noCounters, noInstances, capsMask);
				}
			}
		}

		public static void GetPerfQueryInfoINTEL(uint queryId, uint queryNameLength, byte* queryName, uint* dataSize, Span<uint> noCounters, uint* noInstances, GLPerformanceQueryCapsMaskINTEL capsMask)
		{
			fixed (uint* pnoCounters0 = noCounters)
			{
				GetPerfQueryInfoINTELNative(queryId, queryNameLength, queryName, dataSize, pnoCounters0, noInstances, capsMask);
			}
		}

		public static void GetPerfQueryInfoINTEL(uint queryId, uint queryNameLength, byte* queryName, uint* dataSize, ref uint noCounters, uint* noInstances, GLPerformanceQueryCapsMaskINTEL capsMask)
		{
			fixed (uint* pnoCounters0 = &noCounters)
			{
				GetPerfQueryInfoINTELNative(queryId, queryNameLength, queryName, dataSize, pnoCounters0, noInstances, capsMask);
			}
		}

		public static void GetPerfQueryInfoINTEL(uint queryId, uint queryNameLength, Span<byte> queryName, uint* dataSize, Span<uint> noCounters, uint* noInstances, GLPerformanceQueryCapsMaskINTEL capsMask)
		{
			fixed (byte* pqueryName0 = queryName)
			{
				fixed (uint* pnoCounters1 = noCounters)
				{
					GetPerfQueryInfoINTELNative(queryId, queryNameLength, pqueryName0, dataSize, pnoCounters1, noInstances, capsMask);
				}
			}
		}

		public static void GetPerfQueryInfoINTEL(uint queryId, uint queryNameLength, ref byte queryName, uint* dataSize, ref uint noCounters, uint* noInstances, GLPerformanceQueryCapsMaskINTEL capsMask)
		{
			fixed (byte* pqueryName0 = &queryName)
			{
				fixed (uint* pnoCounters1 = &noCounters)
				{
					GetPerfQueryInfoINTELNative(queryId, queryNameLength, pqueryName0, dataSize, pnoCounters1, noInstances, capsMask);
				}
			}
		}

		public static void GetPerfQueryInfoINTEL(uint queryId, uint queryNameLength, byte* queryName, Span<uint> dataSize, Span<uint> noCounters, uint* noInstances, GLPerformanceQueryCapsMaskINTEL capsMask)
		{
			fixed (uint* pdataSize0 = dataSize)
			{
				fixed (uint* pnoCounters1 = noCounters)
				{
					GetPerfQueryInfoINTELNative(queryId, queryNameLength, queryName, pdataSize0, pnoCounters1, noInstances, capsMask);
				}
			}
		}

		public static void GetPerfQueryInfoINTEL(uint queryId, uint queryNameLength, byte* queryName, ref uint dataSize, ref uint noCounters, uint* noInstances, GLPerformanceQueryCapsMaskINTEL capsMask)
		{
			fixed (uint* pdataSize0 = &dataSize)
			{
				fixed (uint* pnoCounters1 = &noCounters)
				{
					GetPerfQueryInfoINTELNative(queryId, queryNameLength, queryName, pdataSize0, pnoCounters1, noInstances, capsMask);
				}
			}
		}

		public static void GetPerfQueryInfoINTEL(uint queryId, uint queryNameLength, Span<byte> queryName, Span<uint> dataSize, Span<uint> noCounters, uint* noInstances, GLPerformanceQueryCapsMaskINTEL capsMask)
		{
			fixed (byte* pqueryName0 = queryName)
			{
				fixed (uint* pdataSize1 = dataSize)
				{
					fixed (uint* pnoCounters2 = noCounters)
					{
						GetPerfQueryInfoINTELNative(queryId, queryNameLength, pqueryName0, pdataSize1, pnoCounters2, noInstances, capsMask);
					}
				}
			}
		}

		public static void GetPerfQueryInfoINTEL(uint queryId, uint queryNameLength, ref byte queryName, ref uint dataSize, ref uint noCounters, uint* noInstances, GLPerformanceQueryCapsMaskINTEL capsMask)
		{
			fixed (byte* pqueryName0 = &queryName)
			{
				fixed (uint* pdataSize1 = &dataSize)
				{
					fixed (uint* pnoCounters2 = &noCounters)
					{
						GetPerfQueryInfoINTELNative(queryId, queryNameLength, pqueryName0, pdataSize1, pnoCounters2, noInstances, capsMask);
					}
				}
			}
		}

		public static void GetPerfQueryInfoINTEL(uint queryId, uint queryNameLength, byte* queryName, uint* dataSize, uint* noCounters, Span<uint> noInstances, GLPerformanceQueryCapsMaskINTEL capsMask)
		{
			fixed (uint* pnoInstances0 = noInstances)
			{
				GetPerfQueryInfoINTELNative(queryId, queryNameLength, queryName, dataSize, noCounters, pnoInstances0, capsMask);
			}
		}

		public static void GetPerfQueryInfoINTEL(uint queryId, uint queryNameLength, byte* queryName, uint* dataSize, uint* noCounters, ref uint noInstances, GLPerformanceQueryCapsMaskINTEL capsMask)
		{
			fixed (uint* pnoInstances0 = &noInstances)
			{
				GetPerfQueryInfoINTELNative(queryId, queryNameLength, queryName, dataSize, noCounters, pnoInstances0, capsMask);
			}
		}

		public static void GetPerfQueryInfoINTEL(uint queryId, uint queryNameLength, Span<byte> queryName, uint* dataSize, uint* noCounters, Span<uint> noInstances, GLPerformanceQueryCapsMaskINTEL capsMask)
		{
			fixed (byte* pqueryName0 = queryName)
			{
				fixed (uint* pnoInstances1 = noInstances)
				{
					GetPerfQueryInfoINTELNative(queryId, queryNameLength, pqueryName0, dataSize, noCounters, pnoInstances1, capsMask);
				}
			}
		}

		public static void GetPerfQueryInfoINTEL(uint queryId, uint queryNameLength, ref byte queryName, uint* dataSize, uint* noCounters, ref uint noInstances, GLPerformanceQueryCapsMaskINTEL capsMask)
		{
			fixed (byte* pqueryName0 = &queryName)
			{
				fixed (uint* pnoInstances1 = &noInstances)
				{
					GetPerfQueryInfoINTELNative(queryId, queryNameLength, pqueryName0, dataSize, noCounters, pnoInstances1, capsMask);
				}
			}
		}

		public static void GetPerfQueryInfoINTEL(uint queryId, uint queryNameLength, byte* queryName, Span<uint> dataSize, uint* noCounters, Span<uint> noInstances, GLPerformanceQueryCapsMaskINTEL capsMask)
		{
			fixed (uint* pdataSize0 = dataSize)
			{
				fixed (uint* pnoInstances1 = noInstances)
				{
					GetPerfQueryInfoINTELNative(queryId, queryNameLength, queryName, pdataSize0, noCounters, pnoInstances1, capsMask);
				}
			}
		}

		public static void GetPerfQueryInfoINTEL(uint queryId, uint queryNameLength, byte* queryName, ref uint dataSize, uint* noCounters, ref uint noInstances, GLPerformanceQueryCapsMaskINTEL capsMask)
		{
			fixed (uint* pdataSize0 = &dataSize)
			{
				fixed (uint* pnoInstances1 = &noInstances)
				{
					GetPerfQueryInfoINTELNative(queryId, queryNameLength, queryName, pdataSize0, noCounters, pnoInstances1, capsMask);
				}
			}
		}

		public static void GetPerfQueryInfoINTEL(uint queryId, uint queryNameLength, Span<byte> queryName, Span<uint> dataSize, uint* noCounters, Span<uint> noInstances, GLPerformanceQueryCapsMaskINTEL capsMask)
		{
			fixed (byte* pqueryName0 = queryName)
			{
				fixed (uint* pdataSize1 = dataSize)
				{
					fixed (uint* pnoInstances2 = noInstances)
					{
						GetPerfQueryInfoINTELNative(queryId, queryNameLength, pqueryName0, pdataSize1, noCounters, pnoInstances2, capsMask);
					}
				}
			}
		}

		public static void GetPerfQueryInfoINTEL(uint queryId, uint queryNameLength, ref byte queryName, ref uint dataSize, uint* noCounters, ref uint noInstances, GLPerformanceQueryCapsMaskINTEL capsMask)
		{
			fixed (byte* pqueryName0 = &queryName)
			{
				fixed (uint* pdataSize1 = &dataSize)
				{
					fixed (uint* pnoInstances2 = &noInstances)
					{
						GetPerfQueryInfoINTELNative(queryId, queryNameLength, pqueryName0, pdataSize1, noCounters, pnoInstances2, capsMask);
					}
				}
			}
		}

		public static void GetPerfQueryInfoINTEL(uint queryId, uint queryNameLength, byte* queryName, uint* dataSize, Span<uint> noCounters, Span<uint> noInstances, GLPerformanceQueryCapsMaskINTEL capsMask)
		{
			fixed (uint* pnoCounters0 = noCounters)
			{
				fixed (uint* pnoInstances1 = noInstances)
				{
					GetPerfQueryInfoINTELNative(queryId, queryNameLength, queryName, dataSize, pnoCounters0, pnoInstances1, capsMask);
				}
			}
		}

		public static void GetPerfQueryInfoINTEL(uint queryId, uint queryNameLength, byte* queryName, uint* dataSize, ref uint noCounters, ref uint noInstances, GLPerformanceQueryCapsMaskINTEL capsMask)
		{
			fixed (uint* pnoCounters0 = &noCounters)
			{
				fixed (uint* pnoInstances1 = &noInstances)
				{
					GetPerfQueryInfoINTELNative(queryId, queryNameLength, queryName, dataSize, pnoCounters0, pnoInstances1, capsMask);
				}
			}
		}

		public static void GetPerfQueryInfoINTEL(uint queryId, uint queryNameLength, Span<byte> queryName, uint* dataSize, Span<uint> noCounters, Span<uint> noInstances, GLPerformanceQueryCapsMaskINTEL capsMask)
		{
			fixed (byte* pqueryName0 = queryName)
			{
				fixed (uint* pnoCounters1 = noCounters)
				{
					fixed (uint* pnoInstances2 = noInstances)
					{
						GetPerfQueryInfoINTELNative(queryId, queryNameLength, pqueryName0, dataSize, pnoCounters1, pnoInstances2, capsMask);
					}
				}
			}
		}

		public static void GetPerfQueryInfoINTEL(uint queryId, uint queryNameLength, ref byte queryName, uint* dataSize, ref uint noCounters, ref uint noInstances, GLPerformanceQueryCapsMaskINTEL capsMask)
		{
			fixed (byte* pqueryName0 = &queryName)
			{
				fixed (uint* pnoCounters1 = &noCounters)
				{
					fixed (uint* pnoInstances2 = &noInstances)
					{
						GetPerfQueryInfoINTELNative(queryId, queryNameLength, pqueryName0, dataSize, pnoCounters1, pnoInstances2, capsMask);
					}
				}
			}
		}

		public static void GetPerfQueryInfoINTEL(uint queryId, uint queryNameLength, byte* queryName, Span<uint> dataSize, Span<uint> noCounters, Span<uint> noInstances, GLPerformanceQueryCapsMaskINTEL capsMask)
		{
			fixed (uint* pdataSize0 = dataSize)
			{
				fixed (uint* pnoCounters1 = noCounters)
				{
					fixed (uint* pnoInstances2 = noInstances)
					{
						GetPerfQueryInfoINTELNative(queryId, queryNameLength, queryName, pdataSize0, pnoCounters1, pnoInstances2, capsMask);
					}
				}
			}
		}

		public static void GetPerfQueryInfoINTEL(uint queryId, uint queryNameLength, byte* queryName, ref uint dataSize, ref uint noCounters, ref uint noInstances, GLPerformanceQueryCapsMaskINTEL capsMask)
		{
			fixed (uint* pdataSize0 = &dataSize)
			{
				fixed (uint* pnoCounters1 = &noCounters)
				{
					fixed (uint* pnoInstances2 = &noInstances)
					{
						GetPerfQueryInfoINTELNative(queryId, queryNameLength, queryName, pdataSize0, pnoCounters1, pnoInstances2, capsMask);
					}
				}
			}
		}

		public static void GetPerfQueryInfoINTEL(uint queryId, uint queryNameLength, Span<byte> queryName, Span<uint> dataSize, Span<uint> noCounters, Span<uint> noInstances, GLPerformanceQueryCapsMaskINTEL capsMask)
		{
			fixed (byte* pqueryName0 = queryName)
			{
				fixed (uint* pdataSize1 = dataSize)
				{
					fixed (uint* pnoCounters2 = noCounters)
					{
						fixed (uint* pnoInstances3 = noInstances)
						{
							GetPerfQueryInfoINTELNative(queryId, queryNameLength, pqueryName0, pdataSize1, pnoCounters2, pnoInstances3, capsMask);
						}
					}
				}
			}
		}

		public static void GetPerfQueryInfoINTEL(uint queryId, uint queryNameLength, ref byte queryName, ref uint dataSize, ref uint noCounters, ref uint noInstances, GLPerformanceQueryCapsMaskINTEL capsMask)
		{
			fixed (byte* pqueryName0 = &queryName)
			{
				fixed (uint* pdataSize1 = &dataSize)
				{
					fixed (uint* pnoCounters2 = &noCounters)
					{
						fixed (uint* pnoInstances3 = &noInstances)
						{
							GetPerfQueryInfoINTELNative(queryId, queryNameLength, pqueryName0, pdataSize1, pnoCounters2, pnoInstances3, capsMask);
						}
					}
				}
			}
		}

	}
}
