// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using HexaGen.Runtime;
using System.Runtime.CompilerServices;
using System.Numerics;

namespace Hexa.NET.OpenGL.INTEL
{
	public unsafe partial class GLINTELParallelArrays
	{
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal void ColorPointervINTELNative(int size, GLVertexPointerType type, void** pointer)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<int, GLVertexPointerType, void**, void>)funcTable[0])(size, type, pointer);
			#else
			((delegate* unmanaged[Cdecl]<int, GLVertexPointerType, nint, void>)funcTable[0])(size, type, (nint)pointer);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_INTEL_parallel_arrays</remarks>
		public void ColorPointervINTEL(int size, GLVertexPointerType type, void** pointer)
		{
			ColorPointervINTELNative(size, type, pointer);
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal void NormalPointervINTELNative(GLNormalPointerType type, void** pointer)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<GLNormalPointerType, void**, void>)funcTable[1])(type, pointer);
			#else
			((delegate* unmanaged[Cdecl]<GLNormalPointerType, nint, void>)funcTable[1])(type, (nint)pointer);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_INTEL_parallel_arrays</remarks>
		public void NormalPointervINTEL(GLNormalPointerType type, void** pointer)
		{
			NormalPointervINTELNative(type, pointer);
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal void TexCoordPointervINTELNative(int size, GLVertexPointerType type, void** pointer)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<int, GLVertexPointerType, void**, void>)funcTable[2])(size, type, pointer);
			#else
			((delegate* unmanaged[Cdecl]<int, GLVertexPointerType, nint, void>)funcTable[2])(size, type, (nint)pointer);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_INTEL_parallel_arrays</remarks>
		public void TexCoordPointervINTEL(int size, GLVertexPointerType type, void** pointer)
		{
			TexCoordPointervINTELNative(size, type, pointer);
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal void VertexPointervINTELNative(int size, GLVertexPointerType type, void** pointer)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<int, GLVertexPointerType, void**, void>)funcTable[3])(size, type, pointer);
			#else
			((delegate* unmanaged[Cdecl]<int, GLVertexPointerType, nint, void>)funcTable[3])(size, type, (nint)pointer);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_INTEL_parallel_arrays</remarks>
		public void VertexPointervINTEL(int size, GLVertexPointerType type, void** pointer)
		{
			VertexPointervINTELNative(size, type, pointer);
		}

	}
}
