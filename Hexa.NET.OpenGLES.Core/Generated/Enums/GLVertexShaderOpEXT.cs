// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.OpenGLES
{
	public enum GLVertexShaderOpEXT : uint
	{
		/// <summary>
		/// Specifies the index operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		IndexExt = unchecked((uint)0x8782),

		/// <summary>
		/// Specifies the negate operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		NegateExt = unchecked((uint)0x8783),

		/// <summary>
		/// Specifies the dot product operation for 3-component vectors in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		Dot3Ext = unchecked((uint)0x8784),

		/// <summary>
		/// Specifies the dot product operation for 4-component vectors in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		Dot4Ext = unchecked((uint)0x8785),

		/// <summary>
		/// Specifies the multiplication operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		MulExt = unchecked((uint)0x8786),

		/// <summary>
		/// Specifies the addition operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		AddExt = unchecked((uint)0x8787),

		/// <summary>
		/// Specifies the multiply-add operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		MaddExt = unchecked((uint)0x8788),

		/// <summary>
		/// Specifies the fractional part operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		FracExt = unchecked((uint)0x8789),

		/// <summary>
		/// Specifies the maximum operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		MaxExt = unchecked((uint)0x878A),

		/// <summary>
		/// Specifies the minimum operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		MinExt = unchecked((uint)0x878B),

		/// <summary>
		/// Specifies the set greater than or equal operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		SetGeExt = unchecked((uint)0x878C),

		/// <summary>
		/// Specifies the set less than operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		SetLtExt = unchecked((uint)0x878D),

		/// <summary>
		/// Specifies the clamp operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		ClampExt = unchecked((uint)0x878E),

		/// <summary>
		/// Specifies the floor operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		FloorExt = unchecked((uint)0x878F),

		/// <summary>
		/// Specifies the round operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		RoundExt = unchecked((uint)0x8790),

		/// <summary>
		/// Specifies the base 2 exponential operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		ExpBase2Ext = unchecked((uint)0x8791),

		/// <summary>
		/// Specifies the base 2 logarithm operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		LogBase2Ext = unchecked((uint)0x8792),

		/// <summary>
		/// Specifies the power operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		PowerExt = unchecked((uint)0x8793),

		/// <summary>
		/// Specifies the reciprocal operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		RecipExt = unchecked((uint)0x8794),

		/// <summary>
		/// Specifies the reciprocal square root operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		RecipSqrtExt = unchecked((uint)0x8795),

		/// <summary>
		/// Specifies the subtraction operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		SubExt = unchecked((uint)0x8796),

		/// <summary>
		/// Specifies the cross product operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		CrossProductExt = unchecked((uint)0x8797),

		/// <summary>
		/// Specifies the matrix multiplication operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		MultiplyMatrixExt = unchecked((uint)0x8798),

		/// <summary>
		/// Specifies the move operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		MovExt = unchecked((uint)0x8799),
	}
}
