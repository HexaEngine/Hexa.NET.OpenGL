// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.OpenGLES
{
	public enum GLEnum : int
	{
		/// <summary>
		/// Primitive type for points.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Points = 0x0000,

		/// <summary>
		/// Primitive type for lines.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Lines = 0x0001,

		/// <summary>
		/// Primitive type for a loop of lines.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		LineLoop = 0x0002,

		/// <summary>
		/// Primitive type for a strip of lines.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		LineStrip = 0x0003,

		/// <summary>
		/// Primitive type for triangles.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_tessellation_shader<br/>GL_EXT_tessellation_shader<br/>GL_OES_tessellation_shader</remarks>
		Triangles = 0x0004,

		/// <summary>
		/// Primitive type for a strip of triangles.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TriangleStrip = 0x0005,

		/// <summary>
		/// Primitive type for a fan of triangles.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TriangleFan = 0x0006,

		/// <summary>
		/// Primitive type for quadrilaterals.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_tessellation_shader</remarks>
		Quads = 0x0007,

		/// <summary>
		/// Primitive type for quadrilaterals, specific to EXT.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_tessellation_shader</remarks>
		QuadsExt = 0x0007,

		/// <summary>
		/// Primitive type for a strip of quadrilaterals.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		QuadStrip = 0x0008,

		/// <summary>
		/// Primitive type for polygons.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Polygon = 0x0009,

		/// <summary>
		/// Primitive type for lines with adjacency information.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		LinesAdjacency = 0x000A,

		/// <summary>
		/// Lines adjacency primitive type (ARB).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_geometry_shader4</remarks>
		LinesAdjacencyArb = 0x000A,

		/// <summary>
		/// Lines adjacency primitive type (EXT).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_geometry_shader4<br/>GL_NV_geometry_program4<br/>GL_EXT_geometry_shader</remarks>
		LinesAdjacencyExt = 0x000A,

		/// <summary>
		/// Line strip with adjacency information.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		LineStripAdjacency = 0x000B,

		/// <summary>
		/// Line strip adjacency primitive type (ARB).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_geometry_shader4</remarks>
		LineStripAdjacencyArb = 0x000B,

		/// <summary>
		/// Line strip adjacency primitive type (EXT).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_geometry_shader4<br/>GL_NV_geometry_program4<br/>GL_EXT_geometry_shader</remarks>
		LineStripAdjacencyExt = 0x000B,

		/// <summary>
		/// Triangles with adjacency information.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TrianglesAdjacency = 0x000C,

		/// <summary>
		/// Triangles adjacency primitive type (ARB).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_geometry_shader4</remarks>
		TrianglesAdjacencyArb = 0x000C,

		/// <summary>
		/// Triangles adjacency primitive type (EXT).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_geometry_shader4<br/>GL_NV_geometry_program4<br/>GL_EXT_geometry_shader</remarks>
		TrianglesAdjacencyExt = 0x000C,

		/// <summary>
		/// Triangle strip with adjacency information.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TriangleStripAdjacency = 0x000D,

		/// <summary>
		/// Triangle strip adjacency primitive type (ARB).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_geometry_shader4</remarks>
		TriangleStripAdjacencyArb = 0x000D,

		/// <summary>
		/// Triangle strip adjacency primitive type (EXT).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_geometry_shader4<br/>GL_NV_geometry_program4<br/>GL_EXT_geometry_shader</remarks>
		TriangleStripAdjacencyExt = 0x000D,

		/// <summary>
		/// Primitive type for patches.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_tessellation_shader<br/>GL_NV_gpu_shader5</remarks>
		Patches = 0x000E,

		/// <summary>
		/// Primitive type for patches, specific to EXT.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_tessellation_shader</remarks>
		PatchesExt = 0x000E,

		/// <summary>
		/// Accumulation buffer operation.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Accum = 0x0100,

		/// <summary>
		/// Load operation for accumulation buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Load = 0x0101,

		/// <summary>
		/// Return operation for accumulation buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Return = 0x0102,

		/// <summary>
		/// Multiply operation for accumulation buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Mult = 0x0103,

		/// <summary>
		/// Add operation for accumulation buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Add = 0x0104,

		/// <summary>
		/// Never passes the depth test.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Never = 0x0200,

		/// <summary>
		/// Passes if the value is less than the reference.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Less = 0x0201,

		/// <summary>
		/// Passes if the value is equal to the reference.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_tessellation_shader<br/>GL_EXT_tessellation_shader<br/>GL_OES_tessellation_shader</remarks>
		Equal = 0x0202,

		/// <summary>
		/// Passes if the value is less than or equal to the reference.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Lequal = 0x0203,

		/// <summary>
		/// Passes if the value is greater than the reference.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Greater = 0x0204,

		/// <summary>
		/// Passes if the value is not equal to the reference.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Notequal = 0x0205,

		/// <summary>
		/// Passes if the value is greater than or equal to the reference.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Gequal = 0x0206,

		/// <summary>
		/// Always passes the depth test.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Always = 0x0207,

		/// <summary>
		/// Source color for blending operations.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_EXT_draw_buffers_indexed<br/>GL_OES_draw_buffers_indexed</remarks>
		SrcColor = 0x0300,

		/// <summary>
		/// One minus the source color for blending operations.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_EXT_draw_buffers_indexed<br/>GL_OES_draw_buffers_indexed</remarks>
		OneMinusSrcColor = 0x0301,

		/// <summary>
		/// Source alpha for blending operations.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_EXT_draw_buffers_indexed<br/>GL_OES_draw_buffers_indexed</remarks>
		SrcAlpha = 0x0302,

		/// <summary>
		/// One minus the source alpha for blending operations.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_EXT_draw_buffers_indexed<br/>GL_OES_draw_buffers_indexed</remarks>
		OneMinusSrcAlpha = 0x0303,

		/// <summary>
		/// Destination alpha for blending operations.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_EXT_draw_buffers_indexed<br/>GL_OES_draw_buffers_indexed</remarks>
		DstAlpha = 0x0304,

		/// <summary>
		/// One minus the destination alpha for blending operations.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_EXT_draw_buffers_indexed<br/>GL_OES_draw_buffers_indexed</remarks>
		OneMinusDstAlpha = 0x0305,

		/// <summary>
		/// Destination color for blending operations.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_EXT_draw_buffers_indexed<br/>GL_OES_draw_buffers_indexed</remarks>
		DstColor = 0x0306,

		/// <summary>
		/// One minus the destination color for blending operations.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_EXT_draw_buffers_indexed<br/>GL_OES_draw_buffers_indexed</remarks>
		OneMinusDstColor = 0x0307,

		/// <summary>
		/// Source alpha saturate for blending operations.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_EXT_draw_buffers_indexed<br/>GL_OES_draw_buffers_indexed</remarks>
		SrcAlphaSaturate = 0x0308,

		/// <summary>
		/// Front left color buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		FrontLeft = 0x0400,

		/// <summary>
		/// Front right color buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		FrontRight = 0x0401,

		/// <summary>
		/// Back left color buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		BackLeft = 0x0402,

		/// <summary>
		/// Back right color buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		BackRight = 0x0403,

		/// <summary>
		/// Front color buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Front = 0x0404,

		/// <summary>
		/// Back color buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_ES3_1_compatibility</remarks>
		Back = 0x0405,

		/// <summary>
		/// Left color buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Left = 0x0406,

		/// <summary>
		/// Right color buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Right = 0x0407,

		/// <summary>
		/// Both front and back color buffers.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		FrontAndBack = 0x0408,

		/// <summary>
		/// Auxiliary color buffer 0.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Aux0 = 0x0409,

		/// <summary>
		/// Auxiliary color buffer 1.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Aux1 = 0x040A,

		/// <summary>
		/// Auxiliary color buffer 2.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Aux2 = 0x040B,

		/// <summary>
		/// Auxiliary color buffer 3.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Aux3 = 0x040C,

		/// <summary>
		/// Indicates an invalid enum value.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		InvalidEnum = 0x0500,

		/// <summary>
		/// Indicates an invalid value.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		InvalidValue = 0x0501,

		/// <summary>
		/// Indicates an invalid operation.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		InvalidOperation = 0x0502,

		/// <summary>
		/// Indicates a stack overflow error.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_KHR_debug</remarks>
		StackOverflow = 0x0503,

		/// <summary>
		/// Indicates a stack underflow error.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_KHR_debug</remarks>
		StackUnderflow = 0x0504,

		/// <summary>
		/// Indicates an out of memory error.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		OutOfMemory = 0x0505,

		/// <summary>
		/// Indicates an invalid framebuffer operation.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		InvalidFramebufferOperation = 0x0506,

		/// <summary>
		/// Invalid framebuffer operation, specific to EXT.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_framebuffer_object</remarks>
		InvalidFramebufferOperationExt = 0x0506,

		/// <summary>
		/// Invalid framebuffer operation, specific to OES.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_framebuffer_object</remarks>
		InvalidFramebufferOperationOes = 0x0506,

		/// <summary>
		/// Indicates 2D rendering.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Gl2D = 0x0600,

		/// <summary>
		/// Indicates 3D rendering.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Gl3D = 0x0601,

		/// <summary>
		/// Indicates 3D color rendering.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Gl3DColor = 0x0602,

		/// <summary>
		/// Indicates 3D color texture rendering.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Gl3DColorTexture = 0x0603,

		/// <summary>
		/// Indicates 4D color texture rendering.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Gl4DColorTexture = 0x0604,

		/// <summary>
		/// Token for pass-through operation.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PassThroughToken = 0x0700,

		/// <summary>
		/// Token for point operation.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PointToken = 0x0701,

		/// <summary>
		/// Token for line operation.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		LineToken = 0x0702,

		/// <summary>
		/// Token for polygon operation.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PolygonToken = 0x0703,

		/// <summary>
		/// Token for bitmap operation.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		BitmapToken = 0x0704,

		/// <summary>
		/// Token for drawing pixels.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		DrawPixelToken = 0x0705,

		/// <summary>
		/// Token for copying pixels.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		CopyPixelToken = 0x0706,

		/// <summary>
		/// Token for resetting line operation.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		LineResetToken = 0x0707,

		/// <summary>
		/// Exponential function.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Exp = 0x0800,

		/// <summary>
		/// Exponential function base 2.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Exp2 = 0x0801,

		/// <summary>
		/// Indicates clockwise winding order.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_tessellation_shader<br/>GL_EXT_tessellation_shader<br/>GL_OES_tessellation_shader</remarks>
		Cw = 0x0900,

		/// <summary>
		/// Indicates counter-clockwise winding order.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_tessellation_shader<br/>GL_EXT_tessellation_shader<br/>GL_OES_tessellation_shader</remarks>
		Ccw = 0x0901,

		/// <summary>
		/// Coefficient for curve operations.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Coeff = 0x0A00,

		/// <summary>
		/// Order of the curve.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Order = 0x0A01,

		/// <summary>
		/// Domain for curve operations.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Domain = 0x0A02,

		/// <summary>
		/// Current color used for drawing.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		CurrentColor = 0x0B00,

		/// <summary>
		/// Current color index used for indexed colors.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		CurrentIndex = 0x0B01,

		/// <summary>
		/// Current normal vector.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		CurrentNormal = 0x0B02,

		/// <summary>
		/// Current texture coordinates.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		CurrentTextureCoords = 0x0B03,

		/// <summary>
		/// Current color for raster operations.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		CurrentRasterColor = 0x0B04,

		/// <summary>
		/// Current color index for raster operations.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		CurrentRasterIndex = 0x0B05,

		/// <summary>
		/// Current texture coordinates for raster operations.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		CurrentRasterTextureCoords = 0x0B06,

		/// <summary>
		/// Current position for raster operations.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		CurrentRasterPosition = 0x0B07,

		/// <summary>
		/// Indicates if the current raster position is valid.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		CurrentRasterPositionValid = 0x0B08,

		/// <summary>
		/// Current distance for raster operations.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		CurrentRasterDistance = 0x0B09,

		/// <summary>
		/// Indicates point smoothing is enabled.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PointSmooth = 0x0B10,

		/// <summary>
		/// Current size of points.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PointSize = 0x0B11,

		/// <summary>
		/// Range of valid point sizes.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PointSizeRange = 0x0B12,

		/// <summary>
		/// Range of smooth point sizes.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		SmoothPointSizeRange = 0x0B12,

		/// <summary>
		/// Granularity of point sizes.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PointSizeGranularity = 0x0B13,

		/// <summary>
		/// Granularity of smooth point sizes.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		SmoothPointSizeGranularity = 0x0B13,

		/// <summary>
		/// Indicates line smoothing is enabled.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		LineSmooth = 0x0B20,

		/// <summary>
		/// Current width of lines.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		LineWidth = 0x0B21,

		/// <summary>
		/// Range of valid line widths.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		LineWidthRange = 0x0B22,

		/// <summary>
		/// Range of smooth line widths.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		SmoothLineWidthRange = 0x0B22,

		/// <summary>
		/// Granularity of line widths.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		LineWidthGranularity = 0x0B23,

		/// <summary>
		/// Granularity of smooth line widths.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		SmoothLineWidthGranularity = 0x0B23,

		/// <summary>
		/// Indicates line stipple pattern is enabled.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		LineStipple = 0x0B24,

		/// <summary>
		/// Current line stipple pattern.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		LineStipplePattern = 0x0B25,

		/// <summary>
		/// Repeat factor for line stipple pattern.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		LineStippleRepeat = 0x0B26,

		/// <summary>
		/// Indicates the current display list mode.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ListMode = 0x0B30,

		/// <summary>
		/// Maximum allowed nesting of display lists.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		MaxListNesting = 0x0B31,

		/// <summary>
		/// Base index for display lists.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ListBase = 0x0B32,

		/// <summary>
		/// Current index for display lists.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ListIndex = 0x0B33,

		/// <summary>
		/// Specifies the rendering mode for polygons.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PolygonMode = 0x0B40,

		/// <summary>
		/// Enables or disables polygon smoothing.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PolygonSmooth = 0x0B41,

		/// <summary>
		/// Enables or disables polygon stippling.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PolygonStipple = 0x0B42,

		/// <summary>
		/// Indicates if edge vertices are to be rendered.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		EdgeFlag = 0x0B43,

		/// <summary>
		/// Enables or disables face culling.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		CullFace = 0x0B44,

		/// <summary>
		/// Specifies the culling mode (front, back, or both).
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		CullFaceMode = 0x0B45,

		/// <summary>
		/// Specifies the front face winding order.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		FrontFace = 0x0B46,

		/// <summary>
		/// Enables or disables lighting calculations.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Lighting = 0x0B50,

		/// <summary>
		/// Specifies whether local viewer lighting is enabled.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		LightModelLocalViewer = 0x0B51,

		/// <summary>
		/// Specifies if two-sided lighting is enabled.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		LightModelTwoSide = 0x0B52,

		/// <summary>
		/// Specifies the ambient light color.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		LightModelAmbient = 0x0B53,

		/// <summary>
		/// Specifies the shading model (flat or smooth).
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ShadeModel = 0x0B54,

		/// <summary>
		/// Specifies which face to apply color material to.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ColorMaterialFace = 0x0B55,

		/// <summary>
		/// Specifies which material property is affected by color material.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ColorMaterialParameter = 0x0B56,

		/// <summary>
		/// Enables or disables color material.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ColorMaterial = 0x0B57,

		/// <summary>
		/// Enables or disables fog effects.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_NV_register_combiners</remarks>
		Fog = 0x0B60,

		/// <summary>
		/// Specifies the fog index value.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		FogIndex = 0x0B61,

		/// <summary>
		/// Specifies the density of the fog.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		FogDensity = 0x0B62,

		/// <summary>
		/// Specifies the starting distance for fog effects.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		FogStart = 0x0B63,

		/// <summary>
		/// Specifies the ending distance for fog effects.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		FogEnd = 0x0B64,

		/// <summary>
		/// Specifies the fog mode (exp, exp2, linear).
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		FogMode = 0x0B65,

		/// <summary>
		/// Specifies the color of the fog.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		FogColor = 0x0B66,

		/// <summary>
		/// Specifies the mapping of depth values to normalized device coordinates.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_viewport_array<br/>GL_NV_viewport_array<br/>GL_OES_viewport_array</remarks>
		DepthRange = 0x0B70,

		/// <summary>
		/// Enables or disables depth testing.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		DepthTest = 0x0B71,

		/// <summary>
		/// Enables or disables writing to the depth buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		DepthWritemask = 0x0B72,

		/// <summary>
		/// Specifies the clear value for the depth buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		DepthClearValue = 0x0B73,

		/// <summary>
		/// Specifies the function used for depth comparisons.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		DepthFunc = 0x0B74,

		/// <summary>
		/// Specifies the clear value for the accumulation buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		AccumClearValue = 0x0B80,

		/// <summary>
		/// Enables or disables stencil testing.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		StencilTest = 0x0B90,

		/// <summary>
		/// Specifies the clear value for the stencil buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		StencilClearValue = 0x0B91,

		/// <summary>
		/// Specifies the function used for stencil testing.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		StencilFunc = 0x0B92,

		/// <summary>
		/// Specifies the mask used for stencil values.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		StencilValueMask = 0x0B93,

		/// <summary>
		/// Specifies the action to take on stencil test failure.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		StencilFail = 0x0B94,

		/// <summary>
		/// Specifies action on stencil test success but depth test failure.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		StencilPassDepthFail = 0x0B95,

		/// <summary>
		/// Specifies action on stencil test and depth test success.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		StencilPassDepthPass = 0x0B96,

		/// <summary>
		/// Specifies the reference value for stencil testing.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		StencilRef = 0x0B97,

		/// <summary>
		/// Specifies the mask for writing stencil values.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		StencilWritemask = 0x0B98,

		/// <summary>
		/// Specifies the current matrix mode (modelview, projection, etc.).
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		MatrixMode = 0x0BA0,

		/// <summary>
		/// Enables or disables normalization of normals.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Normalize = 0x0BA1,

		/// <summary>
		/// Specifies the viewport dimensions.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_viewport_array<br/>GL_NV_viewport_array<br/>GL_OES_viewport_array</remarks>
		Viewport = 0x0BA2,

		/// <summary>
		/// Current depth of the modelview matrix stack.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ModelviewStackDepth = 0x0BA3,

		/// <summary>
		/// Modelview stack depth for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_weighting</remarks>
		Modelview0StackDepthExt = 0x0BA3,

		/// <summary>
		/// Current depth of the projection matrix stack.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ProjectionStackDepth = 0x0BA4,

		/// <summary>
		/// Current depth of the texture matrix stack.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureStackDepth = 0x0BA5,

		/// <summary>
		/// Current modelview matrix.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ModelviewMatrix = 0x0BA6,

		/// <summary>
		/// Modelview matrix for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_weighting</remarks>
		Modelview0MatrixExt = 0x0BA6,

		/// <summary>
		/// Current projection matrix.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ProjectionMatrix = 0x0BA7,

		/// <summary>
		/// Current texture matrix.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureMatrix = 0x0BA8,

		/// <summary>
		/// Current depth of the attribute stack.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		AttribStackDepth = 0x0BB0,

		/// <summary>
		/// Current depth of the client attribute stack.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ClientAttribStackDepth = 0x0BB1,

		/// <summary>
		/// Enables or disables alpha testing.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		AlphaTest = 0x0BC0,

		/// <summary>
		/// Alpha testing, specific to QCOM extensions.
		/// </summary>
		/// <remarks></remarks>
		AlphaTestQcom = 0x0BC0,

		/// <summary>
		/// Specifies the function for alpha testing.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		AlphaTestFunc = 0x0BC1,

		/// <summary>
		/// Alpha test function for QCOM extensions.
		/// </summary>
		/// <remarks></remarks>
		AlphaTestFuncQcom = 0x0BC1,

		/// <summary>
		/// Specifies the reference value for alpha testing.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		AlphaTestRef = 0x0BC2,

		/// <summary>
		/// Reference value for alpha testing, specific to QCOM.
		/// </summary>
		/// <remarks></remarks>
		AlphaTestRefQcom = 0x0BC2,

		/// <summary>
		/// Enables or disables dithering.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Dither = 0x0BD0,

		/// <summary>
		/// Specifies the destination factor for blending.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		BlendDst = 0x0BE0,

		/// <summary>
		/// Specifies the source factor for blending.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		BlendSrc = 0x0BE1,

		/// <summary>
		/// Enables or disables blending.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_EXT_draw_buffers_indexed<br/>GL_OES_draw_buffers_indexed</remarks>
		Blend = 0x0BE2,

		/// <summary>
		/// Specifies the current logical operation mode.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		LogicOpMode = 0x0BF0,

		/// <summary>
		/// Enables or disables index logic operations.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		IndexLogicOp = 0x0BF1,

		/// <summary>
		/// Specifies the logical operation to perform.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		LogicOp = 0x0BF1,

		/// <summary>
		/// Enables or disables color logic operations.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ColorLogicOp = 0x0BF2,

		/// <summary>
		/// Number of auxiliary color buffers available.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		AuxBuffers = 0x0C00,

		/// <summary>
		/// Specifies the current draw buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		DrawBuffer = 0x0C01,

		/// <summary>
		/// Specifies the current draw buffer, specific to EXT.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_multiview_draw_buffers</remarks>
		DrawBufferExt = 0x0C01,

		/// <summary>
		/// Specifies the buffer into which pixel data is read.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ReadBuffer = 0x0C02,

		/// <summary>
		/// Specifies the read buffer, specific to EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_multiview_draw_buffers</remarks>
		ReadBufferExt = 0x0C02,

		/// <summary>
		/// Specifies the read buffer, specific to NV extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_read_buffer</remarks>
		ReadBufferNv = 0x0C02,

		/// <summary>
		/// Specifies the rectangle that bounds the scissor test.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_viewport_array<br/>GL_NV_viewport_array<br/>GL_OES_viewport_array</remarks>
		ScissorBox = 0x0C10,

		/// <summary>
		/// Enables or disables the scissor test.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_viewport_array<br/>GL_NV_viewport_array<br/>GL_OES_viewport_array</remarks>
		ScissorTest = 0x0C11,

		/// <summary>
		/// Specifies the clear value for the index buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		IndexClearValue = 0x0C20,

		/// <summary>
		/// Specifies the write mask for the index buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		IndexWritemask = 0x0C21,

		/// <summary>
		/// Specifies the clear value for the color buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ColorClearValue = 0x0C22,

		/// <summary>
		/// Specifies the write mask for the color buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_EXT_draw_buffers_indexed<br/>GL_OES_draw_buffers_indexed</remarks>
		ColorWritemask = 0x0C23,

		/// <summary>
		/// Specifies whether to use color index or RGBA mode.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		IndexMode = 0x0C30,

		/// <summary>
		/// Specifies that RGBA mode is used.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		RgbaMode = 0x0C31,

		/// <summary>
		/// Enables or disables double buffering.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Doublebuffer = 0x0C32,

		/// <summary>
		/// Enables or disables stereo buffering.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Stereo = 0x0C33,

		/// <summary>
		/// Specifies the rendering mode (e.g., selection or rendering).
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		RenderMode = 0x0C40,

		/// <summary>
		/// Hints to the OpenGL implementation for perspective correction.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PerspectiveCorrectionHint = 0x0C50,

		/// <summary>
		/// Hints to the OpenGL implementation for point smoothing.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PointSmoothHint = 0x0C51,

		/// <summary>
		/// Hints to the OpenGL implementation for line smoothing.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		LineSmoothHint = 0x0C52,

		/// <summary>
		/// Hints to the OpenGL implementation for polygon smoothing.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PolygonSmoothHint = 0x0C53,

		/// <summary>
		/// Hints to the OpenGL implementation for fog calculations.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		FogHint = 0x0C54,

		/// <summary>
		/// Enables or disables texture coordinate generation for the S coordinate.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureGenS = 0x0C60,

		/// <summary>
		/// Enables or disables texture coordinate generation for the T coordinate.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureGenT = 0x0C61,

		/// <summary>
		/// Enables or disables texture coordinate generation for the R coordinate.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureGenR = 0x0C62,

		/// <summary>
		/// Enables or disables texture coordinate generation for the Q coordinate.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureGenQ = 0x0C63,

		/// <summary>
		/// Defines a pixel map for mapping index values to index values.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PixelMapIToI = 0x0C70,

		/// <summary>
		/// Defines a pixel map for mapping color index values to color index values.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PixelMapSToS = 0x0C71,

		/// <summary>
		/// Defines a pixel map for mapping index values to red component values.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PixelMapIToR = 0x0C72,

		/// <summary>
		/// Defines a pixel map for mapping index values to green component values.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PixelMapIToG = 0x0C73,

		/// <summary>
		/// Defines a pixel map for mapping index values to blue component values.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PixelMapIToB = 0x0C74,

		/// <summary>
		/// Defines a pixel map for mapping index values to alpha component values.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PixelMapIToA = 0x0C75,

		/// <summary>
		/// Defines a pixel map for mapping red component values to red component values.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PixelMapRToR = 0x0C76,

		/// <summary>
		/// Defines a pixel map for mapping green component values to green component values.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PixelMapGToG = 0x0C77,

		/// <summary>
		/// Defines a pixel map for mapping blue component values to blue component values.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PixelMapBToB = 0x0C78,

		/// <summary>
		/// Defines a pixel map for mapping alpha component values to alpha component values.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PixelMapAToA = 0x0C79,

		/// <summary>
		/// Specifies the size of the pixel map for index to index mapping.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PixelMapIToISize = 0x0CB0,

		/// <summary>
		/// Specifies the size of the pixel map for color index to color index mapping.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PixelMapSToSSize = 0x0CB1,

		/// <summary>
		/// Specifies the size of the pixel map for index to red component mapping.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PixelMapIToRSize = 0x0CB2,

		/// <summary>
		/// Specifies the size of the pixel map for index to green component mapping.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PixelMapIToGSize = 0x0CB3,

		/// <summary>
		/// Specifies the size of the pixel map for index to blue component mapping.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PixelMapIToBSize = 0x0CB4,

		/// <summary>
		/// Specifies the size of the pixel map for index to alpha component mapping.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PixelMapIToASize = 0x0CB5,

		/// <summary>
		/// Specifies the size of the pixel map for red to red mapping.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PixelMapRToRSize = 0x0CB6,

		/// <summary>
		/// Specifies the size of the pixel map for green to green mapping.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PixelMapGToGSize = 0x0CB7,

		/// <summary>
		/// Specifies the size of the pixel map for blue to blue mapping.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PixelMapBToBSize = 0x0CB8,

		/// <summary>
		/// Specifies the size of the pixel map for alpha to alpha mapping.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PixelMapAToASize = 0x0CB9,

		/// <summary>
		/// Enables or disables swapping of bytes when unpacking pixel data.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		UnpackSwapBytes = 0x0CF0,

		/// <summary>
		/// Specifies whether the least significant bit is unpacked first.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		UnpackLsbFirst = 0x0CF1,

		/// <summary>
		/// Specifies the number of pixels in a row when unpacking.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		UnpackRowLength = 0x0CF2,

		/// <summary>
		/// Specifies the row length for unpacking, specific to EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_unpack_subimage</remarks>
		UnpackRowLengthExt = 0x0CF2,

		/// <summary>
		/// Specifies the number of rows to skip when unpacking.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		UnpackSkipRows = 0x0CF3,

		/// <summary>
		/// Specifies the number of rows to skip, specific to EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_unpack_subimage</remarks>
		UnpackSkipRowsExt = 0x0CF3,

		/// <summary>
		/// Specifies the number of pixels to skip when unpacking.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		UnpackSkipPixels = 0x0CF4,

		/// <summary>
		/// Specifies the number of pixels to skip, specific to EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_unpack_subimage</remarks>
		UnpackSkipPixelsExt = 0x0CF4,

		/// <summary>
		/// Specifies the alignment of pixel data in memory when unpacking.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		UnpackAlignment = 0x0CF5,

		/// <summary>
		/// Enables or disables swapping of bytes when packing pixel data.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PackSwapBytes = 0x0D00,

		/// <summary>
		/// Specifies whether the least significant bit is packed first.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PackLsbFirst = 0x0D01,

		/// <summary>
		/// Specifies the number of pixels in a row when packing.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PackRowLength = 0x0D02,

		/// <summary>
		/// Specifies the row length for packing, specific to NV extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_pack_subimage</remarks>
		PackRowLengthNv = 0x0D02,

		/// <summary>
		/// Specifies the number of rows to skip when packing.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PackSkipRows = 0x0D03,

		/// <summary>
		/// Specifies the number of rows to skip, specific to NV extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_pack_subimage</remarks>
		PackSkipRowsNv = 0x0D03,

		/// <summary>
		/// Specifies the number of pixels to skip when packing.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PackSkipPixels = 0x0D04,

		/// <summary>
		/// Specifies the number of pixels to skip, specific to NV extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_pack_subimage</remarks>
		PackSkipPixelsNv = 0x0D04,

		/// <summary>
		/// Specifies the alignment of pixel data in memory when packing.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PackAlignment = 0x0D05,

		/// <summary>
		/// Enables or disables color mapping.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		MapColor = 0x0D10,

		/// <summary>
		/// Enables or disables stencil mapping.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		MapStencil = 0x0D11,

		/// <summary>
		/// Specifies a shift value for index values.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		IndexShift = 0x0D12,

		/// <summary>
		/// Specifies an offset for index values.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		IndexOffset = 0x0D13,

		/// <summary>
		/// Specifies a scale factor for red component values.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		RedScale = 0x0D14,

		/// <summary>
		/// Specifies a bias for red component values.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		RedBias = 0x0D15,

		/// <summary>
		/// Specifies the zoom factor in the X direction.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ZoomX = 0x0D16,

		/// <summary>
		/// Specifies the zoom factor in the Y direction.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ZoomY = 0x0D17,

		/// <summary>
		/// Specifies a scale factor for green component values.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		GreenScale = 0x0D18,

		/// <summary>
		/// Specifies a bias for green component values.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		GreenBias = 0x0D19,

		/// <summary>
		/// Specifies a scale factor for blue component values.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		BlueScale = 0x0D1A,

		/// <summary>
		/// Specifies a bias for blue component values.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		BlueBias = 0x0D1B,

		/// <summary>
		/// Specifies a scale factor for alpha component values.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		AlphaScale = 0x0D1C,

		/// <summary>
		/// Specifies a bias for alpha component values.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		AlphaBias = 0x0D1D,

		/// <summary>
		/// Specifies a scale factor for depth values.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		DepthScale = 0x0D1E,

		/// <summary>
		/// Specifies a bias factor for depth values.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		DepthBias = 0x0D1F,

		/// <summary>
		/// Specifies the maximum order of evaluation for the evaluation functions.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		MaxEvalOrder = 0x0D30,

		/// <summary>
		/// Specifies the maximum number of light sources supported.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		MaxLights = 0x0D31,

		/// <summary>
		/// Specifies the maximum number of clipping planes supported.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		MaxClipPlanes = 0x0D32,

		/// <summary>
		/// Specifies the maximum number of clip distances.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		MaxClipDistances = 0x0D32,

		/// <summary>
		/// Specifies the maximum dimensions of a texture.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		MaxTextureSize = 0x0D33,

		/// <summary>
		/// Specifies the maximum size of the pixel map table.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		MaxPixelMapTable = 0x0D34,

		/// <summary>
		/// Specifies the maximum depth of the attribute stack.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		MaxAttribStackDepth = 0x0D35,

		/// <summary>
		/// Specifies the maximum depth of the modelview matrix stack.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		MaxModelviewStackDepth = 0x0D36,

		/// <summary>
		/// Specifies the maximum depth of the name stack.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		MaxNameStackDepth = 0x0D37,

		/// <summary>
		/// Specifies the maximum depth of the projection matrix stack.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		MaxProjectionStackDepth = 0x0D38,

		/// <summary>
		/// Specifies the maximum depth of the texture matrix stack.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		MaxTextureStackDepth = 0x0D39,

		/// <summary>
		/// Specifies the maximum dimensions of the viewport.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		MaxViewportDims = 0x0D3A,

		/// <summary>
		/// Specifies the maximum depth of the client attribute stack.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		MaxClientAttribStackDepth = 0x0D3B,

		/// <summary>
		/// Specifies the number of bits used for subpixel precision.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		SubpixelBits = 0x0D50,

		/// <summary>
		/// Specifies the number of bits used for index values.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		IndexBits = 0x0D51,

		/// <summary>
		/// Specifies the number of bits used for the red component.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		RedBits = 0x0D52,

		/// <summary>
		/// Specifies the number of bits used for the green component.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		GreenBits = 0x0D53,

		/// <summary>
		/// Specifies the number of bits used for the blue component.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		BlueBits = 0x0D54,

		/// <summary>
		/// Specifies the number of bits used for the alpha component.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		AlphaBits = 0x0D55,

		/// <summary>
		/// Specifies the number of bits used for depth buffering.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		DepthBits = 0x0D56,

		/// <summary>
		/// Specifies the number of bits used for stencil buffering.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		StencilBits = 0x0D57,

		/// <summary>
		/// Specifies the number of bits used for the red component in the accumulation buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		AccumRedBits = 0x0D58,

		/// <summary>
		/// Specifies the number of bits used for the green component in the accumulation buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		AccumGreenBits = 0x0D59,

		/// <summary>
		/// Specifies the number of bits used for the blue component in the accumulation buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		AccumBlueBits = 0x0D5A,

		/// <summary>
		/// Specifies the number of bits used for the alpha component in the accumulation buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		AccumAlphaBits = 0x0D5B,

		/// <summary>
		/// Specifies the current depth of the name stack.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		NameStackDepth = 0x0D70,

		/// <summary>
		/// Enables or disables automatic normal generation.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		AutoNormal = 0x0D80,

		/// <summary>
		/// Specifies a one-dimensional color map.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Map1Color4 = 0x0D90,

		/// <summary>
		/// Specifies a one-dimensional index map.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Map1Index = 0x0D91,

		/// <summary>
		/// Specifies a one-dimensional normal map.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Map1Normal = 0x0D92,

		/// <summary>
		/// Specifies the first texture coordinate in a one-dimensional map.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Map1TextureCoord1 = 0x0D93,

		/// <summary>
		/// Specifies the second texture coordinate in a one-dimensional map.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Map1TextureCoord2 = 0x0D94,

		/// <summary>
		/// Specifies the third texture coordinate in a one-dimensional map.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Map1TextureCoord3 = 0x0D95,

		/// <summary>
		/// Specifies the fourth texture coordinate in a one-dimensional map.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Map1TextureCoord4 = 0x0D96,

		/// <summary>
		/// Specifies a three-dimensional vertex map.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Map1Vertex3 = 0x0D97,

		/// <summary>
		/// Specifies a four-dimensional vertex map.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Map1Vertex4 = 0x0D98,

		/// <summary>
		/// Specifies a two-dimensional color map.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Map2Color4 = 0x0DB0,

		/// <summary>
		/// Specifies a two-dimensional index map.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Map2Index = 0x0DB1,

		/// <summary>
		/// Specifies a two-dimensional normal map.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Map2Normal = 0x0DB2,

		/// <summary>
		/// Specifies the first texture coordinate in a two-dimensional map.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Map2TextureCoord1 = 0x0DB3,

		/// <summary>
		/// Specifies the second texture coordinate in a two-dimensional map.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Map2TextureCoord2 = 0x0DB4,

		/// <summary>
		/// Specifies the third texture coordinate in a two-dimensional map.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Map2TextureCoord3 = 0x0DB5,

		/// <summary>
		/// Specifies the fourth texture coordinate in a two-dimensional map.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Map2TextureCoord4 = 0x0DB6,

		/// <summary>
		/// Specifies a three-dimensional vertex map for two-dimensional evaluation.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Map2Vertex3 = 0x0DB7,

		/// <summary>
		/// Specifies a four-dimensional vertex map for two-dimensional evaluation.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Map2Vertex4 = 0x0DB8,

		/// <summary>
		/// Specifies the domain of a one-dimensional grid.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Map1GridDomain = 0x0DD0,

		/// <summary>
		/// Specifies the number of segments in a one-dimensional grid.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Map1GridSegments = 0x0DD1,

		/// <summary>
		/// Specifies the domain of a two-dimensional grid.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Map2GridDomain = 0x0DD2,

		/// <summary>
		/// Specifies the number of segments in a two-dimensional grid.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Map2GridSegments = 0x0DD3,

		/// <summary>
		/// Specifies a one-dimensional texture.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		Texture1D = 0x0DE0,

		/// <summary>
		/// Specifies a two-dimensional texture.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2<br/>GL_EXT_sparse_texture</remarks>
		Texture2D = 0x0DE1,

		/// <summary>
		/// Specifies the pointer to the feedback buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		FeedbackBufferPointer = 0x0DF0,

		/// <summary>
		/// Specifies the size of the feedback buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		FeedbackBufferSize = 0x0DF1,

		/// <summary>
		/// Specifies the type of the feedback buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		FeedbackBufferType = 0x0DF2,

		/// <summary>
		/// Specifies the pointer to the selection buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		SelectionBufferPointer = 0x0DF3,

		/// <summary>
		/// Specifies the size of the selection buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		SelectionBufferSize = 0x0DF4,

		/// <summary>
		/// Specifies the width of the texture.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureWidth = 0x1000,

		/// <summary>
		/// Specifies the height of the texture.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureHeight = 0x1001,

		/// <summary>
		/// Specifies the internal format of the texture.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureInternalFormat = 0x1003,

		/// <summary>
		/// Specifies the number of components in the texture.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureComponents = 0x1003,

		/// <summary>
		/// Specifies the border color of the texture.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureBorderColor = 0x1004,

		/// <summary>
		/// Specifies the border color for NV extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_texture_border_clamp</remarks>
		TextureBorderColorNv = 0x1004,

		/// <summary>
		/// Specifies the width of the texture border.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureBorder = 0x1005,

		/// <summary>
		/// Specifies that the implementation can ignore this parameter.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		DontCare = 0x1100,

		/// <summary>
		/// Specifies that the fastest performance option is desired.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Fastest = 0x1101,

		/// <summary>
		/// Specifies that the nicest quality option is desired.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Nicest = 0x1102,

		/// <summary>
		/// Specifies the ambient light color.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Ambient = 0x1200,

		/// <summary>
		/// Specifies the diffuse light color.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Diffuse = 0x1201,

		/// <summary>
		/// Specifies the specular light color.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Specular = 0x1202,

		/// <summary>
		/// Specifies the position of the light source.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Position = 0x1203,

		/// <summary>
		/// Specifies the direction of the spotlight.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		SpotDirection = 0x1204,

		/// <summary>
		/// Specifies the exponent for the spotlight attenuation.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		SpotExponent = 0x1205,

		/// <summary>
		/// Specifies the cutoff angle for the spotlight.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		SpotCutoff = 0x1206,

		/// <summary>
		/// Specifies the constant attenuation factor for lights.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ConstantAttenuation = 0x1207,

		/// <summary>
		/// Specifies the linear attenuation factor for lights.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		LinearAttenuation = 0x1208,

		/// <summary>
		/// Specifies the quadratic attenuation factor for lights.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		QuadraticAttenuation = 0x1209,

		/// <summary>
		/// Specifies that the display list is to be compiled.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Compile = 0x1300,

		/// <summary>
		/// Specifies that the display list is to be compiled and executed.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		CompileAndExecute = 0x1301,

		/// <summary>
		/// Specifies a signed byte data type.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_EXT_render_snorm<br/>GL_OES_byte_coordinates</remarks>
		Byte = 0x1400,

		/// <summary>
		/// Specifies an unsigned byte data type.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		UnsignedByte = 0x1401,

		/// <summary>
		/// Specifies a signed short data type.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_EXT_render_snorm</remarks>
		Short = 0x1402,

		/// <summary>
		/// Specifies an unsigned short data type.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ANGLE_depth_texture<br/>GL_OES_depth_texture</remarks>
		UnsignedShort = 0x1403,

		/// <summary>
		/// Specifies a signed integer data type.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Int = 0x1404,

		/// <summary>
		/// Specifies an unsigned integer data type.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ANGLE_depth_texture<br/>GL_OES_depth_texture<br/>GL_OES_element_index_uint</remarks>
		UnsignedInt = 0x1405,

		/// <summary>
		/// Specifies a floating-point data type.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_vertex_shader<br/>GL_OES_texture_float</remarks>
		Float = 0x1406,

		/// <summary>
		/// Specifies a data type that uses 2 bytes.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Gl2Bytes = 0x1407,

		/// <summary>
		/// Specifies a data type that uses 3 bytes.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Gl3Bytes = 0x1408,

		/// <summary>
		/// Specifies a data type that uses 4 bytes.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Gl4Bytes = 0x1409,

		/// <summary>
		/// Specifies a double-precision floating-point data type.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_EXT_vertex_attrib_64bit<br/>GL_ARB_gpu_shader_fp64</remarks>
		Double = 0x140A,

		/// <summary>
		/// Specifies a double-precision data type for EXT extensions.
		/// </summary>
		/// <remarks></remarks>
		DoubleExt = 0x140A,

		/// <summary>
		/// Specifies a half-precision floating-point data type.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_half_float_vertex</remarks>
		HalfFloat = 0x140B,

		/// <summary>
		/// Specifies a half-precision data type for ARB extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_half_float_pixel</remarks>
		HalfFloatArb = 0x140B,

		/// <summary>
		/// Specifies a half-precision data type for NV extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_half_float</remarks>
		HalfFloatNv = 0x140B,

		/// <summary>
		/// Specifies a half-precision data type for Apple extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_APPLE_float_pixels</remarks>
		HalfApple = 0x140B,

		/// <summary>
		/// Specifies a fixed-point data type.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_ES2_compatibility</remarks>
		Fixed = 0x140C,

		/// <summary>
		/// Specifies a 64-bit signed integer for ARB extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_gpu_shader_int64</remarks>
		Int64Arb = 0x140E,

		/// <summary>
		/// Specifies a 64-bit signed integer for NV extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_gpu_shader5<br/>GL_NV_vertex_attrib_integer_64bit<br/>GL_AMD_gpu_shader_int64</remarks>
		Int64Nv = 0x140E,

		/// <summary>
		/// Specifies a 64-bit unsigned integer for ARB extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_bindless_texture<br/>GL_ARB_gpu_shader_int64</remarks>
		UnsignedInt64Arb = 0x140F,

		/// <summary>
		/// Specifies a 64-bit unsigned integer for NV extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_gpu_shader5<br/>GL_NV_vertex_attrib_integer_64bit<br/>GL_AMD_gpu_shader_int64</remarks>
		UnsignedInt64Nv = 0x140F,

		/// <summary>
		/// Specifies a clear operation for buffers.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Clear = 0x1500,

		/// <summary>
		/// Specifies a logical AND operation.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		And = 0x1501,

		/// <summary>
		/// Specifies a logical AND operation with reverse.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		AndReverse = 0x1502,

		/// <summary>
		/// Specifies a copy operation for buffers.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Copy = 0x1503,

		/// <summary>
		/// Specifies a logical AND operation followed by inversion.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		AndInverted = 0x1504,

		/// <summary>
		/// Specifies a no-operation, effectively does nothing.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Noop = 0x1505,

		/// <summary>
		/// Specifies a logical XOR operation.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Xor = 0x1506,

		/// <summary>
		/// Specifies a logical OR operation.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Or = 0x1507,

		/// <summary>
		/// Specifies a logical NOR operation.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Nor = 0x1508,

		/// <summary>
		/// Specifies a logical equivalence operation.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Equiv = 0x1509,

		/// <summary>
		/// Specifies a logical inversion operation.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_NV_blend_equation_advanced</remarks>
		Invert = 0x150A,

		/// <summary>
		/// Specifies a logical OR operation with reverse.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		OrReverse = 0x150B,

		/// <summary>
		/// Specifies a copy operation that inverts the source.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		CopyInverted = 0x150C,

		/// <summary>
		/// Specifies a logical OR operation followed by inversion.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		OrInverted = 0x150D,

		/// <summary>
		/// Specifies a logical NAND operation.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Nand = 0x150E,

		/// <summary>
		/// Specifies a set operation for buffers.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Set = 0x150F,

		/// <summary>
		/// Specifies the emission color for lighting.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Emission = 0x1600,

		/// <summary>
		/// Specifies the shininess factor for specular highlights.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Shininess = 0x1601,

		/// <summary>
		/// Specifies both ambient and diffuse light properties.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		AmbientAndDiffuse = 0x1602,

		/// <summary>
		/// Specifies a color index mode for indexed color displays.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ColorIndexes = 0x1603,

		/// <summary>
		/// Specifies the modelview matrix stack.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Modelview = 0x1700,

		/// <summary>
		/// Specifies the first modelview matrix for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_weighting</remarks>
		Modelview0Ext = 0x1700,

		/// <summary>
		/// Specifies the projection matrix stack.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Projection = 0x1701,

		/// <summary>
		/// Specifies the texture matrix stack.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Texture = 0x1702,

		/// <summary>
		/// Specifies the color buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Color = 0x1800,

		/// <summary>
		/// Specifies the color buffer for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_discard_framebuffer</remarks>
		ColorExt = 0x1800,

		/// <summary>
		/// Specifies the depth buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Depth = 0x1801,

		/// <summary>
		/// Specifies the depth buffer for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_discard_framebuffer</remarks>
		DepthExt = 0x1801,

		/// <summary>
		/// Specifies the stencil buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Stencil = 0x1802,

		/// <summary>
		/// Specifies the stencil buffer for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_discard_framebuffer</remarks>
		StencilExt = 0x1802,

		/// <summary>
		/// Specifies color index mode.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ColorIndex = 0x1900,

		/// <summary>
		/// Specifies the stencil index buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_stencil8</remarks>
		StencilIndex = 0x1901,

		/// <summary>
		/// Specifies the stencil index buffer for OES extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_texture_stencil8</remarks>
		StencilIndexOes = 0x1901,

		/// <summary>
		/// Specifies a depth component for textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ANGLE_depth_texture<br/>GL_OES_depth_texture</remarks>
		DepthComponent = 0x1902,

		/// <summary>
		/// Specifies the red color component.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_AMD_interleaved_elements</remarks>
		Red = 0x1903,

		/// <summary>
		/// Specifies the red color component for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_rg</remarks>
		RedExt = 0x1903,

		/// <summary>
		/// Specifies the green color component.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_AMD_interleaved_elements</remarks>
		Green = 0x1904,

		/// <summary>
		/// Specifies the blue color component.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_AMD_interleaved_elements</remarks>
		Blue = 0x1905,

		/// <summary>
		/// Specifies the alpha component for transparency.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_AMD_interleaved_elements</remarks>
		Alpha = 0x1906,

		/// <summary>
		/// Specifies a color in RGB format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Rgb = 0x1907,

		/// <summary>
		/// Specifies a color in RGBA format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Rgba = 0x1908,

		/// <summary>
		/// Specifies a grayscale color value.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Luminance = 0x1909,

		/// <summary>
		/// Specifies a grayscale value with an alpha channel.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		LuminanceAlpha = 0x190A,

		/// <summary>
		/// Specifies a bitmap data type.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Bitmap = 0x1A00,

		/// <summary>
		/// Specifies the point primitive.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Point = 0x1B00,

		/// <summary>
		/// Specifies the line primitive.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Line = 0x1B01,

		/// <summary>
		/// Specifies fill mode for polygons.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Fill = 0x1B02,

		/// <summary>
		/// Specifies fill mode for polygons for NV extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_polygon_mode</remarks>
		FillNv = 0x1B02,

		/// <summary>
		/// Specifies render mode for drawing.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Render = 0x1C00,

		/// <summary>
		/// Specifies feedback mode for drawing.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Feedback = 0x1C01,

		/// <summary>
		/// Specifies selection mode for drawing.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Select = 0x1C02,

		/// <summary>
		/// Specifies flat shading model.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Flat = 0x1D00,

		/// <summary>
		/// Specifies smooth shading model.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Smooth = 0x1D01,

		/// <summary>
		/// Specifies keeping the current value.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Keep = 0x1E00,

		/// <summary>
		/// Specifies replacing the current value.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Replace = 0x1E01,

		/// <summary>
		/// Specifies incrementing the current value.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Incr = 0x1E02,

		/// <summary>
		/// Specifies decrementing the current value.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Decr = 0x1E03,

		/// <summary>
		/// Specifies the vendor of the OpenGL implementation.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Vendor = 0x1F00,

		/// <summary>
		/// Specifies the renderer of the OpenGL implementation.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Renderer = 0x1F01,

		/// <summary>
		/// Specifies the version of the OpenGL implementation.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Version = 0x1F02,

		/// <summary>
		/// Specifies the supported OpenGL extensions.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Extensions = 0x1F03,

		/// <summary>
		/// Specifies the S texture coordinate.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		S = 0x2000,

		/// <summary>
		/// Specifies the T texture coordinate.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		T = 0x2001,

		/// <summary>
		/// Specifies the R texture coordinate.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		R = 0x2002,

		/// <summary>
		/// Specifies the Q texture coordinate.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Q = 0x2003,

		/// <summary>
		/// Specifies modulation of texture colors.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Modulate = 0x2100,

		/// <summary>
		/// Specifies decal texture mode.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Decal = 0x2101,

		/// <summary>
		/// Specifies the texture environment mode.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureEnvMode = 0x2200,

		/// <summary>
		/// Specifies the color for the texture environment.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureEnvColor = 0x2201,

		/// <summary>
		/// Specifies the texture environment settings.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureEnv = 0x2300,

		/// <summary>
		/// Specifies eye linear texture coordinate generation.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		EyeLinear = 0x2400,

		/// <summary>
		/// Specifies object linear texture coordinate generation.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ObjectLinear = 0x2401,

		/// <summary>
		/// Specifies spherical mapping for textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		SphereMap = 0x2402,

		/// <summary>
		/// Specifies the texture generation mode.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureGenMode = 0x2500,

		/// <summary>
		/// Specifies the texture generation mode for OES extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_texture_cube_map</remarks>
		TextureGenModeOes = 0x2500,

		/// <summary>
		/// Specifies the object plane for texture generation.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ObjectPlane = 0x2501,

		/// <summary>
		/// Specifies the eye plane for texture coordinate generation.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_NV_fog_distance</remarks>
		EyePlane = 0x2502,

		/// <summary>
		/// Specifies nearest neighbor filtering for textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Nearest = 0x2600,

		/// <summary>
		/// Specifies linear filtering for textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Linear = 0x2601,

		/// <summary>
		/// Specifies nearest neighbor filtering with nearest mipmap.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		NearestMipmapNearest = 0x2700,

		/// <summary>
		/// Specifies linear filtering with nearest mipmap.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		LinearMipmapNearest = 0x2701,

		/// <summary>
		/// Specifies nearest neighbor filtering with linear mipmap.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		NearestMipmapLinear = 0x2702,

		/// <summary>
		/// Specifies linear filtering with linear mipmap.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		LinearMipmapLinear = 0x2703,

		/// <summary>
		/// Specifies the texture magnification filter.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureMagFilter = 0x2800,

		/// <summary>
		/// Specifies the texture minification filter.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureMinFilter = 0x2801,

		/// <summary>
		/// Specifies the texture wrapping mode for the S coordinate.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureWrapS = 0x2802,

		/// <summary>
		/// Specifies the texture wrapping mode for the T coordinate.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureWrapT = 0x2803,

		/// <summary>
		/// Specifies clamping for texture coordinates.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Clamp = 0x2900,

		/// <summary>
		/// Specifies repeating for texture coordinates.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Repeat = 0x2901,

		/// <summary>
		/// Specifies the factor for polygon offset.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PolygonOffsetUnits = 0x2A00,

		/// <summary>
		/// Specifies polygon offset for point primitives.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PolygonOffsetPoint = 0x2A01,

		/// <summary>
		/// Specifies polygon offset for line primitives.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PolygonOffsetLine = 0x2A02,

		/// <summary>
		/// Specifies a 2-byte RGB format with 3 bits for each channel.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		R3G3B2 = 0x2A10,

		/// <summary>
		/// Specifies vertex data in 2D floating-point format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		V2F = 0x2A20,

		/// <summary>
		/// Specifies vertex data in 3D floating-point format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		V3F = 0x2A21,

		/// <summary>
		/// Specifies color data with 4 unsigned bytes and vertex data in 2D floating-point format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		C4UbV2F = 0x2A22,

		/// <summary>
		/// Specifies color data with 4 unsigned bytes and vertex data in 3D floating-point format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		C4UbV3F = 0x2A23,

		/// <summary>
		/// Specifies color data with 3 floating-point components and vertex data in 3D floating-point format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		C3FV3F = 0x2A24,

		/// <summary>
		/// Specifies normal data with 3 floating-point components and vertex data in 3D floating-point format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		N3FV3F = 0x2A25,

		/// <summary>
		/// Specifies color data with 4 floating-point components, normal data, and vertex data in 3D floating-point format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		C4FN3FV3F = 0x2A26,

		/// <summary>
		/// Specifies texture coordinate data with 2 floating-point components and vertex data in 3D floating-point format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		T2FV3F = 0x2A27,

		/// <summary>
		/// Specifies texture coordinate data with 4 floating-point components and vertex data in 4D floating-point format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		T4FV4F = 0x2A28,

		/// <summary>
		/// Specifies texture coordinate data with 2 floating-point components, color data with 4 unsigned bytes, and vertex data in 3D floating-point format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		T2FC4UbV3F = 0x2A29,

		/// <summary>
		/// Specifies texture coordinate data with 2 floating-point components, color data with 3 floating-point components, and vertex data in 3D floating-point format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		T2FC3FV3F = 0x2A2A,

		/// <summary>
		/// Specifies texture coordinate data with 2 floating-point components, normal data with 3 floating-point components, and vertex data in 3D floating-point format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		T2FN3FV3F = 0x2A2B,

		/// <summary>
		/// Specifies texture coordinate data with 2 floating-point components, color data with 4 floating-point components, normal data, and vertex data in 3D floating-point format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		T2FC4FN3FV3F = 0x2A2C,

		/// <summary>
		/// Specifies texture coordinate data with 4 floating-point components, color data with 4 floating-point components, normal data, and vertex data in 4D floating-point format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		T4FC4FN3FV4F = 0x2A2D,

		/// <summary>
		/// Specifies the first clipping plane.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ClipPlane0 = 0x3000,

		/// <summary>
		/// Specifies the first clipping distance.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ClipDistance0 = 0x3000,

		/// <summary>
		/// Specifies the second clipping plane.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ClipPlane1 = 0x3001,

		/// <summary>
		/// Specifies the second clipping distance.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ClipDistance1 = 0x3001,

		/// <summary>
		/// Specifies the third clipping plane.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ClipPlane2 = 0x3002,

		/// <summary>
		/// Specifies the third clipping distance.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ClipDistance2 = 0x3002,

		/// <summary>
		/// Specifies the fourth clipping plane.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ClipPlane3 = 0x3003,

		/// <summary>
		/// Specifies the fourth clipping distance.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ClipDistance3 = 0x3003,

		/// <summary>
		/// Specifies the fifth clipping plane.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ClipPlane4 = 0x3004,

		/// <summary>
		/// Specifies the fifth clipping distance.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ClipDistance4 = 0x3004,

		/// <summary>
		/// Specifies the sixth clipping plane.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ClipPlane5 = 0x3005,

		/// <summary>
		/// Specifies the sixth clipping distance.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ClipDistance5 = 0x3005,

		/// <summary>
		/// Specifies the seventh clipping distance.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ClipDistance6 = 0x3006,

		/// <summary>
		/// Specifies the eighth clipping distance.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ClipDistance7 = 0x3007,

		/// <summary>
		/// Specifies the first light source.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Light0 = 0x4000,

		/// <summary>
		/// Specifies the second light source.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Light1 = 0x4001,

		/// <summary>
		/// Specifies the third light source.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Light2 = 0x4002,

		/// <summary>
		/// Specifies the fourth light source.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Light3 = 0x4003,

		/// <summary>
		/// Specifies the fifth light source.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Light4 = 0x4004,

		/// <summary>
		/// Specifies the sixth light source.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Light5 = 0x4005,

		/// <summary>
		/// Specifies the seventh light source.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Light6 = 0x4006,

		/// <summary>
		/// Specifies the eighth light source.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Light7 = 0x4007,

		/// <summary>
		/// Specifies a color format with alpha, blue, green, and red channels for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_abgr</remarks>
		AbgrExt = 0x8000,

		/// <summary>
		/// Specifies a constant color for blending.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_imaging<br/>GL_EXT_draw_buffers_indexed<br/>GL_OES_draw_buffers_indexed</remarks>
		ConstantColor = 0x8001,

		/// <summary>
		/// Specifies one minus the constant color for blending.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_imaging<br/>GL_EXT_draw_buffers_indexed<br/>GL_OES_draw_buffers_indexed</remarks>
		OneMinusConstantColor = 0x8002,

		/// <summary>
		/// Specifies a constant alpha value for blending.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_imaging<br/>GL_EXT_draw_buffers_indexed<br/>GL_OES_draw_buffers_indexed</remarks>
		ConstantAlpha = 0x8003,

		/// <summary>
		/// Specifies one minus the constant alpha for blending.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_imaging<br/>GL_EXT_draw_buffers_indexed<br/>GL_OES_draw_buffers_indexed</remarks>
		OneMinusConstantAlpha = 0x8004,

		/// <summary>
		/// Specifies the blend color for blending operations.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		BlendColor = 0x8005,

		/// <summary>
		/// Specifies the blend color for blending operations (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_blend_color</remarks>
		BlendColorExt = 0x8005,

		/// <summary>
		/// Specifies the addition function for blending.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_imaging<br/>GL_EXT_draw_buffers_indexed<br/>GL_OES_draw_buffers_indexed</remarks>
		FuncAdd = 0x8006,

		/// <summary>
		/// Specifies the addition function for blending (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_blend_minmax</remarks>
		FuncAddExt = 0x8006,

		/// <summary>
		/// Specifies the minimum function for blending.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_imaging<br/>GL_EXT_draw_buffers_indexed<br/>GL_OES_draw_buffers_indexed</remarks>
		Min = 0x8007,

		/// <summary>
		/// Specifies the minimum function for blending (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_blend_minmax</remarks>
		MinExt = 0x8007,

		/// <summary>
		/// Specifies the maximum function for blending.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_imaging<br/>GL_EXT_draw_buffers_indexed<br/>GL_OES_draw_buffers_indexed</remarks>
		Max = 0x8008,

		/// <summary>
		/// Specifies the maximum function for blending (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_blend_minmax</remarks>
		MaxExt = 0x8008,

		/// <summary>
		/// Specifies the blend equation for blending operations.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		BlendEquation = 0x8009,

		/// <summary>
		/// Specifies the blend equation for blending operations (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_blend_minmax</remarks>
		BlendEquationExt = 0x8009,

		/// <summary>
		/// Specifies the blend equation for blending (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_blend_subtract</remarks>
		BlendEquationOes = 0x8009,

		/// <summary>
		/// Specifies the RGB blend equation for blending operations.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_EXT_draw_buffers_indexed<br/>GL_OES_draw_buffers_indexed</remarks>
		BlendEquationRgb = 0x8009,

		/// <summary>
		/// Specifies the subtraction function for blending.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_imaging<br/>GL_EXT_draw_buffers_indexed<br/>GL_OES_draw_buffers_indexed</remarks>
		FuncSubtract = 0x800A,

		/// <summary>
		/// Specifies the subtraction function for blending (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_blend_subtract</remarks>
		FuncSubtractExt = 0x800A,

		/// <summary>
		/// Specifies the reverse subtraction function for blending.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_imaging<br/>GL_EXT_draw_buffers_indexed<br/>GL_OES_draw_buffers_indexed</remarks>
		FuncReverseSubtract = 0x800B,

		/// <summary>
		/// Specifies the reverse subtraction function for blending (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_blend_subtract</remarks>
		FuncReverseSubtractExt = 0x800B,

		/// <summary>
		/// Specifies a color format with cyan, magenta, yellow, and black channels for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_cmyka</remarks>
		CmykExt = 0x800C,

		/// <summary>
		/// Specifies a color format with cyan, magenta, yellow, black, and alpha channels for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_cmyka</remarks>
		CmykaExt = 0x800D,

		/// <summary>
		/// Specifies hints for packing CMYK data for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_cmyka</remarks>
		PackCmykHintExt = 0x800E,

		/// <summary>
		/// Specifies hints for unpacking CMYK data for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_cmyka</remarks>
		UnpackCmykHintExt = 0x800F,

		/// <summary>
		/// Specifies 1D convolution operations.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		Convolution1D = 0x8010,

		/// <summary>
		/// Specifies 1D convolution operations for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_convolution</remarks>
		Convolution1DExt = 0x8010,

		/// <summary>
		/// Specifies 2D convolution operations.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		Convolution2D = 0x8011,

		/// <summary>
		/// Specifies 2D convolution operations for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_convolution</remarks>
		Convolution2DExt = 0x8011,

		/// <summary>
		/// Specifies separable 2D convolution operations.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		Separable2D = 0x8012,

		/// <summary>
		/// Specifies separable 2D convolution operations for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_convolution</remarks>
		Separable2DExt = 0x8012,

		/// <summary>
		/// Specifies the border mode for convolution operations.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		ConvolutionBorderMode = 0x8013,

		/// <summary>
		/// Specifies the border mode for convolution operations for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_convolution</remarks>
		ConvolutionBorderModeExt = 0x8013,

		/// <summary>
		/// Specifies the scale factor for convolution filters.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		ConvolutionFilterScale = 0x8014,

		/// <summary>
		/// Specifies the scale factor for convolution filters for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_convolution</remarks>
		ConvolutionFilterScaleExt = 0x8014,

		/// <summary>
		/// Specifies the bias for convolution filters.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		ConvolutionFilterBias = 0x8015,

		/// <summary>
		/// Specifies the bias for convolution filters for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_convolution</remarks>
		ConvolutionFilterBiasExt = 0x8015,

		/// <summary>
		/// Specifies reduction operations.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		Reduce = 0x8016,

		/// <summary>
		/// Specifies reduction operations for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_convolution</remarks>
		ReduceExt = 0x8016,

		/// <summary>
		/// Specifies the format for convolution operations.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		ConvolutionFormat = 0x8017,

		/// <summary>
		/// Specifies the format for convolution operations for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_convolution</remarks>
		ConvolutionFormatExt = 0x8017,

		/// <summary>
		/// Specifies the width of the convolution filter.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		ConvolutionWidth = 0x8018,

		/// <summary>
		/// Specifies the width of the convolution filter for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_convolution</remarks>
		ConvolutionWidthExt = 0x8018,

		/// <summary>
		/// Specifies the height of the convolution filter.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		ConvolutionHeight = 0x8019,

		/// <summary>
		/// Specifies the height of the convolution filter for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_convolution</remarks>
		ConvolutionHeightExt = 0x8019,

		/// <summary>
		/// Specifies the maximum width for convolution filters.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		MaxConvolutionWidth = 0x801A,

		/// <summary>
		/// Specifies the maximum width for convolution filters for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_convolution</remarks>
		MaxConvolutionWidthExt = 0x801A,

		/// <summary>
		/// Specifies the maximum height for convolution filters.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		MaxConvolutionHeight = 0x801B,

		/// <summary>
		/// Specifies the maximum height for convolution filters for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_convolution</remarks>
		MaxConvolutionHeightExt = 0x801B,

		/// <summary>
		/// Specifies the scale factor for the red component after convolution.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		PostConvolutionRedScale = 0x801C,

		/// <summary>
		/// Specifies the scale factor for the red component after convolution for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_convolution</remarks>
		PostConvolutionRedScaleExt = 0x801C,

		/// <summary>
		/// Specifies the scale factor for the green component after convolution.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		PostConvolutionGreenScale = 0x801D,

		/// <summary>
		/// Specifies the scale factor for the green component after convolution for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_convolution</remarks>
		PostConvolutionGreenScaleExt = 0x801D,

		/// <summary>
		/// Specifies the scale factor for the blue component after convolution.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		PostConvolutionBlueScale = 0x801E,

		/// <summary>
		/// Specifies the scale factor for the blue component after convolution for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_convolution</remarks>
		PostConvolutionBlueScaleExt = 0x801E,

		/// <summary>
		/// Specifies the scale factor for the alpha component after convolution.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		PostConvolutionAlphaScale = 0x801F,

		/// <summary>
		/// Specifies the scale factor for the alpha component after convolution for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_convolution</remarks>
		PostConvolutionAlphaScaleExt = 0x801F,

		/// <summary>
		/// Specifies the bias for the red component after convolution.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		PostConvolutionRedBias = 0x8020,

		/// <summary>
		/// Specifies the bias for the red component after convolution for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_convolution</remarks>
		PostConvolutionRedBiasExt = 0x8020,

		/// <summary>
		/// Specifies the bias for the green component after convolution.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		PostConvolutionGreenBias = 0x8021,

		/// <summary>
		/// Specifies the bias for the green component after convolution for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_convolution</remarks>
		PostConvolutionGreenBiasExt = 0x8021,

		/// <summary>
		/// Specifies the bias for the blue component after convolution.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		PostConvolutionBlueBias = 0x8022,

		/// <summary>
		/// Specifies the bias for the blue component after convolution for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_convolution</remarks>
		PostConvolutionBlueBiasExt = 0x8022,

		/// <summary>
		/// Specifies the bias for the alpha component after convolution.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		PostConvolutionAlphaBias = 0x8023,

		/// <summary>
		/// Specifies the bias for the alpha component after convolution for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_convolution</remarks>
		PostConvolutionAlphaBiasExt = 0x8023,

		/// <summary>
		/// Specifies histogram operations.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		Histogram = 0x8024,

		/// <summary>
		/// Specifies histogram operations for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_histogram</remarks>
		HistogramExt = 0x8024,

		/// <summary>
		/// Specifies proxy histogram operations.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		ProxyHistogram = 0x8025,

		/// <summary>
		/// Specifies proxy histogram operations for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_histogram</remarks>
		ProxyHistogramExt = 0x8025,

		/// <summary>
		/// Specifies the width of the histogram.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		HistogramWidth = 0x8026,

		/// <summary>
		/// Specifies the width of the histogram for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_histogram</remarks>
		HistogramWidthExt = 0x8026,

		/// <summary>
		/// Specifies the format of the histogram.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		HistogramFormat = 0x8027,

		/// <summary>
		/// Specifies the format of the histogram for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_histogram</remarks>
		HistogramFormatExt = 0x8027,

		/// <summary>
		/// Specifies the size of the red component in the histogram.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		HistogramRedSize = 0x8028,

		/// <summary>
		/// Specifies the size of the red component in the histogram for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_histogram</remarks>
		HistogramRedSizeExt = 0x8028,

		/// <summary>
		/// Specifies the size of the green component in the histogram.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		HistogramGreenSize = 0x8029,

		/// <summary>
		/// Specifies the size of the green component in the histogram for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_histogram</remarks>
		HistogramGreenSizeExt = 0x8029,

		/// <summary>
		/// Specifies the size of the blue component in the histogram.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		HistogramBlueSize = 0x802A,

		/// <summary>
		/// Specifies the size of the blue component in the histogram for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_histogram</remarks>
		HistogramBlueSizeExt = 0x802A,

		/// <summary>
		/// Specifies the size of the alpha component in the histogram.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		HistogramAlphaSize = 0x802B,

		/// <summary>
		/// Specifies the size of the alpha component in the histogram for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_histogram</remarks>
		HistogramAlphaSizeExt = 0x802B,

		/// <summary>
		/// Specifies the size of the luminance component in the histogram.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		HistogramLuminanceSize = 0x802C,

		/// <summary>
		/// Specifies the size of the luminance component in the histogram for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_histogram</remarks>
		HistogramLuminanceSizeExt = 0x802C,

		/// <summary>
		/// Specifies the sink for histogram data.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		HistogramSink = 0x802D,

		/// <summary>
		/// Specifies the sink for histogram data for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_histogram</remarks>
		HistogramSinkExt = 0x802D,

		/// <summary>
		/// Specifies min/max operations.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		Minmax = 0x802E,

		/// <summary>
		/// Specifies min/max operations for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_histogram</remarks>
		MinmaxExt = 0x802E,

		/// <summary>
		/// Specifies the format for min/max operations.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		MinmaxFormat = 0x802F,

		/// <summary>
		/// Specifies the format for min/max operations for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_histogram</remarks>
		MinmaxFormatExt = 0x802F,

		/// <summary>
		/// Specifies the sink for min/max data.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		MinmaxSink = 0x8030,

		/// <summary>
		/// Specifies the sink for min/max data for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_histogram</remarks>
		MinmaxSinkExt = 0x8030,

		/// <summary>
		/// Specifies an error condition when a table is too large for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_histogram</remarks>
		TableTooLargeExt = 0x8031,

		/// <summary>
		/// Specifies an error condition when a table is too large.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		TableTooLarge = 0x8031,

		/// <summary>
		/// Specifies a format with 3 bits for red, 3 bits for green, and 2 bits for blue.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		UnsignedByte332 = 0x8032,

		/// <summary>
		/// Specifies a format with 3 bits for red, 3 bits for green, and 2 bits for blue for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_packed_pixels</remarks>
		UnsignedByte332Ext = 0x8032,

		/// <summary>
		/// Specifies a format with 4 bits for each color channel and 4 bits for alpha.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		UnsignedShort4444 = 0x8033,

		/// <summary>
		/// Specifies a format with 4 bits for each color channel and 4 bits for alpha for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_packed_pixels</remarks>
		UnsignedShort4444Ext = 0x8033,

		/// <summary>
		/// Specifies a format with 5 bits for red, 5 bits for green, 5 bits for blue, and 1 bit for alpha.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		UnsignedShort5551 = 0x8034,

		/// <summary>
		/// Specifies a format with 5 bits for red, 5 bits for green, 5 bits for blue, and 1 bit for alpha for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_packed_pixels</remarks>
		UnsignedShort5551Ext = 0x8034,

		/// <summary>
		/// Specifies a format with 8 bits for each color channel and 8 bits for alpha.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		UnsignedInt8888 = 0x8035,

		/// <summary>
		/// Specifies a format with 8 bits for each color channel and 8 bits for alpha for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_packed_pixels</remarks>
		UnsignedInt8888Ext = 0x8035,

		/// <summary>
		/// Specifies a format with 10 bits for each color channel and 2 bits for alpha.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		UnsignedInt1010102 = 0x8036,

		/// <summary>
		/// Specifies a format with 10 bits for each color channel and 2 bits for alpha for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_packed_pixels</remarks>
		UnsignedInt1010102Ext = 0x8036,

		/// <summary>
		/// Specifies the polygon offset for filled polygons.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PolygonOffsetFill = 0x8037,

		/// <summary>
		/// Specifies the scale factor for polygon offsets.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PolygonOffsetFactor = 0x8038,

		/// <summary>
		/// Specifies the bias for polygon offsets for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_polygon_offset</remarks>
		PolygonOffsetBiasExt = 0x8039,

		/// <summary>
		/// Specifies that normals should be rescaled when they are transformed for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_rescale_normal</remarks>
		RescaleNormalExt = 0x803A,

		/// <summary>
		/// Specifies a format with 4 bits for alpha.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Alpha4 = 0x803B,

		/// <summary>
		/// Specifies a format with 4 bits for alpha for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture</remarks>
		Alpha4Ext = 0x803B,

		/// <summary>
		/// Specifies a format with 8 bits for alpha.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Alpha8 = 0x803C,

		/// <summary>
		/// Specifies a format with 8 bits for alpha for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture<br/>GL_EXT_texture_storage</remarks>
		Alpha8Ext = 0x803C,

		/// <summary>
		/// Specifies an 8-bit alpha format for OES extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_required_internalformat</remarks>
		Alpha8Oes = 0x803C,

		/// <summary>
		/// Specifies a 12-bit alpha format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Alpha12 = 0x803D,

		/// <summary>
		/// Specifies a 12-bit alpha format for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture</remarks>
		Alpha12Ext = 0x803D,

		/// <summary>
		/// Specifies a 16-bit alpha format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Alpha16 = 0x803E,

		/// <summary>
		/// Specifies a 16-bit alpha format for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture</remarks>
		Alpha16Ext = 0x803E,

		/// <summary>
		/// Specifies a 4-bit luminance format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Luminance4 = 0x803F,

		/// <summary>
		/// Specifies a 4-bit luminance format for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture</remarks>
		Luminance4Ext = 0x803F,

		/// <summary>
		/// Specifies an 8-bit luminance format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Luminance8 = 0x8040,

		/// <summary>
		/// Specifies an 8-bit luminance format for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture<br/>GL_EXT_texture_storage</remarks>
		Luminance8Ext = 0x8040,

		/// <summary>
		/// Specifies an 8-bit luminance format for OES extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_required_internalformat</remarks>
		Luminance8Oes = 0x8040,

		/// <summary>
		/// Specifies a 12-bit luminance format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Luminance12 = 0x8041,

		/// <summary>
		/// Specifies a 12-bit luminance format for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture</remarks>
		Luminance12Ext = 0x8041,

		/// <summary>
		/// Specifies a 16-bit luminance format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Luminance16 = 0x8042,

		/// <summary>
		/// Specifies a 16-bit luminance format for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture</remarks>
		Luminance16Ext = 0x8042,

		/// <summary>
		/// Specifies a format with 4 bits for luminance and 4 bits for alpha.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Luminance4Alpha4 = 0x8043,

		/// <summary>
		/// Specifies a format with 4 bits for luminance and 4 bits for alpha for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture</remarks>
		Luminance4Alpha4Ext = 0x8043,

		/// <summary>
		/// Specifies a format with 4 bits for luminance and 4 bits for alpha for OES extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_required_internalformat</remarks>
		Luminance4Alpha4Oes = 0x8043,

		/// <summary>
		/// Specifies a format with 6 bits for luminance and 2 bits for alpha.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Luminance6Alpha2 = 0x8044,

		/// <summary>
		/// Specifies a format with 6 bits for luminance and 2 bits for alpha for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture</remarks>
		Luminance6Alpha2Ext = 0x8044,

		/// <summary>
		/// Specifies a format with 8 bits for luminance and 8 bits for alpha.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Luminance8Alpha8 = 0x8045,

		/// <summary>
		/// Specifies a format with 8 bits for luminance and 8 bits for alpha for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture<br/>GL_EXT_texture_storage</remarks>
		Luminance8Alpha8Ext = 0x8045,

		/// <summary>
		/// Specifies a format with 8 bits for luminance and 8 bits for alpha for OES extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_required_internalformat</remarks>
		Luminance8Alpha8Oes = 0x8045,

		/// <summary>
		/// Specifies a format with 12 bits for luminance and 4 bits for alpha.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Luminance12Alpha4 = 0x8046,

		/// <summary>
		/// Specifies a format with 12 bits for luminance and 4 bits for alpha for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture</remarks>
		Luminance12Alpha4Ext = 0x8046,

		/// <summary>
		/// Specifies a format with 12 bits for luminance and 12 bits for alpha.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Luminance12Alpha12 = 0x8047,

		/// <summary>
		/// Specifies a format with 12 bits for luminance and 12 bits for alpha for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture</remarks>
		Luminance12Alpha12Ext = 0x8047,

		/// <summary>
		/// Specifies a format with 16 bits for luminance and 16 bits for alpha.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Luminance16Alpha16 = 0x8048,

		/// <summary>
		/// Specifies a format with 16 bits for luminance and 16 bits for alpha for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture</remarks>
		Luminance16Alpha16Ext = 0x8048,

		/// <summary>
		/// Specifies intensity format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Intensity = 0x8049,

		/// <summary>
		/// Specifies a 4-bit intensity format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Intensity4 = 0x804A,

		/// <summary>
		/// Specifies a 4-bit intensity format for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture</remarks>
		Intensity4Ext = 0x804A,

		/// <summary>
		/// Specifies an 8-bit intensity format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Intensity8 = 0x804B,

		/// <summary>
		/// Specifies an 8-bit intensity format for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture</remarks>
		Intensity8Ext = 0x804B,

		/// <summary>
		/// Specifies a 12-bit intensity format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Intensity12 = 0x804C,

		/// <summary>
		/// Specifies a 12-bit intensity format for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture</remarks>
		Intensity12Ext = 0x804C,

		/// <summary>
		/// Specifies a 16-bit intensity format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Intensity16 = 0x804D,

		/// <summary>
		/// Specifies a 16-bit intensity format for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture</remarks>
		Intensity16Ext = 0x804D,

		/// <summary>
		/// Specifies a 2-bit RGB format for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture</remarks>
		Rgb2Ext = 0x804E,

		/// <summary>
		/// Specifies a 4-bit RGB format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Rgb4 = 0x804F,

		/// <summary>
		/// Specifies a 4-bit RGB format for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture</remarks>
		Rgb4Ext = 0x804F,

		/// <summary>
		/// Specifies a 5-bit RGB format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Rgb5 = 0x8050,

		/// <summary>
		/// Specifies a 5-bit RGB format for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture</remarks>
		Rgb5Ext = 0x8050,

		/// <summary>
		/// Specifies an 8-bit RGB format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Rgb8 = 0x8051,

		/// <summary>
		/// Specifies an 8-bit RGB format for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture</remarks>
		Rgb8Ext = 0x8051,

		/// <summary>
		/// Specifies an 8-bit RGB format for OES extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_required_internalformat<br/>GL_OES_rgb8_rgba8</remarks>
		Rgb8Oes = 0x8051,

		/// <summary>
		/// Specifies a 10-bit RGB format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Rgb10 = 0x8052,

		/// <summary>
		/// Specifies a 10-bit RGB format for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture<br/>GL_EXT_texture_storage<br/>GL_OES_required_internalformat</remarks>
		Rgb10Ext = 0x8052,

		/// <summary>
		/// Specifies a 12-bit RGB format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Rgb12 = 0x8053,

		/// <summary>
		/// Specifies a 12-bit RGB format for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture</remarks>
		Rgb12Ext = 0x8053,

		/// <summary>
		/// Specifies a 16-bit RGB format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Rgb16 = 0x8054,

		/// <summary>
		/// Specifies a 16-bit RGB format for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture<br/>GL_EXT_texture_norm16</remarks>
		Rgb16Ext = 0x8054,

		/// <summary>
		/// Specifies a 2-bit RGBA format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Rgba2 = 0x8055,

		/// <summary>
		/// Specifies a 2-bit RGBA format for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture</remarks>
		Rgba2Ext = 0x8055,

		/// <summary>
		/// Specifies a 4-bit RGBA format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Rgba4 = 0x8056,

		/// <summary>
		/// Specifies a 4-bit RGBA format for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture</remarks>
		Rgba4Ext = 0x8056,

		/// <summary>
		/// Specifies a 4-bit RGBA format for OES extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_framebuffer_object<br/>GL_OES_required_internalformat</remarks>
		Rgba4Oes = 0x8056,

		/// <summary>
		/// Specifies a 5-bit RGB format with 1-bit alpha.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Rgb5A1 = 0x8057,

		/// <summary>
		/// Specifies a 5-bit RGB format with 1-bit alpha for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture</remarks>
		Rgb5A1Ext = 0x8057,

		/// <summary>
		/// Specifies a 5-bit RGB format with 1-bit alpha for OES extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_framebuffer_object<br/>GL_OES_required_internalformat</remarks>
		Rgb5A1Oes = 0x8057,

		/// <summary>
		/// Specifies an 8-bit RGBA format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Rgba8 = 0x8058,

		/// <summary>
		/// Specifies an 8-bit RGBA format for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture</remarks>
		Rgba8Ext = 0x8058,

		/// <summary>
		/// Specifies an 8-bit RGBA format for OES extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_required_internalformat<br/>GL_OES_rgb8_rgba8</remarks>
		Rgba8Oes = 0x8058,

		/// <summary>
		/// Specifies a 10-bit RGB format with 2 bits for alpha.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Rgb10A2 = 0x8059,

		/// <summary>
		/// Specifies a 10-bit RGB format with 2 bits for alpha for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture<br/>GL_EXT_texture_storage<br/>GL_OES_required_internalformat</remarks>
		Rgb10A2Ext = 0x8059,

		/// <summary>
		/// Specifies a 12-bit RGBA format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Rgba12 = 0x805A,

		/// <summary>
		/// Specifies a 12-bit RGBA format for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture</remarks>
		Rgba12Ext = 0x805A,

		/// <summary>
		/// Specifies a 16-bit RGBA format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Rgba16 = 0x805B,

		/// <summary>
		/// Specifies a 16-bit RGBA format for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture<br/>GL_EXT_texture_norm16</remarks>
		Rgba16Ext = 0x805B,

		/// <summary>
		/// Specifies the size of the red component in texture formats.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureRedSize = 0x805C,

		/// <summary>
		/// Specifies the size of the green component in texture formats.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureGreenSize = 0x805D,

		/// <summary>
		/// Specifies the size of the blue component in texture formats.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureBlueSize = 0x805E,

		/// <summary>
		/// Specifies the size of the alpha component in texture formats.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureAlphaSize = 0x805F,

		/// <summary>
		/// Specifies the size of the luminance component in texture formats.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureLuminanceSize = 0x8060,

		/// <summary>
		/// Specifies the size of the intensity component in texture formats.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureIntensitySize = 0x8061,

		/// <summary>
		/// Specifies a replacement operation for texture mapping (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture</remarks>
		ReplaceExt = 0x8062,

		/// <summary>
		/// Specifies a proxy texture for 1D textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ProxyTexture1D = 0x8063,

		/// <summary>
		/// Specifies a proxy texture for 1D textures for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture</remarks>
		ProxyTexture1DExt = 0x8063,

		/// <summary>
		/// Specifies a proxy texture for 2D textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ProxyTexture2D = 0x8064,

		/// <summary>
		/// Specifies a proxy texture for 2D textures for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture</remarks>
		ProxyTexture2DExt = 0x8064,

		/// <summary>
		/// Specifies an error condition when a texture is too large for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture</remarks>
		TextureTooLargeExt = 0x8065,

		/// <summary>
		/// Specifies texture priority for texture operations.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TexturePriority = 0x8066,

		/// <summary>
		/// Specifies texture priority for texture operations for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_object</remarks>
		TexturePriorityExt = 0x8066,

		/// <summary>
		/// Specifies whether a texture is resident in graphics memory.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureResident = 0x8067,

		/// <summary>
		/// Specifies the currently bound 1D texture.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_direct_state_access</remarks>
		TextureBinding1D = 0x8068,

		/// <summary>
		/// Specifies the currently bound 2D texture.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_direct_state_access</remarks>
		TextureBinding2D = 0x8069,

		/// <summary>
		/// Specifies the currently bound 3D texture for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_object</remarks>
		Texture3DBindingExt = 0x806A,

		/// <summary>
		/// Specifies the currently bound 3D texture.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_direct_state_access</remarks>
		TextureBinding3D = 0x806A,

		/// <summary>
		/// Specifies the number of images to skip when packing textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PackSkipImages = 0x806B,

		/// <summary>
		/// Specifies the number of images to skip when packing textures for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture3D</remarks>
		PackSkipImagesExt = 0x806B,

		/// <summary>
		/// Specifies the height of images in the texture packing.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PackImageHeight = 0x806C,

		/// <summary>
		/// Specifies the height of images in the texture packing for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture3D</remarks>
		PackImageHeightExt = 0x806C,

		/// <summary>
		/// Specifies the number of images to skip when unpacking textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		UnpackSkipImages = 0x806D,

		/// <summary>
		/// Specifies the number of images to skip when unpacking textures for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture3D</remarks>
		UnpackSkipImagesExt = 0x806D,

		/// <summary>
		/// Specifies the height of images in the texture unpacking.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		UnpackImageHeight = 0x806E,

		/// <summary>
		/// Specifies the height of images in the texture unpacking for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture3D</remarks>
		UnpackImageHeightExt = 0x806E,

		/// <summary>
		/// Specifies a 3D texture.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2<br/>GL_EXT_sparse_texture</remarks>
		Texture3D = 0x806F,

		/// <summary>
		/// Specifies a 3D texture for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture3D</remarks>
		Texture3DExt = 0x806F,

		/// <summary>
		/// Specifies a 3D texture for OES extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_texture_3D</remarks>
		Texture3DOes = 0x806F,

		/// <summary>
		/// Specifies a proxy texture for 3D textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ProxyTexture3D = 0x8070,

		/// <summary>
		/// Specifies a proxy texture for 3D textures for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture3D</remarks>
		ProxyTexture3DExt = 0x8070,

		/// <summary>
		/// Specifies the depth of a 3D texture for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture3D</remarks>
		TextureDepthExt = 0x8071,

		/// <summary>
		/// Specifies the wrapping mode for the R coordinate of 3D textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureWrapR = 0x8072,

		/// <summary>
		/// Specifies the wrapping mode for the R coordinate of 3D textures for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture3D</remarks>
		TextureWrapRExt = 0x8072,

		/// <summary>
		/// Specifies the wrapping mode for the R coordinate of 3D textures for OES extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_texture_3D</remarks>
		TextureWrapROes = 0x8072,

		/// <summary>
		/// Specifies the maximum size for 3D textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Max3DTextureSize = 0x8073,

		/// <summary>
		/// Specifies the maximum size for 3D textures for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture3D</remarks>
		Max3DTextureSizeExt = 0x8073,

		/// <summary>
		/// Specifies a vertex array for rendering.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_KHR_debug</remarks>
		VertexArray = 0x8074,

		/// <summary>
		/// Specifies a normal array for rendering.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		NormalArray = 0x8075,

		/// <summary>
		/// Specifies a color array for rendering.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ColorArray = 0x8076,

		/// <summary>
		/// Specifies an index array for rendering.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		IndexArray = 0x8077,

		/// <summary>
		/// Specifies a texture coordinate array for rendering.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureCoordArray = 0x8078,

		/// <summary>
		/// Specifies an edge flag array for rendering.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		EdgeFlagArray = 0x8079,

		/// <summary>
		/// Specifies the size of each vertex in the vertex array.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		VertexArraySize = 0x807A,

		/// <summary>
		/// Specifies the data type of the vertex array.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		VertexArrayType = 0x807B,

		/// <summary>
		/// Specifies the stride (byte offset) between vertex array elements.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		VertexArrayStride = 0x807C,

		/// <summary>
		/// Specifies the count of vertices in the vertex array for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_array</remarks>
		VertexArrayCountExt = 0x807D,

		/// <summary>
		/// Specifies the data type of the normal array.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		NormalArrayType = 0x807E,

		/// <summary>
		/// Specifies the stride (byte offset) between normal array elements.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		NormalArrayStride = 0x807F,

		/// <summary>
		/// Specifies the count of normals in the normal array for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_array</remarks>
		NormalArrayCountExt = 0x8080,

		/// <summary>
		/// Specifies the size of each color in the color array.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ColorArraySize = 0x8081,

		/// <summary>
		/// Specifies the data type of the color array.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ColorArrayType = 0x8082,

		/// <summary>
		/// Specifies the stride (byte offset) between color array elements.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ColorArrayStride = 0x8083,

		/// <summary>
		/// Specifies the count of colors in the color array for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_array</remarks>
		ColorArrayCountExt = 0x8084,

		/// <summary>
		/// Specifies the data type of the index array.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		IndexArrayType = 0x8085,

		/// <summary>
		/// Specifies the stride (byte offset) between index array elements.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		IndexArrayStride = 0x8086,

		/// <summary>
		/// Specifies the count of indices in the index array for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_array</remarks>
		IndexArrayCountExt = 0x8087,

		/// <summary>
		/// Specifies the size of each texture coordinate in the texture coordinate array.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureCoordArraySize = 0x8088,

		/// <summary>
		/// Specifies the data type of the texture coordinate array.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureCoordArrayType = 0x8089,

		/// <summary>
		/// Specifies the stride (byte offset) between texture coordinate array elements.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureCoordArrayStride = 0x808A,

		/// <summary>
		/// Specifies the count of texture coordinates in the texture coordinate array for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_array</remarks>
		TextureCoordArrayCountExt = 0x808B,

		/// <summary>
		/// Specifies the stride (byte offset) between edge flag array elements.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		EdgeFlagArrayStride = 0x808C,

		/// <summary>
		/// Specifies the count of edge flags in the edge flag array for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_array</remarks>
		EdgeFlagArrayCountExt = 0x808D,

		/// <summary>
		/// Specifies the pointer to the vertex array.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		VertexArrayPointer = 0x808E,

		/// <summary>
		/// Specifies the pointer to the vertex array for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_array</remarks>
		VertexArrayPointerExt = 0x808E,

		/// <summary>
		/// Specifies the pointer to the normal array.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		NormalArrayPointer = 0x808F,

		/// <summary>
		/// Specifies the pointer to the normal array for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_array</remarks>
		NormalArrayPointerExt = 0x808F,

		/// <summary>
		/// Specifies the pointer to the color array.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ColorArrayPointer = 0x8090,

		/// <summary>
		/// Specifies the pointer to the color array for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_array</remarks>
		ColorArrayPointerExt = 0x8090,

		/// <summary>
		/// Specifies the pointer to the index array.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		IndexArrayPointer = 0x8091,

		/// <summary>
		/// Specifies the pointer to the index array for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_array</remarks>
		IndexArrayPointerExt = 0x8091,

		/// <summary>
		/// Specifies the pointer to the texture coordinate array.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureCoordArrayPointer = 0x8092,

		/// <summary>
		/// Specifies the pointer to the texture coordinate array for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_array</remarks>
		TextureCoordArrayPointerExt = 0x8092,

		/// <summary>
		/// Specifies the pointer to the edge flag array.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		EdgeFlagArrayPointer = 0x8093,

		/// <summary>
		/// Specifies the pointer to the edge flag array for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_array</remarks>
		EdgeFlagArrayPointerExt = 0x8093,

		/// <summary>
		/// Specifies interlaced rendering mode for SGIX extensions.
		/// </summary>
		/// <remarks></remarks>
		InterlaceSgix = 0x8094,

		/// <summary>
		/// Specifies detail texture for 2D textures (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		DetailTexture2DSgis = 0x8095,

		/// <summary>
		/// Specifies the binding for detail textures in 2D for SGIS extensions.
		/// </summary>
		/// <remarks></remarks>
		DetailTexture2DBindingSgis = 0x8096,

		/// <summary>
		/// Specifies linear detail texture filtering for SGIS extensions.
		/// </summary>
		/// <remarks></remarks>
		LinearDetailSgis = 0x8097,

		/// <summary>
		/// Specifies linear detail texture filtering with alpha for SGIS extensions.
		/// </summary>
		/// <remarks></remarks>
		LinearDetailAlphaSgis = 0x8098,

		/// <summary>
		/// Specifies linear detail texture filtering with color for SGIS extensions.
		/// </summary>
		/// <remarks></remarks>
		LinearDetailColorSgis = 0x8099,

		/// <summary>
		/// Specifies the level of detail for textures (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		DetailTextureLevelSgis = 0x809A,

		/// <summary>
		/// Specifies the mode for detail textures (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		DetailTextureModeSgis = 0x809B,

		/// <summary>
		/// Specifies function points for detail textures (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		DetailTextureFuncPointsSgis = 0x809C,

		/// <summary>
		/// Specifies multisampling for anti-aliasing.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Multisample = 0x809D,

		/// <summary>
		/// Specifies multisampling for anti-aliasing (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		MultisampleSgis = 0x809D,

		/// <summary>
		/// Specifies alpha-to-coverage sampling for anti-aliasing.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		SampleAlphaToCoverage = 0x809E,

		/// <summary>
		/// Specifies alpha-to-mask sampling for anti-aliasing (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		SampleAlphaToMaskSgis = 0x809E,

		/// <summary>
		/// Specifies sampling to one for anti-aliasing.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		SampleAlphaToOne = 0x809F,

		/// <summary>
		/// Specifies sampling to one for anti-aliasing (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		SampleAlphaToOneSgis = 0x809F,

		/// <summary>
		/// Specifies the sample coverage value for alpha blending.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		SampleCoverage = 0x80A0,

		/// <summary>
		/// Specifies the sample mask for controlling sample coverage (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		SampleMaskSgis = 0x80A0,

		/// <summary>
		/// Specifies a single-pass rendering mode (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_multisample</remarks>
		Gl1PassExt = 0x80A1,

		/// <summary>
		/// Specifies a single-pass rendering mode (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		Gl1PassSgis = 0x80A1,

		/// <summary>
		/// Specifies the first pass of a two-pass rendering mode (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_multisample</remarks>
		Gl2Pass0Ext = 0x80A2,

		/// <summary>
		/// Specifies the first pass of a two-pass rendering mode (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		Gl2Pass0Sgis = 0x80A2,

		/// <summary>
		/// Specifies the second pass of a two-pass rendering mode (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_multisample</remarks>
		Gl2Pass1Ext = 0x80A3,

		/// <summary>
		/// Specifies the second pass of a two-pass rendering mode (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		Gl2Pass1Sgis = 0x80A3,

		/// <summary>
		/// Specifies the first pass of a four-pass rendering mode (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_multisample</remarks>
		Gl4Pass0Ext = 0x80A4,

		/// <summary>
		/// Specifies the first pass of a four-pass rendering mode (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		Gl4Pass0Sgis = 0x80A4,

		/// <summary>
		/// Specifies the second pass of a four-pass rendering mode (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_multisample</remarks>
		Gl4Pass1Ext = 0x80A5,

		/// <summary>
		/// Specifies the second pass of a four-pass rendering mode (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		Gl4Pass1Sgis = 0x80A5,

		/// <summary>
		/// Specifies the third pass of a four-pass rendering mode (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_multisample</remarks>
		Gl4Pass2Ext = 0x80A6,

		/// <summary>
		/// Specifies the third pass of a four-pass rendering mode (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		Gl4Pass2Sgis = 0x80A6,

		/// <summary>
		/// Specifies the fourth pass of a four-pass rendering mode (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_multisample</remarks>
		Gl4Pass3Ext = 0x80A7,

		/// <summary>
		/// Specifies the fourth pass of a four-pass rendering mode (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		Gl4Pass3Sgis = 0x80A7,

		/// <summary>
		/// Specifies the number of sample buffers used for multisampling.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		SampleBuffers = 0x80A8,

		/// <summary>
		/// Specifies the number of sample buffers used for multisampling (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		SampleBuffersSgis = 0x80A8,

		/// <summary>
		/// Specifies the number of samples in a sample buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		Samples = 0x80A9,

		/// <summary>
		/// Specifies the number of samples in a sample buffer (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		SamplesSgis = 0x80A9,

		/// <summary>
		/// Specifies the sample coverage value.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		SampleCoverageValue = 0x80AA,

		/// <summary>
		/// Specifies the value of the sample mask (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		SampleMaskValueSgis = 0x80AA,

		/// <summary>
		/// Specifies whether to invert the sample coverage.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		SampleCoverageInvert = 0x80AB,

		/// <summary>
		/// Specifies whether to invert the sample mask (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		SampleMaskInvertSgis = 0x80AB,

		/// <summary>
		/// Specifies the sample pattern for multisampling (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		SamplePatternSgis = 0x80AC,

		/// <summary>
		/// Specifies linear sharpening of textures (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		LinearSharpenSgis = 0x80AD,

		/// <summary>
		/// Specifies linear sharpening of textures with alpha (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		LinearSharpenAlphaSgis = 0x80AE,

		/// <summary>
		/// Specifies linear sharpening of textures with color (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		LinearSharpenColorSgis = 0x80AF,

		/// <summary>
		/// Specifies function points for texture sharpening (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		SharpenTextureFuncPointsSgis = 0x80B0,

		/// <summary>
		/// Specifies the color matrix for color transformation (SGI extension).
		/// </summary>
		/// <remarks></remarks>
		ColorMatrixSgi = 0x80B1,

		/// <summary>
		/// Specifies the depth of the color matrix stack (SGI extension).
		/// </summary>
		/// <remarks></remarks>
		ColorMatrixStackDepthSgi = 0x80B2,

		/// <summary>
		/// Specifies the maximum depth of the color matrix stack (SGI extension).
		/// </summary>
		/// <remarks></remarks>
		MaxColorMatrixStackDepthSgi = 0x80B3,

		/// <summary>
		/// Specifies the red scale for post-color matrix transformations.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		PostColorMatrixRedScale = 0x80B4,

		/// <summary>
		/// Specifies the red scale for post-color matrix transformations (SGI extension).
		/// </summary>
		/// <remarks></remarks>
		PostColorMatrixRedScaleSgi = 0x80B4,

		/// <summary>
		/// Specifies the green scale for post-color matrix transformations.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		PostColorMatrixGreenScale = 0x80B5,

		/// <summary>
		/// Specifies the green scale for post-color matrix transformations (SGI extension).
		/// </summary>
		/// <remarks></remarks>
		PostColorMatrixGreenScaleSgi = 0x80B5,

		/// <summary>
		/// Specifies the blue scale for post-color matrix transformations.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		PostColorMatrixBlueScale = 0x80B6,

		/// <summary>
		/// Specifies the blue scale for post-color matrix transformations (SGI extension).
		/// </summary>
		/// <remarks></remarks>
		PostColorMatrixBlueScaleSgi = 0x80B6,

		/// <summary>
		/// Specifies the alpha scale for post-color matrix transformations.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		PostColorMatrixAlphaScale = 0x80B7,

		/// <summary>
		/// Specifies the alpha scale for post-color matrix transformations (SGI extension).
		/// </summary>
		/// <remarks></remarks>
		PostColorMatrixAlphaScaleSgi = 0x80B7,

		/// <summary>
		/// Specifies the red bias for post-color matrix transformations.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		PostColorMatrixRedBias = 0x80B8,

		/// <summary>
		/// Specifies the red bias for post-color matrix transformations (SGI extension).
		/// </summary>
		/// <remarks></remarks>
		PostColorMatrixRedBiasSgi = 0x80B8,

		/// <summary>
		/// Specifies the green bias for post-color matrix transformations.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		PostColorMatrixGreenBias = 0x80B9,

		/// <summary>
		/// Specifies the green bias for post-color matrix transformations (SGI extension).
		/// </summary>
		/// <remarks></remarks>
		PostColorMatrixGreenBiasSgi = 0x80B9,

		/// <summary>
		/// Specifies the blue bias for post-color matrix transformations.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		PostColorMatrixBlueBias = 0x80BA,

		/// <summary>
		/// Specifies the blue bias for post-color matrix transformations (SGI extension).
		/// </summary>
		/// <remarks></remarks>
		PostColorMatrixBlueBiasSgi = 0x80BA,

		/// <summary>
		/// Specifies the alpha bias for post-color matrix transformations.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		PostColorMatrixAlphaBias = 0x80BB,

		/// <summary>
		/// Specifies the alpha bias for post-color matrix transformations (SGI extension).
		/// </summary>
		/// <remarks></remarks>
		PostColorMatrixAlphaBiasSgi = 0x80BB,

		/// <summary>
		/// Specifies the texture color table (SGI extension).
		/// </summary>
		/// <remarks></remarks>
		TextureColorTableSgi = 0x80BC,

		/// <summary>
		/// Specifies a proxy for the texture color table (SGI extension).
		/// </summary>
		/// <remarks></remarks>
		ProxyTextureColorTableSgi = 0x80BD,

		/// <summary>
		/// Specifies texture environment bias for SGIX extensions.
		/// </summary>
		/// <remarks></remarks>
		TextureEnvBiasSgix = 0x80BE,

		/// <summary>
		/// Specifies shadow ambient properties for SGIX extensions.
		/// </summary>
		/// <remarks></remarks>
		ShadowAmbientSgix = 0x80BF,

		/// <summary>
		/// Specifies the destination color for RGB blending.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_EXT_draw_buffers_indexed<br/>GL_OES_draw_buffers_indexed</remarks>
		BlendDstRgb = 0x80C8,

		/// <summary>
		/// Specifies the source color for RGB blending.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_EXT_draw_buffers_indexed<br/>GL_OES_draw_buffers_indexed</remarks>
		BlendSrcRgb = 0x80C9,

		/// <summary>
		/// Specifies the destination alpha for blending.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_EXT_draw_buffers_indexed<br/>GL_OES_draw_buffers_indexed</remarks>
		BlendDstAlpha = 0x80CA,

		/// <summary>
		/// Specifies the source alpha for blending.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_EXT_draw_buffers_indexed<br/>GL_OES_draw_buffers_indexed</remarks>
		BlendSrcAlpha = 0x80CB,

		/// <summary>
		/// Specifies a color table for color lookup.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		ColorTable = 0x80D0,

		/// <summary>
		/// Specifies a color table for color lookup (SGI extension).
		/// </summary>
		/// <remarks></remarks>
		ColorTableSgi = 0x80D0,

		/// <summary>
		/// Specifies a color table for post-convolution processing.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		PostConvolutionColorTable = 0x80D1,

		/// <summary>
		/// Specifies a color table for post-convolution processing (SGI extension).
		/// </summary>
		/// <remarks></remarks>
		PostConvolutionColorTableSgi = 0x80D1,

		/// <summary>
		/// Specifies a color table for post-color matrix processing.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		PostColorMatrixColorTable = 0x80D2,

		/// <summary>
		/// Specifies a color table for post-color matrix processing (SGI extension).
		/// </summary>
		/// <remarks></remarks>
		PostColorMatrixColorTableSgi = 0x80D2,

		/// <summary>
		/// Specifies a proxy for color tables.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		ProxyColorTable = 0x80D3,

		/// <summary>
		/// Specifies a proxy for color tables (SGI extension).
		/// </summary>
		/// <remarks></remarks>
		ProxyColorTableSgi = 0x80D3,

		/// <summary>
		/// Specifies a proxy for post-convolution color tables.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		ProxyPostConvolutionColorTable = 0x80D4,

		/// <summary>
		/// Specifies a proxy for post-convolution color tables (SGI extension).
		/// </summary>
		/// <remarks></remarks>
		ProxyPostConvolutionColorTableSgi = 0x80D4,

		/// <summary>
		/// Specifies a proxy for post-color matrix color tables.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		ProxyPostColorMatrixColorTable = 0x80D5,

		/// <summary>
		/// Specifies a proxy for post-color matrix color tables (SGI extension).
		/// </summary>
		/// <remarks></remarks>
		ProxyPostColorMatrixColorTableSgi = 0x80D5,

		/// <summary>
		/// Specifies the scale factor for color tables.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		ColorTableScale = 0x80D6,

		/// <summary>
		/// Specifies the scale factor for color tables (SGI extension).
		/// </summary>
		/// <remarks></remarks>
		ColorTableScaleSgi = 0x80D6,

		/// <summary>
		/// Specifies the bias for color tables.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		ColorTableBias = 0x80D7,

		/// <summary>
		/// Specifies the bias for color tables (SGI extension).
		/// </summary>
		/// <remarks></remarks>
		ColorTableBiasSgi = 0x80D7,

		/// <summary>
		/// Specifies the format of the color table.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		ColorTableFormat = 0x80D8,

		/// <summary>
		/// Specifies the format of the color table (SGI extension).
		/// </summary>
		/// <remarks></remarks>
		ColorTableFormatSgi = 0x80D8,

		/// <summary>
		/// Specifies the width of the color table.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		ColorTableWidth = 0x80D9,

		/// <summary>
		/// Specifies the width of the color table (SGI extension).
		/// </summary>
		/// <remarks></remarks>
		ColorTableWidthSgi = 0x80D9,

		/// <summary>
		/// Specifies the size of the red component in the color table.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		ColorTableRedSize = 0x80DA,

		/// <summary>
		/// Specifies the size of the red component in the color table (SGI extension).
		/// </summary>
		/// <remarks></remarks>
		ColorTableRedSizeSgi = 0x80DA,

		/// <summary>
		/// Specifies the size of the green component in the color table.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		ColorTableGreenSize = 0x80DB,

		/// <summary>
		/// Specifies the size of the green component in the color table (SGI extension).
		/// </summary>
		/// <remarks></remarks>
		ColorTableGreenSizeSgi = 0x80DB,

		/// <summary>
		/// Specifies the size of the blue component in the color table.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		ColorTableBlueSize = 0x80DC,

		/// <summary>
		/// Specifies the size of the blue component in the color table (SGI extension).
		/// </summary>
		/// <remarks></remarks>
		ColorTableBlueSizeSgi = 0x80DC,

		/// <summary>
		/// Specifies the size of the alpha component in the color table.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		ColorTableAlphaSize = 0x80DD,

		/// <summary>
		/// Specifies the size of the alpha component in the color table (SGI extension).
		/// </summary>
		/// <remarks></remarks>
		ColorTableAlphaSizeSgi = 0x80DD,

		/// <summary>
		/// Specifies the size of the luminance component in the color table.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		ColorTableLuminanceSize = 0x80DE,

		/// <summary>
		/// Specifies the size of the luminance component in the color table (SGI extension).
		/// </summary>
		/// <remarks></remarks>
		ColorTableLuminanceSizeSgi = 0x80DE,

		/// <summary>
		/// Specifies the size of the intensity component in the color table.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		ColorTableIntensitySize = 0x80DF,

		/// <summary>
		/// Specifies the size of the intensity component in the color table (SGI extension).
		/// </summary>
		/// <remarks></remarks>
		ColorTableIntensitySizeSgi = 0x80DF,

		/// <summary>
		/// Specifies the order of the color components as blue, green, red.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Bgr = 0x80E0,

		/// <summary>
		/// Specifies the order of the color components as blue, green, red (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_bgra<br/>GL_MESA_bgra</remarks>
		BgrExt = 0x80E0,

		/// <summary>
		/// Specifies the order of the color components as blue, green, red, alpha.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_EXT_vertex_array_bgra<br/>GL_ARB_vertex_array_bgra</remarks>
		Bgra = 0x80E1,

		/// <summary>
		/// Specifies the order of the color components as blue, green, red, alpha (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_bgra<br/>GL_EXT_read_format_bgra<br/>GL_EXT_texture_format_BGRA8888<br/>GL_MESA_bgra</remarks>
		BgraExt = 0x80E1,

		/// <summary>
		/// Specifies the order of the color components as blue, green, red, alpha in image data.
		/// </summary>
		/// <remarks></remarks>
		BgraImg = 0x80E1,

		/// <summary>
		/// Specifies the maximum number of vertices in a single draw call.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		MaxElementsVertices = 0x80E8,

		/// <summary>
		/// Specifies the maximum number of indices in a single draw call.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		MaxElementsIndices = 0x80E9,

		/// <summary>
		/// Specifies the hint for using the Phong shading model in Win32 extensions.
		/// </summary>
		/// <remarks></remarks>
		PhongHintWin = 0x80EB,

		/// <summary>
		/// Specifies a buffer for parameters.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ParameterBuffer = 0x80EE,

		/// <summary>
		/// Specifies the hint for clipping volume (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_clip_volume_hint</remarks>
		ClipVolumeClippingHintExt = 0x80F0,

		/// <summary>
		/// Specifies dual alpha with 4 bits (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		DualAlpha4Sgis = 0x8110,

		/// <summary>
		/// Specifies dual alpha with 8 bits (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		DualAlpha8Sgis = 0x8111,

		/// <summary>
		/// Specifies dual alpha with 12 bits (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		DualAlpha12Sgis = 0x8112,

		/// <summary>
		/// Specifies dual alpha with 16 bits (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		DualAlpha16Sgis = 0x8113,

		/// <summary>
		/// Specifies dual luminance with 4 bits (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		DualLuminance4Sgis = 0x8114,

		/// <summary>
		/// Specifies dual luminance with 8 bits (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		DualLuminance8Sgis = 0x8115,

		/// <summary>
		/// Specifies dual luminance with 12 bits (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		DualLuminance12Sgis = 0x8116,

		/// <summary>
		/// Specifies dual luminance with 16 bits (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		DualLuminance16Sgis = 0x8117,

		/// <summary>
		/// Specifies dual intensity with 4 bits (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		DualIntensity4Sgis = 0x8118,

		/// <summary>
		/// Specifies dual intensity with 8 bits (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		DualIntensity8Sgis = 0x8119,

		/// <summary>
		/// Specifies dual intensity with 12 bits (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		DualIntensity12Sgis = 0x811A,

		/// <summary>
		/// Specifies dual intensity with 16 bits (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		DualIntensity16Sgis = 0x811B,

		/// <summary>
		/// Specifies dual luminance and alpha with 4 bits (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		DualLuminanceAlpha4Sgis = 0x811C,

		/// <summary>
		/// Specifies dual luminance and alpha with 8 bits (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		DualLuminanceAlpha8Sgis = 0x811D,

		/// <summary>
		/// Specifies quad alpha with 4 bits (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		QuadAlpha4Sgis = 0x811E,

		/// <summary>
		/// Specifies quad alpha with 8 bits (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		QuadAlpha8Sgis = 0x811F,

		/// <summary>
		/// Specifies quad luminance with 4 bits (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		QuadLuminance4Sgis = 0x8120,

		/// <summary>
		/// Specifies quad luminance with 8 bits (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		QuadLuminance8Sgis = 0x8121,

		/// <summary>
		/// Specifies quad intensity with 4 bits (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		QuadIntensity4Sgis = 0x8122,

		/// <summary>
		/// Specifies quad intensity with 8 bits (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		QuadIntensity8Sgis = 0x8123,

		/// <summary>
		/// Specifies dual texture selection (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		DualTextureSelectSgis = 0x8124,

		/// <summary>
		/// Specifies quad texture selection (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		QuadTextureSelectSgis = 0x8125,

		/// <summary>
		/// Specifies the minimum size of points.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PointSizeMin = 0x8126,

		/// <summary>
		/// Specifies the minimum size of points (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_point_parameters</remarks>
		PointSizeMinArb = 0x8126,

		/// <summary>
		/// Specifies the minimum size of points (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_point_parameters</remarks>
		PointSizeMinExt = 0x8126,

		/// <summary>
		/// Specifies the minimum size of points (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		PointSizeMinSgis = 0x8126,

		/// <summary>
		/// Specifies the maximum size of points.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PointSizeMax = 0x8127,

		/// <summary>
		/// Specifies the maximum size of points (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_point_parameters</remarks>
		PointSizeMaxArb = 0x8127,

		/// <summary>
		/// Specifies the maximum size of points (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_point_parameters</remarks>
		PointSizeMaxExt = 0x8127,

		/// <summary>
		/// Specifies the maximum size of points (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		PointSizeMaxSgis = 0x8127,

		/// <summary>
		/// Specifies the size threshold for point fading.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PointFadeThresholdSize = 0x8128,

		/// <summary>
		/// Specifies the size threshold for point fading (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_point_parameters</remarks>
		PointFadeThresholdSizeArb = 0x8128,

		/// <summary>
		/// Specifies the size threshold for point fading (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_point_parameters</remarks>
		PointFadeThresholdSizeExt = 0x8128,

		/// <summary>
		/// Specifies the size threshold for point fading (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		PointFadeThresholdSizeSgis = 0x8128,

		/// <summary>
		/// Specifies the distance attenuation factor (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_point_parameters</remarks>
		DistanceAttenuationExt = 0x8129,

		/// <summary>
		/// Specifies the distance attenuation factor (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		DistanceAttenuationSgis = 0x8129,

		/// <summary>
		/// Specifies point distance attenuation.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PointDistanceAttenuation = 0x8129,

		/// <summary>
		/// Specifies point distance attenuation (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_point_parameters</remarks>
		PointDistanceAttenuationArb = 0x8129,

		/// <summary>
		/// Specifies the fog function (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		FogFuncSgis = 0x812A,

		/// <summary>
		/// Specifies points for the fog function (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		FogFuncPointsSgis = 0x812B,

		/// <summary>
		/// Specifies the maximum number of fog function points (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		MaxFogFuncPointsSgis = 0x812C,

		/// <summary>
		/// Specifies clamping behavior for texture coordinates to the border.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ClampToBorder = 0x812D,

		/// <summary>
		/// Specifies clamping behavior for texture coordinates to the border (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_border_clamp</remarks>
		ClampToBorderArb = 0x812D,

		/// <summary>
		/// Specifies clamping behavior for texture coordinates to the border (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_border_clamp</remarks>
		ClampToBorderExt = 0x812D,

		/// <summary>
		/// Specifies clamping behavior for texture coordinates to the border (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_texture_border_clamp</remarks>
		ClampToBorderNv = 0x812D,

		/// <summary>
		/// Specifies clamping behavior for texture coordinates to the border (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		ClampToBorderSgis = 0x812D,

		/// <summary>
		/// Specifies clamping behavior for texture coordinates to the border (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_texture_border_clamp</remarks>
		ClampToBorderOes = 0x812D,

		/// <summary>
		/// Specifies a hint for multi-buffered textures (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		TextureMultiBufferHintSgix = 0x812E,

		/// <summary>
		/// Specifies clamping behavior for texture coordinates to the edge.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ClampToEdge = 0x812F,

		/// <summary>
		/// Specifies clamping behavior for texture coordinates to the edge (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		ClampToEdgeSgis = 0x812F,

		/// <summary>
		/// Specifies the number of volumes to skip when packing (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		PackSkipVolumesSgis = 0x8130,

		/// <summary>
		/// Specifies the depth of the packed image (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		PackImageDepthSgis = 0x8131,

		/// <summary>
		/// Specifies the number of volumes to skip when unpacking (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		UnpackSkipVolumesSgis = 0x8132,

		/// <summary>
		/// Specifies the depth of the unpacked image (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		UnpackImageDepthSgis = 0x8133,

		/// <summary>
		/// Specifies a 4D texture (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		Texture4DSgis = 0x8134,

		/// <summary>
		/// Specifies a proxy for a 4D texture (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		ProxyTexture4DSgis = 0x8135,

		/// <summary>
		/// Specifies the size of a 4D texture (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		Texture4DsizeSgis = 0x8136,

		/// <summary>
		/// Specifies the wrap mode for the Q coordinate (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		TextureWrapQSgis = 0x8137,

		/// <summary>
		/// Specifies the maximum size of a 4D texture (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		Max4DTextureSizeSgis = 0x8138,

		/// <summary>
		/// Specifies pixel texture generation (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		PixelTexGenSgix = 0x8139,

		/// <summary>
		/// Specifies the minimum level of detail for textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureMinLod = 0x813A,

		/// <summary>
		/// Specifies the minimum level of detail for texture filtering (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		TextureMinLodSgis = 0x813A,

		/// <summary>
		/// Specifies the maximum level of detail for texture filtering.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureMaxLod = 0x813B,

		/// <summary>
		/// Specifies the maximum level of detail for texture filtering (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		TextureMaxLodSgis = 0x813B,

		/// <summary>
		/// Specifies the base mipmap level of a texture.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureBaseLevel = 0x813C,

		/// <summary>
		/// Specifies the base mipmap level of a texture (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		TextureBaseLevelSgis = 0x813C,

		/// <summary>
		/// Specifies the maximum mipmap level of a texture.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureMaxLevel = 0x813D,

		/// <summary>
		/// Specifies the maximum mipmap level of a texture (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		TextureMaxLevelSgis = 0x813D,

		/// <summary>
		/// Specifies the best alignment for pixel tiles (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		PixelTileBestAlignmentSgix = 0x813E,

		/// <summary>
		/// Specifies the cache increment for pixel tiles (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		PixelTileCacheIncrementSgix = 0x813F,

		/// <summary>
		/// Specifies the width of pixel tiles (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		PixelTileWidthSgix = 0x8140,

		/// <summary>
		/// Specifies the height of pixel tiles (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		PixelTileHeightSgix = 0x8141,

		/// <summary>
		/// Specifies the width of the pixel tile grid (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		PixelTileGridWidthSgix = 0x8142,

		/// <summary>
		/// Specifies the height of the pixel tile grid (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		PixelTileGridHeightSgix = 0x8143,

		/// <summary>
		/// Specifies the depth of the pixel tile grid (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		PixelTileGridDepthSgix = 0x8144,

		/// <summary>
		/// Specifies the size of the pixel tile cache (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		PixelTileCacheSizeSgix = 0x8145,

		/// <summary>
		/// Specifies a filter with four components (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		Filter4Sgis = 0x8146,

		/// <summary>
		/// Specifies the size of the four-component texture filter (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		TextureFilter4SizeSgis = 0x8147,

		/// <summary>
		/// Specifies the sprite (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		SpriteSgix = 0x8148,

		/// <summary>
		/// Specifies the mode of the sprite (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		SpriteModeSgix = 0x8149,

		/// <summary>
		/// Specifies the axis for the sprite (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		SpriteAxisSgix = 0x814A,

		/// <summary>
		/// Specifies the translation for the sprite (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		SpriteTranslationSgix = 0x814B,

		/// <summary>
		/// Specifies axial sprite behavior (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		SpriteAxialSgix = 0x814C,

		/// <summary>
		/// Specifies object-aligned sprite behavior (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		SpriteObjectAlignedSgix = 0x814D,

		/// <summary>
		/// Specifies eye-aligned sprite behavior (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		SpriteEyeAlignedSgix = 0x814E,

		/// <summary>
		/// Specifies the binding of a 4D texture (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		Texture4DBindingSgis = 0x814F,

		/// <summary>
		/// Specifies the border color for convolutions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_imaging</remarks>
		ConvolutionBorderColor = 0x8154,

		/// <summary>
		/// Specifies the scale factor in the X direction for image transformations (HP extension).
		/// </summary>
		/// <remarks></remarks>
		ImageScaleXHp = 0x8155,

		/// <summary>
		/// Specifies the scale factor in the Y direction for image transformations (HP extension).
		/// </summary>
		/// <remarks></remarks>
		ImageScaleYHp = 0x8156,

		/// <summary>
		/// Specifies the translation in the X direction for image transformations (HP extension).
		/// </summary>
		/// <remarks></remarks>
		ImageTranslateXHp = 0x8157,

		/// <summary>
		/// Specifies the translation in the Y direction for image transformations (HP extension).
		/// </summary>
		/// <remarks></remarks>
		ImageTranslateYHp = 0x8158,

		/// <summary>
		/// Specifies the rotation angle for image transformations (HP extension).
		/// </summary>
		/// <remarks></remarks>
		ImageRotateAngleHp = 0x8159,

		/// <summary>
		/// Specifies the origin for rotation in the X direction for image transformations (HP extension).
		/// </summary>
		/// <remarks></remarks>
		ImageRotateOriginXHp = 0x815A,

		/// <summary>
		/// Specifies the origin for rotation in the Y direction for image transformations (HP extension).
		/// </summary>
		/// <remarks></remarks>
		ImageRotateOriginYHp = 0x815B,

		/// <summary>
		/// Specifies the magnification filter for images (HP extension).
		/// </summary>
		/// <remarks></remarks>
		ImageMagFilterHp = 0x815C,

		/// <summary>
		/// Specifies the minification filter for images (HP extension).
		/// </summary>
		/// <remarks></remarks>
		ImageMinFilterHp = 0x815D,

		/// <summary>
		/// Specifies the cubic weight for image transformations (HP extension).
		/// </summary>
		/// <remarks></remarks>
		ImageCubicWeightHp = 0x815E,

		/// <summary>
		/// Specifies 2D image transformations (HP extension).
		/// </summary>
		/// <remarks></remarks>
		ImageTransform2DHp = 0x8161,

		/// <summary>
		/// Specifies linear clipmap filtering (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		LinearClipmapLinearSgix = 0x8170,

		/// <summary>
		/// Specifies the center of the clipmap (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		TextureClipmapCenterSgix = 0x8171,

		/// <summary>
		/// Specifies the frame of the clipmap (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		TextureClipmapFrameSgix = 0x8172,

		/// <summary>
		/// Specifies the offset for the clipmap (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		TextureClipmapOffsetSgix = 0x8173,

		/// <summary>
		/// Specifies the virtual depth of the clipmap (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		TextureClipmapVirtualDepthSgix = 0x8174,

		/// <summary>
		/// Specifies the LOD offset for the clipmap (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		TextureClipmapLodOffsetSgix = 0x8175,

		/// <summary>
		/// Specifies the depth of the clipmap (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		TextureClipmapDepthSgix = 0x8176,

		/// <summary>
		/// Specifies the maximum depth of the clipmap (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		MaxClipmapDepthSgix = 0x8177,

		/// <summary>
		/// Specifies the maximum virtual depth of the clipmap (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		MaxClipmapVirtualDepthSgix = 0x8178,

		/// <summary>
		/// Specifies the bias for post texture filtering (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		PostTextureFilterBiasSgix = 0x8179,

		/// <summary>
		/// Specifies the scale for post texture filtering (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		PostTextureFilterScaleSgix = 0x817A,

		/// <summary>
		/// Specifies the bias range for post texture filtering (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		PostTextureFilterBiasRangeSgix = 0x817B,

		/// <summary>
		/// Specifies the scale range for post texture filtering (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		PostTextureFilterScaleRangeSgix = 0x817C,

		/// <summary>
		/// Specifies the reference plane for operations (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		ReferencePlaneSgix = 0x817D,

		/// <summary>
		/// Specifies the equation for the reference plane (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		ReferencePlaneEquationSgix = 0x817E,

		/// <summary>
		/// Specifies the first instrument for IR measurements (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		IrInstrument1Sgix = 0x817F,

		/// <summary>
		/// Specifies the pointer to the instrument buffer (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		InstrumentBufferPointerSgix = 0x8180,

		/// <summary>
		/// Specifies the measurements taken by the instrument (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		InstrumentMeasurementsSgix = 0x8181,

		/// <summary>
		/// Specifies the priority of display lists (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		ListPrioritySgix = 0x8182,

		/// <summary>
		/// Specifies calligraphic fragments (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		CalligraphicFragmentSgix = 0x8183,

		/// <summary>
		/// Specifies ceiling behavior for Q generation (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		PixelTexGenQCeilingSgix = 0x8184,

		/// <summary>
		/// Specifies rounding behavior for Q generation (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		PixelTexGenQRoundSgix = 0x8185,

		/// <summary>
		/// Specifies floor behavior for Q generation (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		PixelTexGenQFloorSgix = 0x8186,

		/// <summary>
		/// Specifies alpha generation behavior (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		PixelTexGenAlphaLsSgix = 0x8189,

		/// <summary>
		/// Specifies multi-sample alpha generation behavior (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		PixelTexGenAlphaMsSgix = 0x818A,

		/// <summary>
		/// Specifies zoom behavior for frames (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		FramezoomSgix = 0x818B,

		/// <summary>
		/// Specifies the zoom factor for frames (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		FramezoomFactorSgix = 0x818C,

		/// <summary>
		/// Specifies the maximum frame zoom factor (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		MaxFramezoomFactorSgix = 0x818D,

		/// <summary>
		/// Specifies the LOD bias for the S texture coordinate (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		TextureLodBiasSSgix = 0x818E,

		/// <summary>
		/// Specifies the LOD bias for the T texture coordinate (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		TextureLodBiasTSgix = 0x818F,

		/// <summary>
		/// Specifies the LOD bias for the R texture coordinate (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		TextureLodBiasRSgix = 0x8190,

		/// <summary>
		/// Specifies the generation of mipmaps.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		GenerateMipmap = 0x8191,

		/// <summary>
		/// Specifies the generation of mipmaps (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		GenerateMipmapSgis = 0x8191,

		/// <summary>
		/// Specifies a hint for generating mipmaps.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		GenerateMipmapHint = 0x8192,

		/// <summary>
		/// Specifies a hint for generating mipmaps (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		GenerateMipmapHintSgis = 0x8192,

		/// <summary>
		/// Specifies geometry deformation (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		GeometryDeformationSgix = 0x8194,

		/// <summary>
		/// Specifies texture deformation (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		TextureDeformationSgix = 0x8195,

		/// <summary>
		/// Specifies a mask for deformations (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		DeformationsMaskSgix = 0x8196,

		/// <summary>
		/// Specifies the fog offset (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		FogOffsetSgix = 0x8198,

		/// <summary>
		/// Specifies the value for fog offset (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		FogOffsetValueSgix = 0x8199,

		/// <summary>
		/// Specifies texture comparison behavior (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		TextureCompareSgix = 0x819A,

		/// <summary>
		/// Specifies the operator used for texture comparison (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		TextureCompareOperatorSgix = 0x819B,

		/// <summary>
		/// Specifies the less than or equal comparison for texture (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		TextureLequalRSgix = 0x819C,

		/// <summary>
		/// Specifies the greater than or equal comparison for texture (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		TextureGequalRSgix = 0x819D,

		/// <summary>
		/// Specifies a 16-bit depth component for textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ANGLE_depth_texture</remarks>
		DepthComponent16 = 0x81A5,

		/// <summary>
		/// Specifies a 16-bit depth component for textures (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_depth_texture</remarks>
		DepthComponent16Arb = 0x81A5,

		/// <summary>
		/// Specifies a 16-bit depth component for textures (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_framebuffer_object<br/>GL_OES_required_internalformat</remarks>
		DepthComponent16Oes = 0x81A5,

		/// <summary>
		/// Specifies a 16-bit depth component for textures (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		DepthComponent16Sgix = 0x81A5,

		/// <summary>
		/// Specifies a 24-bit depth component for textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		DepthComponent24 = 0x81A6,

		/// <summary>
		/// Specifies a 24-bit depth component for textures (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_depth_texture</remarks>
		DepthComponent24Arb = 0x81A6,

		/// <summary>
		/// Specifies a 24-bit depth component for textures (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_depth24<br/>GL_OES_required_internalformat</remarks>
		DepthComponent24Oes = 0x81A6,

		/// <summary>
		/// Specifies a 24-bit depth component for textures (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		DepthComponent24Sgix = 0x81A6,

		/// <summary>
		/// Specifies a 32-bit depth component for textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		DepthComponent32 = 0x81A7,

		/// <summary>
		/// Specifies a 32-bit depth component for textures (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_depth_texture</remarks>
		DepthComponent32Arb = 0x81A7,

		/// <summary>
		/// Specifies a 32-bit depth component for textures (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ANGLE_depth_texture<br/>GL_OES_depth32<br/>GL_OES_required_internalformat</remarks>
		DepthComponent32Oes = 0x81A7,

		/// <summary>
		/// Specifies a 32-bit depth component for textures (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		DepthComponent32Sgix = 0x81A7,

		/// <summary>
		/// Specifies eye position based vertex culling (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_cull_vertex</remarks>
		CullVertexEyePositionExt = 0x81AB,

		/// <summary>
		/// Specifies object position based vertex culling (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_cull_vertex</remarks>
		CullVertexObjectPositionExt = 0x81AC,

		/// <summary>
		/// Specifies YCrCb 4:2:2 format (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		Ycrcb422Sgix = 0x81BB,

		/// <summary>
		/// Specifies YCrCb 4:4:4 format (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		Ycrcb444Sgix = 0x81BC,

		/// <summary>
		/// Specifies the eye distance to a point for calculations (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		EyeDistanceToPointSgis = 0x81F0,

		/// <summary>
		/// Specifies the object distance to a point for calculations (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		ObjectDistanceToPointSgis = 0x81F1,

		/// <summary>
		/// Specifies the eye distance to a line for calculations (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		EyeDistanceToLineSgis = 0x81F2,

		/// <summary>
		/// Specifies the object distance to a line for calculations (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		ObjectDistanceToLineSgis = 0x81F3,

		/// <summary>
		/// Specifies the eye point for calculations (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		EyePointSgis = 0x81F4,

		/// <summary>
		/// Specifies the object point for calculations (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		ObjectPointSgis = 0x81F5,

		/// <summary>
		/// Specifies the eye line for calculations (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		EyeLineSgis = 0x81F6,

		/// <summary>
		/// Specifies the object line for calculations (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		ObjectLineSgis = 0x81F7,

		/// <summary>
		/// Specifies color control for lighting.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		LightModelColorControl = 0x81F8,

		/// <summary>
		/// Specifies color control for lighting (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_separate_specular_color</remarks>
		LightModelColorControlExt = 0x81F8,

		/// <summary>
		/// Specifies single color lighting behavior.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		SingleColor = 0x81F9,

		/// <summary>
		/// Specifies single color lighting behavior (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_separate_specular_color</remarks>
		SingleColorExt = 0x81F9,

		/// <summary>
		/// Specifies separate specular color behavior.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		SeparateSpecularColor = 0x81FA,

		/// <summary>
		/// Specifies separate specular color behavior (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_separate_specular_color</remarks>
		SeparateSpecularColorExt = 0x81FA,

		/// <summary>
		/// Specifies shared texture palette behavior (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_shared_texture_palette</remarks>
		SharedTexturePaletteExt = 0x81FB,

		/// <summary>
		/// Specifies text fragment shader behavior (ATI extension).
		/// </summary>
		/// <remarks></remarks>
		TextFragmentShaderAti = 0x8200,

		/// <summary>
		/// Specifies the color encoding for framebuffer attachments.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		FramebufferAttachmentColorEncoding = 0x8210,

		/// <summary>
		/// Specifies the color encoding for framebuffer attachments (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_sRGB</remarks>
		FramebufferAttachmentColorEncodingExt = 0x8210,

		/// <summary>
		/// Specifies the component type for framebuffer attachments.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		FramebufferAttachmentComponentType = 0x8211,

		/// <summary>
		/// Specifies the component type for framebuffer attachments (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_color_buffer_half_float</remarks>
		FramebufferAttachmentComponentTypeExt = 0x8211,

		/// <summary>
		/// Specifies the red size for framebuffer attachments.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		FramebufferAttachmentRedSize = 0x8212,

		/// <summary>
		/// Specifies the green size for framebuffer attachments.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		FramebufferAttachmentGreenSize = 0x8213,

		/// <summary>
		/// Specifies the blue size for framebuffer attachments.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		FramebufferAttachmentBlueSize = 0x8214,

		/// <summary>
		/// Specifies the alpha size for framebuffer attachments.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		FramebufferAttachmentAlphaSize = 0x8215,

		/// <summary>
		/// Specifies the depth size for framebuffer attachments.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		FramebufferAttachmentDepthSize = 0x8216,

		/// <summary>
		/// Specifies the stencil size for framebuffer attachments.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		FramebufferAttachmentStencilSize = 0x8217,

		/// <summary>
		/// Specifies an undefined framebuffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		FramebufferUndefined = 0x8219,

		/// <summary>
		/// Specifies a depth-stencil attachment for framebuffers.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		DepthStencilAttachment = 0x821A,

		/// <summary>
		/// Specifies the major version of the OpenGL context.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		MajorVersion = 0x821B,

		/// <summary>
		/// Specifies the minor version of the OpenGL context.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		MinorVersion = 0x821C,

		/// <summary>
		/// Specifies the number of extensions available in the OpenGL context.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		NumExtensions = 0x821D,

		/// <summary>
		/// Specifies the context flags for the OpenGL context.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ContextFlags = 0x821E,

		/// <summary>
		/// Specifies immutable storage for buffers.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_buffer_storage</remarks>
		BufferImmutableStorage = 0x821F,

		/// <summary>
		/// Specifies storage flags for buffers.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_buffer_storage</remarks>
		BufferStorageFlags = 0x8220,

		/// <summary>
		/// Specifies a compressed red texture format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		CompressedRed = 0x8225,

		/// <summary>
		/// Specifies a compressed RG texture format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		CompressedRg = 0x8226,

		/// <summary>
		/// Specifies RG color format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_rg</remarks>
		Rg = 0x8227,

		/// <summary>
		/// Specifies RG integer format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_rg</remarks>
		RgInteger = 0x8228,

		/// <summary>
		/// Specifies 8-bit red component format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_rg</remarks>
		R8 = 0x8229,

		/// <summary>
		/// Specifies 8-bit red component format (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_storage<br/>GL_EXT_texture_rg</remarks>
		R8Ext = 0x8229,

		/// <summary>
		/// Specifies 16-bit red component format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_rg</remarks>
		R16 = 0x822A,

		/// <summary>
		/// Specifies 16-bit red component format (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_norm16</remarks>
		R16Ext = 0x822A,

		/// <summary>
		/// Specifies 8-bit RG format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_rg</remarks>
		Rg8 = 0x822B,

		/// <summary>
		/// Specifies 8-bit RG format (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_storage<br/>GL_EXT_texture_rg</remarks>
		Rg8Ext = 0x822B,

		/// <summary>
		/// Specifies 16-bit RG format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_rg</remarks>
		Rg16 = 0x822C,

		/// <summary>
		/// Specifies 16-bit RG format (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_norm16</remarks>
		Rg16Ext = 0x822C,

		/// <summary>
		/// Specifies 16-bit floating-point red component format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_rg</remarks>
		R16F = 0x822D,

		/// <summary>
		/// Specifies 16-bit floating-point red component format (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_storage<br/>GL_EXT_color_buffer_half_float</remarks>
		R16FExt = 0x822D,

		/// <summary>
		/// Specifies 32-bit floating-point red component format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_rg</remarks>
		R32F = 0x822E,

		/// <summary>
		/// Specifies 32-bit floating-point red component format (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_storage</remarks>
		R32FExt = 0x822E,

		/// <summary>
		/// Specifies 16-bit floating-point RG format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_rg</remarks>
		Rg16F = 0x822F,

		/// <summary>
		/// Specifies 16-bit floating-point RG format (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_storage<br/>GL_EXT_color_buffer_half_float</remarks>
		Rg16FExt = 0x822F,

		/// <summary>
		/// Specifies 32-bit floating-point RG format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_rg</remarks>
		Rg32F = 0x8230,

		/// <summary>
		/// Specifies a 32-bit floating-point RG format (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_storage</remarks>
		Rg32FExt = 0x8230,

		/// <summary>
		/// Specifies an 8-bit signed integer red component format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_rg</remarks>
		R8I = 0x8231,

		/// <summary>
		/// Specifies an 8-bit unsigned integer red component format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_rg</remarks>
		R8Ui = 0x8232,

		/// <summary>
		/// Specifies a 16-bit signed integer red component format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_rg</remarks>
		R16I = 0x8233,

		/// <summary>
		/// Specifies a 16-bit unsigned integer red component format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_rg</remarks>
		R16Ui = 0x8234,

		/// <summary>
		/// Specifies a 32-bit signed integer red component format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_rg</remarks>
		R32I = 0x8235,

		/// <summary>
		/// Specifies a 32-bit unsigned integer red component format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_rg</remarks>
		R32Ui = 0x8236,

		/// <summary>
		/// Specifies an 8-bit signed integer RG format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_rg</remarks>
		Rg8I = 0x8237,

		/// <summary>
		/// Specifies an 8-bit unsigned integer RG format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_rg<br/>GL_AMD_interleaved_elements</remarks>
		Rg8Ui = 0x8238,

		/// <summary>
		/// Specifies a 16-bit signed integer RG format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_rg</remarks>
		Rg16I = 0x8239,

		/// <summary>
		/// Specifies a 16-bit unsigned integer RG format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_rg<br/>GL_AMD_interleaved_elements</remarks>
		Rg16Ui = 0x823A,

		/// <summary>
		/// Specifies a 32-bit signed integer RG format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_rg</remarks>
		Rg32I = 0x823B,

		/// <summary>
		/// Specifies a 32-bit unsigned integer RG format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_rg</remarks>
		Rg32Ui = 0x823C,

		/// <summary>
		/// Specifies synchronous debugging output behavior.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_KHR_debug</remarks>
		DebugOutputSynchronous = 0x8242,

		/// <summary>
		/// Specifies the function to call for debug messages.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_KHR_debug</remarks>
		DebugCallbackFunction = 0x8244,

		/// <summary>
		/// Specifies user parameter for the debug callback function.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_KHR_debug</remarks>
		DebugCallbackUserParam = 0x8245,

		/// <summary>
		/// Specifies the source of debug messages as API calls.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_KHR_debug</remarks>
		DebugSourceApi = 0x8246,

		/// <summary>
		/// Specifies the source of debug messages as window system related.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_KHR_debug</remarks>
		DebugSourceWindowSystem = 0x8247,

		/// <summary>
		/// Specifies the source of debug messages as shader compiler related.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_KHR_debug</remarks>
		DebugSourceShaderCompiler = 0x8248,

		/// <summary>
		/// Specifies the source of debug messages as third-party applications.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_KHR_debug</remarks>
		DebugSourceThirdParty = 0x8249,

		/// <summary>
		/// Specifies the source of debug messages as application related.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_KHR_debug</remarks>
		DebugSourceApplication = 0x824A,

		/// <summary>
		/// Specifies the source of debug messages as other.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_KHR_debug</remarks>
		DebugSourceOther = 0x824B,

		/// <summary>
		/// Specifies an error type debug message.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_KHR_debug</remarks>
		DebugTypeError = 0x824C,

		/// <summary>
		/// Specifies a deprecated behavior type debug message.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_KHR_debug</remarks>
		DebugTypeDeprecatedBehavior = 0x824D,

		/// <summary>
		/// Specifies an undefined behavior type debug message.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_KHR_debug</remarks>
		DebugTypeUndefinedBehavior = 0x824E,

		/// <summary>
		/// Specifies a portability type debug message.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_KHR_debug</remarks>
		DebugTypePortability = 0x824F,

		/// <summary>
		/// Specifies a performance type debug message.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_KHR_debug</remarks>
		DebugTypePerformance = 0x8250,

		/// <summary>
		/// Specifies another type of debug message.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_KHR_debug</remarks>
		DebugTypeOther = 0x8251,

		/// <summary>
		/// Specifies a guilty context reset behavior.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_KHR_robustness</remarks>
		GuiltyContextReset = 0x8253,

		/// <summary>
		/// Specifies an innocent context reset behavior.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_KHR_robustness</remarks>
		InnocentContextReset = 0x8254,

		/// <summary>
		/// Specifies an unknown context reset behavior.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_KHR_robustness</remarks>
		UnknownContextReset = 0x8255,

		/// <summary>
		/// Specifies a hint that program binaries are retrievable.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_get_program_binary</remarks>
		ProgramBinaryRetrievableHint = 0x8257,

		/// <summary>
		/// Specifies that a program is separable.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_separate_shader_objects</remarks>
		ProgramSeparable = 0x8258,

		/// <summary>
		/// Specifies the currently active program.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_separate_shader_objects</remarks>
		ActiveProgram = 0x8259,

		/// <summary>
		/// Specifies the program pipeline binding.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_separate_shader_objects</remarks>
		ProgramPipelineBinding = 0x825A,

		/// <summary>
		/// Specifies the maximum number of viewports.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_viewport_array</remarks>
		MaxViewports = 0x825B,

		/// <summary>
		/// Specifies the number of bits for subpixel precision in viewports.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_viewport_array</remarks>
		ViewportSubpixelBits = 0x825C,

		/// <summary>
		/// Specifies the bounds range for viewports.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_viewport_array</remarks>
		ViewportBoundsRange = 0x825D,

		/// <summary>
		/// Specifies the layer provoking vertex behavior.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_viewport_array</remarks>
		LayerProvokingVertex = 0x825E,

		/// <summary>
		/// Specifies the viewport index provoking vertex behavior.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_viewport_array</remarks>
		ViewportIndexProvokingVertex = 0x825F,

		/// <summary>
		/// Specifies the maximum number of uniform components in compute shaders.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_compute_shader</remarks>
		MaxComputeUniformComponents = 0x8263,

		/// <summary>
		/// Specifies the maximum number of atomic counter buffers in compute shaders.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_compute_shader</remarks>
		MaxComputeAtomicCounterBuffers = 0x8264,

		/// <summary>
		/// Specifies the maximum number of atomic counters in compute shaders.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_compute_shader</remarks>
		MaxComputeAtomicCounters = 0x8265,

		/// <summary>
		/// Specifies the maximum combined uniform components across all compute shaders.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_compute_shader</remarks>
		MaxCombinedComputeUniformComponents = 0x8266,

		/// <summary>
		/// Specifies the work group size in compute shaders.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_compute_shader</remarks>
		ComputeWorkGroupSize = 0x8267,

		/// <summary>
		/// Specifies a debug type marker.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_KHR_debug</remarks>
		DebugTypeMarker = 0x8268,

		/// <summary>
		/// Specifies the start of a debug push group.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_KHR_debug</remarks>
		DebugTypePushGroup = 0x8269,

		/// <summary>
		/// Specifies the end of a debug push group.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_KHR_debug</remarks>
		DebugTypePopGroup = 0x826A,

		/// <summary>
		/// Specifies a notification severity for debug messages.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_KHR_debug</remarks>
		DebugSeverityNotification = 0x826B,

		/// <summary>
		/// Specifies the maximum depth of debug group stack.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_KHR_debug</remarks>
		MaxDebugGroupStackDepth = 0x826C,

		/// <summary>
		/// Specifies the current depth of the debug group stack.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_KHR_debug</remarks>
		DebugGroupStackDepth = 0x826D,

		/// <summary>
		/// Specifies the maximum number of uniform locations available.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_explicit_uniform_location</remarks>
		MaxUniformLocations = 0x826E,

		/// <summary>
		/// Specifies if a given internal format is supported.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		InternalformatSupported = 0x826F,

		/// <summary>
		/// Specifies the preferred internal format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		InternalformatPreferred = 0x8270,

		/// <summary>
		/// Specifies the size of the red component in an internal format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		InternalformatRedSize = 0x8271,

		/// <summary>
		/// Specifies the size of the green component in an internal format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		InternalformatGreenSize = 0x8272,

		/// <summary>
		/// Specifies the size of the blue component in an internal format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		InternalformatBlueSize = 0x8273,

		/// <summary>
		/// Specifies the size of the alpha component in an internal format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		InternalformatAlphaSize = 0x8274,

		/// <summary>
		/// Specifies the size of the depth component in an internal format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		InternalformatDepthSize = 0x8275,

		/// <summary>
		/// Specifies the size of the stencil component in an internal format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		InternalformatStencilSize = 0x8276,

		/// <summary>
		/// Specifies the size of shared components in an internal format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		InternalformatSharedSize = 0x8277,

		/// <summary>
		/// Specifies the type of the red component in an internal format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		InternalformatRedType = 0x8278,

		/// <summary>
		/// Specifies the type of the green component in an internal format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		InternalformatGreenType = 0x8279,

		/// <summary>
		/// Specifies the type of the blue component in an internal format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		InternalformatBlueType = 0x827A,

		/// <summary>
		/// Specifies the type of the alpha component in an internal format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		InternalformatAlphaType = 0x827B,

		/// <summary>
		/// Specifies the type of the depth component in an internal format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		InternalformatDepthType = 0x827C,

		/// <summary>
		/// Specifies the type of the stencil component in an internal format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		InternalformatStencilType = 0x827D,

		/// <summary>
		/// Specifies the maximum width of textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		MaxWidth = 0x827E,

		/// <summary>
		/// Specifies the maximum height of textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		MaxHeight = 0x827F,

		/// <summary>
		/// Specifies the maximum depth of textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		MaxDepth = 0x8280,

		/// <summary>
		/// Specifies the maximum number of layers in 3D textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		MaxLayers = 0x8281,

		/// <summary>
		/// Specifies the number of color components.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		ColorComponents = 0x8283,

		/// <summary>
		/// Specifies if color rendering is supported.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		ColorRenderable = 0x8286,

		/// <summary>
		/// Specifies if depth rendering is supported.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		DepthRenderable = 0x8287,

		/// <summary>
		/// Specifies if stencil rendering is supported.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		StencilRenderable = 0x8288,

		/// <summary>
		/// Specifies if the framebuffer is renderable.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		FramebufferRenderable = 0x8289,

		/// <summary>
		/// Specifies if the framebuffer is renderable and layered.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		FramebufferRenderableLayered = 0x828A,

		/// <summary>
		/// Specifies if framebuffer blending is supported.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		FramebufferBlend = 0x828B,

		/// <summary>
		/// Specifies the read pixels operation.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		ReadPixels = 0x828C,

		/// <summary>
		/// Specifies the format for reading pixels.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		ReadPixelsFormat = 0x828D,

		/// <summary>
		/// Specifies the data type for reading pixels.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		ReadPixelsType = 0x828E,

		/// <summary>
		/// Specifies the format of a texture image.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		TextureImageFormat = 0x828F,

		/// <summary>
		/// Specifies the data type of a texture image.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		TextureImageType = 0x8290,

		/// <summary>
		/// Specifies the format for getting a texture image.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		GetTextureImageFormat = 0x8291,

		/// <summary>
		/// Specifies the data type for getting a texture image.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		GetTextureImageType = 0x8292,

		/// <summary>
		/// Specifies the mipmap generation behavior.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		Mipmap = 0x8293,

		/// <summary>
		/// Specifies automatic mipmap generation.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		AutoGenerateMipmap = 0x8295,

		/// <summary>
		/// Specifies the color encoding method.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		ColorEncoding = 0x8296,

		/// <summary>
		/// Specifies if sRGB read is supported.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		SrgbRead = 0x8297,

		/// <summary>
		/// Specifies if sRGB write is supported.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		SrgbWrite = 0x8298,

		/// <summary>
		/// Specifies the filtering method for textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		Filter = 0x829A,

		/// <summary>
		/// Specifies if vertex textures are supported.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		VertexTexture = 0x829B,

		/// <summary>
		/// Specifies if tessellation control textures are supported.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		TessControlTexture = 0x829C,

		/// <summary>
		/// Specifies if tessellation evaluation textures are supported.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		TessEvaluationTexture = 0x829D,

		/// <summary>
		/// Specifies if geometry textures are supported.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		GeometryTexture = 0x829E,

		/// <summary>
		/// Specifies if fragment textures are supported.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		FragmentTexture = 0x829F,

		/// <summary>
		/// Specifies if compute textures are supported.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		ComputeTexture = 0x82A0,

		/// <summary>
		/// Specifies if shadow textures are supported.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		TextureShadow = 0x82A1,

		/// <summary>
		/// Specifies if texture gathering is supported.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		TextureGather = 0x82A2,

		/// <summary>
		/// Specifies if shadow texture gathering is supported.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		TextureGatherShadow = 0x82A3,

		/// <summary>
		/// Specifies the shader image load operation.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		ShaderImageLoad = 0x82A4,

		/// <summary>
		/// Specifies the shader image store operation.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		ShaderImageStore = 0x82A5,

		/// <summary>
		/// Specifies atomic operations on shader images.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		ShaderImageAtomic = 0x82A6,

		/// <summary>
		/// Specifies the size of texels in images.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		ImageTexelSize = 0x82A7,

		/// <summary>
		/// Specifies the compatibility class for images.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		ImageCompatibilityClass = 0x82A8,

		/// <summary>
		/// Specifies the pixel format of an image.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		ImagePixelFormat = 0x82A9,

		/// <summary>
		/// Specifies the pixel type of an image.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		ImagePixelType = 0x82AA,

		/// <summary>
		/// Specifies simultaneous texture and depth testing behavior.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		SimultaneousTextureAndDepthTest = 0x82AC,

		/// <summary>
		/// Specifies simultaneous texture and stencil testing behavior.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		SimultaneousTextureAndStencilTest = 0x82AD,

		/// <summary>
		/// Specifies simultaneous texture and depth writing behavior.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		SimultaneousTextureAndDepthWrite = 0x82AE,

		/// <summary>
		/// Specifies simultaneous texture and stencil writing behavior.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		SimultaneousTextureAndStencilWrite = 0x82AF,

		/// <summary>
		/// Specifies the width of a compressed texture block.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		TextureCompressedBlockWidth = 0x82B1,

		/// <summary>
		/// Specifies the height of a compressed texture block.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		TextureCompressedBlockHeight = 0x82B2,

		/// <summary>
		/// Specifies the size of a compressed texture block.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		TextureCompressedBlockSize = 0x82B3,

		/// <summary>
		/// Specifies the clear buffer operation.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		ClearBuffer = 0x82B4,

		/// <summary>
		/// Specifies the texture view operation.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		TextureView = 0x82B5,

		/// <summary>
		/// Specifies the compatibility class for views.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		ViewCompatibilityClass = 0x82B6,

		/// <summary>
		/// Specifies the vertex attribute binding.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_vertex_attrib_binding</remarks>
		VertexAttribBinding = 0x82D4,

		/// <summary>
		/// Specifies the relative offset for vertex attributes.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_vertex_attrib_binding</remarks>
		VertexAttribRelativeOffset = 0x82D5,

		/// <summary>
		/// Specifies the divisor for vertex binding.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_vertex_attrib_binding</remarks>
		VertexBindingDivisor = 0x82D6,

		/// <summary>
		/// Specifies the offset for vertex binding.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_vertex_attrib_binding</remarks>
		VertexBindingOffset = 0x82D7,

		/// <summary>
		/// Specifies the stride for vertex binding.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_vertex_attrib_binding</remarks>
		VertexBindingStride = 0x82D8,

		/// <summary>
		/// Specifies the maximum relative offset for vertex attributes.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_vertex_attrib_binding</remarks>
		MaxVertexAttribRelativeOffset = 0x82D9,

		/// <summary>
		/// Specifies the maximum number of vertex attrib bindings.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_vertex_attrib_binding</remarks>
		MaxVertexAttribBindings = 0x82DA,

		/// <summary>
		/// Specifies buffer objects.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_KHR_debug</remarks>
		Buffer = 0x82E0,

		/// <summary>
		/// Specifies shader objects.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_KHR_debug</remarks>
		Shader = 0x82E1,

		/// <summary>
		/// Specifies program objects.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_KHR_debug</remarks>
		Program = 0x82E2,

		/// <summary>
		/// Specifies query objects.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_KHR_debug</remarks>
		Query = 0x82E3,

		/// <summary>
		/// Specifies program pipeline objects.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_KHR_debug</remarks>
		ProgramPipeline = 0x82E4,

		/// <summary>
		/// Specifies sampler objects.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_EXT_debug_label<br/>GL_KHR_debug</remarks>
		Sampler = 0x82E6,

		/// <summary>
		/// Specifies the maximum length of labels.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_KHR_debug</remarks>
		MaxLabelLength = 0x82E8,

		/// <summary>
		/// Specifies the target for queries.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_direct_state_access</remarks>
		QueryTarget = 0x82EA,

		/// <summary>
		/// Specifies overflow in transform feedback operations.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TransformFeedbackOverflow = 0x82EC,

		/// <summary>
		/// Specifies the number of vertices submitted.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		VerticesSubmitted = 0x82EE,

		/// <summary>
		/// Specifies the number of primitives submitted.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PrimitivesSubmitted = 0x82EF,

		/// <summary>
		/// Specifies the number of invocations of the vertex shader.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		VertexShaderInvocations = 0x82F0,

		/// <summary>
		/// Specifies hints for convolution operations (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		ConvolutionHintSgix = 0x8316,

		/// <summary>
		/// Specifies the minimum alpha value (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		AlphaMinSgix = 0x8320,

		/// <summary>
		/// Specifies the maximum alpha value (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		AlphaMaxSgix = 0x8321,

		/// <summary>
		/// Specifies hints for scale-bias operations (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		ScalebiasHintSgix = 0x8322,

		/// <summary>
		/// Specifies asynchronous markers (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		AsyncMarkerSgix = 0x8329,

		/// <summary>
		/// Specifies the pixel texture generation mode (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		PixelTexGenModeSgix = 0x832B,

		/// <summary>
		/// Specifies asynchronous histogram operations (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		AsyncHistogramSgix = 0x832C,

		/// <summary>
		/// Specifies the maximum number of asynchronous histogram operations (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		MaxAsyncHistogramSgix = 0x832D,

		/// <summary>
		/// Specifies 2D pixel transformation (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_pixel_transform</remarks>
		PixelTransform2DExt = 0x8330,

		/// <summary>
		/// Specifies the magnification filter for pixel operations (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_pixel_transform</remarks>
		PixelMagFilterExt = 0x8331,

		/// <summary>
		/// Specifies the minification filter for pixel operations (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_pixel_transform</remarks>
		PixelMinFilterExt = 0x8332,

		/// <summary>
		/// Specifies the cubic weight for pixel operations (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_pixel_transform</remarks>
		PixelCubicWeightExt = 0x8333,

		/// <summary>
		/// Specifies material properties for fragments (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_light_texture</remarks>
		FragmentMaterialExt = 0x8349,

		/// <summary>
		/// Specifies normal properties for fragments (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_light_texture</remarks>
		FragmentNormalExt = 0x834A,

		/// <summary>
		/// Specifies color properties for fragments (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_light_texture</remarks>
		FragmentColorExt = 0x834C,

		/// <summary>
		/// Specifies attenuation properties (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_light_texture</remarks>
		AttenuationExt = 0x834D,

		/// <summary>
		/// Specifies shadow attenuation properties (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_light_texture</remarks>
		ShadowAttenuationExt = 0x834E,

		/// <summary>
		/// Specifies pixel texture operations (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		PixelTextureSgis = 0x8353,

		/// <summary>
		/// Specifies the RGB source for pixel fragment (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		PixelFragmentRgbSourceSgis = 0x8354,

		/// <summary>
		/// Specifies the alpha source for pixel fragment (SGIS extension).
		/// </summary>
		/// <remarks></remarks>
		PixelFragmentAlphaSourceSgis = 0x8355,

		/// <summary>
		/// Specifies hints for line quality (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		LineQualityHintSgix = 0x835B,

		/// <summary>
		/// Specifies asynchronous texture image operations (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		AsyncTexImageSgix = 0x835C,

		/// <summary>
		/// Specifies asynchronous pixel drawing operations (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		AsyncDrawPixelsSgix = 0x835D,

		/// <summary>
		/// Specifies asynchronous pixel reading operations (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		AsyncReadPixelsSgix = 0x835E,

		/// <summary>
		/// Specifies the maximum number of asynchronous texture images (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		MaxAsyncTexImageSgix = 0x835F,

		/// <summary>
		/// Specifies the maximum number of asynchronous draw pixels (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		MaxAsyncDrawPixelsSgix = 0x8360,

		/// <summary>
		/// Specifies the maximum number of asynchronous read pixels (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		MaxAsyncReadPixelsSgix = 0x8361,

		/// <summary>
		/// Specifies unsigned byte format in 2-3-3 reversed order.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		UnsignedByte233Rev = 0x8362,

		/// <summary>
		/// Specifies unsigned byte format in 2-3-3 reversed order (EXT extension).
		/// </summary>
		/// <remarks></remarks>
		UnsignedByte233RevExt = 0x8362,

		/// <summary>
		/// Specifies unsigned short format in 5-6-5 format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		UnsignedShort565 = 0x8363,

		/// <summary>
		/// Specifies unsigned short format in 5-6-5 format (EXT extension).
		/// </summary>
		/// <remarks></remarks>
		UnsignedShort565Ext = 0x8363,

		/// <summary>
		/// Specifies unsigned short format in 5-6-5 format reversed.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		UnsignedShort565Rev = 0x8364,

		/// <summary>
		/// Specifies unsigned short format in 5-6-5 reversed (EXT extension).
		/// </summary>
		/// <remarks></remarks>
		UnsignedShort565RevExt = 0x8364,

		/// <summary>
		/// Specifies unsigned short format in 4-4-4-4 reversed.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		UnsignedShort4444Rev = 0x8365,

		/// <summary>
		/// Specifies unsigned short format in 4-4-4-4 reversed (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_read_format_bgra</remarks>
		UnsignedShort4444RevExt = 0x8365,

		/// <summary>
		/// Specifies unsigned short format in 4-4-4-4 reversed for images.
		/// </summary>
		/// <remarks></remarks>
		UnsignedShort4444RevImg = 0x8365,

		/// <summary>
		/// Specifies unsigned short format in 1-5-5-5 reversed.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		UnsignedShort1555Rev = 0x8366,

		/// <summary>
		/// Specifies unsigned short format in 1-5-5-5 reversed (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_read_format_bgra</remarks>
		UnsignedShort1555RevExt = 0x8366,

		/// <summary>
		/// Specifies unsigned int format in 8-8-8-8 reversed.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		UnsignedInt8888Rev = 0x8367,

		/// <summary>
		/// Specifies unsigned int format in 8-8-8-8 reversed (EXT extension).
		/// </summary>
		/// <remarks></remarks>
		UnsignedInt8888RevExt = 0x8367,

		/// <summary>
		/// Specifies unsigned int format in 2-10-10-10 reversed.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_vertex_type_2_10_10_10_rev</remarks>
		UnsignedInt2101010Rev = 0x8368,

		/// <summary>
		/// Specifies unsigned int format in 2-10-10-10 reversed (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_type_2_10_10_10_REV</remarks>
		UnsignedInt2101010RevExt = 0x8368,

		/// <summary>
		/// Specifies the maximum clamp value for S texture coordinates (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		TextureMaxClampSSgix = 0x8369,

		/// <summary>
		/// Specifies the maximum clamp value for T texture coordinates (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		TextureMaxClampTSgix = 0x836A,

		/// <summary>
		/// Specifies the maximum clamp value for R texture coordinates (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		TextureMaxClampRSgix = 0x836B,

		/// <summary>
		/// Specifies mirrored repeat texture wrapping mode.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		MirroredRepeat = 0x8370,

		/// <summary>
		/// Specifies mirrored repeat texture wrapping mode (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_mirrored_repeat</remarks>
		MirroredRepeatArb = 0x8370,

		/// <summary>
		/// Specifies mirrored repeat texture wrapping mode in IBM extensions.
		/// </summary>
		/// <remarks></remarks>
		MirroredRepeatIbm = 0x8370,

		/// <summary>
		/// Specifies mirrored repeat texture wrapping mode (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_texture_mirrored_repeat</remarks>
		MirroredRepeatOes = 0x8370,

		/// <summary>
		/// Specifies vertex pre-clipping (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		VertexPreclipSgix = 0x83EE,

		/// <summary>
		/// Specifies hints for vertex pre-clipping (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		VertexPreclipHintSgix = 0x83EF,

		/// <summary>
		/// Specifies S3TC DXT1 compressed RGB texture format (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_compression_s3tc<br/>GL_EXT_texture_compression_dxt1</remarks>
		CompressedRgbS3TcDxt1Ext = 0x83F0,

		/// <summary>
		/// Specifies S3TC DXT1 compressed RGBA texture format (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_compression_s3tc<br/>GL_EXT_texture_compression_dxt1</remarks>
		CompressedRgbaS3TcDxt1Ext = 0x83F1,

		/// <summary>
		/// Specifies S3TC DXT3 compressed RGBA texture format (ANGLE extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ANGLE_texture_compression_dxt3</remarks>
		CompressedRgbaS3TcDxt3Angle = 0x83F2,

		/// <summary>
		/// Specifies S3TC DXT3 compressed RGBA texture format (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_compression_s3tc</remarks>
		CompressedRgbaS3TcDxt3Ext = 0x83F2,

		/// <summary>
		/// Specifies S3TC DXT5 compressed RGBA texture format (ANGLE extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ANGLE_texture_compression_dxt5</remarks>
		CompressedRgbaS3TcDxt5Angle = 0x83F3,

		/// <summary>
		/// Specifies S3TC DXT5 compressed RGBA texture format (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_compression_s3tc</remarks>
		CompressedRgbaS3TcDxt5Ext = 0x83F3,

		/// <summary>
		/// Specifies not to flush performance queries (INTEL extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_INTEL_performance_query</remarks>
		PerfqueryDonotFlushIntel = 0x83F9,

		/// <summary>
		/// Specifies to flush performance queries (INTEL extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_INTEL_performance_query</remarks>
		PerfqueryFlushIntel = 0x83FA,

		/// <summary>
		/// Specifies to wait for performance queries (INTEL extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_INTEL_performance_query</remarks>
		PerfqueryWaitIntel = 0x83FB,

		/// <summary>
		/// Specifies memory layout for textures (INTEL extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_INTEL_map_texture</remarks>
		TextureMemoryLayoutIntel = 0x83FF,

		/// <summary>
		/// Enables fragment lighting (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		FragmentLightingSgix = 0x8400,

		/// <summary>
		/// Specifies color material properties for fragments (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		FragmentColorMaterialSgix = 0x8401,

		/// <summary>
		/// Specifies the face for fragment color material properties (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		FragmentColorMaterialFaceSgix = 0x8402,

		/// <summary>
		/// Specifies material parameters for fragment colors (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		FragmentColorMaterialParameterSgix = 0x8403,

		/// <summary>
		/// Specifies the maximum number of fragment lights (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		MaxFragmentLightsSgix = 0x8404,

		/// <summary>
		/// Specifies the maximum number of active lights (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		MaxActiveLightsSgix = 0x8405,

		/// <summary>
		/// Specifies the mode of the light environment (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		LightEnvModeSgix = 0x8407,

		/// <summary>
		/// Specifies the local viewer mode for fragment light model (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		FragmentLightModelLocalViewerSgix = 0x8408,

		/// <summary>
		/// Specifies the two-sided lighting mode for fragment light model (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		FragmentLightModelTwoSideSgix = 0x8409,

		/// <summary>
		/// Specifies the ambient light model for fragments (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		FragmentLightModelAmbientSgix = 0x840A,

		/// <summary>
		/// Specifies normal interpolation for the fragment light model (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		FragmentLightModelNormalInterpolationSgix = 0x840B,

		/// <summary>
		/// Specifies the first fragment light source (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		FragmentLight0Sgix = 0x840C,

		/// <summary>
		/// Specifies the second fragment light source (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		FragmentLight1Sgix = 0x840D,

		/// <summary>
		/// Specifies the third fragment light source (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		FragmentLight2Sgix = 0x840E,

		/// <summary>
		/// Specifies the fourth fragment light source (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		FragmentLight3Sgix = 0x840F,

		/// <summary>
		/// Specifies the fifth fragment light source (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		FragmentLight4Sgix = 0x8410,

		/// <summary>
		/// Specifies the sixth fragment light source (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		FragmentLight5Sgix = 0x8411,

		/// <summary>
		/// Specifies the seventh fragment light source (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		FragmentLight6Sgix = 0x8412,

		/// <summary>
		/// Specifies the eighth fragment light source (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		FragmentLight7Sgix = 0x8413,

		/// <summary>
		/// Specifies packing resample method (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		PackResampleSgix = 0x842E,

		/// <summary>
		/// Specifies unpacking resample method (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		UnpackResampleSgix = 0x842F,

		/// <summary>
		/// Specifies decimation method for resampling (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		ResampleDecimateSgix = 0x8430,

		/// <summary>
		/// Specifies replication method for resampling (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		ResampleReplicateSgix = 0x8433,

		/// <summary>
		/// Specifies zero-fill method for resampling (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		ResampleZeroFillSgix = 0x8434,

		/// <summary>
		/// Specifies nearest clipmap nearest filtering (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		NearestClipmapNearestSgix = 0x844D,

		/// <summary>
		/// Specifies nearest clipmap linear filtering (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		NearestClipmapLinearSgix = 0x844E,

		/// <summary>
		/// Specifies linear clipmap nearest filtering (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		LinearClipmapNearestSgix = 0x844F,

		/// <summary>
		/// Specifies the source of fog coordinates (deprecated).
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		FogCoordSrc = 0x8450,

		/// <summary>
		/// Specifies fog coordinate.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		FogCoordinate = 0x8451,

		/// <summary>
		/// Specifies fog coordinate (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_fog_coord</remarks>
		FogCoordinateExt = 0x8451,

		/// <summary>
		/// Specifies fog coordinates.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		FogCoord = 0x8451,

		/// <summary>
		/// Specifies fragment depth.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		FragmentDepth = 0x8452,

		/// <summary>
		/// Specifies fragment depth (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_fog_coord<br/>GL_EXT_light_texture</remarks>
		FragmentDepthExt = 0x8452,

		/// <summary>
		/// Specifies the range of aliased point sizes.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		AliasedPointSizeRange = 0x846D,

		/// <summary>
		/// Specifies the range of aliased line widths.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		AliasedLineWidthRange = 0x846E,

		/// <summary>
		/// Specifies texture unit 0.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Texture0 = 0x84C0,

		/// <summary>
		/// Specifies texture unit 0 (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_multitexture<br/>GL_NV_register_combiners</remarks>
		Texture0Arb = 0x84C0,

		/// <summary>
		/// Specifies texture unit 1.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Texture1 = 0x84C1,

		/// <summary>
		/// Specifies texture unit 1 (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_multitexture<br/>GL_NV_register_combiners</remarks>
		Texture1Arb = 0x84C1,

		/// <summary>
		/// Specifies texture unit 2.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Texture2 = 0x84C2,

		/// <summary>
		/// Specifies texture unit 3.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Texture3 = 0x84C3,

		/// <summary>
		/// Specifies texture unit 4.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Texture4 = 0x84C4,

		/// <summary>
		/// Specifies texture unit 5.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Texture5 = 0x84C5,

		/// <summary>
		/// Specifies texture unit 6.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Texture6 = 0x84C6,

		/// <summary>
		/// Specifies texture unit 7.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Texture7 = 0x84C7,

		/// <summary>
		/// Specifies texture unit 8.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Texture8 = 0x84C8,

		/// <summary>
		/// Specifies texture unit 9.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Texture9 = 0x84C9,

		/// <summary>
		/// Specifies texture unit 10.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Texture10 = 0x84CA,

		/// <summary>
		/// Specifies texture unit 11.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Texture11 = 0x84CB,

		/// <summary>
		/// Specifies texture unit 12.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Texture12 = 0x84CC,

		/// <summary>
		/// Specifies texture unit 13.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Texture13 = 0x84CD,

		/// <summary>
		/// Specifies texture unit 14.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Texture14 = 0x84CE,

		/// <summary>
		/// Specifies texture unit 15.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Texture15 = 0x84CF,

		/// <summary>
		/// Specifies texture unit 16.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Texture16 = 0x84D0,

		/// <summary>
		/// Specifies texture unit 17.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Texture17 = 0x84D1,

		/// <summary>
		/// Specifies texture unit 18.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Texture18 = 0x84D2,

		/// <summary>
		/// Specifies texture unit 19.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Texture19 = 0x84D3,

		/// <summary>
		/// Specifies texture unit 20.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Texture20 = 0x84D4,

		/// <summary>
		/// Specifies texture unit 21.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Texture21 = 0x84D5,

		/// <summary>
		/// Specifies texture unit 22.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Texture22 = 0x84D6,

		/// <summary>
		/// Specifies texture unit 23.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Texture23 = 0x84D7,

		/// <summary>
		/// Specifies texture unit 24.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Texture24 = 0x84D8,

		/// <summary>
		/// Specifies texture unit 25.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Texture25 = 0x84D9,

		/// <summary>
		/// Specifies texture unit 26.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Texture26 = 0x84DA,

		/// <summary>
		/// Specifies texture unit 27.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Texture27 = 0x84DB,

		/// <summary>
		/// Specifies texture unit 28.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Texture28 = 0x84DC,

		/// <summary>
		/// Specifies texture unit 29.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Texture29 = 0x84DD,

		/// <summary>
		/// Specifies texture unit 30.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Texture30 = 0x84DE,

		/// <summary>
		/// Specifies texture unit 31.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Texture31 = 0x84DF,

		/// <summary>
		/// Specifies the active texture unit.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ActiveTexture = 0x84E0,

		/// <summary>
		/// Specifies the maximum size of renderbuffers.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		MaxRenderbufferSize = 0x84E8,

		/// <summary>
		/// Specifies compressed RGB format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		CompressedRgb = 0x84ED,

		/// <summary>
		/// Specifies compressed RGBA format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		CompressedRgba = 0x84EE,

		/// <summary>
		/// Specifies the hint for texture compression.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureCompressionHint = 0x84EF,

		/// <summary>
		/// Specifies the hint for texture compression (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_compression</remarks>
		TextureCompressionHintArb = 0x84EF,

		/// <summary>
		/// Specifies whether a uniform block is referenced by a tessellation control shader.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_tessellation_shader</remarks>
		UniformBlockReferencedByTessControlShader = 0x84F0,

		/// <summary>
		/// Specifies whether a uniform block is referenced by a tessellation evaluation shader.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_tessellation_shader</remarks>
		UniformBlockReferencedByTessEvaluationShader = 0x84F1,

		/// <summary>
		/// Specifies if all operations are completed (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_fence</remarks>
		AllCompletedNv = 0x84F2,

		/// <summary>
		/// Specifies the status of a fence (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_fence</remarks>
		FenceStatusNv = 0x84F3,

		/// <summary>
		/// Specifies the condition for a fence (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_fence</remarks>
		FenceConditionNv = 0x84F4,

		/// <summary>
		/// Specifies a rectangle texture.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		TextureRectangle = 0x84F5,

		/// <summary>
		/// Specifies a rectangle texture (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_rectangle</remarks>
		TextureRectangleArb = 0x84F5,

		/// <summary>
		/// Specifies a rectangle texture (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_texture_rectangle</remarks>
		TextureRectangleNv = 0x84F5,

		/// <summary>
		/// Specifies the texture currently bound to the rectangle target.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_direct_state_access</remarks>
		TextureBindingRectangle = 0x84F6,

		/// <summary>
		/// Specifies the texture currently bound to the rectangle target (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_rectangle</remarks>
		TextureBindingRectangleArb = 0x84F6,

		/// <summary>
		/// Specifies the texture currently bound to the rectangle target (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_texture_rectangle</remarks>
		TextureBindingRectangleNv = 0x84F6,

		/// <summary>
		/// Specifies a proxy for rectangle textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ProxyTextureRectangle = 0x84F7,

		/// <summary>
		/// Specifies a proxy for rectangle textures (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_rectangle</remarks>
		ProxyTextureRectangleArb = 0x84F7,

		/// <summary>
		/// Specifies a proxy for rectangle textures (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_texture_rectangle</remarks>
		ProxyTextureRectangleNv = 0x84F7,

		/// <summary>
		/// Specifies the maximum size of rectangle textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		MaxRectangleTextureSize = 0x84F8,

		/// <summary>
		/// Specifies a combined depth and stencil buffer format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		DepthStencil = 0x84F9,

		/// <summary>
		/// Specifies a combined depth and stencil buffer format (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_packed_depth_stencil</remarks>
		DepthStencilExt = 0x84F9,

		/// <summary>
		/// Specifies a combined depth and stencil buffer format (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_packed_depth_stencil</remarks>
		DepthStencilNv = 0x84F9,

		/// <summary>
		/// Specifies a combined depth and stencil buffer format (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ANGLE_depth_texture<br/>GL_OES_packed_depth_stencil</remarks>
		DepthStencilOes = 0x84F9,

		/// <summary>
		/// Specifies a 24-bit depth and 8-bit stencil format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		UnsignedInt248 = 0x84FA,

		/// <summary>
		/// Specifies a 24-bit depth and 8-bit stencil format (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_packed_depth_stencil</remarks>
		UnsignedInt248Ext = 0x84FA,

		/// <summary>
		/// Specifies a 24-bit depth and 8-bit stencil format (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_packed_depth_stencil</remarks>
		UnsignedInt248Nv = 0x84FA,

		/// <summary>
		/// Specifies a 24-bit depth and 8-bit stencil format (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ANGLE_depth_texture<br/>GL_OES_packed_depth_stencil</remarks>
		UnsignedInt248Oes = 0x84FA,

		/// <summary>
		/// Specifies the maximum Level of Detail (LOD) bias.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		MaxTextureLodBias = 0x84FD,

		/// <summary>
		/// Specifies the maximum anisotropic filtering level.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_filter_anisotropic</remarks>
		TextureMaxAnisotropy = 0x84FE,

		/// <summary>
		/// Specifies the texture filter control mode.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureFilterControl = 0x8500,

		/// <summary>
		/// Specifies the LOD bias applied to textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureLodBias = 0x8501,

		/// <summary>
		/// Specifies wrap mode for incremental blending.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		IncrWrap = 0x8507,

		/// <summary>
		/// Specifies wrap mode for decremental blending.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		DecrWrap = 0x8508,

		/// <summary>
		/// Specifies a normal map texture.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		NormalMap = 0x8511,

		/// <summary>
		/// Specifies a normal map texture (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_cube_map</remarks>
		NormalMapArb = 0x8511,

		/// <summary>
		/// Specifies a normal map texture (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_cube_map</remarks>
		NormalMapExt = 0x8511,

		/// <summary>
		/// Specifies a normal map texture (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_texgen_reflection</remarks>
		NormalMapNv = 0x8511,

		/// <summary>
		/// Specifies a normal map texture (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_texture_cube_map</remarks>
		NormalMapOes = 0x8511,

		/// <summary>
		/// Specifies a reflection map texture.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ReflectionMap = 0x8512,

		/// <summary>
		/// Specifies a reflection map texture (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_cube_map</remarks>
		ReflectionMapArb = 0x8512,

		/// <summary>
		/// Specifies a reflection map texture (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_cube_map</remarks>
		ReflectionMapExt = 0x8512,

		/// <summary>
		/// Specifies a reflection map texture (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_texgen_reflection</remarks>
		ReflectionMapNv = 0x8512,

		/// <summary>
		/// Specifies a reflection map texture (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_texture_cube_map</remarks>
		ReflectionMapOes = 0x8512,

		/// <summary>
		/// Specifies a cube map texture.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2<br/>GL_EXT_sparse_texture</remarks>
		TextureCubeMap = 0x8513,

		/// <summary>
		/// Specifies a cube map texture (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_cube_map</remarks>
		TextureCubeMapArb = 0x8513,

		/// <summary>
		/// Specifies a cube map texture (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_cube_map</remarks>
		TextureCubeMapExt = 0x8513,

		/// <summary>
		/// Specifies a cube map texture (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_texture_cube_map</remarks>
		TextureCubeMapOes = 0x8513,

		/// <summary>
		/// Specifies the currently bound cube map texture.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_direct_state_access</remarks>
		TextureBindingCubeMap = 0x8514,

		/// <summary>
		/// Specifies the currently bound cube map texture (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_cube_map</remarks>
		TextureBindingCubeMapArb = 0x8514,

		/// <summary>
		/// Specifies the currently bound cube map texture (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_cube_map</remarks>
		TextureBindingCubeMapExt = 0x8514,

		/// <summary>
		/// Specifies the currently bound cube map texture (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_texture_cube_map</remarks>
		TextureBindingCubeMapOes = 0x8514,

		/// <summary>
		/// Specifies the positive X face of the cube map.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureCubeMapPositiveX = 0x8515,

		/// <summary>
		/// Specifies the positive X face of the cube map (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_cube_map</remarks>
		TextureCubeMapPositiveXArb = 0x8515,

		/// <summary>
		/// Specifies the positive X face of the cube map (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_cube_map</remarks>
		TextureCubeMapPositiveXExt = 0x8515,

		/// <summary>
		/// Specifies the positive X face of the cube map (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_texture_cube_map</remarks>
		TextureCubeMapPositiveXOes = 0x8515,

		/// <summary>
		/// Specifies the negative X face of the cube map.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureCubeMapNegativeX = 0x8516,

		/// <summary>
		/// Specifies the negative X face of the cube map (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_cube_map</remarks>
		TextureCubeMapNegativeXArb = 0x8516,

		/// <summary>
		/// Specifies the negative X face of the cube map (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_cube_map</remarks>
		TextureCubeMapNegativeXExt = 0x8516,

		/// <summary>
		/// Specifies the negative X face of the cube map (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_texture_cube_map</remarks>
		TextureCubeMapNegativeXOes = 0x8516,

		/// <summary>
		/// Specifies the positive Y face of the cube map.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureCubeMapPositiveY = 0x8517,

		/// <summary>
		/// Specifies the positive Y face of the cube map (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_cube_map</remarks>
		TextureCubeMapPositiveYArb = 0x8517,

		/// <summary>
		/// Specifies the positive Y face of the cube map (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_cube_map</remarks>
		TextureCubeMapPositiveYExt = 0x8517,

		/// <summary>
		/// Specifies the positive Y face of the cube map (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_texture_cube_map</remarks>
		TextureCubeMapPositiveYOes = 0x8517,

		/// <summary>
		/// Specifies the negative Y face of the cube map.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureCubeMapNegativeY = 0x8518,

		/// <summary>
		/// Specifies the negative Y face of the cube map (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_cube_map</remarks>
		TextureCubeMapNegativeYArb = 0x8518,

		/// <summary>
		/// Specifies the negative Y face of the cube map (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_cube_map</remarks>
		TextureCubeMapNegativeYExt = 0x8518,

		/// <summary>
		/// Specifies the negative Y face of the cube map (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_texture_cube_map</remarks>
		TextureCubeMapNegativeYOes = 0x8518,

		/// <summary>
		/// Specifies the positive Z face of the cube map.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureCubeMapPositiveZ = 0x8519,

		/// <summary>
		/// Specifies the positive Z face of the cube map (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_cube_map</remarks>
		TextureCubeMapPositiveZArb = 0x8519,

		/// <summary>
		/// Specifies the positive Z face of the cube map (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_cube_map</remarks>
		TextureCubeMapPositiveZExt = 0x8519,

		/// <summary>
		/// Specifies the positive Z face of the cube map (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_texture_cube_map</remarks>
		TextureCubeMapPositiveZOes = 0x8519,

		/// <summary>
		/// Specifies the negative Z face of the cube map.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureCubeMapNegativeZ = 0x851A,

		/// <summary>
		/// Specifies the negative Z face of the cube map (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_cube_map</remarks>
		TextureCubeMapNegativeZArb = 0x851A,

		/// <summary>
		/// Specifies the negative Z face of the cube map (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_cube_map</remarks>
		TextureCubeMapNegativeZExt = 0x851A,

		/// <summary>
		/// Specifies the negative Z face of the cube map (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_texture_cube_map</remarks>
		TextureCubeMapNegativeZOes = 0x851A,

		/// <summary>
		/// Specifies a proxy for cube map textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ProxyTextureCubeMap = 0x851B,

		/// <summary>
		/// Specifies a proxy for cube map textures (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_cube_map</remarks>
		ProxyTextureCubeMapArb = 0x851B,

		/// <summary>
		/// Specifies a proxy for cube map textures (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_cube_map</remarks>
		ProxyTextureCubeMapExt = 0x851B,

		/// <summary>
		/// Specifies the maximum size of cube map textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		MaxCubeMapTextureSize = 0x851C,

		/// <summary>
		/// Specifies the maximum size of cube map textures (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_cube_map</remarks>
		MaxCubeMapTextureSizeArb = 0x851C,

		/// <summary>
		/// Specifies the maximum size of cube map textures (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_cube_map</remarks>
		MaxCubeMapTextureSizeExt = 0x851C,

		/// <summary>
		/// Specifies the maximum size of cube map textures (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_texture_cube_map</remarks>
		MaxCubeMapTextureSizeOes = 0x851C,

		/// <summary>
		/// Specifies the storage hint for vertex arrays (APPLE extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_APPLE_vertex_array_range</remarks>
		VertexArrayStorageHintApple = 0x851F,

		/// <summary>
		/// Specifies a variable in NV register combiners.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_register_combiners</remarks>
		VariableANv = 0x8523,

		/// <summary>
		/// Specifies a variable in NV register combiners.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_register_combiners</remarks>
		VariableBNv = 0x8524,

		/// <summary>
		/// Specifies a variable in NV register combiners.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_register_combiners</remarks>
		VariableCNv = 0x8525,

		/// <summary>
		/// Specifies a variable in NV register combiners.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_register_combiners</remarks>
		VariableDNv = 0x8526,

		/// <summary>
		/// Specifies a variable in NV register combiners.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_register_combiners</remarks>
		VariableENv = 0x8527,

		/// <summary>
		/// Specifies a variable in NV register combiners.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_register_combiners</remarks>
		VariableFNv = 0x8528,

		/// <summary>
		/// Specifies a variable in NV register combiners.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_register_combiners</remarks>
		VariableGNv = 0x8529,

		/// <summary>
		/// Specifies the primary color input in NV register combiners.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering<br/>GL_NV_register_combiners</remarks>
		PrimaryColorNv = 0x852C,

		/// <summary>
		/// Specifies the secondary color input in NV register combiners.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering<br/>GL_NV_register_combiners</remarks>
		SecondaryColorNv = 0x852D,

		/// <summary>
		/// Specifies a spare register in NV register combiners.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_register_combiners</remarks>
		Spare0Nv = 0x852E,

		/// <summary>
		/// Specifies another spare register in NV register combiners.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_register_combiners</remarks>
		Spare1Nv = 0x852F,

		/// <summary>
		/// Specifies a discard operation in NV register combiners.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_register_combiners</remarks>
		DiscardNv = 0x8530,

		/// <summary>
		/// Specifies the hint for multisample filtering (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_multisample_filter_hint</remarks>
		MultisampleFilterHintNv = 0x8534,

		/// <summary>
		/// Specifies an unsigned identity operation (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_register_combiners</remarks>
		UnsignedIdentityNv = 0x8536,

		/// <summary>
		/// Specifies an unsigned invert operation (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_register_combiners</remarks>
		UnsignedInvertNv = 0x8537,

		/// <summary>
		/// Specifies an expansion operation for normal values (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_register_combiners</remarks>
		ExpandNormalNv = 0x8538,

		/// <summary>
		/// Specifies an expansion operation for negated values (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_register_combiners</remarks>
		ExpandNegateNv = 0x8539,

		/// <summary>
		/// Specifies half bias for normal values (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_register_combiners</remarks>
		HalfBiasNormalNv = 0x853A,

		/// <summary>
		/// Specifies half bias for negated values (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_register_combiners</remarks>
		HalfBiasNegateNv = 0x853B,

		/// <summary>
		/// Specifies a signed identity operation (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_register_combiners</remarks>
		SignedIdentityNv = 0x853C,

		/// <summary>
		/// Specifies a signed negate operation (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_register_combiners</remarks>
		SignedNegateNv = 0x853D,

		/// <summary>
		/// Specifies a scaling operation by two (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_register_combiners</remarks>
		ScaleByTwoNv = 0x853E,

		/// <summary>
		/// Specifies a scaling operation by four (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_register_combiners</remarks>
		ScaleByFourNv = 0x853F,

		/// <summary>
		/// Specifies a scaling operation by one half (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_register_combiners</remarks>
		ScaleByOneHalfNv = 0x8540,

		/// <summary>
		/// Specifies bias by negative one half (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_register_combiners</remarks>
		BiasByNegativeOneHalfNv = 0x8541,

		/// <summary>
		/// Specifies the input for combiners (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_register_combiners</remarks>
		CombinerInputNv = 0x8542,

		/// <summary>
		/// Specifies the mapping for combiners (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_register_combiners</remarks>
		CombinerMappingNv = 0x8543,

		/// <summary>
		/// Specifies the usage of combiner components (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_register_combiners</remarks>
		CombinerComponentUsageNv = 0x8544,

		/// <summary>
		/// Specifies the first combiner (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_register_combiners</remarks>
		Combiner0Nv = 0x8550,

		/// <summary>
		/// Specifies the second combiner (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_register_combiners</remarks>
		Combiner1Nv = 0x8551,

		/// <summary>
		/// Specifies the third combiner (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_register_combiners</remarks>
		Combiner2Nv = 0x8552,

		/// <summary>
		/// Specifies the fourth combiner (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_register_combiners</remarks>
		Combiner3Nv = 0x8553,

		/// <summary>
		/// Specifies the fifth combiner (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_register_combiners</remarks>
		Combiner4Nv = 0x8554,

		/// <summary>
		/// Specifies the sixth combiner (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_register_combiners</remarks>
		Combiner5Nv = 0x8555,

		/// <summary>
		/// Specifies the seventh combiner (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_register_combiners</remarks>
		Combiner6Nv = 0x8556,

		/// <summary>
		/// Specifies the eighth combiner (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_register_combiners</remarks>
		Combiner7Nv = 0x8557,

		/// <summary>
		/// Specifies the combine mode for texture environment.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Combine = 0x8570,

		/// <summary>
		/// Specifies the combine mode for texture environment (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_env_combine</remarks>
		CombineArb = 0x8570,

		/// <summary>
		/// Specifies the combine mode for texture environment (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_env_combine</remarks>
		CombineExt = 0x8570,

		/// <summary>
		/// Specifies the RGB combine mode.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		CombineRgb = 0x8571,

		/// <summary>
		/// Specifies the RGB combine mode (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_env_combine</remarks>
		CombineRgbArb = 0x8571,

		/// <summary>
		/// Specifies the RGB combine mode (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_env_combine</remarks>
		CombineRgbExt = 0x8571,

		/// <summary>
		/// Specifies the alpha combine mode.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		CombineAlpha = 0x8572,

		/// <summary>
		/// Specifies the alpha combine mode (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_env_combine</remarks>
		CombineAlphaArb = 0x8572,

		/// <summary>
		/// Specifies the alpha combine mode (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_env_combine</remarks>
		CombineAlphaExt = 0x8572,

		/// <summary>
		/// Specifies the scale factor for RGB values.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		RgbScale = 0x8573,

		/// <summary>
		/// Specifies the scale factor for RGB values (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_env_combine</remarks>
		RgbScaleArb = 0x8573,

		/// <summary>
		/// Specifies the scale factor for RGB values (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_env_combine</remarks>
		RgbScaleExt = 0x8573,

		/// <summary>
		/// Specifies a signed addition operation.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		AddSigned = 0x8574,

		/// <summary>
		/// Specifies a signed addition operation (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_env_combine</remarks>
		AddSignedArb = 0x8574,

		/// <summary>
		/// Specifies a signed addition operation (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_env_combine</remarks>
		AddSignedExt = 0x8574,

		/// <summary>
		/// Specifies interpolation for combine modes.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Interpolate = 0x8575,

		/// <summary>
		/// Specifies interpolation for combine modes (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_env_combine</remarks>
		InterpolateArb = 0x8575,

		/// <summary>
		/// Specifies interpolation for combine modes (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_env_combine</remarks>
		InterpolateExt = 0x8575,

		/// <summary>
		/// Specifies a constant value for combine modes.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Constant = 0x8576,

		/// <summary>
		/// Specifies a constant value for combine modes (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_env_combine</remarks>
		ConstantArb = 0x8576,

		/// <summary>
		/// Specifies a constant value for combine modes (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_env_combine</remarks>
		ConstantExt = 0x8576,

		/// <summary>
		/// Specifies a constant value (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		ConstantNv = 0x8576,

		/// <summary>
		/// Specifies the primary color input.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		PrimaryColor = 0x8577,

		/// <summary>
		/// Specifies the primary color input (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_env_combine</remarks>
		PrimaryColorArb = 0x8577,

		/// <summary>
		/// Specifies the primary color input (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_env_combine</remarks>
		PrimaryColorExt = 0x8577,

		/// <summary>
		/// Specifies the previous output in combine modes.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Previous = 0x8578,

		/// <summary>
		/// Specifies the previous output in combine modes (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_env_combine</remarks>
		PreviousArb = 0x8578,

		/// <summary>
		/// Specifies the previous output in combine modes (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_env_combine</remarks>
		PreviousExt = 0x8578,

		/// <summary>
		/// Specifies the first RGB source input.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Source0Rgb = 0x8580,

		/// <summary>
		/// Specifies the first RGB source input (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_env_combine</remarks>
		Source0RgbArb = 0x8580,

		/// <summary>
		/// Specifies the first RGB source input (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_env_combine</remarks>
		Source0RgbExt = 0x8580,

		/// <summary>
		/// Specifies the first RGB source input.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Src0Rgb = 0x8580,

		/// <summary>
		/// Specifies the second RGB source input.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Source1Rgb = 0x8581,

		/// <summary>
		/// Specifies the second RGB source input (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_env_combine</remarks>
		Source1RgbArb = 0x8581,

		/// <summary>
		/// Specifies the second RGB source input (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_env_combine</remarks>
		Source1RgbExt = 0x8581,

		/// <summary>
		/// Specifies the second RGB source input.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Src1Rgb = 0x8581,

		/// <summary>
		/// Specifies the third RGB source input.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Source2Rgb = 0x8582,

		/// <summary>
		/// Specifies the third RGB source input (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_env_combine</remarks>
		Source2RgbArb = 0x8582,

		/// <summary>
		/// Specifies the third RGB source input (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_env_combine</remarks>
		Source2RgbExt = 0x8582,

		/// <summary>
		/// Specifies the third RGB source input.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Src2Rgb = 0x8582,

		/// <summary>
		/// Specifies the fourth RGB source input (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_texture_env_combine4</remarks>
		Source3RgbNv = 0x8583,

		/// <summary>
		/// Specifies the first alpha source input.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Source0Alpha = 0x8588,

		/// <summary>
		/// Specifies the first alpha source input (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_env_combine</remarks>
		Source0AlphaArb = 0x8588,

		/// <summary>
		/// Specifies the first alpha source input (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_env_combine</remarks>
		Source0AlphaExt = 0x8588,

		/// <summary>
		/// Specifies the first alpha source input.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Src0Alpha = 0x8588,

		/// <summary>
		/// Specifies the second alpha source input.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Source1Alpha = 0x8589,

		/// <summary>
		/// Specifies the second alpha source input (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_env_combine</remarks>
		Source1AlphaArb = 0x8589,

		/// <summary>
		/// Specifies the second alpha source input (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_env_combine</remarks>
		Source1AlphaExt = 0x8589,

		/// <summary>
		/// Specifies the second alpha source input.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_blend_func_extended</remarks>
		Src1Alpha = 0x8589,

		/// <summary>
		/// Specifies the second alpha source input (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_blend_func_extended</remarks>
		Src1AlphaExt = 0x8589,

		/// <summary>
		/// Specifies the third alpha source input.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Source2Alpha = 0x858A,

		/// <summary>
		/// Specifies the third alpha source input (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_env_combine</remarks>
		Source2AlphaArb = 0x858A,

		/// <summary>
		/// Specifies the third alpha source input (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_env_combine</remarks>
		Source2AlphaExt = 0x858A,

		/// <summary>
		/// Specifies the third alpha source input.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Src2Alpha = 0x858A,

		/// <summary>
		/// Specifies the fourth alpha source input (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_texture_env_combine4</remarks>
		Source3AlphaNv = 0x858B,

		/// <summary>
		/// Specifies the first RGB operand input.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Operand0Rgb = 0x8590,

		/// <summary>
		/// Specifies the first RGB operand input (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_env_combine</remarks>
		Operand0RgbArb = 0x8590,

		/// <summary>
		/// Specifies the first RGB operand input (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_env_combine</remarks>
		Operand0RgbExt = 0x8590,

		/// <summary>
		/// Specifies the second RGB operand input.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Operand1Rgb = 0x8591,

		/// <summary>
		/// Specifies the second RGB operand input (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_env_combine</remarks>
		Operand1RgbArb = 0x8591,

		/// <summary>
		/// Specifies the second RGB operand input (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_env_combine</remarks>
		Operand1RgbExt = 0x8591,

		/// <summary>
		/// Specifies the third RGB operand input.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Operand2Rgb = 0x8592,

		/// <summary>
		/// Specifies the third RGB operand input (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_env_combine</remarks>
		Operand2RgbArb = 0x8592,

		/// <summary>
		/// Specifies the third RGB operand input (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_env_combine</remarks>
		Operand2RgbExt = 0x8592,

		/// <summary>
		/// Specifies the fourth RGB operand input (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_texture_env_combine4</remarks>
		Operand3RgbNv = 0x8593,

		/// <summary>
		/// Specifies the first alpha operand input.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Operand0Alpha = 0x8598,

		/// <summary>
		/// Specifies the first alpha operand input (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_env_combine</remarks>
		Operand0AlphaArb = 0x8598,

		/// <summary>
		/// Specifies the first alpha operand input (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_env_combine</remarks>
		Operand0AlphaExt = 0x8598,

		/// <summary>
		/// Specifies the second alpha operand input.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Operand1Alpha = 0x8599,

		/// <summary>
		/// Specifies the second alpha operand input (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_env_combine</remarks>
		Operand1AlphaArb = 0x8599,

		/// <summary>
		/// Specifies the second alpha operand input (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_env_combine</remarks>
		Operand1AlphaExt = 0x8599,

		/// <summary>
		/// Specifies the third alpha operand input.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Operand2Alpha = 0x859A,

		/// <summary>
		/// Specifies the third alpha operand input (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_env_combine</remarks>
		Operand2AlphaArb = 0x859A,

		/// <summary>
		/// Specifies the third alpha operand input (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_env_combine</remarks>
		Operand2AlphaExt = 0x859A,

		/// <summary>
		/// Specifies the fourth alpha operand input (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_texture_env_combine4</remarks>
		Operand3AlphaNv = 0x859B,

		/// <summary>
		/// Specifies the subsample rate for packing (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		PackSubsampleRateSgix = 0x85A0,

		/// <summary>
		/// Specifies the subsample rate for unpacking (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		UnpackSubsampleRateSgix = 0x85A1,

		/// <summary>
		/// Specifies a pixel subsample rate of 4:4:4:4 (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		PixelSubsample4444Sgix = 0x85A2,

		/// <summary>
		/// Specifies a pixel subsample rate of 2:4:2:4 (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		PixelSubsample2424Sgix = 0x85A3,

		/// <summary>
		/// Specifies a pixel subsample rate of 4:2:4:2 (SGIX extension).
		/// </summary>
		/// <remarks></remarks>
		PixelSubsample4242Sgix = 0x85A4,

		/// <summary>
		/// Specifies perturbation for texture coordinates (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_perturb_normal</remarks>
		PerturbExt = 0x85AE,

		/// <summary>
		/// Specifies a hint for transformations (APPLE extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_APPLE_transform_hint</remarks>
		TransformHintApple = 0x85B1,

		/// <summary>
		/// Specifies client storage (APPLE extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_APPLE_vertex_array_range</remarks>
		StorageClientApple = 0x85B4,

		/// <summary>
		/// Specifies the current vertex array binding.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_vertex_array_object</remarks>
		VertexArrayBinding = 0x85B5,

		/// <summary>
		/// Specifies texture storage hints (APPLE extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_APPLE_texture_range</remarks>
		TextureStorageHintApple = 0x85BC,

		/// <summary>
		/// Specifies cached storage (APPLE extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_APPLE_texture_range<br/>GL_APPLE_vertex_array_range</remarks>
		StorageCachedApple = 0x85BE,

		/// <summary>
		/// Specifies shared storage (APPLE extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_APPLE_texture_range<br/>GL_APPLE_vertex_array_range</remarks>
		StorageSharedApple = 0x85BF,

		/// <summary>
		/// Specifies vertex program functionality (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_vertex_program</remarks>
		VertexProgramArb = 0x8620,

		/// <summary>
		/// Specifies whether the vertex attribute array is enabled.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		VertexAttribArrayEnabled = 0x8622,

		/// <summary>
		/// Specifies the size of the vertex attribute array.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		VertexAttribArraySize = 0x8623,

		/// <summary>
		/// Specifies the stride of the vertex attribute array.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		VertexAttribArrayStride = 0x8624,

		/// <summary>
		/// Specifies the type of the vertex attribute array.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		VertexAttribArrayType = 0x8625,

		/// <summary>
		/// Specifies the current vertex attribute.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		CurrentVertexAttrib = 0x8626,

		/// <summary>
		/// Specifies the program string (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_fragment_program<br/>GL_ARB_vertex_program</remarks>
		ProgramStringArb = 0x8628,

		/// <summary>
		/// Specifies the point size for programs.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ProgramPointSize = 0x8642,

		/// <summary>
		/// Specifies program parameters (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_vertex_program</remarks>
		ProgramParameterNv = 0x8644,

		/// <summary>
		/// Specifies the pointer to vertex attribute arrays.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		VertexAttribArrayPointer = 0x8645,

		/// <summary>
		/// Specifies the pointer to vertex attribute arrays (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_vertex_program<br/>GL_ARB_vertex_shader</remarks>
		VertexAttribArrayPointerArb = 0x8645,

		/// <summary>
		/// Specifies whether depth clamping is enabled.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_depth_clamp</remarks>
		DepthClamp = 0x864F,

		/// <summary>
		/// Indicates if a texture is compressed.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		TextureCompressed = 0x86A1,

		/// <summary>
		/// Specifies the number of compressed texture formats available.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		NumCompressedTextureFormats = 0x86A2,

		/// <summary>
		/// Lists the compressed texture formats.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		CompressedTextureFormats = 0x86A3,

		/// <summary>
		/// Specifies 2D evaluation (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_evaluators</remarks>
		Eval2DNv = 0x86C0,

		/// <summary>
		/// Specifies triangular 2D evaluation (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_evaluators</remarks>
		EvalTriangular2DNv = 0x86C1,

		/// <summary>
		/// Specifies tessellation mapping (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_evaluators</remarks>
		MapTessellationNv = 0x86C2,

		/// <summary>
		/// Specifies the U order for attribute mapping (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_evaluators</remarks>
		MapAttribUOrderNv = 0x86C3,

		/// <summary>
		/// Specifies the V order for attribute mapping (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_evaluators</remarks>
		MapAttribVOrderNv = 0x86C4,

		/// <summary>
		/// Specifies the length of a program binary.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_get_program_binary</remarks>
		ProgramBinaryLength = 0x8741,

		/// <summary>
		/// Specifies long vertex attribute array functionality.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		VertexAttribArrayLong = 0x874E,

		/// <summary>
		/// Specifies depth-stencil functionality (MESA extension).
		/// </summary>
		/// <remarks></remarks>
		DepthStencilMesa = 0x8750,

		/// <summary>
		/// Specifies static buffer usage (ATI extension).
		/// </summary>
		/// <remarks></remarks>
		StaticAti = 0x8760,

		/// <summary>
		/// Specifies dynamic buffer usage (ATI extension).
		/// </summary>
		/// <remarks></remarks>
		DynamicAti = 0x8761,

		/// <summary>
		/// Specifies preservation of data (ATI extension).
		/// </summary>
		/// <remarks></remarks>
		PreserveAti = 0x8762,

		/// <summary>
		/// Specifies data discard behavior (ATI extension).
		/// </summary>
		/// <remarks></remarks>
		DiscardAti = 0x8763,

		/// <summary>
		/// Specifies the size of a buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		BufferSize = 0x8764,

		/// <summary>
		/// Specifies the size of a buffer (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_vertex_buffer_object</remarks>
		BufferSizeArb = 0x8764,

		/// <summary>
		/// Specifies the size of an object buffer (ATI extension).
		/// </summary>
		/// <remarks></remarks>
		ObjectBufferSizeAti = 0x8764,

		/// <summary>
		/// Specifies the usage of a buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		BufferUsage = 0x8765,

		/// <summary>
		/// Specifies the usage of a buffer (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_vertex_buffer_object</remarks>
		BufferUsageArb = 0x8765,

		/// <summary>
		/// Specifies the usage of an object buffer (ATI extension).
		/// </summary>
		/// <remarks></remarks>
		ObjectBufferUsageAti = 0x8765,

		/// <summary>
		/// Specifies the first vertex stream (ATI extension).
		/// </summary>
		/// <remarks></remarks>
		VertexStream0Ati = 0x876C,

		/// <summary>
		/// Specifies the second vertex stream (ATI extension).
		/// </summary>
		/// <remarks></remarks>
		VertexStream1Ati = 0x876D,

		/// <summary>
		/// Specifies the third vertex stream (ATI extension).
		/// </summary>
		/// <remarks></remarks>
		VertexStream2Ati = 0x876E,

		/// <summary>
		/// Specifies the fourth vertex stream (ATI extension).
		/// </summary>
		/// <remarks></remarks>
		VertexStream3Ati = 0x876F,

		/// <summary>
		/// Specifies the fifth vertex stream (ATI extension).
		/// </summary>
		/// <remarks></remarks>
		VertexStream4Ati = 0x8770,

		/// <summary>
		/// Specifies the sixth vertex stream (ATI extension).
		/// </summary>
		/// <remarks></remarks>
		VertexStream5Ati = 0x8771,

		/// <summary>
		/// Specifies the seventh vertex stream (ATI extension).
		/// </summary>
		/// <remarks></remarks>
		VertexStream6Ati = 0x8772,

		/// <summary>
		/// Specifies the eighth vertex stream (ATI extension).
		/// </summary>
		/// <remarks></remarks>
		VertexStream7Ati = 0x8773,

		/// <summary>
		/// Specifies the bump rotation matrix (ATI extension).
		/// </summary>
		/// <remarks></remarks>
		BumpRotMatrixAti = 0x8775,

		/// <summary>
		/// Specifies the size of the bump rotation matrix (ATI extension).
		/// </summary>
		/// <remarks></remarks>
		BumpRotMatrixSizeAti = 0x8776,

		/// <summary>
		/// Specifies the number of texture units for bump mapping (ATI extension).
		/// </summary>
		/// <remarks></remarks>
		BumpNumTexUnitsAti = 0x8777,

		/// <summary>
		/// Specifies the bump texture units (ATI extension).
		/// </summary>
		/// <remarks></remarks>
		BumpTexUnitsAti = 0x8778,

		/// <summary>
		/// Specifies the index operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		OpIndexExt = 0x8782,

		/// <summary>
		/// Specifies the negate operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		OpNegateExt = 0x8783,

		/// <summary>
		/// Specifies the dot product operation for 3-component vectors in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		OpDot3Ext = 0x8784,

		/// <summary>
		/// Specifies the dot product operation for 4-component vectors in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		OpDot4Ext = 0x8785,

		/// <summary>
		/// Specifies the multiplication operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		OpMulExt = 0x8786,

		/// <summary>
		/// Specifies the addition operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		OpAddExt = 0x8787,

		/// <summary>
		/// Specifies the multiply-add operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		OpMaddExt = 0x8788,

		/// <summary>
		/// Specifies the fractional part operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		OpFracExt = 0x8789,

		/// <summary>
		/// Specifies the maximum operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		OpMaxExt = 0x878A,

		/// <summary>
		/// Specifies the minimum operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		OpMinExt = 0x878B,

		/// <summary>
		/// Specifies the set greater than or equal operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		OpSetGeExt = 0x878C,

		/// <summary>
		/// Specifies the set less than operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		OpSetLtExt = 0x878D,

		/// <summary>
		/// Specifies the clamp operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		OpClampExt = 0x878E,

		/// <summary>
		/// Specifies the floor operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		OpFloorExt = 0x878F,

		/// <summary>
		/// Specifies the round operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		OpRoundExt = 0x8790,

		/// <summary>
		/// Specifies the base 2 exponential operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		OpExpBase2Ext = 0x8791,

		/// <summary>
		/// Specifies the base 2 logarithm operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		OpLogBase2Ext = 0x8792,

		/// <summary>
		/// Specifies the power operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		OpPowerExt = 0x8793,

		/// <summary>
		/// Specifies the reciprocal operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		OpRecipExt = 0x8794,

		/// <summary>
		/// Specifies the reciprocal square root operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		OpRecipSqrtExt = 0x8795,

		/// <summary>
		/// Specifies the subtraction operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		OpSubExt = 0x8796,

		/// <summary>
		/// Specifies the cross product operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		OpCrossProductExt = 0x8797,

		/// <summary>
		/// Specifies the matrix multiplication operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		OpMultiplyMatrixExt = 0x8798,

		/// <summary>
		/// Specifies the move operation in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		OpMovExt = 0x8799,

		/// <summary>
		/// Specifies scalar output from EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		ScalarExt = 0x87BE,

		/// <summary>
		/// Specifies a vector in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		VectorExt = 0x87BF,

		/// <summary>
		/// Specifies a matrix in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		MatrixExt = 0x87C0,

		/// <summary>
		/// Specifies a variant in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		VariantExt = 0x87C1,

		/// <summary>
		/// Specifies an invariant in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		InvariantExt = 0x87C2,

		/// <summary>
		/// Specifies a local constant in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		LocalConstantExt = 0x87C3,

		/// <summary>
		/// Specifies a local variable in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		LocalExt = 0x87C4,

		/// <summary>
		/// Specifies the X component in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		XExt = 0x87D5,

		/// <summary>
		/// Specifies the Y component in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		YExt = 0x87D6,

		/// <summary>
		/// Specifies the Z component in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		ZExt = 0x87D7,

		/// <summary>
		/// Specifies the W component in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		WExt = 0x87D8,

		/// <summary>
		/// Specifies the negative X component in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		NegativeXExt = 0x87D9,

		/// <summary>
		/// Specifies the negative Y component in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		NegativeYExt = 0x87DA,

		/// <summary>
		/// Specifies the negative Z component in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		NegativeZExt = 0x87DB,

		/// <summary>
		/// Specifies the negative W component in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		NegativeWExt = 0x87DC,

		/// <summary>
		/// Specifies the zero constant in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		ZeroExt = 0x87DD,

		/// <summary>
		/// Specifies the one constant in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		OneExt = 0x87DE,

		/// <summary>
		/// Specifies the negative one constant in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		NegativeOneExt = 0x87DF,

		/// <summary>
		/// Specifies the normalized range in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		NormalizedRangeExt = 0x87E0,

		/// <summary>
		/// Specifies the full range in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		FullRangeExt = 0x87E1,

		/// <summary>
		/// Specifies the current vertex in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		CurrentVertexExt = 0x87E2,

		/// <summary>
		/// Specifies the Model-View-Projection matrix in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		MvpMatrixExt = 0x87E3,

		/// <summary>
		/// Specifies the value of a variant in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		VariantValueExt = 0x87E4,

		/// <summary>
		/// Specifies the data type of a variant in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		VariantDatatypeExt = 0x87E5,

		/// <summary>
		/// Specifies the stride of a variant array in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		VariantArrayStrideExt = 0x87E6,

		/// <summary>
		/// Specifies the type of a variant array in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		VariantArrayTypeExt = 0x87E7,

		/// <summary>
		/// Specifies a variant array in EXT vertex shader.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_vertex_shader</remarks>
		VariantArrayExt = 0x87E8,

		/// <summary>
		/// Specifies the point mode for PN triangles (ATI extension).
		/// </summary>
		/// <remarks></remarks>
		PnTrianglesPointModeAti = 0x87F2,

		/// <summary>
		/// Specifies the normal mode for PN triangles (ATI extension).
		/// </summary>
		/// <remarks></remarks>
		PnTrianglesNormalModeAti = 0x87F3,

		/// <summary>
		/// Specifies the tessellation level for PN triangles (ATI extension).
		/// </summary>
		/// <remarks></remarks>
		PnTrianglesTesselationLevelAti = 0x87F4,

		/// <summary>
		/// Specifies the number of program binary formats.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_get_program_binary</remarks>
		NumProgramBinaryFormats = 0x87FE,

		/// <summary>
		/// Specifies available program binary formats.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_get_program_binary</remarks>
		ProgramBinaryFormats = 0x87FF,

		/// <summary>
		/// Specifies the stencil function for the back face.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		StencilBackFunc = 0x8800,

		/// <summary>
		/// Specifies the stencil operation on failure for the back face.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		StencilBackFail = 0x8801,

		/// <summary>
		/// Specifies the stencil operation on depth fail for the back face.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		StencilBackPassDepthFail = 0x8802,

		/// <summary>
		/// Specifies the stencil operation on depth pass for the back face.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		StencilBackPassDepthPass = 0x8803,

		/// <summary>
		/// Specifies a fragment program (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_fragment_program</remarks>
		FragmentProgramArb = 0x8804,

		/// <summary>
		/// Specifies a 32-bit floating-point RGBA texture format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Rgba32F = 0x8814,

		/// <summary>
		/// Specifies a 32-bit floating-point RGBA texture format (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_float</remarks>
		Rgba32FArb = 0x8814,

		/// <summary>
		/// Specifies a 32-bit floating-point RGBA texture format (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_storage</remarks>
		Rgba32FExt = 0x8814,

		/// <summary>
		/// Specifies a 32-bit floating-point RGB texture format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_buffer_object_rgb32</remarks>
		Rgb32F = 0x8815,

		/// <summary>
		/// Specifies a 32-bit floating-point RGB texture format (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_float</remarks>
		Rgb32FArb = 0x8815,

		/// <summary>
		/// Specifies a 32-bit floating-point RGB texture format (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_storage</remarks>
		Rgb32FExt = 0x8815,

		/// <summary>
		/// Specifies a 16-bit floating-point RGBA texture format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Rgba16F = 0x881A,

		/// <summary>
		/// Specifies a 16-bit floating-point RGBA texture format (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_float</remarks>
		Rgba16FArb = 0x881A,

		/// <summary>
		/// Specifies a 16-bit floating-point RGBA texture format (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_storage<br/>GL_EXT_color_buffer_half_float</remarks>
		Rgba16FExt = 0x881A,

		/// <summary>
		/// Specifies a 16-bit floating-point RGB texture format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Rgb16F = 0x881B,

		/// <summary>
		/// Specifies a 16-bit floating-point RGB texture format (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_float</remarks>
		Rgb16FArb = 0x881B,

		/// <summary>
		/// Specifies a 16-bit floating-point RGB texture format (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_storage<br/>GL_EXT_color_buffer_half_float</remarks>
		Rgb16FExt = 0x881B,

		/// <summary>
		/// Specifies the maximum number of draw buffers.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		MaxDrawBuffers = 0x8824,

		/// <summary>
		/// Specifies the blend equation for alpha blending.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_EXT_draw_buffers_indexed<br/>GL_OES_draw_buffers_indexed</remarks>
		BlendEquationAlpha = 0x883D,

		/// <summary>
		/// Specifies the comparison mode for texture.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureCompareMode = 0x884C,

		/// <summary>
		/// Specifies the comparison function for texture.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TextureCompareFunc = 0x884D,

		/// <summary>
		/// Specifies comparison of R component to texture.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		CompareRToTexture = 0x884E,

		/// <summary>
		/// Specifies comparison of reference to texture.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		CompareRefToTexture = 0x884E,

		/// <summary>
		/// Enables seamless texture cube mapping.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_seamless_cube_map<br/>GL_ARB_seamless_cubemap_per_texture<br/>GL_AMD_seamless_cubemap_per_texture</remarks>
		TextureCubeMapSeamless = 0x884F,

		/// <summary>
		/// Enables point sprite rendering.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PointSprite = 0x8861,

		/// <summary>
		/// Enables coordinate replacement.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		CoordReplace = 0x8862,

		/// <summary>
		/// Specifies the number of bits in query counters.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		QueryCounterBits = 0x8864,

		/// <summary>
		/// Specifies the current query.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		CurrentQuery = 0x8865,

		/// <summary>
		/// Specifies the pixel count (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_occlusion_query</remarks>
		PixelCountNv = 0x8866,

		/// <summary>
		/// Specifies the result of the query.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		QueryResult = 0x8866,

		/// <summary>
		/// Specifies if pixel counts are available (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_occlusion_query</remarks>
		PixelCountAvailableNv = 0x8867,

		/// <summary>
		/// Specifies if the query result is available.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		QueryResultAvailable = 0x8867,

		/// <summary>
		/// Specifies the maximum number of vertex attributes.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		MaxVertexAttribs = 0x8869,

		/// <summary>
		/// Specifies whether vertex attributes are normalized.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		VertexAttribArrayNormalized = 0x886A,

		/// <summary>
		/// Specifies the maximum number of texture image units.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		MaxTextureImageUnits = 0x8872,

		/// <summary>
		/// Specifies the program format in ASCII (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_fragment_program<br/>GL_ARB_vertex_program</remarks>
		ProgramFormatAsciiArb = 0x8875,

		/// <summary>
		/// Specifies the range for writing pixel data (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_pixel_data_range</remarks>
		WritePixelDataRangeNv = 0x8878,

		/// <summary>
		/// Specifies the range for reading pixel data (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_pixel_data_range</remarks>
		ReadPixelDataRangeNv = 0x8879,

		/// <summary>
		/// Specifies an array buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ArrayBuffer = 0x8892,

		/// <summary>
		/// Specifies an element array buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ElementArrayBuffer = 0x8893,

		/// <summary>
		/// Specifies the binding point for the array buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ArrayBufferBinding = 0x8894,

		/// <summary>
		/// Specifies the binding point for the element array buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ElementArrayBufferBinding = 0x8895,

		/// <summary>
		/// Specifies the binding point for the vertex attrib array buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		VertexAttribArrayBufferBinding = 0x889F,

		/// <summary>
		/// Specifies read-only access to a buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ReadOnly = 0x88B8,

		/// <summary>
		/// Specifies write-only access to a buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_NV_shader_buffer_store</remarks>
		WriteOnly = 0x88B9,

		/// <summary>
		/// Specifies read/write access to a buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_NV_shader_buffer_store</remarks>
		ReadWrite = 0x88BA,

		/// <summary>
		/// Specifies the access type for buffer objects.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		BufferAccess = 0x88BB,

		/// <summary>
		/// Specifies the access type for buffer objects (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_vertex_buffer_object</remarks>
		BufferAccessArb = 0x88BB,

		/// <summary>
		/// Specifies if a buffer is mapped.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		BufferMapped = 0x88BC,

		/// <summary>
		/// Specifies if a buffer is mapped (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_vertex_buffer_object</remarks>
		BufferMappedArb = 0x88BC,

		/// <summary>
		/// Specifies a pointer to a mapped buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		BufferMapPointer = 0x88BD,

		/// <summary>
		/// Specifies a pointer to a mapped buffer (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_vertex_buffer_object</remarks>
		BufferMapPointerArb = 0x88BD,

		/// <summary>
		/// Specifies the elapsed time since a specific event.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_timer_query</remarks>
		TimeElapsed = 0x88BF,

		/// <summary>
		/// Specifies a hint that data will be set frequently and used for drawing.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		StreamDraw = 0x88E0,

		/// <summary>
		/// Specifies a hint that data will be read frequently.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		StreamRead = 0x88E1,

		/// <summary>
		/// Specifies a hint that data will be copied frequently.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		StreamCopy = 0x88E2,

		/// <summary>
		/// Specifies a hint that data will be set once and used for drawing.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		StaticDraw = 0x88E4,

		/// <summary>
		/// Specifies a hint that data will be read once.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		StaticRead = 0x88E5,

		/// <summary>
		/// Specifies a hint that data will be copied once.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		StaticCopy = 0x88E6,

		/// <summary>
		/// Specifies a hint that data will be changed frequently and used for drawing.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		DynamicDraw = 0x88E8,

		/// <summary>
		/// Specifies a hint that data will be read frequently.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		DynamicRead = 0x88E9,

		/// <summary>
		/// Specifies a hint that data will be copied frequently.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		DynamicCopy = 0x88EA,

		/// <summary>
		/// Specifies a buffer for pixel packing.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PixelPackBuffer = 0x88EB,

		/// <summary>
		/// Specifies a buffer for pixel unpacking.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PixelUnpackBuffer = 0x88EC,

		/// <summary>
		/// Specifies the binding point for the pixel pack buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PixelPackBufferBinding = 0x88ED,

		/// <summary>
		/// Specifies the binding point for the pixel unpack buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PixelUnpackBufferBinding = 0x88EF,

		/// <summary>
		/// Specifies a combined depth and stencil format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		Depth24Stencil8 = 0x88F0,

		/// <summary>
		/// Specifies a combined depth and stencil format for EXT extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_packed_depth_stencil</remarks>
		Depth24Stencil8Ext = 0x88F0,

		/// <summary>
		/// Specifies a combined depth and stencil format for OES extensions.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ANGLE_depth_texture<br/>GL_OES_packed_depth_stencil<br/>GL_OES_required_internalformat</remarks>
		Depth24Stencil8Oes = 0x88F0,

		/// <summary>
		/// Specifies the second source color for blending.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_blend_func_extended</remarks>
		Src1Color = 0x88F9,

		/// <summary>
		/// Specifies the one minus second source color for blending.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_blend_func_extended</remarks>
		OneMinusSrc1Color = 0x88FA,

		/// <summary>
		/// Specifies the one minus second source alpha for blending.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_blend_func_extended</remarks>
		OneMinusSrc1Alpha = 0x88FB,

		/// <summary>
		/// Specifies the maximum number of dual source draw buffers.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_blend_func_extended</remarks>
		MaxDualSourceDrawBuffers = 0x88FC,

		/// <summary>
		/// Specifies if the vertex attribute array contains integer data.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		VertexAttribArrayInteger = 0x88FD,

		/// <summary>
		/// Specifies if the vertex attribute array contains integer data (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_gpu_shader4</remarks>
		VertexAttribArrayIntegerExt = 0x88FD,

		/// <summary>
		/// Specifies the divisor for a vertex attribute array.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		VertexAttribArrayDivisor = 0x88FE,

		/// <summary>
		/// Specifies the maximum number of texture layers for array textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		MaxArrayTextureLayers = 0x88FF,

		/// <summary>
		/// Specifies the minimum texture coordinate offset for programs.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		MinProgramTexelOffset = 0x8904,

		/// <summary>
		/// Specifies the maximum texture coordinate offset for programs.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		MaxProgramTexelOffset = 0x8905,

		/// <summary>
		/// Specifies the number of samples passed in an occlusion query.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		SamplesPassed = 0x8914,

		/// <summary>
		/// Specifies the output vertices of a geometry shader.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		GeometryVerticesOut = 0x8916,

		/// <summary>
		/// Specifies the input type for a geometry shader.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		GeometryInputType = 0x8917,

		/// <summary>
		/// Specifies the output type for a geometry shader.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		GeometryOutputType = 0x8918,

		/// <summary>
		/// Specifies the binding point for texture samplers.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_sampler_objects<br/>GL_MESA_sampler_objects</remarks>
		SamplerBinding = 0x8919,

		/// <summary>
		/// Specifies clamping for vertex colors (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_color_buffer_float</remarks>
		ClampVertexColorArb = 0x891A,

		/// <summary>
		/// Specifies clamping for fragment colors (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_color_buffer_float</remarks>
		ClampFragmentColorArb = 0x891B,

		/// <summary>
		/// Specifies clamping for read colors.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ClampReadColor = 0x891C,

		/// <summary>
		/// Specifies clamping for read colors (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_color_buffer_float</remarks>
		ClampReadColorArb = 0x891C,

		/// <summary>
		/// Specifies that a texture format only supports fixed-point formats.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		FixedOnly = 0x891D,

		/// <summary>
		/// Specifies that a texture format only supports fixed-point formats (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_color_buffer_float</remarks>
		FixedOnlyArb = 0x891D,

		/// <summary>
		/// Specifies the tessellation control program (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_tessellation_program5</remarks>
		TessControlProgramNv = 0x891E,

		/// <summary>
		/// Specifies the tessellation evaluation program (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_tessellation_program5</remarks>
		TessEvaluationProgramNv = 0x891F,

		/// <summary>
		/// Specifies a fragment shader (ATI extension).
		/// </summary>
		/// <remarks></remarks>
		FragmentShaderAti = 0x8920,

		/// <summary>
		/// Specifies the first register in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Reg0Ati = 0x8921,

		/// <summary>
		/// Specifies the second register in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Reg1Ati = 0x8922,

		/// <summary>
		/// Specifies the third register in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Reg2Ati = 0x8923,

		/// <summary>
		/// Specifies the fourth register in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Reg3Ati = 0x8924,

		/// <summary>
		/// Specifies the fifth register in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Reg4Ati = 0x8925,

		/// <summary>
		/// Specifies the sixth register in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Reg5Ati = 0x8926,

		/// <summary>
		/// Specifies the seventh register in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Reg6Ati = 0x8927,

		/// <summary>
		/// Specifies the eighth register in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Reg7Ati = 0x8928,

		/// <summary>
		/// Specifies the ninth register in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Reg8Ati = 0x8929,

		/// <summary>
		/// Specifies the tenth register in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Reg9Ati = 0x892A,

		/// <summary>
		/// Specifies the eleventh register in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Reg10Ati = 0x892B,

		/// <summary>
		/// Specifies the twelfth register in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Reg11Ati = 0x892C,

		/// <summary>
		/// Specifies the thirteenth register in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Reg12Ati = 0x892D,

		/// <summary>
		/// Specifies the fourteenth register in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Reg13Ati = 0x892E,

		/// <summary>
		/// Specifies the fifteenth register in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Reg14Ati = 0x892F,

		/// <summary>
		/// Specifies the sixteenth register in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Reg15Ati = 0x8930,

		/// <summary>
		/// Specifies the seventeenth register in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Reg16Ati = 0x8931,

		/// <summary>
		/// Specifies the eighteenth register in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Reg17Ati = 0x8932,

		/// <summary>
		/// Specifies the nineteenth register in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Reg18Ati = 0x8933,

		/// <summary>
		/// Specifies the twentieth register in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Reg19Ati = 0x8934,

		/// <summary>
		/// Specifies the twenty-first register in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Reg20Ati = 0x8935,

		/// <summary>
		/// Specifies the twenty-second register in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Reg21Ati = 0x8936,

		/// <summary>
		/// Specifies the twenty-third register in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Reg22Ati = 0x8937,

		/// <summary>
		/// Specifies the twenty-fourth register in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Reg23Ati = 0x8938,

		/// <summary>
		/// Specifies the twenty-fifth register in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Reg24Ati = 0x8939,

		/// <summary>
		/// Specifies the twenty-sixth register in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Reg25Ati = 0x893A,

		/// <summary>
		/// Specifies the twenty-seventh register in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Reg26Ati = 0x893B,

		/// <summary>
		/// Specifies the twenty-eighth register in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Reg27Ati = 0x893C,

		/// <summary>
		/// Specifies the twenty-ninth register in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Reg28Ati = 0x893D,

		/// <summary>
		/// Specifies the thirtieth register in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Reg29Ati = 0x893E,

		/// <summary>
		/// Specifies the thirty-first register in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Reg30Ati = 0x893F,

		/// <summary>
		/// Specifies the thirty-second register in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Reg31Ati = 0x8940,

		/// <summary>
		/// Specifies the first constant in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Con0Ati = 0x8941,

		/// <summary>
		/// Specifies the second constant in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Con1Ati = 0x8942,

		/// <summary>
		/// Specifies the third constant in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Con2Ati = 0x8943,

		/// <summary>
		/// Specifies the fourth constant in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Con3Ati = 0x8944,

		/// <summary>
		/// Specifies the fifth constant in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Con4Ati = 0x8945,

		/// <summary>
		/// Specifies the sixth constant in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Con5Ati = 0x8946,

		/// <summary>
		/// Specifies the seventh constant in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Con6Ati = 0x8947,

		/// <summary>
		/// Specifies the eighth constant in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Con7Ati = 0x8948,

		/// <summary>
		/// Specifies the ninth constant in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Con8Ati = 0x8949,

		/// <summary>
		/// Specifies the tenth constant in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Con9Ati = 0x894A,

		/// <summary>
		/// Specifies the eleventh constant in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Con10Ati = 0x894B,

		/// <summary>
		/// Specifies the twelfth constant in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Con11Ati = 0x894C,

		/// <summary>
		/// Specifies the thirteenth constant in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Con12Ati = 0x894D,

		/// <summary>
		/// Specifies the fourteenth constant in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Con13Ati = 0x894E,

		/// <summary>
		/// Specifies the fifteenth constant in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Con14Ati = 0x894F,

		/// <summary>
		/// Specifies the sixteenth constant in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Con15Ati = 0x8950,

		/// <summary>
		/// Specifies the seventeenth constant in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Con16Ati = 0x8951,

		/// <summary>
		/// Specifies the eighteenth constant in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Con17Ati = 0x8952,

		/// <summary>
		/// Specifies the nineteenth constant in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Con18Ati = 0x8953,

		/// <summary>
		/// Specifies the twentieth constant in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Con19Ati = 0x8954,

		/// <summary>
		/// Specifies the twenty-first constant in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Con20Ati = 0x8955,

		/// <summary>
		/// Specifies the twenty-second constant in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Con21Ati = 0x8956,

		/// <summary>
		/// Specifies the twenty-third constant in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Con22Ati = 0x8957,

		/// <summary>
		/// Specifies the twenty-fourth constant in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Con23Ati = 0x8958,

		/// <summary>
		/// Specifies the twenty-fifth constant in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Con24Ati = 0x8959,

		/// <summary>
		/// Specifies the twenty-sixth constant in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Con25Ati = 0x895A,

		/// <summary>
		/// Specifies the twenty-seventh constant in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Con26Ati = 0x895B,

		/// <summary>
		/// Specifies the twenty-eighth constant in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Con27Ati = 0x895C,

		/// <summary>
		/// Specifies the twenty-ninth constant in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Con28Ati = 0x895D,

		/// <summary>
		/// Specifies the thirtieth constant in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Con29Ati = 0x895E,

		/// <summary>
		/// Specifies the thirty-first constant in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Con30Ati = 0x895F,

		/// <summary>
		/// Specifies the thirty-second constant in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Con31Ati = 0x8960,

		/// <summary>
		/// Specifies the move operation in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		MovAti = 0x8961,

		/// <summary>
		/// Specifies the addition operation in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		AddAti = 0x8963,

		/// <summary>
		/// Specifies the multiplication operation in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		MulAti = 0x8964,

		/// <summary>
		/// Specifies the subtraction operation in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		SubAti = 0x8965,

		/// <summary>
		/// Specifies the dot product of three components in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Dot3Ati = 0x8966,

		/// <summary>
		/// Specifies the dot product of four components in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Dot4Ati = 0x8967,

		/// <summary>
		/// Specifies the multiply-add operation in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		MadAti = 0x8968,

		/// <summary>
		/// Specifies the linear interpolation operation in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		LerpAti = 0x8969,

		/// <summary>
		/// Specifies the conditional operation in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		CndAti = 0x896A,

		/// <summary>
		/// Specifies the first conditional operation in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Cnd0Ati = 0x896B,

		/// <summary>
		/// Specifies the addition of a dot product of two components in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		Dot2AddAti = 0x896C,

		/// <summary>
		/// Specifies a secondary interpolator in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		SecondaryInterpolatorAti = 0x896D,

		/// <summary>
		/// Specifies the swizzle operation for STR channels in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		SwizzleStrAti = 0x8976,

		/// <summary>
		/// Specifies the swizzle operation for STQ channels in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		SwizzleStqAti = 0x8977,

		/// <summary>
		/// Specifies the swizzle operation for STR channels with destination register in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		SwizzleStrDrAti = 0x8978,

		/// <summary>
		/// Specifies the swizzle operation for STQ channels with destination queue in ATI fragment shaders.
		/// </summary>
		/// <remarks></remarks>
		SwizzleStqDqAti = 0x8979,

		/// <summary>
		/// Specifies packing for resampling textures in OML extensions.
		/// </summary>
		/// <remarks></remarks>
		PackResampleOml = 0x8984,

		/// <summary>
		/// Specifies unpacking for resampling textures in OML extensions.
		/// </summary>
		/// <remarks></remarks>
		UnpackResampleOml = 0x8985,

		/// <summary>
		/// Specifies the draw pixels operation (APPLE extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_APPLE_fence</remarks>
		DrawPixelsApple = 0x8A0A,

		/// <summary>
		/// Specifies a fence object (APPLE extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_APPLE_fence</remarks>
		FenceApple = 0x8A0B,

		/// <summary>
		/// Specifies a uniform buffer in OpenGL.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_uniform_buffer_object</remarks>
		UniformBuffer = 0x8A11,

		/// <summary>
		/// Specifies the binding point for uniform buffers in OpenGL.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_uniform_buffer_object</remarks>
		UniformBufferBinding = 0x8A28,

		/// <summary>
		/// Specifies the start of a uniform buffer in OpenGL.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_uniform_buffer_object</remarks>
		UniformBufferStart = 0x8A29,

		/// <summary>
		/// Specifies the size of a uniform buffer in OpenGL.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_uniform_buffer_object</remarks>
		UniformBufferSize = 0x8A2A,

		/// <summary>
		/// Specifies the maximum number of vertex uniform blocks supported.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_uniform_buffer_object</remarks>
		MaxVertexUniformBlocks = 0x8A2B,

		/// <summary>
		/// Specifies the maximum number of geometry uniform blocks supported.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_uniform_buffer_object</remarks>
		MaxGeometryUniformBlocks = 0x8A2C,

		/// <summary>
		/// Specifies the maximum number of fragment uniform blocks supported.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_uniform_buffer_object</remarks>
		MaxFragmentUniformBlocks = 0x8A2D,

		/// <summary>
		/// Specifies the maximum number of combined uniform blocks across all shader types.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_uniform_buffer_object</remarks>
		MaxCombinedUniformBlocks = 0x8A2E,

		/// <summary>
		/// Specifies the maximum number of uniform buffer bindings.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_uniform_buffer_object</remarks>
		MaxUniformBufferBindings = 0x8A2F,

		/// <summary>
		/// Specifies the maximum size of a single uniform block.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_uniform_buffer_object</remarks>
		MaxUniformBlockSize = 0x8A30,

		/// <summary>
		/// Specifies the maximum number of combined vertex uniform components.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_uniform_buffer_object</remarks>
		MaxCombinedVertexUniformComponents = 0x8A31,

		/// <summary>
		/// Specifies the maximum number of combined geometry uniform components.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_uniform_buffer_object</remarks>
		MaxCombinedGeometryUniformComponents = 0x8A32,

		/// <summary>
		/// Specifies the maximum number of combined fragment uniform components.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_uniform_buffer_object</remarks>
		MaxCombinedFragmentUniformComponents = 0x8A33,

		/// <summary>
		/// Specifies the alignment requirements for uniform buffer offsets.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_uniform_buffer_object</remarks>
		UniformBufferOffsetAlignment = 0x8A34,

		/// <summary>
		/// Specifies the maximum length of an active uniform block name.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_uniform_buffer_object</remarks>
		ActiveUniformBlockMaxNameLength = 0x8A35,

		/// <summary>
		/// Specifies the number of active uniform blocks.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_uniform_buffer_object</remarks>
		ActiveUniformBlocks = 0x8A36,

		/// <summary>
		/// Specifies the type of a uniform variable.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_uniform_buffer_object</remarks>
		UniformType = 0x8A37,

		/// <summary>
		/// Specifies the size of a uniform variable.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_subroutine<br/>GL_ARB_uniform_buffer_object</remarks>
		UniformSize = 0x8A38,

		/// <summary>
		/// Specifies the length of the name of a uniform variable.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_subroutine<br/>GL_ARB_uniform_buffer_object</remarks>
		UniformNameLength = 0x8A39,

		/// <summary>
		/// Specifies the index of a uniform block for a uniform variable.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_uniform_buffer_object</remarks>
		UniformBlockIndex = 0x8A3A,

		/// <summary>
		/// Specifies the offset of a uniform variable within a uniform block.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_uniform_buffer_object</remarks>
		UniformOffset = 0x8A3B,

		/// <summary>
		/// Specifies the stride between consecutive elements of an array of uniform variables.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_uniform_buffer_object</remarks>
		UniformArrayStride = 0x8A3C,

		/// <summary>
		/// Specifies the stride between consecutive matrices in an array of uniform variables.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_uniform_buffer_object</remarks>
		UniformMatrixStride = 0x8A3D,

		/// <summary>
		/// Specifies whether a uniform matrix is stored in row-major order.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_uniform_buffer_object</remarks>
		UniformIsRowMajor = 0x8A3E,

		/// <summary>
		/// Specifies the binding point for a uniform block.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_uniform_buffer_object</remarks>
		UniformBlockBinding = 0x8A3F,

		/// <summary>
		/// Specifies the data size of a uniform block.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_uniform_buffer_object</remarks>
		UniformBlockDataSize = 0x8A40,

		/// <summary>
		/// Specifies the length of a uniform block name.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_uniform_buffer_object</remarks>
		UniformBlockNameLength = 0x8A41,

		/// <summary>
		/// Specifies the number of active uniforms in a uniform block.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_uniform_buffer_object</remarks>
		UniformBlockActiveUniforms = 0x8A42,

		/// <summary>
		/// Specifies the indices of active uniforms in a uniform block.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_uniform_buffer_object</remarks>
		UniformBlockActiveUniformIndices = 0x8A43,

		/// <summary>
		/// Specifies whether a uniform block is referenced by the vertex shader.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_uniform_buffer_object</remarks>
		UniformBlockReferencedByVertexShader = 0x8A44,

		/// <summary>
		/// Specifies whether a uniform block is referenced by the geometry shader.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_uniform_buffer_object</remarks>
		UniformBlockReferencedByGeometryShader = 0x8A45,

		/// <summary>
		/// Specifies whether a uniform block is referenced by the fragment shader.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_uniform_buffer_object</remarks>
		UniformBlockReferencedByFragmentShader = 0x8A46,

		/// <summary>
		/// Specifies a fragment shader object.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		FragmentShader = 0x8B30,

		/// <summary>
		/// Specifies a fragment shader object (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_fragment_shader</remarks>
		FragmentShaderArb = 0x8B30,

		/// <summary>
		/// Specifies a vertex shader object.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		VertexShader = 0x8B31,

		/// <summary>
		/// Specifies a vertex shader object (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_vertex_shader</remarks>
		VertexShaderArb = 0x8B31,

		/// <summary>
		/// Specifies a program object (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_shader_objects</remarks>
		ProgramObjectArb = 0x8B40,

		/// <summary>
		/// Specifies a program object (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_debug_label</remarks>
		ProgramObjectExt = 0x8B40,

		/// <summary>
		/// Specifies the maximum number of fragment uniform components.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		MaxFragmentUniformComponents = 0x8B49,

		/// <summary>
		/// Specifies the maximum number of vertex uniform components.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		MaxVertexUniformComponents = 0x8B4A,

		/// <summary>
		/// Specifies the maximum number of varying float values.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		MaxVaryingFloats = 0x8B4B,

		/// <summary>
		/// Specifies the maximum number of varying components.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_geometry_shader4</remarks>
		MaxVaryingComponents = 0x8B4B,

		/// <summary>
		/// Specifies the maximum number of vertex texture image units.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		MaxVertexTextureImageUnits = 0x8B4C,

		/// <summary>
		/// Specifies the maximum number of combined texture image units.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		MaxCombinedTextureImageUnits = 0x8B4D,

		/// <summary>
		/// Specifies the type of a shader object.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ShaderType = 0x8B4F,

		/// <summary>
		/// Specifies a 2-component vector of floating-point numbers.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		FloatVec2 = 0x8B50,

		/// <summary>
		/// Specifies a 2-component vector of floating-point numbers (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_shader_objects<br/>GL_ARB_vertex_shader</remarks>
		FloatVec2Arb = 0x8B50,

		/// <summary>
		/// Specifies a 3-component vector of floating-point numbers.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		FloatVec3 = 0x8B51,

		/// <summary>
		/// Specifies a 3-component vector of floating-point numbers (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_shader_objects<br/>GL_ARB_vertex_shader</remarks>
		FloatVec3Arb = 0x8B51,

		/// <summary>
		/// Specifies a 4-component vector of floating-point numbers.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		FloatVec4 = 0x8B52,

		/// <summary>
		/// Specifies a 4-component vector of floating-point numbers (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_shader_objects<br/>GL_ARB_vertex_shader</remarks>
		FloatVec4Arb = 0x8B52,

		/// <summary>
		/// Specifies a 2-component vector of integers.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		IntVec2 = 0x8B53,

		/// <summary>
		/// Specifies a 2-component vector of integers (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_shader_objects</remarks>
		IntVec2Arb = 0x8B53,

		/// <summary>
		/// Specifies a 3-component vector of integers.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		IntVec3 = 0x8B54,

		/// <summary>
		/// Specifies a 3-component vector of integers (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_shader_objects</remarks>
		IntVec3Arb = 0x8B54,

		/// <summary>
		/// Specifies a 4-component vector of integers.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		IntVec4 = 0x8B55,

		/// <summary>
		/// Specifies a 4-component vector of integers (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_shader_objects</remarks>
		IntVec4Arb = 0x8B55,

		/// <summary>
		/// Specifies a boolean value.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Bool = 0x8B56,

		/// <summary>
		/// Specifies a boolean value (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_shader_objects</remarks>
		BoolArb = 0x8B56,

		/// <summary>
		/// Specifies a 2-component vector of boolean values.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		BoolVec2 = 0x8B57,

		/// <summary>
		/// Specifies a 2-component vector of boolean values (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_shader_objects</remarks>
		BoolVec2Arb = 0x8B57,

		/// <summary>
		/// Specifies a 3-component vector of boolean values.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		BoolVec3 = 0x8B58,

		/// <summary>
		/// Specifies a 3-component vector of boolean values (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_shader_objects</remarks>
		BoolVec3Arb = 0x8B58,

		/// <summary>
		/// Specifies a 4-component vector of boolean values.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		BoolVec4 = 0x8B59,

		/// <summary>
		/// Specifies a 4-component vector of boolean values (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_shader_objects</remarks>
		BoolVec4Arb = 0x8B59,

		/// <summary>
		/// Specifies a 2x2 matrix of floating-point numbers.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		FloatMat2 = 0x8B5A,

		/// <summary>
		/// Specifies a 2x2 matrix of floating-point numbers (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_shader_objects<br/>GL_ARB_vertex_shader</remarks>
		FloatMat2Arb = 0x8B5A,

		/// <summary>
		/// Specifies a 3x3 matrix of floating-point numbers.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		FloatMat3 = 0x8B5B,

		/// <summary>
		/// Specifies a 3x3 matrix of floating-point numbers (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_shader_objects<br/>GL_ARB_vertex_shader</remarks>
		FloatMat3Arb = 0x8B5B,

		/// <summary>
		/// Specifies a 4x4 matrix of floating-point numbers.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		FloatMat4 = 0x8B5C,

		/// <summary>
		/// Specifies a 4x4 matrix of floating-point numbers (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_shader_objects<br/>GL_ARB_vertex_shader</remarks>
		FloatMat4Arb = 0x8B5C,

		/// <summary>
		/// Specifies a 1D sampler for textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Sampler1D = 0x8B5D,

		/// <summary>
		/// Specifies a 1D sampler for textures (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_shader_objects</remarks>
		Sampler1DArb = 0x8B5D,

		/// <summary>
		/// Specifies a 2D sampler for textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Sampler2D = 0x8B5E,

		/// <summary>
		/// Specifies a 2D sampler for textures (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_shader_objects</remarks>
		Sampler2DArb = 0x8B5E,

		/// <summary>
		/// Specifies a 3D sampler for textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Sampler3D = 0x8B5F,

		/// <summary>
		/// Specifies a 3D sampler for textures (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_shader_objects</remarks>
		Sampler3DArb = 0x8B5F,

		/// <summary>
		/// Specifies a 3D sampler for textures (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_texture_3D</remarks>
		Sampler3DOes = 0x8B5F,

		/// <summary>
		/// Specifies a cube map sampler for textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		SamplerCube = 0x8B60,

		/// <summary>
		/// Specifies a cube map sampler for textures (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_shader_objects</remarks>
		SamplerCubeArb = 0x8B60,

		/// <summary>
		/// Specifies a 1D shadow sampler for textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Sampler1DShadow = 0x8B61,

		/// <summary>
		/// Specifies a 1D shadow sampler for textures (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_shader_objects</remarks>
		Sampler1DShadowArb = 0x8B61,

		/// <summary>
		/// Specifies a 2D shadow sampler for textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Sampler2DShadow = 0x8B62,

		/// <summary>
		/// Specifies a 2D shadow sampler for textures (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_shader_objects</remarks>
		Sampler2DShadowArb = 0x8B62,

		/// <summary>
		/// Specifies a 2D shadow sampler for textures (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_shadow_samplers</remarks>
		Sampler2DShadowExt = 0x8B62,

		/// <summary>
		/// Specifies a rectangular 2D sampler for textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Sampler2DRect = 0x8B63,

		/// <summary>
		/// Specifies a rectangular 2D sampler for textures (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_shader_objects</remarks>
		Sampler2DRectArb = 0x8B63,

		/// <summary>
		/// Specifies a shadow sampler for rectangular 2D textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Sampler2DRectShadow = 0x8B64,

		/// <summary>
		/// Specifies a shadow sampler for rectangular 2D textures (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_shader_objects</remarks>
		Sampler2DRectShadowArb = 0x8B64,

		/// <summary>
		/// Specifies a 2x3 matrix of floating-point numbers.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		FloatMat2X3 = 0x8B65,

		/// <summary>
		/// Specifies a 2x3 matrix of floating-point numbers (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_non_square_matrices</remarks>
		FloatMat2X3Nv = 0x8B65,

		/// <summary>
		/// Specifies a 2x4 matrix of floating-point numbers.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		FloatMat2X4 = 0x8B66,

		/// <summary>
		/// Specifies a 2x4 matrix of floating-point numbers (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_non_square_matrices</remarks>
		FloatMat2X4Nv = 0x8B66,

		/// <summary>
		/// Specifies a 3x2 matrix of floating-point numbers.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		FloatMat3X2 = 0x8B67,

		/// <summary>
		/// Specifies a 3x2 matrix of floating-point numbers (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_non_square_matrices</remarks>
		FloatMat3X2Nv = 0x8B67,

		/// <summary>
		/// Specifies a 3x4 matrix of floating-point numbers.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		FloatMat3X4 = 0x8B68,

		/// <summary>
		/// Specifies a 3x4 matrix of floating-point numbers (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_non_square_matrices</remarks>
		FloatMat3X4Nv = 0x8B68,

		/// <summary>
		/// Specifies a 4x2 matrix of floating-point numbers.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		FloatMat4X2 = 0x8B69,

		/// <summary>
		/// Specifies a 4x2 matrix of floating-point numbers (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_non_square_matrices</remarks>
		FloatMat4X2Nv = 0x8B69,

		/// <summary>
		/// Specifies a 4x3 matrix of floating-point numbers.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		FloatMat4X3 = 0x8B6A,

		/// <summary>
		/// Specifies a 4x3 matrix of floating-point numbers (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_non_square_matrices</remarks>
		FloatMat4X3Nv = 0x8B6A,

		/// <summary>
		/// Specifies the delete status of an OpenGL object.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		DeleteStatus = 0x8B80,

		/// <summary>
		/// Specifies the compile status of a shader object.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		CompileStatus = 0x8B81,

		/// <summary>
		/// Specifies the link status of a program object.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		LinkStatus = 0x8B82,

		/// <summary>
		/// Specifies the validation status of a program object.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ValidateStatus = 0x8B83,

		/// <summary>
		/// Specifies the length of the information log for a shader or program object.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		InfoLogLength = 0x8B84,

		/// <summary>
		/// Specifies the number of attached shaders to a program object.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		AttachedShaders = 0x8B85,

		/// <summary>
		/// Specifies the number of active uniform variables for a program object.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ActiveUniforms = 0x8B86,

		/// <summary>
		/// Specifies the maximum length of an active uniform variable's name.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ActiveUniformMaxLength = 0x8B87,

		/// <summary>
		/// Specifies the length of the source code for a shader object.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ShaderSourceLength = 0x8B88,

		/// <summary>
		/// Specifies the number of active attribute variables for a program object.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ActiveAttributes = 0x8B89,

		/// <summary>
		/// Specifies the maximum length of an active attribute variable's name.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ActiveAttributeMaxLength = 0x8B8A,

		/// <summary>
		/// Specifies the hint for fragment shader derivative calculations.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		FragmentShaderDerivativeHint = 0x8B8B,

		/// <summary>
		/// Specifies the hint for fragment shader derivative calculations (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_fragment_shader</remarks>
		FragmentShaderDerivativeHintArb = 0x8B8B,

		/// <summary>
		/// Specifies the hint for fragment shader derivative calculations (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_standard_derivatives</remarks>
		FragmentShaderDerivativeHintOes = 0x8B8B,

		/// <summary>
		/// Specifies the version of the shading language used.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ShadingLanguageVersion = 0x8B8C,

		/// <summary>
		/// Specifies the currently active program object.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		CurrentProgram = 0x8B8D,

		/// <summary>
		/// Specifies the type for reading implementation colors.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_ES2_compatibility</remarks>
		ImplementationColorReadType = 0x8B9A,

		/// <summary>
		/// Specifies the format for reading implementation colors.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_ES2_compatibility</remarks>
		ImplementationColorReadFormat = 0x8B9B,

		/// <summary>
		/// Specifies the SGX binary format in the IMG extension.
		/// </summary>
		/// <remarks></remarks>
		SgxBinaryImg = 0x8C0A,

		/// <summary>
		/// Specifies a 1D array texture.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		Texture1DArray = 0x8C18,

		/// <summary>
		/// Specifies a proxy for a 1D array texture.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ProxyTexture1DArray = 0x8C19,

		/// <summary>
		/// Specifies a proxy for a 1D array texture (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_array</remarks>
		ProxyTexture1DArrayExt = 0x8C19,

		/// <summary>
		/// Specifies a 2D array texture.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2<br/>GL_EXT_sparse_texture</remarks>
		Texture2DArray = 0x8C1A,

		/// <summary>
		/// Specifies a proxy for a 2D array texture.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ProxyTexture2DArray = 0x8C1B,

		/// <summary>
		/// Specifies a proxy for a 2D array texture (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_array</remarks>
		ProxyTexture2DArrayExt = 0x8C1B,

		/// <summary>
		/// Specifies the currently bound 1D array texture.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_direct_state_access</remarks>
		TextureBinding1DArray = 0x8C1C,

		/// <summary>
		/// Specifies the currently bound 2D array texture.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_direct_state_access</remarks>
		TextureBinding2DArray = 0x8C1D,

		/// <summary>
		/// Specifies the geometry program (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_geometry_program4</remarks>
		GeometryProgramNv = 0x8C26,

		/// <summary>
		/// Specifies the maximum number of geometry texture image units.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		MaxGeometryTextureImageUnits = 0x8C29,

		/// <summary>
		/// Specifies a texture buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		TextureBuffer = 0x8C2A,

		/// <summary>
		/// Specifies the maximum size of texture buffers.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		MaxTextureBufferSize = 0x8C2B,

		/// <summary>
		/// Specifies the binding for texture buffers.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_direct_state_access</remarks>
		TextureBindingBuffer = 0x8C2C,

		/// <summary>
		/// Specifies if any samples passed in the current sample.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_occlusion_query2</remarks>
		AnySamplesPassed = 0x8C2F,

		/// <summary>
		/// Specifies sample shading for rendering.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		SampleShading = 0x8C36,

		/// <summary>
		/// Specifies the R11F_G11F_B10F format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		R11FG11FB10F = 0x8C3A,

		/// <summary>
		/// Specifies the R11F_G11F_B10F format in the APPLE extension.
		/// </summary>
		/// <remarks></remarks>
		R11FG11FB10FApple = 0x8C3A,

		/// <summary>
		/// Specifies the R11F_G11F_B10F format (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_packed_float</remarks>
		R11FG11FB10FExt = 0x8C3A,

		/// <summary>
		/// Specifies the unsigned integer format 10F_11F_11F reversed.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_vertex_type_10f_11f_11f_rev</remarks>
		UnsignedInt10F11F11FRev = 0x8C3B,

		/// <summary>
		/// Specifies the unsigned integer format 10F_11F_11F reversed in the APPLE extension.
		/// </summary>
		/// <remarks></remarks>
		UnsignedInt10F11F11FRevApple = 0x8C3B,

		/// <summary>
		/// Specifies the unsigned integer format 10F_11F_11F reversed (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_packed_float</remarks>
		UnsignedInt10F11F11FRevExt = 0x8C3B,

		/// <summary>
		/// Specifies the RGB9_E5 format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Rgb9E5 = 0x8C3D,

		/// <summary>
		/// Specifies the RGB9_E5 format in the APPLE extension.
		/// </summary>
		/// <remarks></remarks>
		Rgb9E5Apple = 0x8C3D,

		/// <summary>
		/// Specifies the RGB9_E5 format (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_shared_exponent</remarks>
		Rgb9E5Ext = 0x8C3D,

		/// <summary>
		/// Specifies the unsigned integer format 5_9_9_9 reversed.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		UnsignedInt5999Rev = 0x8C3E,

		/// <summary>
		/// Specifies the unsigned integer format 5_9_9_9 reversed in the APPLE extension.
		/// </summary>
		/// <remarks></remarks>
		UnsignedInt5999RevApple = 0x8C3E,

		/// <summary>
		/// Specifies the unsigned integer format 5_9_9_9 reversed (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_shared_exponent</remarks>
		UnsignedInt5999RevExt = 0x8C3E,

		/// <summary>
		/// Specifies the sRGB color space.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Srgb = 0x8C40,

		/// <summary>
		/// Specifies the sRGB color space (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_sRGB<br/>GL_EXT_sRGB</remarks>
		SrgbExt = 0x8C40,

		/// <summary>
		/// Specifies a sRGB format with 8 bits per channel.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Srgb8 = 0x8C41,

		/// <summary>
		/// Specifies a sRGB format with 8 bits per channel (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_sRGB</remarks>
		Srgb8Ext = 0x8C41,

		/// <summary>
		/// Specifies a sRGB format with 8 bits per channel (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_sRGB_formats</remarks>
		Srgb8Nv = 0x8C41,

		/// <summary>
		/// Specifies the sRGB alpha format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		SrgbAlpha = 0x8C42,

		/// <summary>
		/// Specifies the sRGB alpha format (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_sRGB<br/>GL_EXT_sRGB</remarks>
		SrgbAlphaExt = 0x8C42,

		/// <summary>
		/// Specifies a sRGB alpha format with 8 bits per channel.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Srgb8Alpha8 = 0x8C43,

		/// <summary>
		/// Specifies a sRGB alpha format with 8 bits per channel (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_sRGB<br/>GL_EXT_sRGB</remarks>
		Srgb8Alpha8Ext = 0x8C43,

		/// <summary>
		/// Specifies a compressed sRGB format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		CompressedSrgb = 0x8C48,

		/// <summary>
		/// Specifies a compressed sRGB alpha format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		CompressedSrgbAlpha = 0x8C49,

		/// <summary>
		/// Specifies a compressed sRGB DXT1 format (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_sRGB<br/>GL_EXT_texture_compression_s3tc_srgb</remarks>
		CompressedSrgbS3TcDxt1Ext = 0x8C4C,

		/// <summary>
		/// Specifies a compressed sRGB DXT1 format (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_sRGB_formats</remarks>
		CompressedSrgbS3TcDxt1Nv = 0x8C4C,

		/// <summary>
		/// Specifies a compressed sRGB alpha DXT1 format (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_sRGB<br/>GL_EXT_texture_compression_s3tc_srgb</remarks>
		CompressedSrgbAlphaS3TcDxt1Ext = 0x8C4D,

		/// <summary>
		/// Specifies a compressed sRGB alpha DXT1 format (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_sRGB_formats</remarks>
		CompressedSrgbAlphaS3TcDxt1Nv = 0x8C4D,

		/// <summary>
		/// Specifies a compressed sRGB alpha DXT3 format (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_sRGB<br/>GL_EXT_texture_compression_s3tc_srgb</remarks>
		CompressedSrgbAlphaS3TcDxt3Ext = 0x8C4E,

		/// <summary>
		/// Specifies a compressed sRGB alpha DXT3 format (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_sRGB_formats</remarks>
		CompressedSrgbAlphaS3TcDxt3Nv = 0x8C4E,

		/// <summary>
		/// Specifies a compressed sRGB alpha DXT5 format (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_sRGB<br/>GL_EXT_texture_compression_s3tc_srgb</remarks>
		CompressedSrgbAlphaS3TcDxt5Ext = 0x8C4F,

		/// <summary>
		/// Specifies a compressed sRGB alpha DXT5 format (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_sRGB_formats</remarks>
		CompressedSrgbAlphaS3TcDxt5Nv = 0x8C4F,

		/// <summary>
		/// Specifies the maximum length of varying variables for transform feedback.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TransformFeedbackVaryingMaxLength = 0x8C76,

		/// <summary>
		/// Specifies the buffer mode for transform feedback.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TransformFeedbackBufferMode = 0x8C7F,

		/// <summary>
		/// Specifies the transform feedback varyings.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TransformFeedbackVaryings = 0x8C83,

		/// <summary>
		/// Specifies the start of the transform feedback buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TransformFeedbackBufferStart = 0x8C84,

		/// <summary>
		/// Specifies the size of the transform feedback buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TransformFeedbackBufferSize = 0x8C85,

		/// <summary>
		/// Specifies the number of primitives generated.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PrimitivesGenerated = 0x8C87,

		/// <summary>
		/// Specifies the number of primitives written during transform feedback.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TransformFeedbackPrimitivesWritten = 0x8C88,

		/// <summary>
		/// Specifies the rasterizer discard mode.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		RasterizerDiscard = 0x8C89,

		/// <summary>
		/// Specifies interleaved attributes.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		InterleavedAttribs = 0x8C8C,

		/// <summary>
		/// Specifies separate attributes.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		SeparateAttribs = 0x8C8D,

		/// <summary>
		/// Specifies the transform feedback buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_enhanced_layouts</remarks>
		TransformFeedbackBuffer = 0x8C8E,

		/// <summary>
		/// Specifies the binding of the transform feedback buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TransformFeedbackBufferBinding = 0x8C8F,

		/// <summary>
		/// Specifies the X coordinate of the search block for motion estimation in the QCOM extension.
		/// </summary>
		/// <remarks></remarks>
		MotionEstimationSearchBlockXQcom = 0x8C90,

		/// <summary>
		/// Specifies the Y coordinate of the search block for motion estimation in the QCOM extension.
		/// </summary>
		/// <remarks></remarks>
		MotionEstimationSearchBlockYQcom = 0x8C91,

		/// <summary>
		/// Specifies that the lower-left corner is the origin for texture coordinates.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_clip_control</remarks>
		LowerLeft = 0x8CA1,

		/// <summary>
		/// Specifies that the upper-left corner is the origin for texture coordinates.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_clip_control</remarks>
		UpperLeft = 0x8CA2,

		/// <summary>
		/// Specifies the reference value for stencil tests on the back face.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		StencilBackRef = 0x8CA3,

		/// <summary>
		/// Specifies the mask value for the back face stencil tests.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		StencilBackValueMask = 0x8CA4,

		/// <summary>
		/// Specifies the write mask for the back face stencil buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		StencilBackWritemask = 0x8CA5,

		/// <summary>
		/// Specifies the binding of the draw framebuffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		DrawFramebufferBinding = 0x8CA6,

		/// <summary>
		/// Specifies the binding of the renderbuffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		RenderbufferBinding = 0x8CA7,

		/// <summary>
		/// Specifies the read framebuffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		ReadFramebuffer = 0x8CA8,

		/// <summary>
		/// Specifies the draw framebuffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		DrawFramebuffer = 0x8CA9,

		/// <summary>
		/// Specifies the binding of the read framebuffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		ReadFramebufferBinding = 0x8CAA,

		/// <summary>
		/// Specifies the number of coverage samples for renderbuffers (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_framebuffer_multisample_coverage</remarks>
		RenderbufferCoverageSamplesNv = 0x8CAB,

		/// <summary>
		/// Specifies the number of samples for renderbuffers.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		RenderbufferSamples = 0x8CAB,

		/// <summary>
		/// Specifies the number of samples for renderbuffers in the ANGLE extension.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ANGLE_framebuffer_multisample</remarks>
		RenderbufferSamplesAngle = 0x8CAB,

		/// <summary>
		/// Specifies the number of samples for renderbuffers in the APPLE extension.
		/// </summary>
		/// <remarks></remarks>
		RenderbufferSamplesApple = 0x8CAB,

		/// <summary>
		/// Specifies the number of samples for renderbuffers (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_framebuffer_multisample<br/>GL_EXT_multisampled_render_to_texture</remarks>
		RenderbufferSamplesExt = 0x8CAB,

		/// <summary>
		/// Specifies the number of samples for renderbuffers (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_framebuffer_multisample</remarks>
		RenderbufferSamplesNv = 0x8CAB,

		/// <summary>
		/// Specifies a 32-bit floating-point depth component format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_depth_buffer_float</remarks>
		DepthComponent32F = 0x8CAC,

		/// <summary>
		/// Specifies a depth-stencil format with 32-bit float depth and 8-bit stencil.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_depth_buffer_float</remarks>
		Depth32FStencil8 = 0x8CAD,

		/// <summary>
		/// Specifies the object type for framebuffer attachments.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		FramebufferAttachmentObjectType = 0x8CD0,

		/// <summary>
		/// Specifies the object type for framebuffer attachments (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_framebuffer_object</remarks>
		FramebufferAttachmentObjectTypeExt = 0x8CD0,

		/// <summary>
		/// Specifies the object type for framebuffer attachments (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_framebuffer_object</remarks>
		FramebufferAttachmentObjectTypeOes = 0x8CD0,

		/// <summary>
		/// Specifies the object name for framebuffer attachments.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		FramebufferAttachmentObjectName = 0x8CD1,

		/// <summary>
		/// Specifies the object name for framebuffer attachments (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_framebuffer_object</remarks>
		FramebufferAttachmentObjectNameExt = 0x8CD1,

		/// <summary>
		/// Specifies the object name for framebuffer attachments (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_framebuffer_object</remarks>
		FramebufferAttachmentObjectNameOes = 0x8CD1,

		/// <summary>
		/// Specifies the texture level for framebuffer attachments.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		FramebufferAttachmentTextureLevel = 0x8CD2,

		/// <summary>
		/// Specifies the texture level for framebuffer attachments (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_framebuffer_object</remarks>
		FramebufferAttachmentTextureLevelExt = 0x8CD2,

		/// <summary>
		/// Specifies the texture level for framebuffer attachments (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_framebuffer_object</remarks>
		FramebufferAttachmentTextureLevelOes = 0x8CD2,

		/// <summary>
		/// Specifies the cube map face for framebuffer attachments.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		FramebufferAttachmentTextureCubeMapFace = 0x8CD3,

		/// <summary>
		/// Specifies the cube map face for framebuffer attachments (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_framebuffer_object</remarks>
		FramebufferAttachmentTextureCubeMapFaceExt = 0x8CD3,

		/// <summary>
		/// Specifies the cube map face for framebuffer attachments (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_framebuffer_object</remarks>
		FramebufferAttachmentTextureCubeMapFaceOes = 0x8CD3,

		/// <summary>
		/// Specifies the 3D texture Z-offset for framebuffer attachments (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_framebuffer_object</remarks>
		FramebufferAttachmentTexture3DZoffsetExt = 0x8CD4,

		/// <summary>
		/// Specifies the 3D texture Z-offset for framebuffer attachments (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_texture_3D</remarks>
		FramebufferAttachmentTexture3DZoffsetOes = 0x8CD4,

		/// <summary>
		/// Specifies the texture layer for framebuffer attachments.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object<br/>GL_ARB_geometry_shader4</remarks>
		FramebufferAttachmentTextureLayer = 0x8CD4,

		/// <summary>
		/// Specifies the texture layer for framebuffer attachments (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_geometry_shader4<br/>GL_EXT_texture_array<br/>GL_NV_geometry_program4</remarks>
		FramebufferAttachmentTextureLayerExt = 0x8CD4,

		/// <summary>
		/// Specifies that the framebuffer is complete.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		FramebufferComplete = 0x8CD5,

		/// <summary>
		/// Specifies that the framebuffer is incomplete due to attachment issues.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		FramebufferIncompleteAttachment = 0x8CD6,

		/// <summary>
		/// Specifies that the framebuffer is incomplete due to missing attachments.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		FramebufferIncompleteMissingAttachment = 0x8CD7,

		/// <summary>
		/// Specifies that the framebuffer is incomplete due to draw buffer issues.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		FramebufferIncompleteDrawBuffer = 0x8CDB,

		/// <summary>
		/// Specifies that the framebuffer is incomplete due to read buffer issues.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		FramebufferIncompleteReadBuffer = 0x8CDC,

		/// <summary>
		/// Specifies that the framebuffer is unsupported.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		FramebufferUnsupported = 0x8CDD,

		/// <summary>
		/// Specifies the maximum number of color attachments.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		MaxColorAttachments = 0x8CDF,

		/// <summary>
		/// Specifies the maximum number of color attachments (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_framebuffer_object<br/>GL_EXT_draw_buffers</remarks>
		MaxColorAttachmentsExt = 0x8CDF,

		/// <summary>
		/// Specifies the maximum number of color attachments (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_fbo_color_attachments</remarks>
		MaxColorAttachmentsNv = 0x8CDF,

		/// <summary>
		/// Specifies the first color attachment.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		ColorAttachment0 = 0x8CE0,

		/// <summary>
		/// Specifies the first color attachment (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_framebuffer_object<br/>GL_EXT_draw_buffers</remarks>
		ColorAttachment0Ext = 0x8CE0,

		/// <summary>
		/// Specifies the first color attachment (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_draw_buffers<br/>GL_NV_fbo_color_attachments</remarks>
		ColorAttachment0Nv = 0x8CE0,

		/// <summary>
		/// Specifies the first color attachment (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_framebuffer_object</remarks>
		ColorAttachment0Oes = 0x8CE0,

		/// <summary>
		/// Specifies the second color attachment.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		ColorAttachment1 = 0x8CE1,

		/// <summary>
		/// Specifies the second color attachment (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_framebuffer_object<br/>GL_EXT_draw_buffers</remarks>
		ColorAttachment1Ext = 0x8CE1,

		/// <summary>
		/// Specifies the second color attachment (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_draw_buffers<br/>GL_NV_fbo_color_attachments</remarks>
		ColorAttachment1Nv = 0x8CE1,

		/// <summary>
		/// Specifies the third color attachment.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		ColorAttachment2 = 0x8CE2,

		/// <summary>
		/// Specifies the third color attachment (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_framebuffer_object<br/>GL_EXT_draw_buffers</remarks>
		ColorAttachment2Ext = 0x8CE2,

		/// <summary>
		/// Specifies the third color attachment (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_draw_buffers<br/>GL_NV_fbo_color_attachments</remarks>
		ColorAttachment2Nv = 0x8CE2,

		/// <summary>
		/// Specifies the fourth color attachment.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		ColorAttachment3 = 0x8CE3,

		/// <summary>
		/// Specifies the fourth color attachment (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_framebuffer_object<br/>GL_EXT_draw_buffers</remarks>
		ColorAttachment3Ext = 0x8CE3,

		/// <summary>
		/// Specifies the fourth color attachment (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_draw_buffers<br/>GL_NV_fbo_color_attachments</remarks>
		ColorAttachment3Nv = 0x8CE3,

		/// <summary>
		/// Specifies the fifth color attachment.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		ColorAttachment4 = 0x8CE4,

		/// <summary>
		/// Specifies the fifth color attachment (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_framebuffer_object<br/>GL_EXT_draw_buffers</remarks>
		ColorAttachment4Ext = 0x8CE4,

		/// <summary>
		/// Specifies the fifth color attachment (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_draw_buffers<br/>GL_NV_fbo_color_attachments</remarks>
		ColorAttachment4Nv = 0x8CE4,

		/// <summary>
		/// Specifies the sixth color attachment.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		ColorAttachment5 = 0x8CE5,

		/// <summary>
		/// Specifies the sixth color attachment (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_framebuffer_object<br/>GL_EXT_draw_buffers</remarks>
		ColorAttachment5Ext = 0x8CE5,

		/// <summary>
		/// Specifies the sixth color attachment (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_draw_buffers<br/>GL_NV_fbo_color_attachments</remarks>
		ColorAttachment5Nv = 0x8CE5,

		/// <summary>
		/// Specifies the seventh color attachment.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		ColorAttachment6 = 0x8CE6,

		/// <summary>
		/// Specifies the seventh color attachment (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_framebuffer_object<br/>GL_EXT_draw_buffers</remarks>
		ColorAttachment6Ext = 0x8CE6,

		/// <summary>
		/// Specifies the seventh color attachment (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_draw_buffers<br/>GL_NV_fbo_color_attachments</remarks>
		ColorAttachment6Nv = 0x8CE6,

		/// <summary>
		/// Specifies the eighth color attachment.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		ColorAttachment7 = 0x8CE7,

		/// <summary>
		/// Specifies the eighth color attachment (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_framebuffer_object<br/>GL_EXT_draw_buffers</remarks>
		ColorAttachment7Ext = 0x8CE7,

		/// <summary>
		/// Specifies the eighth color attachment (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_draw_buffers<br/>GL_NV_fbo_color_attachments</remarks>
		ColorAttachment7Nv = 0x8CE7,

		/// <summary>
		/// Specifies the ninth color attachment.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		ColorAttachment8 = 0x8CE8,

		/// <summary>
		/// Specifies the ninth color attachment (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_framebuffer_object<br/>GL_EXT_draw_buffers</remarks>
		ColorAttachment8Ext = 0x8CE8,

		/// <summary>
		/// Specifies the ninth color attachment (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_draw_buffers<br/>GL_NV_fbo_color_attachments</remarks>
		ColorAttachment8Nv = 0x8CE8,

		/// <summary>
		/// Specifies the tenth color attachment.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		ColorAttachment9 = 0x8CE9,

		/// <summary>
		/// Specifies the tenth color attachment (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_framebuffer_object<br/>GL_EXT_draw_buffers</remarks>
		ColorAttachment9Ext = 0x8CE9,

		/// <summary>
		/// Specifies the tenth color attachment (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_draw_buffers<br/>GL_NV_fbo_color_attachments</remarks>
		ColorAttachment9Nv = 0x8CE9,

		/// <summary>
		/// Specifies the eleventh color attachment.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		ColorAttachment10 = 0x8CEA,

		/// <summary>
		/// Specifies the eleventh color attachment (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_framebuffer_object<br/>GL_EXT_draw_buffers</remarks>
		ColorAttachment10Ext = 0x8CEA,

		/// <summary>
		/// Specifies the eleventh color attachment (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_draw_buffers<br/>GL_NV_fbo_color_attachments</remarks>
		ColorAttachment10Nv = 0x8CEA,

		/// <summary>
		/// Specifies the twelfth color attachment.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		ColorAttachment11 = 0x8CEB,

		/// <summary>
		/// Specifies the twelfth color attachment (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_framebuffer_object<br/>GL_EXT_draw_buffers</remarks>
		ColorAttachment11Ext = 0x8CEB,

		/// <summary>
		/// Specifies the twelfth color attachment (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_draw_buffers<br/>GL_NV_fbo_color_attachments</remarks>
		ColorAttachment11Nv = 0x8CEB,

		/// <summary>
		/// Specifies the thirteenth color attachment.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		ColorAttachment12 = 0x8CEC,

		/// <summary>
		/// Specifies the thirteenth color attachment (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_framebuffer_object<br/>GL_EXT_draw_buffers</remarks>
		ColorAttachment12Ext = 0x8CEC,

		/// <summary>
		/// Specifies the thirteenth color attachment (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_draw_buffers<br/>GL_NV_fbo_color_attachments</remarks>
		ColorAttachment12Nv = 0x8CEC,

		/// <summary>
		/// Specifies the fourteenth color attachment.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		ColorAttachment13 = 0x8CED,

		/// <summary>
		/// Specifies the fourteenth color attachment (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_framebuffer_object<br/>GL_EXT_draw_buffers</remarks>
		ColorAttachment13Ext = 0x8CED,

		/// <summary>
		/// Specifies the fourteenth color attachment (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_draw_buffers<br/>GL_NV_fbo_color_attachments</remarks>
		ColorAttachment13Nv = 0x8CED,

		/// <summary>
		/// Specifies the fifteenth color attachment.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		ColorAttachment14 = 0x8CEE,

		/// <summary>
		/// Specifies the fifteenth color attachment (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_framebuffer_object<br/>GL_EXT_draw_buffers</remarks>
		ColorAttachment14Ext = 0x8CEE,

		/// <summary>
		/// Specifies the fifteenth color attachment (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_draw_buffers<br/>GL_NV_fbo_color_attachments</remarks>
		ColorAttachment14Nv = 0x8CEE,

		/// <summary>
		/// Specifies the sixteenth color attachment.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		ColorAttachment15 = 0x8CEF,

		/// <summary>
		/// Specifies the sixteenth color attachment (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_framebuffer_object<br/>GL_EXT_draw_buffers</remarks>
		ColorAttachment15Ext = 0x8CEF,

		/// <summary>
		/// Specifies the sixteenth color attachment (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_draw_buffers<br/>GL_NV_fbo_color_attachments</remarks>
		ColorAttachment15Nv = 0x8CEF,

		/// <summary>
		/// Specifies the seventeenth color attachment.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ColorAttachment16 = 0x8CF0,

		/// <summary>
		/// Specifies the eighteenth color attachment.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ColorAttachment17 = 0x8CF1,

		/// <summary>
		/// Specifies the nineteenth color attachment.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ColorAttachment18 = 0x8CF2,

		/// <summary>
		/// Specifies the twentieth color attachment.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ColorAttachment19 = 0x8CF3,

		/// <summary>
		/// Specifies the twenty-first color attachment.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ColorAttachment20 = 0x8CF4,

		/// <summary>
		/// Specifies the twenty-second color attachment.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ColorAttachment21 = 0x8CF5,

		/// <summary>
		/// Specifies the twenty-third color attachment.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ColorAttachment22 = 0x8CF6,

		/// <summary>
		/// Specifies the twenty-fourth color attachment.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ColorAttachment23 = 0x8CF7,

		/// <summary>
		/// Specifies the twenty-fifth color attachment.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ColorAttachment24 = 0x8CF8,

		/// <summary>
		/// Specifies the twenty-sixth color attachment.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ColorAttachment25 = 0x8CF9,

		/// <summary>
		/// Specifies the twenty-seventh color attachment.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ColorAttachment26 = 0x8CFA,

		/// <summary>
		/// Specifies the twenty-eighth color attachment.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ColorAttachment27 = 0x8CFB,

		/// <summary>
		/// Specifies the twenty-ninth color attachment.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ColorAttachment28 = 0x8CFC,

		/// <summary>
		/// Specifies the thirtieth color attachment.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ColorAttachment29 = 0x8CFD,

		/// <summary>
		/// Specifies the thirty-first color attachment.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ColorAttachment30 = 0x8CFE,

		/// <summary>
		/// Specifies the thirty-second color attachment.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ColorAttachment31 = 0x8CFF,

		/// <summary>
		/// Specifies the depth attachment.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		DepthAttachment = 0x8D00,

		/// <summary>
		/// Specifies the depth attachment (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_framebuffer_object</remarks>
		DepthAttachmentExt = 0x8D00,

		/// <summary>
		/// Specifies the depth attachment (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_framebuffer_object</remarks>
		DepthAttachmentOes = 0x8D00,

		/// <summary>
		/// Specifies the stencil attachment.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		StencilAttachment = 0x8D20,

		/// <summary>
		/// Specifies the stencil attachment (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_framebuffer_object</remarks>
		StencilAttachmentExt = 0x8D20,

		/// <summary>
		/// Specifies the stencil attachment (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_framebuffer_object</remarks>
		StencilAttachmentOes = 0x8D20,

		/// <summary>
		/// Specifies the framebuffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		Framebuffer = 0x8D40,

		/// <summary>
		/// Specifies the framebuffer (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_framebuffer_object</remarks>
		FramebufferOes = 0x8D40,

		/// <summary>
		/// Specifies the renderbuffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object<br/>GL_ARB_internalformat_query2<br/>GL_NV_internalformat_sample_query</remarks>
		Renderbuffer = 0x8D41,

		/// <summary>
		/// Specifies the renderbuffer (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_framebuffer_object</remarks>
		RenderbufferOes = 0x8D41,

		/// <summary>
		/// Specifies the width of the renderbuffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		RenderbufferWidth = 0x8D42,

		/// <summary>
		/// Specifies the width of the renderbuffer (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_framebuffer_object</remarks>
		RenderbufferWidthExt = 0x8D42,

		/// <summary>
		/// Specifies the width of the renderbuffer (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_framebuffer_object</remarks>
		RenderbufferWidthOes = 0x8D42,

		/// <summary>
		/// Specifies the height of the renderbuffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		RenderbufferHeight = 0x8D43,

		/// <summary>
		/// Specifies the height of the renderbuffer (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_framebuffer_object</remarks>
		RenderbufferHeightExt = 0x8D43,

		/// <summary>
		/// Specifies the height of the renderbuffer (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_framebuffer_object</remarks>
		RenderbufferHeightOes = 0x8D43,

		/// <summary>
		/// Specifies the internal format of the renderbuffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		RenderbufferInternalFormat = 0x8D44,

		/// <summary>
		/// Specifies the internal format of the renderbuffer (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_framebuffer_object</remarks>
		RenderbufferInternalFormatExt = 0x8D44,

		/// <summary>
		/// Specifies the internal format of the renderbuffer (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_framebuffer_object</remarks>
		RenderbufferInternalFormatOes = 0x8D44,

		/// <summary>
		/// Specifies a stencil index format with 1 bit.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		StencilIndex1 = 0x8D46,

		/// <summary>
		/// Specifies a stencil index format with 1 bit (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_framebuffer_object</remarks>
		StencilIndex1Ext = 0x8D46,

		/// <summary>
		/// Specifies a stencil index format with 1 bit (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_stencil1</remarks>
		StencilIndex1Oes = 0x8D46,

		/// <summary>
		/// Specifies a stencil index format with 4 bits.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		StencilIndex4 = 0x8D47,

		/// <summary>
		/// Specifies a stencil index format with 4 bits (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_framebuffer_object</remarks>
		StencilIndex4Ext = 0x8D47,

		/// <summary>
		/// Specifies a stencil index format with 4 bits (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_stencil4</remarks>
		StencilIndex4Oes = 0x8D47,

		/// <summary>
		/// Specifies a stencil index format with 8 bits.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object<br/>GL_ARB_texture_stencil8</remarks>
		StencilIndex8 = 0x8D48,

		/// <summary>
		/// Specifies a stencil index format with 8 bits (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_framebuffer_object</remarks>
		StencilIndex8Ext = 0x8D48,

		/// <summary>
		/// Specifies a stencil index format with 8 bits (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_texture_stencil8<br/>GL_OES_stencil8</remarks>
		StencilIndex8Oes = 0x8D48,

		/// <summary>
		/// Specifies a stencil index format with 16 bits.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		StencilIndex16 = 0x8D49,

		/// <summary>
		/// Specifies a stencil index format with 16 bits (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_framebuffer_object</remarks>
		StencilIndex16Ext = 0x8D49,

		/// <summary>
		/// Specifies the size of the red component in the renderbuffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		RenderbufferRedSize = 0x8D50,

		/// <summary>
		/// Specifies the size of the red component in the renderbuffer (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_framebuffer_object</remarks>
		RenderbufferRedSizeExt = 0x8D50,

		/// <summary>
		/// Specifies the size of the red component in the renderbuffer (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_framebuffer_object</remarks>
		RenderbufferRedSizeOes = 0x8D50,

		/// <summary>
		/// Specifies the size of the green component in the renderbuffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		RenderbufferGreenSize = 0x8D51,

		/// <summary>
		/// Specifies the size of the green component in the renderbuffer (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_framebuffer_object</remarks>
		RenderbufferGreenSizeExt = 0x8D51,

		/// <summary>
		/// Specifies the size of the green component in the renderbuffer (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_framebuffer_object</remarks>
		RenderbufferGreenSizeOes = 0x8D51,

		/// <summary>
		/// Specifies the size of the blue component in the renderbuffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		RenderbufferBlueSize = 0x8D52,

		/// <summary>
		/// Specifies the size of the blue component in the renderbuffer (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_framebuffer_object</remarks>
		RenderbufferBlueSizeExt = 0x8D52,

		/// <summary>
		/// Specifies the size of the blue component in the renderbuffer (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_framebuffer_object</remarks>
		RenderbufferBlueSizeOes = 0x8D52,

		/// <summary>
		/// Specifies the size of the alpha component in the renderbuffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		RenderbufferAlphaSize = 0x8D53,

		/// <summary>
		/// Specifies the size of the alpha component in the renderbuffer (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_framebuffer_object</remarks>
		RenderbufferAlphaSizeExt = 0x8D53,

		/// <summary>
		/// Specifies the size of the alpha component in the renderbuffer (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_framebuffer_object</remarks>
		RenderbufferAlphaSizeOes = 0x8D53,

		/// <summary>
		/// Specifies the depth size of a renderbuffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		RenderbufferDepthSize = 0x8D54,

		/// <summary>
		/// Specifies the depth size of a renderbuffer (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_framebuffer_object</remarks>
		RenderbufferDepthSizeExt = 0x8D54,

		/// <summary>
		/// Specifies the depth size of a renderbuffer (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_framebuffer_object</remarks>
		RenderbufferDepthSizeOes = 0x8D54,

		/// <summary>
		/// Specifies the stencil size of a renderbuffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		RenderbufferStencilSize = 0x8D55,

		/// <summary>
		/// Specifies the stencil size of a renderbuffer (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_framebuffer_object</remarks>
		RenderbufferStencilSizeExt = 0x8D55,

		/// <summary>
		/// Specifies the stencil size of a renderbuffer (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_framebuffer_object</remarks>
		RenderbufferStencilSizeOes = 0x8D55,

		/// <summary>
		/// Indicates that a framebuffer is incomplete due to multisample attachment.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_object</remarks>
		FramebufferIncompleteMultisample = 0x8D56,

		/// <summary>
		/// Specifies the string for texture generation (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_texture_cube_map</remarks>
		TextureGenStrOes = 0x8D60,

		/// <summary>
		/// Specifies RGB565 format (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_framebuffer_object<br/>GL_OES_required_internalformat</remarks>
		Rgb565Oes = 0x8D62,

		/// <summary>
		/// Specifies RGB565 format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_ES2_compatibility</remarks>
		Rgb565 = 0x8D62,

		/// <summary>
		/// Specifies the ETC1 RGB8 format (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_compressed_ETC1_RGB8_texture</remarks>
		Etc1Rgb8Oes = 0x8D64,

		/// <summary>
		/// Specifies the fixed index for primitive restart.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_ES3_compatibility</remarks>
		PrimitiveRestartFixedIndex = 0x8D69,

		/// <summary>
		/// Indicates a conservative test for any samples passed.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_ES3_compatibility</remarks>
		AnySamplesPassedConservative = 0x8D6A,

		/// <summary>
		/// Specifies the maximum element index for indexed drawing.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_ES3_compatibility</remarks>
		MaxElementIndex = 0x8D6B,

		/// <summary>
		/// Specifies the number of samples of the texture attached to a framebuffer (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_multisampled_render_to_texture</remarks>
		FramebufferAttachmentTextureSamplesExt = 0x8D6C,

		/// <summary>
		/// Specifies an unsigned integer format with 32 bits per channel for RGBA.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Rgba32Ui = 0x8D70,

		/// <summary>
		/// Specifies an unsigned integer format with 32 bits per channel for RGBA (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_integer</remarks>
		Rgba32UiExt = 0x8D70,

		/// <summary>
		/// Specifies an unsigned integer format with 32 bits per channel for RGB.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_buffer_object_rgb32</remarks>
		Rgb32Ui = 0x8D71,

		/// <summary>
		/// Specifies an unsigned integer format with 32 bits per channel for RGB (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_integer</remarks>
		Rgb32UiExt = 0x8D71,

		/// <summary>
		/// Specifies an unsigned integer format with 32 bits for alpha (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_integer</remarks>
		Alpha32UiExt = 0x8D72,

		/// <summary>
		/// Specifies an unsigned integer format with 32 bits for intensity (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_integer</remarks>
		Intensity32UiExt = 0x8D73,

		/// <summary>
		/// Specifies an unsigned integer format with 32 bits for luminance (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_integer</remarks>
		Luminance32UiExt = 0x8D74,

		/// <summary>
		/// Specifies an unsigned integer format with 32 bits for luminance and alpha (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_integer</remarks>
		LuminanceAlpha32UiExt = 0x8D75,

		/// <summary>
		/// Specifies an unsigned integer format with 16 bits per channel for RGBA.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Rgba16Ui = 0x8D76,

		/// <summary>
		/// Specifies an unsigned integer format with 16 bits per channel for RGBA (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_integer</remarks>
		Rgba16UiExt = 0x8D76,

		/// <summary>
		/// Specifies an unsigned integer format with 16 bits per channel for RGB.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Rgb16Ui = 0x8D77,

		/// <summary>
		/// Specifies an unsigned integer format with 16 bits per channel for RGB (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_integer</remarks>
		Rgb16UiExt = 0x8D77,

		/// <summary>
		/// Specifies an unsigned integer format with 16 bits for alpha (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_integer</remarks>
		Alpha16UiExt = 0x8D78,

		/// <summary>
		/// Specifies an unsigned integer format with 16 bits for intensity (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_integer</remarks>
		Intensity16UiExt = 0x8D79,

		/// <summary>
		/// Specifies an unsigned integer format with 16 bits for luminance (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_integer</remarks>
		Luminance16UiExt = 0x8D7A,

		/// <summary>
		/// Specifies an unsigned integer format with 16 bits for luminance and alpha (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_integer</remarks>
		LuminanceAlpha16UiExt = 0x8D7B,

		/// <summary>
		/// Specifies an unsigned integer format with 8 bits per channel for RGBA.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_AMD_interleaved_elements</remarks>
		Rgba8Ui = 0x8D7C,

		/// <summary>
		/// Specifies an unsigned integer format with 8 bits per channel for RGBA (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_integer</remarks>
		Rgba8UiExt = 0x8D7C,

		/// <summary>
		/// Specifies an unsigned integer format with 8 bits per channel for RGB.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Rgb8Ui = 0x8D7D,

		/// <summary>
		/// Specifies an unsigned integer format with 8 bits per channel for RGB (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_integer</remarks>
		Rgb8UiExt = 0x8D7D,

		/// <summary>
		/// Specifies an unsigned integer format with 8 bits for alpha (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_integer</remarks>
		Alpha8UiExt = 0x8D7E,

		/// <summary>
		/// Specifies an unsigned integer format with 8 bits for intensity (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_integer</remarks>
		Intensity8UiExt = 0x8D7F,

		/// <summary>
		/// Specifies an unsigned integer format with 8 bits for luminance (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_integer</remarks>
		Luminance8UiExt = 0x8D80,

		/// <summary>
		/// Specifies an unsigned integer format with 8 bits for luminance and alpha (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_integer</remarks>
		LuminanceAlpha8UiExt = 0x8D81,

		/// <summary>
		/// Specifies a signed integer format with 32 bits per channel for RGBA.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Rgba32I = 0x8D82,

		/// <summary>
		/// Specifies a signed integer format with 32 bits per channel for RGBA (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_integer</remarks>
		Rgba32IExt = 0x8D82,

		/// <summary>
		/// Specifies a signed integer format with 32 bits per channel for RGB.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_buffer_object_rgb32<br/>GL_ARB_vertex_attrib_64bit</remarks>
		Rgb32I = 0x8D83,

		/// <summary>
		/// Specifies a signed integer format with 32 bits per channel for RGB (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_integer</remarks>
		Rgb32IExt = 0x8D83,

		/// <summary>
		/// Specifies a signed integer format with 32 bits for alpha (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_integer</remarks>
		Alpha32IExt = 0x8D84,

		/// <summary>
		/// Specifies a signed integer format with 32 bits for intensity (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_integer</remarks>
		Intensity32IExt = 0x8D85,

		/// <summary>
		/// Specifies a signed integer format with 32 bits for luminance (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_integer</remarks>
		Luminance32IExt = 0x8D86,

		/// <summary>
		/// Specifies a signed integer format with 32 bits for luminance and alpha (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_integer</remarks>
		LuminanceAlpha32IExt = 0x8D87,

		/// <summary>
		/// Specifies a signed integer format with 16 bits per channel for RGBA.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Rgba16I = 0x8D88,

		/// <summary>
		/// Specifies a signed integer format with 16 bits per channel for RGBA (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_integer</remarks>
		Rgba16IExt = 0x8D88,

		/// <summary>
		/// Specifies a signed integer format with 16 bits per channel for RGB.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Rgb16I = 0x8D89,

		/// <summary>
		/// Specifies a signed integer format with 16 bits per channel for RGB (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_integer</remarks>
		Rgb16IExt = 0x8D89,

		/// <summary>
		/// Specifies a signed integer format with 16 bits for alpha (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_integer</remarks>
		Alpha16IExt = 0x8D8A,

		/// <summary>
		/// Specifies a signed integer format with 16 bits for intensity (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_integer</remarks>
		Intensity16IExt = 0x8D8B,

		/// <summary>
		/// Specifies a signed integer format with 16 bits for luminance (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_integer</remarks>
		Luminance16IExt = 0x8D8C,

		/// <summary>
		/// Specifies a signed integer format with 16 bits for luminance and alpha (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_integer</remarks>
		LuminanceAlpha16IExt = 0x8D8D,

		/// <summary>
		/// Specifies a signed integer format with 8 bits per channel for RGBA.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Rgba8I = 0x8D8E,

		/// <summary>
		/// Specifies a signed integer format with 8 bits per channel for RGBA (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_integer</remarks>
		Rgba8IExt = 0x8D8E,

		/// <summary>
		/// Specifies a signed integer format with 8 bits per channel for RGB.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Rgb8I = 0x8D8F,

		/// <summary>
		/// Specifies a signed integer format with 8 bits per channel for RGB (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_integer</remarks>
		Rgb8IExt = 0x8D8F,

		/// <summary>
		/// Specifies a signed integer format with 8 bits for alpha (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_integer</remarks>
		Alpha8IExt = 0x8D90,

		/// <summary>
		/// Specifies a signed integer format with 8 bits for intensity (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_integer</remarks>
		Intensity8IExt = 0x8D91,

		/// <summary>
		/// Specifies a signed integer format with 8 bits for luminance (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_integer</remarks>
		Luminance8IExt = 0x8D92,

		/// <summary>
		/// Specifies a signed integer format with 8 bits for luminance and alpha (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_integer</remarks>
		LuminanceAlpha8IExt = 0x8D93,

		/// <summary>
		/// Specifies the red integer format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		RedInteger = 0x8D94,

		/// <summary>
		/// Specifies the green integer format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		GreenInteger = 0x8D95,

		/// <summary>
		/// Specifies the blue integer format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		BlueInteger = 0x8D96,

		/// <summary>
		/// Specifies the RGB integer format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		RgbInteger = 0x8D98,

		/// <summary>
		/// Specifies the RGBA integer format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		RgbaInteger = 0x8D99,

		/// <summary>
		/// Specifies the BGR integer format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		BgrInteger = 0x8D9A,

		/// <summary>
		/// Specifies the BGRA integer format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		BgraInteger = 0x8D9B,

		/// <summary>
		/// Specifies the integer format with reversed 2-10-10-10 layout.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_vertex_type_2_10_10_10_rev</remarks>
		Int2101010Rev = 0x8D9F,

		/// <summary>
		/// Indicates that a framebuffer attachment is layered.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		FramebufferAttachmentLayered = 0x8DA7,

		/// <summary>
		/// Indicates that a framebuffer attachment is layered (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_geometry_shader4</remarks>
		FramebufferAttachmentLayeredArb = 0x8DA7,

		/// <summary>
		/// Indicates that a framebuffer attachment is layered (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_geometry_shader4<br/>GL_NV_geometry_program4<br/>GL_EXT_geometry_shader</remarks>
		FramebufferAttachmentLayeredExt = 0x8DA7,

		/// <summary>
		/// Indicates that a framebuffer attachment is layered (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_geometry_shader</remarks>
		FramebufferAttachmentLayeredOes = 0x8DA7,

		/// <summary>
		/// Indicates incomplete framebuffer due to layer targets.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		FramebufferIncompleteLayerTargets = 0x8DA8,

		/// <summary>
		/// Specifies a depth component format with 32-bit floating point (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_depth_buffer_float</remarks>
		DepthComponent32FNv = 0x8DAB,

		/// <summary>
		/// Specifies a combined depth and stencil format (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_depth_buffer_float</remarks>
		Depth32FStencil8Nv = 0x8DAC,

		/// <summary>
		/// Specifies a format with 32-bit floating point and 24-bit unsigned integer depth.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_depth_buffer_float</remarks>
		Float32UnsignedInt248Rev = 0x8DAD,

		/// <summary>
		/// Specifies a format with 32-bit floating point and 24-bit unsigned integer depth (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_depth_buffer_float</remarks>
		Float32UnsignedInt248RevNv = 0x8DAD,

		/// <summary>
		/// Indicates support for sRGB framebuffer in OpenGL.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_sRGB</remarks>
		FramebufferSrgb = 0x8DB9,

		/// <summary>
		/// Specifies the compressed format for single-channel red textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_compression_rgtc</remarks>
		CompressedRedRgtc1 = 0x8DBB,

		/// <summary>
		/// Specifies the compressed format for single-channel red textures (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_compression_rgtc</remarks>
		CompressedRedRgtc1Ext = 0x8DBB,

		/// <summary>
		/// Specifies the signed compressed format for single-channel red textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_compression_rgtc</remarks>
		CompressedSignedRedRgtc1 = 0x8DBC,

		/// <summary>
		/// Specifies the signed compressed format for single-channel red textures (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_compression_rgtc</remarks>
		CompressedSignedRedRgtc1Ext = 0x8DBC,

		/// <summary>
		/// Specifies the compressed format for dual-channel red-green textures (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_compression_rgtc</remarks>
		CompressedRedGreenRgtc2Ext = 0x8DBD,

		/// <summary>
		/// Specifies the compressed format for dual-channel red-green textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_compression_rgtc</remarks>
		CompressedRgRgtc2 = 0x8DBD,

		/// <summary>
		/// Specifies the signed compressed format for dual-channel red-green textures (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_compression_rgtc</remarks>
		CompressedSignedRedGreenRgtc2Ext = 0x8DBE,

		/// <summary>
		/// Specifies the signed compressed format for dual-channel red-green textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_compression_rgtc</remarks>
		CompressedSignedRgRgtc2 = 0x8DBE,

		/// <summary>
		/// Specifies a 1D array sampler.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Sampler1DArray = 0x8DC0,

		/// <summary>
		/// Specifies a 2D array sampler.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Sampler2DArray = 0x8DC1,

		/// <summary>
		/// Specifies a buffer sampler.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		SamplerBuffer = 0x8DC2,

		/// <summary>
		/// Specifies a shadow sampler for 1D arrays.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Sampler1DArrayShadow = 0x8DC3,

		/// <summary>
		/// Specifies a shadow sampler for 2D arrays.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		Sampler2DArrayShadow = 0x8DC4,

		/// <summary>
		/// Specifies a shadow sampler for cube maps.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		SamplerCubeShadow = 0x8DC5,

		/// <summary>
		/// Specifies a 2D unsigned integer vector.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		UnsignedIntVec2 = 0x8DC6,

		/// <summary>
		/// Specifies a 3D unsigned integer vector.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		UnsignedIntVec3 = 0x8DC7,

		/// <summary>
		/// Specifies a 4D unsigned integer vector.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		UnsignedIntVec4 = 0x8DC8,

		/// <summary>
		/// Specifies a signed integer sampler for 1D textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		IntSampler1D = 0x8DC9,

		/// <summary>
		/// Specifies a signed integer sampler for 2D textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		IntSampler2D = 0x8DCA,

		/// <summary>
		/// Specifies a signed integer sampler for 3D textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		IntSampler3D = 0x8DCB,

		/// <summary>
		/// Specifies a signed integer sampler for cube maps.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		IntSamplerCube = 0x8DCC,

		/// <summary>
		/// Specifies a signed integer sampler for 2D rectangle textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		IntSampler2DRect = 0x8DCD,

		/// <summary>
		/// Specifies a signed integer sampler for 1D arrays.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		IntSampler1DArray = 0x8DCE,

		/// <summary>
		/// Specifies a signed integer sampler for 2D arrays.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		IntSampler2DArray = 0x8DCF,

		/// <summary>
		/// Specifies a signed integer sampler for buffer textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		IntSamplerBuffer = 0x8DD0,

		/// <summary>
		/// Specifies an unsigned integer sampler for 1D textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		UnsignedIntSampler1D = 0x8DD1,

		/// <summary>
		/// Specifies an unsigned integer sampler for 2D textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		UnsignedIntSampler2D = 0x8DD2,

		/// <summary>
		/// Specifies an unsigned integer sampler for 3D textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		UnsignedIntSampler3D = 0x8DD3,

		/// <summary>
		/// Specifies an unsigned integer sampler for cube maps.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		UnsignedIntSamplerCube = 0x8DD4,

		/// <summary>
		/// Specifies an unsigned integer sampler for 2D rectangle textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		UnsignedIntSampler2DRect = 0x8DD5,

		/// <summary>
		/// Specifies an unsigned integer sampler for 1D arrays.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		UnsignedIntSampler1DArray = 0x8DD6,

		/// <summary>
		/// Specifies an unsigned integer sampler for 2D arrays.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		UnsignedIntSampler2DArray = 0x8DD7,

		/// <summary>
		/// Specifies an unsigned integer sampler for buffer textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		UnsignedIntSamplerBuffer = 0x8DD8,

		/// <summary>
		/// Specifies the geometry shader type.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		GeometryShader = 0x8DD9,

		/// <summary>
		/// Specifies the maximum number of uniform components for geometry shaders.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		MaxGeometryUniformComponents = 0x8DDF,

		/// <summary>
		/// Indicates the number of active subroutines in a program.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_subroutine</remarks>
		ActiveSubroutines = 0x8DE5,

		/// <summary>
		/// Indicates the number of active subroutine uniforms in a program.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_subroutine</remarks>
		ActiveSubroutineUniforms = 0x8DE6,

		/// <summary>
		/// Specifies the low precision float type.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_ES2_compatibility</remarks>
		LowFloat = 0x8DF0,

		/// <summary>
		/// Specifies the medium precision float type.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_ES2_compatibility</remarks>
		MediumFloat = 0x8DF1,

		/// <summary>
		/// Specifies the high precision float type.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_ES2_compatibility</remarks>
		HighFloat = 0x8DF2,

		/// <summary>
		/// Specifies the low precision integer type.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_ES2_compatibility</remarks>
		LowInt = 0x8DF3,

		/// <summary>
		/// Specifies the medium precision integer type.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_ES2_compatibility</remarks>
		MediumInt = 0x8DF4,

		/// <summary>
		/// Specifies the high precision integer type.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_ES2_compatibility</remarks>
		HighInt = 0x8DF5,

		/// <summary>
		/// Specifies the formats of binary shaders.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_ES2_compatibility</remarks>
		ShaderBinaryFormats = 0x8DF8,

		/// <summary>
		/// Specifies the number of supported shader binary formats.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_ES2_compatibility</remarks>
		NumShaderBinaryFormats = 0x8DF9,

		/// <summary>
		/// Specifies whether the shader compiler is available.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_ES2_compatibility</remarks>
		ShaderCompiler = 0x8DFA,

		/// <summary>
		/// Specifies the maximum number of vectors for vertex shader uniforms.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_ES2_compatibility</remarks>
		MaxVertexUniformVectors = 0x8DFB,

		/// <summary>
		/// Specifies the maximum number of varying vectors between vertex and fragment shaders.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_ES2_compatibility</remarks>
		MaxVaryingVectors = 0x8DFC,

		/// <summary>
		/// Specifies the maximum number of vectors for fragment shader uniforms.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_ES2_compatibility</remarks>
		MaxFragmentUniformVectors = 0x8DFD,

		/// <summary>
		/// Specifies the number of color samples in a renderbuffer for NV extension.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_framebuffer_multisample_coverage</remarks>
		RenderbufferColorSamplesNv = 0x8E10,

		/// <summary>
		/// Specifies a query that will wait for results.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		QueryWait = 0x8E13,

		/// <summary>
		/// Specifies a query that will not wait for results.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		QueryNoWait = 0x8E14,

		/// <summary>
		/// Specifies a region query that will wait for results.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		QueryByRegionWait = 0x8E15,

		/// <summary>
		/// Specifies a region query that will not wait for results.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		QueryByRegionNoWait = 0x8E16,

		/// <summary>
		/// Specifies an inverted query that will wait for results.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_conditional_render_inverted</remarks>
		QueryWaitInverted = 0x8E17,

		/// <summary>
		/// Specifies an inverted query that will not wait for results.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_conditional_render_inverted</remarks>
		QueryNoWaitInverted = 0x8E18,

		/// <summary>
		/// Specifies an inverted region query that will wait for results.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_conditional_render_inverted</remarks>
		QueryByRegionWaitInverted = 0x8E19,

		/// <summary>
		/// Specifies an inverted region query that will not wait for results.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_conditional_render_inverted</remarks>
		QueryByRegionNoWaitInverted = 0x8E1A,

		/// <summary>
		/// Specifies the transform feedback target.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_EXT_debug_label<br/>GL_ARB_transform_feedback2</remarks>
		TransformFeedback = 0x8E22,

		/// <summary>
		/// Indicates that transform feedback is paused.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TransformFeedbackPaused = 0x8E23,

		/// <summary>
		/// Indicates that transform feedback is active.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		TransformFeedbackActive = 0x8E24,

		/// <summary>
		/// Specifies the timestamp in OpenGL.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_timer_query</remarks>
		Timestamp = 0x8E28,

		/// <summary>
		/// Specifies the timestamp (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_disjoint_timer_query</remarks>
		TimestampExt = 0x8E28,

		/// <summary>
		/// Specifies the swizzle component for red in texture operations.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_swizzle</remarks>
		TextureSwizzleR = 0x8E42,

		/// <summary>
		/// Specifies the swizzle component for green in texture operations.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_swizzle</remarks>
		TextureSwizzleG = 0x8E43,

		/// <summary>
		/// Specifies the swizzle component for blue in texture operations.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_swizzle</remarks>
		TextureSwizzleB = 0x8E44,

		/// <summary>
		/// Specifies the swizzle component for alpha in texture operations.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_swizzle</remarks>
		TextureSwizzleA = 0x8E45,

		/// <summary>
		/// Specifies the swizzle components for RGBA in texture operations.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_swizzle</remarks>
		TextureSwizzleRgba = 0x8E46,

		/// <summary>
		/// Indicates the number of active subroutine uniform locations.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_subroutine</remarks>
		ActiveSubroutineUniformLocations = 0x8E47,

		/// <summary>
		/// Specifies the maximum length of an active subroutine.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_subroutine</remarks>
		ActiveSubroutineMaxLength = 0x8E48,

		/// <summary>
		/// Specifies the maximum length of an active subroutine uniform.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_subroutine</remarks>
		ActiveSubroutineUniformMaxLength = 0x8E49,

		/// <summary>
		/// Specifies the number of compatible subroutines.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query<br/>GL_ARB_shader_subroutine</remarks>
		NumCompatibleSubroutines = 0x8E4A,

		/// <summary>
		/// Indicates that subroutines in a shader program are compatible with each other.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query<br/>GL_ARB_shader_subroutine</remarks>
		CompatibleSubroutines = 0x8E4B,

		/// <summary>
		/// Specifies the convention for interpreting the first vertex in vertex processing.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_provoking_vertex<br/>GL_ARB_viewport_array</remarks>
		FirstVertexConvention = 0x8E4D,

		/// <summary>
		/// Specifies the convention for interpreting the last vertex in vertex processing.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_provoking_vertex<br/>GL_ARB_viewport_array</remarks>
		LastVertexConvention = 0x8E4E,

		/// <summary>
		/// Specifies which vertex of a primitive is considered the provoking vertex.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_provoking_vertex<br/>GL_ARB_viewport_array</remarks>
		ProvokingVertex = 0x8E4F,

		/// <summary>
		/// Specifies the position of samples for multisampling.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_multisample</remarks>
		SamplePosition = 0x8E50,

		/// <summary>
		/// Specifies the location of samples (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_sample_locations</remarks>
		SampleLocationArb = 0x8E50,

		/// <summary>
		/// Specifies a mask that controls sample writing.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_multisample</remarks>
		SampleMask = 0x8E51,

		/// <summary>
		/// Specifies the maximum number of words in a sample mask.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_multisample</remarks>
		MaxSampleMaskWords = 0x8E59,

		/// <summary>
		/// Specifies the number of vertices per patch.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_tessellation_shader</remarks>
		PatchVertices = 0x8E72,

		/// <summary>
		/// Specifies the default inner tessellation level.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_tessellation_shader</remarks>
		PatchDefaultInnerLevel = 0x8E73,

		/// <summary>
		/// Specifies the default outer tessellation level.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_tessellation_shader</remarks>
		PatchDefaultOuterLevel = 0x8E74,

		/// <summary>
		/// Specifies the tessellation evaluation shader.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_tessellation_shader</remarks>
		TessEvaluationShader = 0x8E87,

		/// <summary>
		/// Specifies the tessellation control shader.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_tessellation_shader</remarks>
		TessControlShader = 0x8E88,

		/// <summary>
		/// Specifies the maximum number of uniform blocks for tessellation control shaders.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_tessellation_shader</remarks>
		MaxTessControlUniformBlocks = 0x8E89,

		/// <summary>
		/// Specifies the maximum number of uniform blocks for tessellation evaluation shaders.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_tessellation_shader</remarks>
		MaxTessEvaluationUniformBlocks = 0x8E8A,

		/// <summary>
		/// Specifies the compressed format for RGBA textures using BPTC compression.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		CompressedRgbaBptcUnorm = 0x8E8C,

		/// <summary>
		/// Specifies the compressed format for RGBA textures using BPTC compression (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_compression_bptc</remarks>
		CompressedRgbaBptcUnormArb = 0x8E8C,

		/// <summary>
		/// Specifies the compressed format for RGBA textures using BPTC compression (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_compression_bptc</remarks>
		CompressedRgbaBptcUnormExt = 0x8E8C,

		/// <summary>
		/// Specifies the compressed format for sRGB textures with alpha using BPTC compression.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		CompressedSrgbAlphaBptcUnorm = 0x8E8D,

		/// <summary>
		/// Specifies the compressed format for sRGB textures with alpha using BPTC compression (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_compression_bptc</remarks>
		CompressedSrgbAlphaBptcUnormArb = 0x8E8D,

		/// <summary>
		/// Specifies the compressed format for sRGB textures with alpha using BPTC compression (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_compression_bptc</remarks>
		CompressedSrgbAlphaBptcUnormExt = 0x8E8D,

		/// <summary>
		/// Specifies the compressed format for RGB textures with signed floating point data using BPTC compression.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		CompressedRgbBptcSignedFloat = 0x8E8E,

		/// <summary>
		/// Specifies the compressed format for RGB textures with signed floating point data using BPTC compression (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_compression_bptc</remarks>
		CompressedRgbBptcSignedFloatArb = 0x8E8E,

		/// <summary>
		/// Specifies the compressed format for RGB textures with signed floating point data using BPTC compression (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_compression_bptc</remarks>
		CompressedRgbBptcSignedFloatExt = 0x8E8E,

		/// <summary>
		/// Specifies the compressed format for RGB textures with unsigned floating point data using BPTC compression.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		CompressedRgbBptcUnsignedFloat = 0x8E8F,

		/// <summary>
		/// Specifies the compressed format for RGB textures with unsigned floating point data using BPTC compression (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_compression_bptc</remarks>
		CompressedRgbBptcUnsignedFloatArb = 0x8E8F,

		/// <summary>
		/// Specifies the compressed format for RGB textures with unsigned floating point data using BPTC compression (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_compression_bptc</remarks>
		CompressedRgbBptcUnsignedFloatExt = 0x8E8F,

		/// <summary>
		/// Specifies the buffer used for reading during a copy operation.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_copy_buffer</remarks>
		CopyReadBuffer = 0x8F36,

		/// <summary>
		/// Specifies the buffer used for writing during a copy operation.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_copy_buffer</remarks>
		CopyWriteBuffer = 0x8F37,

		/// <summary>
		/// Specifies a buffer used for indirect draw calls.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_draw_indirect</remarks>
		DrawIndirectBuffer = 0x8F3F,

		/// <summary>
		/// Specifies a 2x2 matrix of double-precision floating-point values.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_gpu_shader_fp64<br/>GL_ARB_vertex_attrib_64bit</remarks>
		DoubleMat2 = 0x8F46,

		/// <summary>
		/// Specifies a 3x3 matrix of double-precision floating-point values.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_gpu_shader_fp64<br/>GL_ARB_vertex_attrib_64bit</remarks>
		DoubleMat3 = 0x8F47,

		/// <summary>
		/// Specifies a 4x4 matrix of double-precision floating-point values.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_gpu_shader_fp64<br/>GL_ARB_vertex_attrib_64bit</remarks>
		DoubleMat4 = 0x8F48,

		/// <summary>
		/// Specifies a 2x3 matrix of double-precision floating-point values.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_gpu_shader_fp64<br/>GL_ARB_vertex_attrib_64bit</remarks>
		DoubleMat2X3 = 0x8F49,

		/// <summary>
		/// Specifies a 2x4 matrix of double-precision floating-point values.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_gpu_shader_fp64<br/>GL_ARB_vertex_attrib_64bit</remarks>
		DoubleMat2X4 = 0x8F4A,

		/// <summary>
		/// Specifies a 3x2 matrix of double-precision floating-point values.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_gpu_shader_fp64<br/>GL_ARB_vertex_attrib_64bit</remarks>
		DoubleMat3X2 = 0x8F4B,

		/// <summary>
		/// Specifies a 3x4 matrix of double-precision floating-point values.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_gpu_shader_fp64<br/>GL_ARB_vertex_attrib_64bit</remarks>
		DoubleMat3X4 = 0x8F4C,

		/// <summary>
		/// Specifies a 4x2 matrix of double-precision floating-point values.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_gpu_shader_fp64<br/>GL_ARB_vertex_attrib_64bit</remarks>
		DoubleMat4X2 = 0x8F4D,

		/// <summary>
		/// Specifies a 4x3 matrix of double-precision floating-point values.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_gpu_shader_fp64<br/>GL_ARB_vertex_attrib_64bit</remarks>
		DoubleMat4X3 = 0x8F4E,

		/// <summary>
		/// Specifies a shader binary format for ARM architecture.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARM_mali_shader_binary</remarks>
		MaliShaderBinaryArm = 0x8F60,

		/// <summary>
		/// Indicates whether per-sample fetching is supported in ARM shaders.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARM_shader_framebuffer_fetch</remarks>
		FetchPerSampleArm = 0x8F65,

		/// <summary>
		/// Specifies framebuffer fetch capabilities for multiple render targets in ARM fragment shaders.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARM_shader_framebuffer_fetch</remarks>
		FragmentShaderFramebufferFetchMrtArm = 0x8F66,

		/// <summary>
		/// Indicates support for unnormalized texture coordinates in ARM architecture.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARM_texture_unnormalized_coordinates</remarks>
		TextureUnnormalizedCoordinatesArm = 0x8F6A,

		/// <summary>
		/// Specifies the number of fixed rates for surface compression (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_storage_compression</remarks>
		NumSurfaceCompressionFixedRatesExt = 0x8F6E,

		/// <summary>
		/// Indicates support for non-trivial combiners for fragment shading rates (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_fragment_shading_rate</remarks>
		FragmentShadingRateNonTrivialCombinersSupportedExt = 0x8F6F,

		/// <summary>
		/// Specifies an 8-bit normalized signed red component format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_EXT_texture_snorm<br/>GL_EXT_render_snorm</remarks>
		R8Snorm = 0x8F94,

		/// <summary>
		/// Specifies an 8-bit normalized signed red-green component format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_EXT_texture_snorm<br/>GL_EXT_render_snorm</remarks>
		Rg8Snorm = 0x8F95,

		/// <summary>
		/// Specifies an 8-bit normalized signed RGB component format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_EXT_texture_snorm</remarks>
		Rgb8Snorm = 0x8F96,

		/// <summary>
		/// Specifies an 8-bit normalized signed RGBA component format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_EXT_texture_snorm<br/>GL_EXT_render_snorm</remarks>
		Rgba8Snorm = 0x8F97,

		/// <summary>
		/// Specifies a 16-bit normalized signed red component format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_EXT_texture_snorm</remarks>
		R16Snorm = 0x8F98,

		/// <summary>
		/// Specifies a 16-bit normalized signed red component format (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_render_snorm<br/>GL_EXT_texture_norm16</remarks>
		R16SnormExt = 0x8F98,

		/// <summary>
		/// Specifies a 16-bit normalized signed red-green component format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_EXT_texture_snorm</remarks>
		Rg16Snorm = 0x8F99,

		/// <summary>
		/// Specifies a 16-bit normalized signed red-green component format (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_render_snorm<br/>GL_EXT_texture_norm16</remarks>
		Rg16SnormExt = 0x8F99,

		/// <summary>
		/// Specifies a 16-bit normalized signed RGB component format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_EXT_texture_snorm</remarks>
		Rgb16Snorm = 0x8F9A,

		/// <summary>
		/// Specifies a 16-bit normalized signed RGB component format (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_norm16</remarks>
		Rgb16SnormExt = 0x8F9A,

		/// <summary>
		/// Specifies a 16-bit normalized signed RGBA component format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_EXT_texture_snorm</remarks>
		Rgba16Snorm = 0x8F9B,

		/// <summary>
		/// Specifies a 16-bit normalized signed RGBA component format (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_render_snorm<br/>GL_EXT_texture_norm16</remarks>
		Rgba16SnormExt = 0x8F9B,

		/// <summary>
		/// Indicates the use of primitive restart in drawing commands.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PrimitiveRestart = 0x8F9D,

		/// <summary>
		/// Specifies the index used for primitive restart.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		PrimitiveRestartIndex = 0x8F9E,

		/// <summary>
		/// Specifies a hint for binning control in the QCOM extension.
		/// </summary>
		/// <remarks></remarks>
		BinningControlHintQcom = 0x8FB0,

		/// <summary>
		/// Specifies a texture format for 8-bit signed red (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_sRGB_R8</remarks>
		Sr8Ext = 0x8FBD,

		/// <summary>
		/// Specifies a texture format for 8-bit signed red-green (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_sRGB_RG8</remarks>
		Srg8Ext = 0x8FBE,

		/// <summary>
		/// Specifies a shader binary format for VIV architecture.
		/// </summary>
		/// <remarks></remarks>
		ShaderBinaryViv = 0x8FC4,

		/// <summary>
		/// Specifies a 2-component vector of 64-bit integers (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_gpu_shader_int64</remarks>
		Int64Vec2Arb = 0x8FE9,

		/// <summary>
		/// Specifies a 3-component vector of 64-bit integers (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_gpu_shader_int64</remarks>
		Int64Vec3Arb = 0x8FEA,

		/// <summary>
		/// Specifies a 4-component vector of 64-bit integers (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_gpu_shader_int64</remarks>
		Int64Vec4Arb = 0x8FEB,

		/// <summary>
		/// Specifies a 2-component vector of unsigned 64-bit integers (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_gpu_shader_int64</remarks>
		UnsignedInt64Vec2Arb = 0x8FF5,

		/// <summary>
		/// Specifies a 3-component vector of unsigned 64-bit integers (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_gpu_shader_int64</remarks>
		UnsignedInt64Vec3Arb = 0x8FF6,

		/// <summary>
		/// Specifies a 4-component vector of unsigned 64-bit integers (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_gpu_shader_int64</remarks>
		UnsignedInt64Vec4Arb = 0x8FF7,

		/// <summary>
		/// Specifies a 2-component vector of double-precision floating-point values.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_gpu_shader_fp64<br/>GL_ARB_vertex_attrib_64bit</remarks>
		DoubleVec2 = 0x8FFC,

		/// <summary>
		/// Specifies a 3-component vector of double-precision floating-point values.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_gpu_shader_fp64<br/>GL_ARB_vertex_attrib_64bit</remarks>
		DoubleVec3 = 0x8FFD,

		/// <summary>
		/// Specifies a 4-component vector of double-precision floating-point values.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_gpu_shader_fp64<br/>GL_ARB_vertex_attrib_64bit</remarks>
		DoubleVec4 = 0x8FFE,

		/// <summary>
		/// Specifies a texture format for cube map arrays.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2</remarks>
		TextureCubeMapArray = 0x9009,

		/// <summary>
		/// Specifies a texture format for cube map arrays (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_cube_map_array</remarks>
		TextureCubeMapArrayArb = 0x9009,

		/// <summary>
		/// Specifies a texture format for cube map arrays (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_cube_map_array</remarks>
		TextureCubeMapArrayExt = 0x9009,

		/// <summary>
		/// Specifies a texture format for cube map arrays (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_sparse_texture<br/>GL_OES_texture_cube_map_array</remarks>
		TextureCubeMapArrayOes = 0x9009,

		/// <summary>
		/// Specifies a proxy texture for cube map arrays.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ProxyTextureCubeMapArray = 0x900B,

		/// <summary>
		/// Specifies a proxy texture for cube map arrays (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_texture_cube_map_array</remarks>
		ProxyTextureCubeMapArrayArb = 0x900B,

		/// <summary>
		/// Specifies a sampler for cube map arrays.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		SamplerCubeMapArray = 0x900C,

		/// <summary>
		/// Specifies a shadow sampler for cube map arrays.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		SamplerCubeMapArrayShadow = 0x900D,

		/// <summary>
		/// Specifies an integer sampler for cube map arrays.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		IntSamplerCubeMapArray = 0x900E,

		/// <summary>
		/// Specifies an unsigned integer sampler for cube map arrays.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		UnsignedIntSamplerCubeMapArray = 0x900F,

		/// <summary>
		/// Specifies a 1D image format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_image_load_store</remarks>
		Image1D = 0x904C,

		/// <summary>
		/// Specifies a 2D image format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_image_load_store</remarks>
		Image2D = 0x904D,

		/// <summary>
		/// Specifies a 3D image format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_image_load_store</remarks>
		Image3D = 0x904E,

		/// <summary>
		/// Specifies a 2D rectangular image format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_image_load_store</remarks>
		Image2DRect = 0x904F,

		/// <summary>
		/// Specifies a cube map image format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_image_load_store</remarks>
		ImageCube = 0x9050,

		/// <summary>
		/// Specifies a buffer image format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_image_load_store</remarks>
		ImageBuffer = 0x9051,

		/// <summary>
		/// Specifies a 1D array image format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_image_load_store</remarks>
		Image1DArray = 0x9052,

		/// <summary>
		/// Specifies a 2D array image format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_image_load_store</remarks>
		Image2DArray = 0x9053,

		/// <summary>
		/// Specifies a cube map array image format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_image_load_store</remarks>
		ImageCubeMapArray = 0x9054,

		/// <summary>
		/// Specifies a 2D multisample image format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_image_load_store</remarks>
		Image2DMultisample = 0x9055,

		/// <summary>
		/// Specifies a 2D multisample array image format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_image_load_store</remarks>
		Image2DMultisampleArray = 0x9056,

		/// <summary>
		/// Specifies an integer 1D image format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_image_load_store</remarks>
		IntImage1D = 0x9057,

		/// <summary>
		/// Specifies an integer 2D image format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_image_load_store</remarks>
		IntImage2D = 0x9058,

		/// <summary>
		/// Specifies an integer 3D image format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_image_load_store</remarks>
		IntImage3D = 0x9059,

		/// <summary>
		/// Specifies an integer 2D rectangular image format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_image_load_store</remarks>
		IntImage2DRect = 0x905A,

		/// <summary>
		/// Specifies an integer cube map image format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_image_load_store</remarks>
		IntImageCube = 0x905B,

		/// <summary>
		/// Specifies an integer buffer image format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_image_load_store</remarks>
		IntImageBuffer = 0x905C,

		/// <summary>
		/// Specifies an integer 1D array image format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_image_load_store</remarks>
		IntImage1DArray = 0x905D,

		/// <summary>
		/// Specifies an integer 2D array image format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_image_load_store</remarks>
		IntImage2DArray = 0x905E,

		/// <summary>
		/// Specifies an integer cube map array image format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_image_load_store</remarks>
		IntImageCubeMapArray = 0x905F,

		/// <summary>
		/// Specifies an integer 2D multisample image format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_image_load_store</remarks>
		IntImage2DMultisample = 0x9060,

		/// <summary>
		/// Specifies an integer 2D multisample array image format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_image_load_store</remarks>
		IntImage2DMultisampleArray = 0x9061,

		/// <summary>
		/// Specifies an unsigned integer 1D image format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_image_load_store</remarks>
		UnsignedIntImage1D = 0x9062,

		/// <summary>
		/// Specifies an unsigned integer 2D image format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_image_load_store</remarks>
		UnsignedIntImage2D = 0x9063,

		/// <summary>
		/// Specifies an unsigned integer 3D image format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_image_load_store</remarks>
		UnsignedIntImage3D = 0x9064,

		/// <summary>
		/// Specifies an unsigned integer 2D rectangular image format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_image_load_store</remarks>
		UnsignedIntImage2DRect = 0x9065,

		/// <summary>
		/// Specifies an unsigned integer cube map image format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_image_load_store</remarks>
		UnsignedIntImageCube = 0x9066,

		/// <summary>
		/// Specifies an unsigned integer buffer image format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_image_load_store</remarks>
		UnsignedIntImageBuffer = 0x9067,

		/// <summary>
		/// Specifies an unsigned integer 1D array image format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_image_load_store</remarks>
		UnsignedIntImage1DArray = 0x9068,

		/// <summary>
		/// Specifies an unsigned integer 2D array image format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_image_load_store</remarks>
		UnsignedIntImage2DArray = 0x9069,

		/// <summary>
		/// Specifies an unsigned integer cube map array image format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_image_load_store</remarks>
		UnsignedIntImageCubeMapArray = 0x906A,

		/// <summary>
		/// Specifies an unsigned integer 2D multisample image format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_image_load_store</remarks>
		UnsignedIntImage2DMultisample = 0x906B,

		/// <summary>
		/// Specifies an unsigned integer 2D multisample array image format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_image_load_store</remarks>
		UnsignedIntImage2DMultisampleArray = 0x906C,

		/// <summary>
		/// Specifies a 10-2-10-2 unsigned integer format for images.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_rgb10_a2ui</remarks>
		Rgb10A2Ui = 0x906F,

		/// <summary>
		/// Specifies the SVG path format (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		PathFormatSvgNv = 0x9070,

		/// <summary>
		/// Specifies the PostScript path format (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		PathFormatPsNv = 0x9071,

		/// <summary>
		/// Specifies the standard font name (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		StandardFontNameNv = 0x9072,

		/// <summary>
		/// Specifies the system font name (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		SystemFontNameNv = 0x9073,

		/// <summary>
		/// Specifies the file name (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		FileNameNv = 0x9074,

		/// <summary>
		/// Specifies the stroke width for paths (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		PathStrokeWidthNv = 0x9075,

		/// <summary>
		/// Specifies the end caps style for paths (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		PathEndCapsNv = 0x9076,

		/// <summary>
		/// Specifies the initial end cap style for paths (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		PathInitialEndCapNv = 0x9077,

		/// <summary>
		/// Specifies the terminal end cap style for paths (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		PathTerminalEndCapNv = 0x9078,

		/// <summary>
		/// Specifies the join style for path segments (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		PathJoinStyleNv = 0x9079,

		/// <summary>
		/// Specifies the miter limit for paths (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		PathMiterLimitNv = 0x907A,

		/// <summary>
		/// Specifies the dash caps style for dashed paths (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		PathDashCapsNv = 0x907B,

		/// <summary>
		/// Specifies the initial dash cap style for dashed paths (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		PathInitialDashCapNv = 0x907C,

		/// <summary>
		/// Specifies the terminal dash cap style for dashed paths (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		PathTerminalDashCapNv = 0x907D,

		/// <summary>
		/// Specifies the dash offset for dashed paths (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		PathDashOffsetNv = 0x907E,

		/// <summary>
		/// Specifies the client length for paths (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		PathClientLengthNv = 0x907F,

		/// <summary>
		/// Specifies the fill mode for paths (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		PathFillModeNv = 0x9080,

		/// <summary>
		/// Specifies the fill mask for paths (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		PathFillMaskNv = 0x9081,

		/// <summary>
		/// Specifies the fill cover mode for paths (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		PathFillCoverModeNv = 0x9082,

		/// <summary>
		/// Specifies the cover mode for strokes in path rendering.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		PathStrokeCoverModeNv = 0x9083,

		/// <summary>
		/// Defines the mask used for path stroke rendering.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		PathStrokeMaskNv = 0x9084,

		/// <summary>
		/// Increments the count for certain operations in NV path rendering.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		CountUpNv = 0x9088,

		/// <summary>
		/// Decrements the count for certain operations in NV path rendering.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		CountDownNv = 0x9089,

		/// <summary>
		/// Specifies the bounding box for a path object.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		PathObjectBoundingBoxNv = 0x908A,

		/// <summary>
		/// Specifies the convex hull calculation mode for path rendering.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		ConvexHullNv = 0x908B,

		/// <summary>
		/// Defines the bounding box for path or object.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		BoundingBoxNv = 0x908D,

		/// <summary>
		/// Specifies the X-axis translation in NV path transformations.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		TranslateXNv = 0x908E,

		/// <summary>
		/// Specifies the Y-axis translation in NV path transformations.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		TranslateYNv = 0x908F,

		/// <summary>
		/// Specifies a 2D translation in NV path transformations.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		Translate2DNv = 0x9090,

		/// <summary>
		/// Specifies a 3D translation in NV path transformations.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		Translate3DNv = 0x9091,

		/// <summary>
		/// Specifies a 2D affine transformation.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		Affine2DNv = 0x9092,

		/// <summary>
		/// Specifies a 3D affine transformation.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		Affine3DNv = 0x9094,

		/// <summary>
		/// Specifies the transpose of a 2D affine transformation.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		TransposeAffine2DNv = 0x9096,

		/// <summary>
		/// Specifies the transpose of a 3D affine transformation.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		TransposeAffine3DNv = 0x9098,

		/// <summary>
		/// Specifies UTF-8 encoding for text in path rendering.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		Utf8Nv = 0x909A,

		/// <summary>
		/// Specifies UTF-16 encoding for text in path rendering.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		Utf16Nv = 0x909B,

		/// <summary>
		/// Defines the bounding box encompassing multiple bounding boxes.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		BoundingBoxOfBoundingBoxesNv = 0x909C,

		/// <summary>
		/// Specifies the number of commands in a path.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		PathCommandCountNv = 0x909D,

		/// <summary>
		/// Specifies the number of coordinates in a path.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		PathCoordCountNv = 0x909E,

		/// <summary>
		/// Specifies the number of dashes in a dash array.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		PathDashArrayCountNv = 0x909F,

		/// <summary>
		/// Specifies the computed length of a path.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		PathComputedLengthNv = 0x90A0,

		/// <summary>
		/// Defines the bounding box for path fill operations.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		PathFillBoundingBoxNv = 0x90A1,

		/// <summary>
		/// Defines the bounding box for path stroke operations.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		PathStrokeBoundingBoxNv = 0x90A2,

		/// <summary>
		/// Specifies behavior to skip rendering of missing glyphs.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		SkipMissingGlyphNv = 0x90A9,

		/// <summary>
		/// Specifies behavior to use a default glyph for missing characters.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		UseMissingGlyphNv = 0x90AA,

		/// <summary>
		/// Accumulates adjacent path pairs in certain operations.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		AccumAdjacentPairsNv = 0x90AD,

		/// <summary>
		/// Specifies adjacent pairs for path operations.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		AdjacentPairsNv = 0x90AE,

		/// <summary>
		/// Specifies operations from the first element to the rest.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		FirstToRestNv = 0x90AF,

		/// <summary>
		/// Resets the dash offset for path rendering.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_path_rendering</remarks>
		PathDashOffsetResetNv = 0x90B4,

		/// <summary>
		/// Specifies the minimum alignment for buffer mapping.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_map_buffer_alignment</remarks>
		MinMapBufferAlignment = 0x90BC,

		/// <summary>
		/// Specifies the compatibility type for image formats.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2<br/>GL_ARB_shader_image_load_store</remarks>
		ImageFormatCompatibilityType = 0x90C7,

		/// <summary>
		/// Specifies the target for shader storage buffer objects.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_storage_buffer_object</remarks>
		ShaderStorageBuffer = 0x90D2,

		/// <summary>
		/// Specifies the binding point for shader storage buffers.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_storage_buffer_object</remarks>
		ShaderStorageBufferBinding = 0x90D3,

		/// <summary>
		/// Specifies the starting offset for shader storage buffers.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_storage_buffer_object</remarks>
		ShaderStorageBufferStart = 0x90D4,

		/// <summary>
		/// Specifies the size of shader storage buffers.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_storage_buffer_object</remarks>
		ShaderStorageBufferSize = 0x90D5,

		/// <summary>
		/// Specifies the maximum number of shader storage blocks in vertex shaders.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_storage_buffer_object</remarks>
		MaxVertexShaderStorageBlocks = 0x90D6,

		/// <summary>
		/// Specifies the maximum number of shader storage blocks in geometry shaders.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_storage_buffer_object</remarks>
		MaxGeometryShaderStorageBlocks = 0x90D7,

		/// <summary>
		/// Specifies the maximum number of shader storage blocks in tessellation control shaders.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_storage_buffer_object</remarks>
		MaxTessControlShaderStorageBlocks = 0x90D8,

		/// <summary>
		/// Specifies the maximum number of shader storage blocks in tessellation evaluation shaders.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_storage_buffer_object</remarks>
		MaxTessEvaluationShaderStorageBlocks = 0x90D9,

		/// <summary>
		/// Specifies the maximum number of shader storage blocks in fragment shaders.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_storage_buffer_object</remarks>
		MaxFragmentShaderStorageBlocks = 0x90DA,

		/// <summary>
		/// Specifies the maximum number of shader storage blocks in compute shaders.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_storage_buffer_object</remarks>
		MaxComputeShaderStorageBlocks = 0x90DB,

		/// <summary>
		/// Specifies the maximum number of combined shader storage blocks across all shader stages.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_storage_buffer_object</remarks>
		MaxCombinedShaderStorageBlocks = 0x90DC,

		/// <summary>
		/// Specifies the maximum number of shader storage buffer bindings.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_storage_buffer_object</remarks>
		MaxShaderStorageBufferBindings = 0x90DD,

		/// <summary>
		/// Specifies the alignment requirements for shader storage buffer offsets.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_storage_buffer_object</remarks>
		ShaderStorageBufferOffsetAlignment = 0x90DF,

		/// <summary>
		/// Specifies the mode for depth-stencil textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_stencil_texturing</remarks>
		DepthStencilTextureMode = 0x90EA,

		/// <summary>
		/// Specifies the maximum number of invocations in a compute work group.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_compute_shader</remarks>
		MaxComputeWorkGroupInvocations = 0x90EB,

		/// <summary>
		/// Specifies uniform blocks referenced by compute shaders.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_compute_shader</remarks>
		UniformBlockReferencedByComputeShader = 0x90EC,

		/// <summary>
		/// Specifies atomic counter buffers referenced by compute shaders.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_compute_shader</remarks>
		AtomicCounterBufferReferencedByComputeShader = 0x90ED,

		/// <summary>
		/// Specifies the buffer for indirect dispatch commands.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_compute_shader</remarks>
		DispatchIndirectBuffer = 0x90EE,

		/// <summary>
		/// Specifies the binding point for indirect dispatch buffers.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_compute_shader</remarks>
		DispatchIndirectBufferBinding = 0x90EF,

		/// <summary>
		/// Specifies a compute program object (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_compute_program5</remarks>
		ComputeProgramNv = 0x90FB,

		/// <summary>
		/// Specifies a 2D multisample texture target.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2<br/>GL_ARB_texture_multisample<br/>GL_NV_internalformat_sample_query</remarks>
		Texture2DMultisample = 0x9100,

		/// <summary>
		/// Specifies a proxy target for 2D multisample textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_multisample</remarks>
		ProxyTexture2DMultisample = 0x9101,

		/// <summary>
		/// Specifies a 2D multisample array texture target.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query2<br/>GL_ARB_texture_multisample<br/>GL_NV_internalformat_sample_query</remarks>
		Texture2DMultisampleArray = 0x9102,

		/// <summary>
		/// Specifies a proxy target for 2D multisample array textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_multisample</remarks>
		ProxyTexture2DMultisampleArray = 0x9103,

		/// <summary>
		/// Specifies the binding point for 2D multisample textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_direct_state_access<br/>GL_ARB_texture_multisample</remarks>
		TextureBinding2DMultisample = 0x9104,

		/// <summary>
		/// Specifies the binding point for 2D multisample array textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_direct_state_access<br/>GL_ARB_texture_multisample</remarks>
		TextureBinding2DMultisampleArray = 0x9105,

		/// <summary>
		/// Specifies a sampler for 2D multisample textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_multisample</remarks>
		Sampler2DMultisample = 0x9108,

		/// <summary>
		/// Specifies an integer sampler for 2D multisample textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_multisample</remarks>
		IntSampler2DMultisample = 0x9109,

		/// <summary>
		/// Specifies an unsigned integer sampler for 2D multisample textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_multisample</remarks>
		UnsignedIntSampler2DMultisample = 0x910A,

		/// <summary>
		/// Specifies a sampler for 2D multisample array textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_multisample</remarks>
		Sampler2DMultisampleArray = 0x910B,

		/// <summary>
		/// Specifies an integer sampler for 2D multisample array textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_multisample</remarks>
		IntSampler2DMultisampleArray = 0x910C,

		/// <summary>
		/// Specifies an unsigned integer sampler for 2D multisample array textures.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_multisample</remarks>
		UnsignedIntSampler2DMultisampleArray = 0x910D,

		/// <summary>
		/// Specifies the maximum number of color texture samples.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_multisample</remarks>
		MaxColorTextureSamples = 0x910E,

		/// <summary>
		/// Specifies the maximum number of depth texture samples.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_multisample</remarks>
		MaxDepthTextureSamples = 0x910F,

		/// <summary>
		/// Specifies the maximum number of integer texture samples.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_multisample</remarks>
		MaxIntegerSamples = 0x9110,

		/// <summary>
		/// Specifies the maximum timeout for server wait operations.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_sync</remarks>
		MaxServerWaitTimeout = 0x9111,

		/// <summary>
		/// Specifies the type of an OpenGL object.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_sync</remarks>
		ObjectType = 0x9112,

		/// <summary>
		/// Specifies the condition for synchronization objects.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_sync</remarks>
		SyncCondition = 0x9113,

		/// <summary>
		/// Specifies the status of a synchronization object.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_sync</remarks>
		SyncStatus = 0x9114,

		/// <summary>
		/// Specifies the flags for synchronization objects.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_sync</remarks>
		SyncFlags = 0x9115,

		/// <summary>
		/// Indicates that GPU commands have completed execution.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_sync</remarks>
		SyncGpuCommandsComplete = 0x9117,

		/// <summary>
		/// Indicates that a synchronization object was already signaled.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_sync</remarks>
		AlreadySignaled = 0x911A,

		/// <summary>
		/// Indicates that a timeout has expired for synchronization.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_sync</remarks>
		TimeoutExpired = 0x911B,

		/// <summary>
		/// Indicates that the condition for synchronization has been satisfied.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_sync</remarks>
		ConditionSatisfied = 0x911C,

		/// <summary>
		/// Indicates that the wait operation failed.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_sync</remarks>
		WaitFailed = 0x911D,

		/// <summary>
		/// Specifies the access flags for buffer objects.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		BufferAccessFlags = 0x911F,

		/// <summary>
		/// Specifies the length of a mapped buffer object.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		BufferMapLength = 0x9120,

		/// <summary>
		/// Specifies the offset for a mapped buffer object.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		BufferMapOffset = 0x9121,

		/// <summary>
		/// Specifies the maximum number of output components for vertex shaders.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		MaxVertexOutputComponents = 0x9122,

		/// <summary>
		/// Specifies the maximum number of input components for geometry shaders.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		MaxGeometryInputComponents = 0x9123,

		/// <summary>
		/// Specifies the maximum number of output components for geometry shaders.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		MaxGeometryOutputComponents = 0x9124,

		/// <summary>
		/// Specifies the maximum number of input components for fragment shaders.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		MaxFragmentInputComponents = 0x9125,

		/// <summary>
		/// Specifies the profile mask for an OpenGL context.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ContextProfileMask = 0x9126,

		/// <summary>
		/// Specifies the number of samples for a renderbuffer (IMG extension).
		/// </summary>
		/// <remarks></remarks>
		RenderbufferSamplesImg = 0x9133,

		/// <summary>
		/// Specifies the texture scale for framebuffer attachments (IMG extension).
		/// </summary>
		/// <remarks></remarks>
		FramebufferAttachmentTextureScaleImg = 0x913F,

		/// <summary>
		/// Indicates a high-severity debug message.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_KHR_debug</remarks>
		DebugSeverityHigh = 0x9146,

		/// <summary>
		/// Indicates a medium-severity debug message.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_KHR_debug</remarks>
		DebugSeverityMedium = 0x9147,

		/// <summary>
		/// Indicates a low-severity debug message.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_KHR_debug</remarks>
		DebugSeverityLow = 0x9148,

		/// <summary>
		/// Specifies a query buffer object.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_query_buffer_object</remarks>
		QueryBuffer = 0x9192,

		/// <summary>
		/// Specifies that query results are returned without waiting.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_query_buffer_object</remarks>
		QueryResultNoWait = 0x9194,

		/// <summary>
		/// Specifies the alignment requirement for texture buffer offsets.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_texture_buffer_range</remarks>
		TextureBufferOffsetAlignment = 0x919F,

		/// <summary>
		/// Specifies the number of samples for renderbuffer storage (AMD extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_AMD_framebuffer_multisample_advanced</remarks>
		RenderbufferStorageSamplesAmd = 0x91B2,

		/// <summary>
		/// Specifies a compute shader stage.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_compute_shader</remarks>
		ComputeShader = 0x91B9,

		/// <summary>
		/// Specifies the maximum number of uniform blocks in compute shaders.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_compute_shader</remarks>
		MaxComputeUniformBlocks = 0x91BB,

		/// <summary>
		/// Specifies the maximum number of texture image units in compute shaders.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_compute_shader</remarks>
		MaxComputeTextureImageUnits = 0x91BC,

		/// <summary>
		/// Specifies the maximum number of work groups for compute shaders.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_compute_shader</remarks>
		MaxComputeWorkGroupCount = 0x91BE,

		/// <summary>
		/// Specifies the maximum size of a work group for compute shaders.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_compute_shader</remarks>
		MaxComputeWorkGroupSize = 0x91BF,

		/// <summary>
		/// Specifies a shader binary format (DMP extension).
		/// </summary>
		/// <remarks></remarks>
		ShaderBinaryDmp = 0x9250,

		/// <summary>
		/// Specifies a shader binary format (FJ extension).
		/// </summary>
		/// <remarks></remarks>
		GccsoShaderBinaryFj = 0x9260,

		/// <summary>
		/// Specifies a compressed single-channel texture format using EAC.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_ES3_compatibility</remarks>
		CompressedR11Eac = 0x9270,

		/// <summary>
		/// Specifies a compressed single-channel texture format using EAC (OES extension).
		/// </summary>
		/// <remarks></remarks>
		CompressedR11EacOes = 0x9270,

		/// <summary>
		/// Specifies a signed compressed single-channel texture format using EAC.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_ES3_compatibility</remarks>
		CompressedSignedR11Eac = 0x9271,

		/// <summary>
		/// Specifies a signed compressed single-channel texture format using EAC (OES extension).
		/// </summary>
		/// <remarks></remarks>
		CompressedSignedR11EacOes = 0x9271,

		/// <summary>
		/// Specifies a compressed dual-channel texture format using EAC.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_ES3_compatibility</remarks>
		CompressedRg11Eac = 0x9272,

		/// <summary>
		/// Specifies a compressed dual-channel texture format using EAC (OES extension).
		/// </summary>
		/// <remarks></remarks>
		CompressedRg11EacOes = 0x9272,

		/// <summary>
		/// Specifies a signed compressed dual-channel texture format using EAC.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_ES3_compatibility</remarks>
		CompressedSignedRg11Eac = 0x9273,

		/// <summary>
		/// Specifies a signed compressed dual-channel texture format using EAC (OES extension).
		/// </summary>
		/// <remarks></remarks>
		CompressedSignedRg11EacOes = 0x9273,

		/// <summary>
		/// Specifies a compressed RGB texture format using ETC2.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_ES3_compatibility</remarks>
		CompressedRgb8Etc2 = 0x9274,

		/// <summary>
		/// Specifies a compressed RGB texture format using ETC2 (OES extension).
		/// </summary>
		/// <remarks></remarks>
		CompressedRgb8Etc2Oes = 0x9274,

		/// <summary>
		/// Specifies a compressed sRGB texture format using ETC2.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_ES3_compatibility</remarks>
		CompressedSrgb8Etc2 = 0x9275,

		/// <summary>
		/// Specifies a compressed sRGB texture format using ETC2 (OES extension).
		/// </summary>
		/// <remarks></remarks>
		CompressedSrgb8Etc2Oes = 0x9275,

		/// <summary>
		/// Specifies a compressed RGB texture with punchthrough alpha using ETC2.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_ES3_compatibility</remarks>
		CompressedRgb8PunchthroughAlpha1Etc2 = 0x9276,

		/// <summary>
		/// Specifies a compressed RGB texture with punchthrough alpha using ETC2 (OES extension).
		/// </summary>
		/// <remarks></remarks>
		CompressedRgb8PunchthroughAlpha1Etc2Oes = 0x9276,

		/// <summary>
		/// Specifies a compressed sRGB texture with punchthrough alpha using ETC2.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_ES3_compatibility</remarks>
		CompressedSrgb8PunchthroughAlpha1Etc2 = 0x9277,

		/// <summary>
		/// Specifies a compressed sRGB texture with punchthrough alpha using ETC2 (OES extension).
		/// </summary>
		/// <remarks></remarks>
		CompressedSrgb8PunchthroughAlpha1Etc2Oes = 0x9277,

		/// <summary>
		/// Specifies a compressed RGBA texture format using ETC2 and EAC.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_ES3_compatibility</remarks>
		CompressedRgba8Etc2Eac = 0x9278,

		/// <summary>
		/// Specifies a compressed RGBA texture format using ETC2 and EAC (OES extension).
		/// </summary>
		/// <remarks></remarks>
		CompressedRgba8Etc2EacOes = 0x9278,

		/// <summary>
		/// Specifies a compressed sRGB texture format with alpha using ETC2 and EAC.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_ES3_compatibility</remarks>
		CompressedSrgb8Alpha8Etc2Eac = 0x9279,

		/// <summary>
		/// Specifies a compressed sRGB texture format with alpha using ETC2 and EAC (OES extension).
		/// </summary>
		/// <remarks></remarks>
		CompressedSrgb8Alpha8Etc2EacOes = 0x9279,

		/// <summary>
		/// Specifies an atomic counter buffer object.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query<br/>GL_ARB_shader_atomic_counters</remarks>
		AtomicCounterBuffer = 0x92C0,

		/// <summary>
		/// Specifies the binding point for atomic counter buffers.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_atomic_counters</remarks>
		AtomicCounterBufferBinding = 0x92C1,

		/// <summary>
		/// Specifies the data size of atomic counter buffers.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_atomic_counters</remarks>
		AtomicCounterBufferDataSize = 0x92C4,

		/// <summary>
		/// Specifies the number of active atomic counters in a buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_atomic_counters</remarks>
		AtomicCounterBufferActiveAtomicCounters = 0x92C5,

		/// <summary>
		/// Specifies the indices of active atomic counters in a buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_atomic_counters</remarks>
		AtomicCounterBufferActiveAtomicCounterIndices = 0x92C6,

		/// <summary>
		/// Indicates if an atomic counter buffer is referenced by a vertex shader.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_atomic_counters</remarks>
		AtomicCounterBufferReferencedByVertexShader = 0x92C7,

		/// <summary>
		/// Indicates if an atomic counter buffer is referenced by a tessellation control shader.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_atomic_counters</remarks>
		AtomicCounterBufferReferencedByTessControlShader = 0x92C8,

		/// <summary>
		/// Indicates if an atomic counter buffer is referenced by a tessellation evaluation shader.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_atomic_counters</remarks>
		AtomicCounterBufferReferencedByTessEvaluationShader = 0x92C9,

		/// <summary>
		/// Indicates if an atomic counter buffer is referenced by a geometry shader.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_atomic_counters</remarks>
		AtomicCounterBufferReferencedByGeometryShader = 0x92CA,

		/// <summary>
		/// Indicates if an atomic counter buffer is referenced by a fragment shader.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_atomic_counters</remarks>
		AtomicCounterBufferReferencedByFragmentShader = 0x92CB,

		/// <summary>
		/// Specifies the maximum number of atomic counters in vertex shaders.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_atomic_counters</remarks>
		MaxVertexAtomicCounters = 0x92D2,

		/// <summary>
		/// Specifies the maximum number of atomic counters in tessellation control shaders.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_atomic_counters</remarks>
		MaxTessControlAtomicCounters = 0x92D3,

		/// <summary>
		/// Specifies the maximum number of atomic counters in tessellation evaluation shaders.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_atomic_counters</remarks>
		MaxTessEvaluationAtomicCounters = 0x92D4,

		/// <summary>
		/// Specifies the maximum number of atomic counters in geometry shaders.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_atomic_counters</remarks>
		MaxGeometryAtomicCounters = 0x92D5,

		/// <summary>
		/// Specifies the maximum number of atomic counters in fragment shaders.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_atomic_counters</remarks>
		MaxFragmentAtomicCounters = 0x92D6,

		/// <summary>
		/// Specifies the maximum number of atomic counters across all shader stages.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_atomic_counters</remarks>
		MaxCombinedAtomicCounters = 0x92D7,

		/// <summary>
		/// Specifies the number of active atomic counter buffers.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_atomic_counters</remarks>
		ActiveAtomicCounterBuffers = 0x92D9,

		/// <summary>
		/// Specifies the atomic counter buffer index in a uniform.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_shader_atomic_counters</remarks>
		UniformAtomicCounterBufferIndex = 0x92DA,

		/// <summary>
		/// Enables or disables debug output messages.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_KHR_debug</remarks>
		DebugOutput = 0x92E0,

		/// <summary>
		/// Specifies a uniform variable in a shader program.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		Uniform = 0x92E1,

		/// <summary>
		/// Specifies a uniform block in a shader program.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		UniformBlock = 0x92E2,

		/// <summary>
		/// Specifies input to a shader program.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		ProgramInput = 0x92E3,

		/// <summary>
		/// Specifies output from a shader program.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		ProgramOutput = 0x92E4,

		/// <summary>
		/// Specifies a buffer variable in a shader program.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		BufferVariable = 0x92E5,

		/// <summary>
		/// Specifies a shader storage block in a shader program.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		ShaderStorageBlock = 0x92E6,

		/// <summary>
		/// Specifies whether a variable is per-patch.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		IsPerPatch = 0x92E7,

		/// <summary>
		/// Specifies a subroutine in a vertex shader.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		VertexSubroutine = 0x92E8,

		/// <summary>
		/// Specifies a subroutine in a tessellation control shader.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		TessControlSubroutine = 0x92E9,

		/// <summary>
		/// Specifies a subroutine in a tessellation evaluation shader.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		TessEvaluationSubroutine = 0x92EA,

		/// <summary>
		/// Specifies a subroutine in a geometry shader.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		GeometrySubroutine = 0x92EB,

		/// <summary>
		/// Specifies a subroutine in a fragment shader.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		FragmentSubroutine = 0x92EC,

		/// <summary>
		/// Specifies a subroutine in a compute shader.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		ComputeSubroutine = 0x92ED,

		/// <summary>
		/// Specifies a uniform for a vertex shader subroutine.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		VertexSubroutineUniform = 0x92EE,

		/// <summary>
		/// Specifies a uniform for a tessellation control shader subroutine.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		TessControlSubroutineUniform = 0x92EF,

		/// <summary>
		/// Specifies a uniform for a tessellation evaluation shader subroutine.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		TessEvaluationSubroutineUniform = 0x92F0,

		/// <summary>
		/// Specifies a uniform for a geometry shader subroutine.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		GeometrySubroutineUniform = 0x92F1,

		/// <summary>
		/// Specifies a uniform for a fragment shader subroutine.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		FragmentSubroutineUniform = 0x92F2,

		/// <summary>
		/// Specifies a uniform for a compute shader subroutine.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		ComputeSubroutineUniform = 0x92F3,

		/// <summary>
		/// Specifies a varying variable captured during transform feedback.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		TransformFeedbackVarying = 0x92F4,

		/// <summary>
		/// Specifies the number of active resources in a program.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		ActiveResources = 0x92F5,

		/// <summary>
		/// Specifies the maximum length of a resource name.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		MaxNameLength = 0x92F6,

		/// <summary>
		/// Specifies the maximum number of active variables in a program.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		MaxNumActiveVariables = 0x92F7,

		/// <summary>
		/// Specifies the maximum number of compatible subroutines.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		MaxNumCompatibleSubroutines = 0x92F8,

		/// <summary>
		/// Specifies the length of a resource name.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		NameLength = 0x92F9,

		/// <summary>
		/// Specifies the data type of a variable or attribute.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		Type = 0x92FA,

		/// <summary>
		/// Specifies the size of an array.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		ArraySize = 0x92FB,

		/// <summary>
		/// Specifies the offset of a variable within a block.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		Offset = 0x92FC,

		/// <summary>
		/// Specifies the index of a block.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		BlockIndex = 0x92FD,

		/// <summary>
		/// Specifies the stride between elements in an array.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		ArrayStride = 0x92FE,

		/// <summary>
		/// Specifies the stride between columns in a matrix.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		MatrixStride = 0x92FF,

		/// <summary>
		/// Indicates if a matrix is stored in row-major order.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		IsRowMajor = 0x9300,

		/// <summary>
		/// Specifies the index of an atomic counter buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		AtomicCounterBufferIndex = 0x9301,

		/// <summary>
		/// Specifies the binding point of a buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		BufferBinding = 0x9302,

		/// <summary>
		/// Specifies the size of the data in a buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		BufferDataSize = 0x9303,

		/// <summary>
		/// Specifies the number of active variables.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		NumActiveVariables = 0x9304,

		/// <summary>
		/// Specifies the list of active variables.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		ActiveVariables = 0x9305,

		/// <summary>
		/// Indicates if a resource is referenced by the vertex shader.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		ReferencedByVertexShader = 0x9306,

		/// <summary>
		/// Indicates if a resource is referenced by the tessellation control shader.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		ReferencedByTessControlShader = 0x9307,

		/// <summary>
		/// Indicates if a resource is referenced by the tessellation evaluation shader.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		ReferencedByTessEvaluationShader = 0x9308,

		/// <summary>
		/// Indicates if a resource is referenced by the geometry shader.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		ReferencedByGeometryShader = 0x9309,

		/// <summary>
		/// Indicates if a resource is referenced by the fragment shader.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		ReferencedByFragmentShader = 0x930A,

		/// <summary>
		/// Indicates if a resource is referenced by the compute shader.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		ReferencedByComputeShader = 0x930B,

		/// <summary>
		/// Specifies the size of a top-level array.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		TopLevelArraySize = 0x930C,

		/// <summary>
		/// Specifies the stride between elements in a top-level array.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		TopLevelArrayStride = 0x930D,

		/// <summary>
		/// Specifies the location of a variable in a program.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		Location = 0x930E,

		/// <summary>
		/// Specifies the location index of a variable.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_program_interface_query</remarks>
		LocationIndex = 0x930F,

		/// <summary>
		/// Specifies the default width of the framebuffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_no_attachments</remarks>
		FramebufferDefaultWidth = 0x9310,

		/// <summary>
		/// Specifies the default height of the framebuffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_no_attachments</remarks>
		FramebufferDefaultHeight = 0x9311,

		/// <summary>
		/// Specifies the default number of layers in the framebuffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_no_attachments</remarks>
		FramebufferDefaultLayers = 0x9312,

		/// <summary>
		/// Specifies the default number of samples in the framebuffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_no_attachments</remarks>
		FramebufferDefaultSamples = 0x9313,

		/// <summary>
		/// Specifies if fixed sample locations are used in the default framebuffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_no_attachments</remarks>
		FramebufferDefaultFixedSampleLocations = 0x9314,

		/// <summary>
		/// Specifies the maximum width of framebuffers.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_no_attachments</remarks>
		MaxFramebufferWidth = 0x9315,

		/// <summary>
		/// Specifies the maximum height of framebuffers.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_no_attachments</remarks>
		MaxFramebufferHeight = 0x9316,

		/// <summary>
		/// Specifies the maximum number of layers in framebuffers.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_no_attachments</remarks>
		MaxFramebufferLayers = 0x9317,

		/// <summary>
		/// Specifies the maximum number of samples in framebuffers.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_framebuffer_no_attachments</remarks>
		MaxFramebufferSamples = 0x9318,

		/// <summary>
		/// Indicates if programmable sample locations are supported (ARB extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARB_sample_locations</remarks>
		ProgrammableSampleLocationArb = 0x9341,

		/// <summary>
		/// Specifies the component of a location variable.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_enhanced_layouts</remarks>
		LocationComponent = 0x934A,

		/// <summary>
		/// Specifies the buffer index for transform feedback.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_enhanced_layouts</remarks>
		TransformFeedbackBufferIndex = 0x934B,

		/// <summary>
		/// Specifies the stride of a transform feedback buffer.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_enhanced_layouts</remarks>
		TransformFeedbackBufferStride = 0x934C,

		/// <summary>
		/// Specifies the clip space depth range from -1 to 1.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_clip_control</remarks>
		NegativeOneToOne = 0x935E,

		/// <summary>
		/// Specifies the clip space depth range from 0 to 1.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_clip_control</remarks>
		ZeroToOne = 0x935F,

		/// <summary>
		/// Clears a texture to a specified value.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_clear_texture</remarks>
		ClearTexture = 0x9365,

		/// <summary>
		/// Specifies the number of supported sample counts.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.<br/><br/>Used by Extensions:<br/>GL_ARB_internalformat_query<br/>GL_ARB_internalformat_query2</remarks>
		NumSampleCounts = 0x9380,

		/// <summary>
		/// Specifies a compressed RGBA texture format with ASTC 4x4.
		/// </summary>
		/// <remarks>Supported Versions:<br/>GL ES 3.2</remarks>
		CompressedRgbaAstc4X4 = 0x93B0,

		/// <summary>
		/// Specifies a compressed RGBA texture format with ASTC 4x4 (KHR extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_KHR_texture_compression_astc_hdr<br/>GL_KHR_texture_compression_astc_ldr<br/>GL_OES_texture_compression_astc</remarks>
		CompressedRgbaAstc4X4Khr = 0x93B0,

		/// <summary>
		/// Specifies a compressed RGBA texture format with ASTC 5x4.
		/// </summary>
		/// <remarks>Supported Versions:<br/>GL ES 3.2</remarks>
		CompressedRgbaAstc5X4 = 0x93B1,

		/// <summary>
		/// Specifies a compressed RGBA texture format with ASTC 5x4 (KHR extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_KHR_texture_compression_astc_hdr<br/>GL_KHR_texture_compression_astc_ldr<br/>GL_OES_texture_compression_astc</remarks>
		CompressedRgbaAstc5X4Khr = 0x93B1,

		/// <summary>
		/// Specifies a compressed RGBA texture format with ASTC 5x5.
		/// </summary>
		/// <remarks>Supported Versions:<br/>GL ES 3.2</remarks>
		CompressedRgbaAstc5X5 = 0x93B2,

		/// <summary>
		/// Specifies a compressed RGBA texture format with ASTC 5x5 (KHR extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_KHR_texture_compression_astc_hdr<br/>GL_KHR_texture_compression_astc_ldr<br/>GL_OES_texture_compression_astc</remarks>
		CompressedRgbaAstc5X5Khr = 0x93B2,

		/// <summary>
		/// Specifies a compressed RGBA texture format with ASTC 6x5.
		/// </summary>
		/// <remarks>Supported Versions:<br/>GL ES 3.2</remarks>
		CompressedRgbaAstc6X5 = 0x93B3,

		/// <summary>
		/// Specifies a compressed RGBA texture format with ASTC 6x5 (KHR extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_KHR_texture_compression_astc_hdr<br/>GL_KHR_texture_compression_astc_ldr<br/>GL_OES_texture_compression_astc</remarks>
		CompressedRgbaAstc6X5Khr = 0x93B3,

		/// <summary>
		/// Specifies a compressed RGBA texture format with ASTC 6x6.
		/// </summary>
		/// <remarks>Supported Versions:<br/>GL ES 3.2</remarks>
		CompressedRgbaAstc6X6 = 0x93B4,

		/// <summary>
		/// Specifies a compressed RGBA texture format with ASTC 6x6 (KHR extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_KHR_texture_compression_astc_hdr<br/>GL_KHR_texture_compression_astc_ldr<br/>GL_OES_texture_compression_astc</remarks>
		CompressedRgbaAstc6X6Khr = 0x93B4,

		/// <summary>
		/// Specifies a compressed RGBA texture format with ASTC 8x5.
		/// </summary>
		/// <remarks>Supported Versions:<br/>GL ES 3.2</remarks>
		CompressedRgbaAstc8X5 = 0x93B5,

		/// <summary>
		/// Specifies a compressed RGBA texture format with ASTC 8x5 (KHR extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_KHR_texture_compression_astc_hdr<br/>GL_KHR_texture_compression_astc_ldr<br/>GL_OES_texture_compression_astc</remarks>
		CompressedRgbaAstc8X5Khr = 0x93B5,

		/// <summary>
		/// Specifies a compressed RGBA texture format with ASTC 8x6.
		/// </summary>
		/// <remarks>Supported Versions:<br/>GL ES 3.2</remarks>
		CompressedRgbaAstc8X6 = 0x93B6,

		/// <summary>
		/// Specifies a compressed RGBA texture format with ASTC 8x6 (KHR extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_KHR_texture_compression_astc_hdr<br/>GL_KHR_texture_compression_astc_ldr<br/>GL_OES_texture_compression_astc</remarks>
		CompressedRgbaAstc8X6Khr = 0x93B6,

		/// <summary>
		/// Specifies a compressed RGBA texture format with ASTC 8x8.
		/// </summary>
		/// <remarks>Supported Versions:<br/>GL ES 3.2</remarks>
		CompressedRgbaAstc8X8 = 0x93B7,

		/// <summary>
		/// Specifies a compressed RGBA texture format with ASTC 8x8 (KHR extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_KHR_texture_compression_astc_hdr<br/>GL_KHR_texture_compression_astc_ldr<br/>GL_OES_texture_compression_astc</remarks>
		CompressedRgbaAstc8X8Khr = 0x93B7,

		/// <summary>
		/// Specifies a compressed RGBA texture format with ASTC 10x5.
		/// </summary>
		/// <remarks>Supported Versions:<br/>GL ES 3.2</remarks>
		CompressedRgbaAstc10X5 = 0x93B8,

		/// <summary>
		/// Specifies a compressed RGBA texture format with ASTC 10x5 (KHR extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_KHR_texture_compression_astc_hdr<br/>GL_KHR_texture_compression_astc_ldr<br/>GL_OES_texture_compression_astc</remarks>
		CompressedRgbaAstc10X5Khr = 0x93B8,

		/// <summary>
		/// Specifies a compressed RGBA texture format with ASTC 10x6.
		/// </summary>
		/// <remarks>Supported Versions:<br/>GL ES 3.2</remarks>
		CompressedRgbaAstc10X6 = 0x93B9,

		/// <summary>
		/// Specifies a compressed RGBA texture format with ASTC 10x6 (KHR extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_KHR_texture_compression_astc_hdr<br/>GL_KHR_texture_compression_astc_ldr<br/>GL_OES_texture_compression_astc</remarks>
		CompressedRgbaAstc10X6Khr = 0x93B9,

		/// <summary>
		/// Specifies a compressed RGBA texture format with ASTC 10x8.
		/// </summary>
		/// <remarks>Supported Versions:<br/>GL ES 3.2</remarks>
		CompressedRgbaAstc10X8 = 0x93BA,

		/// <summary>
		/// Specifies a compressed RGBA texture format with ASTC 10x8 (KHR extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_KHR_texture_compression_astc_hdr<br/>GL_KHR_texture_compression_astc_ldr<br/>GL_OES_texture_compression_astc</remarks>
		CompressedRgbaAstc10X8Khr = 0x93BA,

		/// <summary>
		/// Specifies a compressed RGBA texture format with ASTC 10x10.
		/// </summary>
		/// <remarks>Supported Versions:<br/>GL ES 3.2</remarks>
		CompressedRgbaAstc10X10 = 0x93BB,

		/// <summary>
		/// Specifies a compressed RGBA texture format with ASTC 10x10 (KHR extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_KHR_texture_compression_astc_hdr<br/>GL_KHR_texture_compression_astc_ldr<br/>GL_OES_texture_compression_astc</remarks>
		CompressedRgbaAstc10X10Khr = 0x93BB,

		/// <summary>
		/// Specifies a compressed RGBA texture format with ASTC 12x10.
		/// </summary>
		/// <remarks>Supported Versions:<br/>GL ES 3.2</remarks>
		CompressedRgbaAstc12X10 = 0x93BC,

		/// <summary>
		/// Specifies a compressed RGBA texture format with ASTC 12x10 (KHR extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_KHR_texture_compression_astc_hdr<br/>GL_KHR_texture_compression_astc_ldr<br/>GL_OES_texture_compression_astc</remarks>
		CompressedRgbaAstc12X10Khr = 0x93BC,

		/// <summary>
		/// Specifies a compressed RGBA texture format with ASTC 12x12.
		/// </summary>
		/// <remarks>Supported Versions:<br/>GL ES 3.2</remarks>
		CompressedRgbaAstc12X12 = 0x93BD,

		/// <summary>
		/// Specifies a compressed RGBA texture format with ASTC 12x12 (KHR extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_KHR_texture_compression_astc_hdr<br/>GL_KHR_texture_compression_astc_ldr<br/>GL_OES_texture_compression_astc</remarks>
		CompressedRgbaAstc12X12Khr = 0x93BD,

		/// <summary>
		/// Specifies a compressed RGBA texture format with ASTC 3x3x3 (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_texture_compression_astc</remarks>
		CompressedRgbaAstc3X3X3Oes = 0x93C0,

		/// <summary>
		/// Specifies a compressed RGBA texture format with ASTC 4x3x3 (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_texture_compression_astc</remarks>
		CompressedRgbaAstc4X3X3Oes = 0x93C1,

		/// <summary>
		/// Specifies a compressed RGBA texture format with ASTC 4x4x3 (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_texture_compression_astc</remarks>
		CompressedRgbaAstc4X4X3Oes = 0x93C2,

		/// <summary>
		/// Specifies a compressed RGBA texture format with ASTC 4x4x4 (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_texture_compression_astc</remarks>
		CompressedRgbaAstc4X4X4Oes = 0x93C3,

		/// <summary>
		/// Specifies a compressed RGBA texture format with ASTC 5x4x4 (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_texture_compression_astc</remarks>
		CompressedRgbaAstc5X4X4Oes = 0x93C4,

		/// <summary>
		/// Specifies a compressed RGBA texture format with ASTC 5x5x4 (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_texture_compression_astc</remarks>
		CompressedRgbaAstc5X5X4Oes = 0x93C5,

		/// <summary>
		/// Specifies a compressed RGBA texture format with ASTC 5x5x5 (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_texture_compression_astc</remarks>
		CompressedRgbaAstc5X5X5Oes = 0x93C6,

		/// <summary>
		/// Specifies a compressed RGBA texture format with ASTC 6x5x5 (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_texture_compression_astc</remarks>
		CompressedRgbaAstc6X5X5Oes = 0x93C7,

		/// <summary>
		/// Specifies a compressed RGBA texture format with ASTC 6x6x5 (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_texture_compression_astc</remarks>
		CompressedRgbaAstc6X6X5Oes = 0x93C8,

		/// <summary>
		/// Specifies a compressed RGBA texture format with ASTC 6x6x6 (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_texture_compression_astc</remarks>
		CompressedRgbaAstc6X6X6Oes = 0x93C9,

		/// <summary>
		/// Specifies a compressed sRGB alpha texture format with ASTC 4x4.
		/// </summary>
		/// <remarks>Supported Versions:<br/>GL ES 3.2</remarks>
		CompressedSrgb8Alpha8Astc4X4 = 0x93D0,

		/// <summary>
		/// Specifies a compressed sRGB alpha texture format with ASTC 4x4 (KHR extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_KHR_texture_compression_astc_hdr<br/>GL_KHR_texture_compression_astc_ldr<br/>GL_OES_texture_compression_astc</remarks>
		CompressedSrgb8Alpha8Astc4X4Khr = 0x93D0,

		/// <summary>
		/// Specifies a compressed sRGB alpha texture format with ASTC 5x4.
		/// </summary>
		/// <remarks>Supported Versions:<br/>GL ES 3.2</remarks>
		CompressedSrgb8Alpha8Astc5X4 = 0x93D1,

		/// <summary>
		/// Specifies a compressed sRGB alpha texture format with ASTC 5x4 (KHR extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_KHR_texture_compression_astc_hdr<br/>GL_KHR_texture_compression_astc_ldr<br/>GL_OES_texture_compression_astc</remarks>
		CompressedSrgb8Alpha8Astc5X4Khr = 0x93D1,

		/// <summary>
		/// Specifies a compressed sRGB alpha texture format with ASTC 5x5.
		/// </summary>
		/// <remarks>Supported Versions:<br/>GL ES 3.2</remarks>
		CompressedSrgb8Alpha8Astc5X5 = 0x93D2,

		/// <summary>
		/// Specifies a compressed sRGB alpha texture format with ASTC 5x5 (KHR extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_KHR_texture_compression_astc_hdr<br/>GL_KHR_texture_compression_astc_ldr<br/>GL_OES_texture_compression_astc</remarks>
		CompressedSrgb8Alpha8Astc5X5Khr = 0x93D2,

		/// <summary>
		/// Specifies a compressed sRGB alpha texture format with ASTC 6x5.
		/// </summary>
		/// <remarks>Supported Versions:<br/>GL ES 3.2</remarks>
		CompressedSrgb8Alpha8Astc6X5 = 0x93D3,

		/// <summary>
		/// Specifies a compressed sRGB alpha texture format with ASTC 6x5 (KHR extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_KHR_texture_compression_astc_hdr<br/>GL_KHR_texture_compression_astc_ldr<br/>GL_OES_texture_compression_astc</remarks>
		CompressedSrgb8Alpha8Astc6X5Khr = 0x93D3,

		/// <summary>
		/// Specifies a compressed sRGB alpha texture format with ASTC 6x6.
		/// </summary>
		/// <remarks>Supported Versions:<br/>GL ES 3.2</remarks>
		CompressedSrgb8Alpha8Astc6X6 = 0x93D4,

		/// <summary>
		/// Specifies a compressed sRGB alpha texture format with ASTC 6x6 (KHR extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_KHR_texture_compression_astc_hdr<br/>GL_KHR_texture_compression_astc_ldr<br/>GL_OES_texture_compression_astc</remarks>
		CompressedSrgb8Alpha8Astc6X6Khr = 0x93D4,

		/// <summary>
		/// Specifies a compressed sRGB alpha texture format with ASTC 8x5.
		/// </summary>
		/// <remarks>Supported Versions:<br/>GL ES 3.2</remarks>
		CompressedSrgb8Alpha8Astc8X5 = 0x93D5,

		/// <summary>
		/// Specifies a compressed sRGB alpha texture format with ASTC 8x5 (KHR extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_KHR_texture_compression_astc_hdr<br/>GL_KHR_texture_compression_astc_ldr<br/>GL_OES_texture_compression_astc</remarks>
		CompressedSrgb8Alpha8Astc8X5Khr = 0x93D5,

		/// <summary>
		/// Specifies a compressed sRGB alpha texture format with ASTC 8x6.
		/// </summary>
		/// <remarks>Supported Versions:<br/>GL ES 3.2</remarks>
		CompressedSrgb8Alpha8Astc8X6 = 0x93D6,

		/// <summary>
		/// Specifies a compressed sRGB alpha texture format with ASTC 8x6 (KHR extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_KHR_texture_compression_astc_hdr<br/>GL_KHR_texture_compression_astc_ldr<br/>GL_OES_texture_compression_astc</remarks>
		CompressedSrgb8Alpha8Astc8X6Khr = 0x93D6,

		/// <summary>
		/// Specifies a compressed sRGB alpha texture format with ASTC 8x8.
		/// </summary>
		/// <remarks>Supported Versions:<br/>GL ES 3.2</remarks>
		CompressedSrgb8Alpha8Astc8X8 = 0x93D7,

		/// <summary>
		/// Specifies a compressed sRGB alpha texture format with ASTC 8x8 (KHR extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_KHR_texture_compression_astc_hdr<br/>GL_KHR_texture_compression_astc_ldr<br/>GL_OES_texture_compression_astc</remarks>
		CompressedSrgb8Alpha8Astc8X8Khr = 0x93D7,

		/// <summary>
		/// Specifies a compressed sRGB alpha texture format with ASTC 10x5.
		/// </summary>
		/// <remarks>Supported Versions:<br/>GL ES 3.2</remarks>
		CompressedSrgb8Alpha8Astc10X5 = 0x93D8,

		/// <summary>
		/// Specifies a compressed sRGB alpha texture format with ASTC 10x5 (KHR extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_KHR_texture_compression_astc_hdr<br/>GL_KHR_texture_compression_astc_ldr<br/>GL_OES_texture_compression_astc</remarks>
		CompressedSrgb8Alpha8Astc10X5Khr = 0x93D8,

		/// <summary>
		/// Specifies a compressed sRGB alpha texture format with ASTC 10x6.
		/// </summary>
		/// <remarks>Supported Versions:<br/>GL ES 3.2</remarks>
		CompressedSrgb8Alpha8Astc10X6 = 0x93D9,

		/// <summary>
		/// Specifies a compressed sRGB alpha texture format with ASTC 10x6 (KHR extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_KHR_texture_compression_astc_hdr<br/>GL_KHR_texture_compression_astc_ldr<br/>GL_OES_texture_compression_astc</remarks>
		CompressedSrgb8Alpha8Astc10X6Khr = 0x93D9,

		/// <summary>
		/// Specifies a compressed sRGB alpha texture format with ASTC 10x8.
		/// </summary>
		/// <remarks>Supported Versions:<br/>GL ES 3.2</remarks>
		CompressedSrgb8Alpha8Astc10X8 = 0x93DA,

		/// <summary>
		/// Specifies a compressed sRGB alpha texture format with ASTC 10x8 (KHR extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_KHR_texture_compression_astc_hdr<br/>GL_KHR_texture_compression_astc_ldr<br/>GL_OES_texture_compression_astc</remarks>
		CompressedSrgb8Alpha8Astc10X8Khr = 0x93DA,

		/// <summary>
		/// Specifies a compressed sRGB alpha texture format with ASTC 10x10.
		/// </summary>
		/// <remarks>Supported Versions:<br/>GL ES 3.2</remarks>
		CompressedSrgb8Alpha8Astc10X10 = 0x93DB,

		/// <summary>
		/// Specifies a compressed sRGB alpha texture format with ASTC 10x10 (KHR extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_KHR_texture_compression_astc_hdr<br/>GL_KHR_texture_compression_astc_ldr<br/>GL_OES_texture_compression_astc</remarks>
		CompressedSrgb8Alpha8Astc10X10Khr = 0x93DB,

		/// <summary>
		/// Specifies a compressed sRGB alpha texture format with ASTC 12x10.
		/// </summary>
		/// <remarks>Supported Versions:<br/>GL ES 3.2</remarks>
		CompressedSrgb8Alpha8Astc12X10 = 0x93DC,

		/// <summary>
		/// Specifies a compressed sRGB alpha texture format with ASTC 12x10 (KHR extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_KHR_texture_compression_astc_hdr<br/>GL_KHR_texture_compression_astc_ldr<br/>GL_OES_texture_compression_astc</remarks>
		CompressedSrgb8Alpha8Astc12X10Khr = 0x93DC,

		/// <summary>
		/// Specifies a compressed sRGB alpha texture format with ASTC 12x12.
		/// </summary>
		/// <remarks>Supported Versions:<br/>GL ES 3.2</remarks>
		CompressedSrgb8Alpha8Astc12X12 = 0x93DD,

		/// <summary>
		/// Specifies a compressed sRGB alpha texture format with ASTC 12x12 (KHR extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_KHR_texture_compression_astc_hdr<br/>GL_KHR_texture_compression_astc_ldr<br/>GL_OES_texture_compression_astc</remarks>
		CompressedSrgb8Alpha8Astc12X12Khr = 0x93DD,

		/// <summary>
		/// Specifies a compressed sRGB alpha texture format with ASTC 3x3x3 (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_texture_compression_astc</remarks>
		CompressedSrgb8Alpha8Astc3X3X3Oes = 0x93E0,

		/// <summary>
		/// Specifies a compressed sRGB alpha texture format with ASTC 4x3x3 (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_texture_compression_astc</remarks>
		CompressedSrgb8Alpha8Astc4X3X3Oes = 0x93E1,

		/// <summary>
		/// Specifies a compressed sRGB alpha texture format with ASTC 4x4x3 (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_texture_compression_astc</remarks>
		CompressedSrgb8Alpha8Astc4X4X3Oes = 0x93E2,

		/// <summary>
		/// Specifies a compressed sRGB alpha texture format with ASTC 4x4x4 (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_texture_compression_astc</remarks>
		CompressedSrgb8Alpha8Astc4X4X4Oes = 0x93E3,

		/// <summary>
		/// Specifies a compressed sRGB alpha texture format with ASTC 5x4x4 (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_texture_compression_astc</remarks>
		CompressedSrgb8Alpha8Astc5X4X4Oes = 0x93E4,

		/// <summary>
		/// Specifies a compressed sRGB alpha texture format with ASTC 5x5x4 (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_texture_compression_astc</remarks>
		CompressedSrgb8Alpha8Astc5X5X4Oes = 0x93E5,

		/// <summary>
		/// Specifies a compressed sRGB alpha texture format with ASTC 5x5x5 (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_texture_compression_astc</remarks>
		CompressedSrgb8Alpha8Astc5X5X5Oes = 0x93E6,

		/// <summary>
		/// Specifies a compressed sRGB alpha texture format with ASTC 6x5x5 (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_texture_compression_astc</remarks>
		CompressedSrgb8Alpha8Astc6X5X5Oes = 0x93E7,

		/// <summary>
		/// Specifies a compressed sRGB alpha texture format with ASTC 6x6x5 (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_texture_compression_astc</remarks>
		CompressedSrgb8Alpha8Astc6X6X5Oes = 0x93E8,

		/// <summary>
		/// Specifies a compressed sRGB alpha texture format with ASTC 6x6x6 (OES extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OES_texture_compression_astc</remarks>
		CompressedSrgb8Alpha8Astc6X6X6Oes = 0x93E9,

		/// <summary>
		/// Specifies a layout where depth is read-only and stencil is an attachment (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_semaphore</remarks>
		LayoutDepthReadOnlyStencilAttachmentExt = 0x9530,

		/// <summary>
		/// Specifies a layout where depth is an attachment and stencil is read-only (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_semaphore</remarks>
		LayoutDepthAttachmentStencilReadOnlyExt = 0x9531,

		/// <summary>
		/// Specifies the SPIR-V shader binary format.
		/// </summary>
		/// <remarks>Supported Versions: All GL ES versions.</remarks>
		ShaderBinaryFormatSpirV = 0x9551,

		/// <summary>
		/// Specifies the tiling mode for textures (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_memory_object</remarks>
		TextureTilingExt = 0x9580,

		/// <summary>
		/// Indicates whether a memory object is dedicated (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_memory_object</remarks>
		DedicatedMemoryObjectExt = 0x9581,

		/// <summary>
		/// Specifies an opaque file descriptor handle type (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_memory_object_fd<br/>GL_EXT_semaphore_fd</remarks>
		HandleTypeOpaqueFdExt = 0x9586,

		/// <summary>
		/// Specifies an opaque Windows handle type (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_memory_object_win32<br/>GL_EXT_semaphore_win32</remarks>
		HandleTypeOpaqueWin32Ext = 0x9587,

		/// <summary>
		/// Specifies an opaque Windows Kernel-Mode handle type (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_memory_object_win32<br/>GL_EXT_semaphore_win32</remarks>
		HandleTypeOpaqueWin32KmtExt = 0x9588,

		/// <summary>
		/// Specifies a D3D12 tile pool handle type (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_memory_object_win32</remarks>
		HandleTypeD3D12TilepoolExt = 0x9589,

		/// <summary>
		/// Specifies a D3D12 resource handle type (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_memory_object_win32</remarks>
		HandleTypeD3D12ResourceExt = 0x958A,

		/// <summary>
		/// Specifies a D3D11 image handle type (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_memory_object_win32</remarks>
		HandleTypeD3D11ImageExt = 0x958B,

		/// <summary>
		/// Specifies a D3D11 image Kernel-Mode handle type (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_memory_object_win32</remarks>
		HandleTypeD3D11ImageKmtExt = 0x958C,

		/// <summary>
		/// Specifies a general layout for resources (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_semaphore</remarks>
		LayoutGeneralExt = 0x958D,

		/// <summary>
		/// Specifies a layout for color attachments (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_semaphore</remarks>
		LayoutColorAttachmentExt = 0x958E,

		/// <summary>
		/// Specifies a layout for depth-stencil attachments (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_semaphore</remarks>
		LayoutDepthStencilAttachmentExt = 0x958F,

		/// <summary>
		/// Specifies a layout for read-only depth-stencil attachments (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_semaphore</remarks>
		LayoutDepthStencilReadOnlyExt = 0x9590,

		/// <summary>
		/// Specifies a layout for shader read-only resources (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_semaphore</remarks>
		LayoutShaderReadOnlyExt = 0x9591,

		/// <summary>
		/// Specifies a layout for transfer source resources (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_semaphore</remarks>
		LayoutTransferSrcExt = 0x9592,

		/// <summary>
		/// Specifies a layout for transfer destination resources (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_semaphore</remarks>
		LayoutTransferDstExt = 0x9593,

		/// <summary>
		/// Specifies a D3D12 fence handle type (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_semaphore_win32</remarks>
		HandleTypeD3D12FenceExt = 0x9594,

		/// <summary>
		/// Specifies a D3D12 fence value (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_semaphore_win32</remarks>
		D3D12FenceValueExt = 0x9595,

		/// <summary>
		/// Specifies the value of a timeline semaphore (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_timeline_semaphore</remarks>
		TimelineSemaphoreValueNv = 0x9595,

		/// <summary>
		/// Specifies the number of available device UUIDs (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_memory_object<br/>GL_EXT_semaphore</remarks>
		NumDeviceUuidsExt = 0x9596,

		/// <summary>
		/// Specifies a device UUID (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_memory_object<br/>GL_EXT_semaphore</remarks>
		DeviceUuidExt = 0x9597,

		/// <summary>
		/// Specifies a driver UUID (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_memory_object<br/>GL_EXT_semaphore</remarks>
		DriverUuidExt = 0x9598,

		/// <summary>
		/// Specifies a device LUID (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_memory_object_win32<br/>GL_EXT_semaphore_win32</remarks>
		DeviceLuidExt = 0x9599,

		/// <summary>
		/// Specifies a device node mask (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_memory_object_win32<br/>GL_EXT_semaphore_win32</remarks>
		DeviceNodeMaskExt = 0x959A,

		/// <summary>
		/// Indicates that a memory object is protected (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_memory_object</remarks>
		ProtectedMemoryObjectExt = 0x959B,

		/// <summary>
		/// Specifies the shading rate image per primitive (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_primitive_shading_rate</remarks>
		ShadingRateImagePerPrimitiveNv = 0x95B1,

		/// <summary>
		/// Specifies the number of entries in the shading rate image palette (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_primitive_shading_rate</remarks>
		ShadingRateImagePaletteCountNv = 0x95B2,

		/// <summary>
		/// Specifies the type of semaphore (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_timeline_semaphore</remarks>
		SemaphoreTypeNv = 0x95B3,

		/// <summary>
		/// Specifies a binary semaphore type (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_timeline_semaphore</remarks>
		SemaphoreTypeBinaryNv = 0x95B4,

		/// <summary>
		/// Specifies a timeline semaphore type (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_timeline_semaphore</remarks>
		SemaphoreTypeTimelineNv = 0x95B5,

		/// <summary>
		/// Specifies the maximum difference between timeline semaphore values (NV extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_timeline_semaphore</remarks>
		MaxTimelineSemaphoreValueDifferenceNv = 0x95B6,

		/// <summary>
		/// Specifies the number of views for a framebuffer texture attachment (OVR extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OVR_multiview</remarks>
		FramebufferAttachmentTextureNumViewsOvr = 0x9630,

		/// <summary>
		/// Specifies the base view index for a framebuffer texture attachment (OVR extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_OVR_multiview</remarks>
		FramebufferAttachmentTextureBaseViewIndexOvr = 0x9632,

		/// <summary>
		/// Specifies the cutoff density for foveated textures (QCOM extension).
		/// </summary>
		/// <remarks></remarks>
		TextureFoveatedCutoffDensityQcom = 0x96A0,

		/// <summary>
		/// Indicates non-coherent framebuffer fetch (QCOM extension).
		/// </summary>
		/// <remarks></remarks>
		FramebufferFetchNoncoherentQcom = 0x96A2,

		/// <summary>
		/// Specifies the shading rate (QCOM extension).
		/// </summary>
		/// <remarks></remarks>
		ShadingRateQcom = 0x96A4,

		/// <summary>
		/// Preserves the aspect ratio for shading rates (QCOM extension).
		/// </summary>
		/// <remarks></remarks>
		ShadingRatePreserveAspectRatioQcom = 0x96A5,

		/// <summary>
		/// Specifies a shading rate of 1x1 pixels (QCOM extension).
		/// </summary>
		/// <remarks></remarks>
		ShadingRate1X1PixelsQcom = 0x96A6,

		/// <summary>
		/// Specifies a shading rate of 1x2 pixels (QCOM extension).
		/// </summary>
		/// <remarks></remarks>
		ShadingRate1X2PixelsQcom = 0x96A7,

		/// <summary>
		/// Specifies a shading rate of 2x1 pixels (QCOM extension).
		/// </summary>
		/// <remarks></remarks>
		ShadingRate2X1PixelsQcom = 0x96A8,

		/// <summary>
		/// Specifies a shading rate of 2x2 pixels (QCOM extension).
		/// </summary>
		/// <remarks></remarks>
		ShadingRate2X2PixelsQcom = 0x96A9,

		/// <summary>
		/// Specifies a shading rate of 1x4 pixels (QCOM extension).
		/// </summary>
		/// <remarks></remarks>
		ShadingRate1X4PixelsQcom = 0x96AA,

		/// <summary>
		/// Specifies a shading rate of 4x1 pixels (QCOM extension).
		/// </summary>
		/// <remarks></remarks>
		ShadingRate4X1PixelsQcom = 0x96AB,

		/// <summary>
		/// Specifies a shading rate of 4x2 pixels (QCOM extension).
		/// </summary>
		/// <remarks></remarks>
		ShadingRate4X2PixelsQcom = 0x96AC,

		/// <summary>
		/// Specifies a shading rate of 2x4 pixels (QCOM extension).
		/// </summary>
		/// <remarks></remarks>
		ShadingRate2X4PixelsQcom = 0x96AD,

		/// <summary>
		/// Specifies a shading rate of 4x4 pixels (QCOM extension).
		/// </summary>
		/// <remarks></remarks>
		ShadingRate4X4PixelsQcom = 0x96AE,

		/// <summary>
		/// Specifies a shading rate of 1x1 pixels (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_fragment_shading_rate</remarks>
		ShadingRate1X1PixelsExt = 0x96A6,

		/// <summary>
		/// Specifies a shading rate of 1x2 pixels (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_fragment_shading_rate</remarks>
		ShadingRate1X2PixelsExt = 0x96A7,

		/// <summary>
		/// Specifies a shading rate of 2x1 pixels (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_fragment_shading_rate</remarks>
		ShadingRate2X1PixelsExt = 0x96A8,

		/// <summary>
		/// Specifies a shading rate of 2x2 pixels (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_fragment_shading_rate</remarks>
		ShadingRate2X2PixelsExt = 0x96A9,

		/// <summary>
		/// Specifies a shading rate of 1x4 pixels (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_fragment_shading_rate</remarks>
		ShadingRate1X4PixelsExt = 0x96AA,

		/// <summary>
		/// Specifies a shading rate of 4x1 pixels (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_fragment_shading_rate</remarks>
		ShadingRate4X1PixelsExt = 0x96AB,

		/// <summary>
		/// Specifies a shading rate of 4x2 pixels (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_fragment_shading_rate</remarks>
		ShadingRate4X2PixelsExt = 0x96AC,

		/// <summary>
		/// Specifies a shading rate of 2x4 pixels (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_fragment_shading_rate</remarks>
		ShadingRate2X4PixelsExt = 0x96AD,

		/// <summary>
		/// Specifies a shading rate of 4x4 pixels (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_fragment_shading_rate</remarks>
		ShadingRate4X4PixelsExt = 0x96AE,

		/// <summary>
		/// Indicates whether surface compression is enabled (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_EGL_image_storage_compression<br/>GL_EXT_texture_storage_compression</remarks>
		SurfaceCompressionExt = 0x96C0,

		/// <summary>
		/// Specifies no fixed-rate surface compression (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_EGL_image_storage_compression<br/>GL_EXT_texture_storage_compression</remarks>
		SurfaceCompressionFixedRateNoneExt = 0x96C1,

		/// <summary>
		/// Specifies default fixed-rate surface compression (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_EGL_image_storage_compression<br/>GL_EXT_texture_storage_compression</remarks>
		SurfaceCompressionFixedRateDefaultExt = 0x96C2,

		/// <summary>
		/// Specifies fixed-rate surface compression at 1 bit per component (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_storage_compression</remarks>
		SurfaceCompressionFixedRate1BpcExt = 0x96C4,

		/// <summary>
		/// Specifies fixed-rate surface compression at 2 bits per component (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_storage_compression</remarks>
		SurfaceCompressionFixedRate2BpcExt = 0x96C5,

		/// <summary>
		/// Specifies fixed-rate surface compression at 3 bits per component (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_storage_compression</remarks>
		SurfaceCompressionFixedRate3BpcExt = 0x96C6,

		/// <summary>
		/// Specifies fixed-rate surface compression at 4 bits per component (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_storage_compression</remarks>
		SurfaceCompressionFixedRate4BpcExt = 0x96C7,

		/// <summary>
		/// Specifies fixed-rate surface compression at 5 bits per component (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_storage_compression</remarks>
		SurfaceCompressionFixedRate5BpcExt = 0x96C8,

		/// <summary>
		/// Specifies fixed-rate surface compression at 6 bits per component (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_storage_compression</remarks>
		SurfaceCompressionFixedRate6BpcExt = 0x96C9,

		/// <summary>
		/// Specifies fixed-rate surface compression at 7 bits per component (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_storage_compression</remarks>
		SurfaceCompressionFixedRate7BpcExt = 0x96CA,

		/// <summary>
		/// Specifies fixed-rate surface compression at 8 bits per component (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_storage_compression</remarks>
		SurfaceCompressionFixedRate8BpcExt = 0x96CB,

		/// <summary>
		/// Specifies fixed-rate surface compression at 9 bits per component (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_storage_compression</remarks>
		SurfaceCompressionFixedRate9BpcExt = 0x96CC,

		/// <summary>
		/// Specifies fixed-rate surface compression at 10 bits per component (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_storage_compression</remarks>
		SurfaceCompressionFixedRate10BpcExt = 0x96CD,

		/// <summary>
		/// Specifies fixed-rate surface compression at 11 bits per component (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_storage_compression</remarks>
		SurfaceCompressionFixedRate11BpcExt = 0x96CE,

		/// <summary>
		/// Specifies fixed-rate surface compression at 12 bits per component (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_texture_storage_compression</remarks>
		SurfaceCompressionFixedRate12BpcExt = 0x96CF,

		/// <summary>
		/// Specifies the shading rate (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_fragment_shading_rate</remarks>
		ShadingRateExt = 0x96D0,

		/// <summary>
		/// Specifies the shading rate attachment (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_fragment_shading_rate</remarks>
		ShadingRateAttachmentExt = 0x96D1,

		/// <summary>
		/// Specifies to keep the current shading rate (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_fragment_shading_rate</remarks>
		FragmentShadingRateCombinerOpKeepExt = 0x96D2,

		/// <summary>
		/// Specifies to replace the current shading rate (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_fragment_shading_rate</remarks>
		FragmentShadingRateCombinerOpReplaceExt = 0x96D3,

		/// <summary>
		/// Specifies the minimum shading rate (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_fragment_shading_rate</remarks>
		FragmentShadingRateCombinerOpMinExt = 0x96D4,

		/// <summary>
		/// Specifies the maximum shading rate (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_fragment_shading_rate</remarks>
		FragmentShadingRateCombinerOpMaxExt = 0x96D5,

		/// <summary>
		/// Specifies to multiply the current shading rate (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_fragment_shading_rate</remarks>
		FragmentShadingRateCombinerOpMulExt = 0x96D6,

		/// <summary>
		/// Specifies the minimum texel width for fragment shading rate attachments (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_fragment_shading_rate</remarks>
		MinFragmentShadingRateAttachmentTexelWidthExt = 0x96D7,

		/// <summary>
		/// Specifies the maximum texel width for fragment shading rate attachments (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_fragment_shading_rate</remarks>
		MaxFragmentShadingRateAttachmentTexelWidthExt = 0x96D8,

		/// <summary>
		/// Specifies the minimum texel height for fragment shading rate attachments (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_fragment_shading_rate</remarks>
		MinFragmentShadingRateAttachmentTexelHeightExt = 0x96D9,

		/// <summary>
		/// Specifies the maximum texel height for fragment shading rate attachments (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_fragment_shading_rate</remarks>
		MaxFragmentShadingRateAttachmentTexelHeightExt = 0x96DA,

		/// <summary>
		/// Specifies the maximum aspect ratio for fragment shading rate attachments (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_fragment_shading_rate</remarks>
		MaxFragmentShadingRateAttachmentTexelAspectRatioExt = 0x96DB,

		/// <summary>
		/// Specifies the maximum number of layers for fragment shading rate attachments (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_fragment_shading_rate</remarks>
		MaxFragmentShadingRateAttachmentLayersExt = 0x96DC,

		/// <summary>
		/// Indicates support for fragment shading rates with depth and stencil writes (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_fragment_shading_rate</remarks>
		FragmentShadingRateWithShaderDepthStencilWritesSupportedExt = 0x96DD,

		/// <summary>
		/// Indicates support for fragment shading rates with sample mask (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_fragment_shading_rate</remarks>
		FragmentShadingRateWithSampleMaskSupportedExt = 0x96DE,

		/// <summary>
		/// Indicates support for fragment shading rate attachments with default framebuffers (EXT extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_EXT_fragment_shading_rate</remarks>
		FragmentShadingRateAttachmentWithDefaultFramebufferSupportedExt = 0x96DF,

		/// <summary>
		/// Specifies the number of shader cores (ARM extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARM_shader_core_properties</remarks>
		ShaderCoreCountArm = 0x96F0,

		/// <summary>
		/// Specifies the number of active shader cores (ARM extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARM_shader_core_properties</remarks>
		ShaderCoreActiveCountArm = 0x96F1,

		/// <summary>
		/// Specifies the present shader core mask (ARM extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARM_shader_core_properties</remarks>
		ShaderCorePresentMaskArm = 0x96F2,

		/// <summary>
		/// Specifies the maximum warp count for shader cores (ARM extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARM_shader_core_properties</remarks>
		ShaderCoreMaxWarpCountArm = 0x96F3,

		/// <summary>
		/// Specifies the pixel rate for shader cores (ARM extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARM_shader_core_properties</remarks>
		ShaderCorePixelRateArm = 0x96F4,

		/// <summary>
		/// Specifies the texel rate for shader cores (ARM extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARM_shader_core_properties</remarks>
		ShaderCoreTexelRateArm = 0x96F5,

		/// <summary>
		/// Specifies the fused multiply-add rate for shader cores (ARM extension).
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_ARM_shader_core_properties</remarks>
		ShaderCoreFmaRateArm = 0x96F6,

		/// <summary>
		/// Specifies Y component degamma for textures (QCOM extension).
		/// </summary>
		/// <remarks></remarks>
		TextureYDegammaQcom = 0x9710,

		/// <summary>
		/// Specifies CbCr component degamma for textures (QCOM extension).
		/// </summary>
		/// <remarks></remarks>
		TextureCbcrDegammaQcom = 0x9711,

		/// <summary>
		/// Indicates a preference for double buffering (PGI extension).
		/// </summary>
		/// <remarks></remarks>
		PreferDoublebufferHintPgi = 0x1A1F8,

		/// <summary>
		/// Indicates a hint to conserve memory (PGI extension).
		/// </summary>
		/// <remarks></remarks>
		ConserveMemoryHintPgi = 0x1A1FD,

		/// <summary>
		/// Indicates a hint to reclaim memory (PGI extension).
		/// </summary>
		/// <remarks></remarks>
		ReclaimMemoryHintPgi = 0x1A1FE,

		/// <summary>
		/// Indicates a hint to begin using native graphics (PGI extension).
		/// </summary>
		/// <remarks></remarks>
		NativeGraphicsBeginHintPgi = 0x1A203,

		/// <summary>
		/// Indicates a hint to end using native graphics (PGI extension).
		/// </summary>
		/// <remarks></remarks>
		NativeGraphicsEndHintPgi = 0x1A204,

		/// <summary>
		/// Indicates a hint for always fast rendering (PGI extension).
		/// </summary>
		/// <remarks></remarks>
		AlwaysFastHintPgi = 0x1A20C,

		/// <summary>
		/// Indicates a hint for always soft rendering (PGI extension).
		/// </summary>
		/// <remarks></remarks>
		AlwaysSoftHintPgi = 0x1A20D,

		/// <summary>
		/// Indicates a hint to allow drawing of objects (PGI extension).
		/// </summary>
		/// <remarks></remarks>
		AllowDrawObjHintPgi = 0x1A20E,

		/// <summary>
		/// Indicates a hint to allow drawing of windows (PGI extension).
		/// </summary>
		/// <remarks></remarks>
		AllowDrawWinHintPgi = 0x1A20F,

		/// <summary>
		/// Indicates a hint to allow drawing of fragments (PGI extension).
		/// </summary>
		/// <remarks></remarks>
		AllowDrawFrgHintPgi = 0x1A210,

		/// <summary>
		/// Indicates a hint to allow drawing of memory (PGI extension).
		/// </summary>
		/// <remarks></remarks>
		AllowDrawMemHintPgi = 0x1A211,

		/// <summary>
		/// Indicates a hint for strict depth function checks (PGI extension).
		/// </summary>
		/// <remarks></remarks>
		StrictDepthfuncHintPgi = 0x1A216,

		/// <summary>
		/// Indicates a hint for strict lighting checks (PGI extension).
		/// </summary>
		/// <remarks></remarks>
		StrictLightingHintPgi = 0x1A217,

		/// <summary>
		/// Indicates a hint for strict scissor checks (PGI extension).
		/// </summary>
		/// <remarks></remarks>
		StrictScissorHintPgi = 0x1A218,

		/// <summary>
		/// Indicates a hint for full stipple rendering (PGI extension).
		/// </summary>
		/// <remarks></remarks>
		FullStippleHintPgi = 0x1A219,

		/// <summary>
		/// Indicates a hint for near clipping (PGI extension).
		/// </summary>
		/// <remarks></remarks>
		ClipNearHintPgi = 0x1A220,

		/// <summary>
		/// Indicates a hint for far clipping (PGI extension).
		/// </summary>
		/// <remarks></remarks>
		ClipFarHintPgi = 0x1A221,

		/// <summary>
		/// Indicates a hint for wide line rendering (PGI extension).
		/// </summary>
		/// <remarks></remarks>
		WideLineHintPgi = 0x1A222,

		/// <summary>
		/// Indicates a hint for backface normal rendering (PGI extension).
		/// </summary>
		/// <remarks></remarks>
		BackNormalsHintPgi = 0x1A223,

		/// <summary>
		/// Indicates a hint for vertex data optimization (PGI extension).
		/// </summary>
		/// <remarks></remarks>
		VertexDataHintPgi = 0x1A22A,

		/// <summary>
		/// Indicates a hint for vertex consistency (PGI extension).
		/// </summary>
		/// <remarks></remarks>
		VertexConsistentHintPgi = 0x1A22B,

		/// <summary>
		/// Indicates a hint for material side rendering (PGI extension).
		/// </summary>
		/// <remarks></remarks>
		MaterialSideHintPgi = 0x1A22C,

		/// <summary>
		/// Indicates a hint for the maximum vertex count (PGI extension).
		/// </summary>
		/// <remarks></remarks>
		MaxVertexHintPgi = 0x1A22D,
	}
}
