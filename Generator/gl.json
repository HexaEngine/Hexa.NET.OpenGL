{
  "GL_CURRENT_BIT": "Indicates the current state.",
  "GL_POINT_BIT": "Used for point primitives.",
  "GL_LINE_BIT": "Used for line primitives.",
  "GL_POLYGON_BIT": "Used for polygon primitives.",
  "GL_POLYGON_STIPPLE_BIT": "Enables polygon stippling.",
  "GL_PIXEL_MODE_BIT": "Controls pixel manipulation modes.",
  "GL_LIGHTING_BIT": "Enables lighting calculations.",
  "GL_FOG_BIT": "Enables fog effects.",
  "GL_DEPTH_BUFFER_BIT": "Enables depth buffering.",
  "GL_ACCUM_BUFFER_BIT": "Enables accumulation buffer operations.",
  "GL_STENCIL_BUFFER_BIT": "Enables stencil buffer operations.",
  "GL_VIEWPORT_BIT": "Controls viewport settings.",
  "GL_TRANSFORM_BIT": "Enables transformations.",
  "GL_ENABLE_BIT": "Enables various features.",
  "GL_COLOR_BUFFER_BIT": "Indicates color buffer operations.",
  "GL_HINT_BIT": "Controls hint settings.",
  "GL_EVAL_BIT": "Enables evaluation functions.",
  "GL_LIST_BIT": "Enables display list operations.",
  "GL_TEXTURE_BIT": "Enables texture mapping.",
  "GL_SCISSOR_BIT": "Enables scissor test.",
  "GL_MULTISAMPLE_BIT": "Enables multisampling.",
  "GL_MULTISAMPLE_BIT_ARB": "ARB multisample bit.",
  "GL_MULTISAMPLE_BIT_EXT": "EXT multisample bit.",
  "GL_MULTISAMPLE_BIT_3DFX": "3DFX multisample bit.",
  "GL_ALL_ATTRIB_BITS": "Indicates all attribute bits.",
  "GL_DYNAMIC_STORAGE_BIT": "Indicates dynamic storage.",
  "GL_DYNAMIC_STORAGE_BIT_EXT": "Dynamic storage for extensions.",
  "GL_CLIENT_STORAGE_BIT": "Indicates client-side storage.",
  "GL_CLIENT_STORAGE_BIT_EXT": "Client storage for extensions.",
  "GL_SPARSE_STORAGE_BIT_ARB": "Sparse storage for ARB.",
  "GL_LGPU_SEPARATE_STORAGE_BIT_NVX": "Separate storage for LGPU.",
  "GL_PER_GPU_STORAGE_BIT_NV": "Per-GPU storage for NV.",
  "GL_EXTERNAL_STORAGE_BIT_NVX": "External storage for NVX.",
  "GL_COVERAGE_BUFFER_BIT_NV": "Coverage buffer for NV.",
  "GL_CLIENT_PIXEL_STORE_BIT": "Client pixel storage bit.",
  "GL_CLIENT_VERTEX_ARRAY_BIT": "Client vertex array bit.",
  "GL_CLIENT_ALL_ATTRIB_BITS": "Client all attribute bits.",
  "GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT": "Forward compatible context flag.",
  "GL_CONTEXT_FLAG_DEBUG_BIT": "Debug context flag.",
  "GL_CONTEXT_FLAG_DEBUG_BIT_KHR": "Debug context flag (KHR).",
  "GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT": "Robust access context flag.",
  "GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB": "Robust access context flag (ARB).",
  "GL_CONTEXT_FLAG_NO_ERROR_BIT": "No error context flag.",
  "GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR": "No error context flag (KHR).",
  "GL_CONTEXT_FLAG_PROTECTED_CONTENT_BIT_EXT": "Protected content context flag (EXT).",
  "GL_CONTEXT_CORE_PROFILE_BIT": "Core profile context bit.",
  "GL_CONTEXT_COMPATIBILITY_PROFILE_BIT": "Compatibility profile context bit.",
  "GL_MAP_READ_BIT": "Allows mapping for read access.",
  "GL_MAP_READ_BIT_EXT": "Read access mapping for extensions.",
  "GL_MAP_WRITE_BIT": "Allows mapping for write access.",
  "GL_MAP_WRITE_BIT_EXT": "Write access mapping for extensions.",
  "GL_MAP_INVALIDATE_RANGE_BIT": "Invalidates a mapping range.",
  "GL_MAP_INVALIDATE_RANGE_BIT_EXT": "Invalidates mapping range for extensions.",
  "GL_MAP_INVALIDATE_BUFFER_BIT": "Invalidates a mapped buffer.",
  "GL_MAP_INVALIDATE_BUFFER_BIT_EXT": "Invalidates mapped buffer for extensions.",
  "GL_MAP_FLUSH_EXPLICIT_BIT": "Allows explicit flush of mapped data.",
  "GL_MAP_FLUSH_EXPLICIT_BIT_EXT": "Explicit flush mapping for extensions.",
  "GL_MAP_UNSYNCHRONIZED_BIT": "Allows unsynchronized mapping.",
  "GL_MAP_UNSYNCHRONIZED_BIT_EXT": "Unsynchronized mapping for extensions.",
  "GL_MAP_PERSISTENT_BIT": "Indicates persistent mapping.",
  "GL_MAP_PERSISTENT_BIT_EXT": "Persistent mapping for extensions.",
  "GL_MAP_COHERENT_BIT": "Indicates coherent mapping.",
  "GL_MAP_COHERENT_BIT_EXT": "Coherent mapping for extensions.",
  "GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT": "Barriers for vertex attribute arrays.",
  "GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT": "Vertex attribute array barrier for extensions.",
  "GL_ELEMENT_ARRAY_BARRIER_BIT": "Barriers for element arrays.",
  "GL_ELEMENT_ARRAY_BARRIER_BIT_EXT": "Element array barrier for extensions.",
  "GL_UNIFORM_BARRIER_BIT": "Barriers for uniform data.",
  "GL_UNIFORM_BARRIER_BIT_EXT": "Uniform barrier for extensions.",
  "GL_TEXTURE_FETCH_BARRIER_BIT": "Barriers for texture fetching.",
  "GL_TEXTURE_FETCH_BARRIER_BIT_EXT": "Texture fetch barrier for extensions.",
  "GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV": "Global access barrier for shaders (NV).",
  "GL_SHADER_IMAGE_ACCESS_BARRIER_BIT": "Barrier for shader image access.",
  "GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT": "Shader image access barrier for extensions.",
  "GL_COMMAND_BARRIER_BIT": "Indicates command barrier synchronization.",
  "GL_COMMAND_BARRIER_BIT_EXT": "Command barrier for extensions.",
  "GL_PIXEL_BUFFER_BARRIER_BIT": "Synchronizes pixel buffer operations.",
  "GL_PIXEL_BUFFER_BARRIER_BIT_EXT": "Pixel buffer barrier for extensions.",
  "GL_TEXTURE_UPDATE_BARRIER_BIT": "Synchronizes texture updates.",
  "GL_TEXTURE_UPDATE_BARRIER_BIT_EXT": "Texture update barrier for extensions.",
  "GL_BUFFER_UPDATE_BARRIER_BIT": "Synchronizes buffer updates.",
  "GL_BUFFER_UPDATE_BARRIER_BIT_EXT": "Buffer update barrier for extensions.",
  "GL_FRAMEBUFFER_BARRIER_BIT": "Synchronizes framebuffer operations.",
  "GL_FRAMEBUFFER_BARRIER_BIT_EXT": "Framebuffer barrier for extensions.",
  "GL_TRANSFORM_FEEDBACK_BARRIER_BIT": "Synchronizes transform feedback operations.",
  "GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT": "Transform feedback barrier for extensions.",
  "GL_ATOMIC_COUNTER_BARRIER_BIT": "Synchronizes atomic counter operations.",
  "GL_ATOMIC_COUNTER_BARRIER_BIT_EXT": "Atomic counter barrier for extensions.",
  "GL_SHADER_STORAGE_BARRIER_BIT": "Synchronizes shader storage access.",
  "GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT": "Barrier for client-mapped buffers.",
  "GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT_EXT": "Client-mapped buffer barrier for extensions.",
  "GL_QUERY_BUFFER_BARRIER_BIT": "Synchronizes query buffer operations.",
  "GL_ALL_BARRIER_BITS": "Indicates all barrier bits.",
  "GL_ALL_BARRIER_BITS_EXT": "All barrier bits for extensions.",
  "GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD": "Event bit for depth pass queries (AMD).",
  "GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD": "Event bit for depth fail queries (AMD).",
  "GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD": "Event bit for stencil fail queries (AMD).",
  "GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD": "Event bit for depth bounds fail queries (AMD).",
  "GL_QUERY_ALL_EVENT_BITS_AMD": "All event bits for queries (AMD).",
  "GL_SYNC_FLUSH_COMMANDS_BIT": "Flushes commands in sync.",
  "GL_SYNC_FLUSH_COMMANDS_BIT_APPLE": "Sync flush commands for Apple.",
  "GL_VERTEX_SHADER_BIT": "Indicates vertex shader usage.",
  "GL_VERTEX_SHADER_BIT_EXT": "Vertex shader bit for extensions.",
  "GL_FRAGMENT_SHADER_BIT": "Indicates fragment shader usage.",
  "GL_FRAGMENT_SHADER_BIT_EXT": "Fragment shader bit for extensions.",
  "GL_GEOMETRY_SHADER_BIT": "Indicates geometry shader usage.",
  "GL_GEOMETRY_SHADER_BIT_EXT": "Geometry shader bit for extensions.",
  "GL_GEOMETRY_SHADER_BIT_OES": "Geometry shader bit for OES extensions.",
  "GL_TESS_CONTROL_SHADER_BIT": "Indicates tessellation control shader usage.",
  "GL_TESS_CONTROL_SHADER_BIT_EXT": "Tessellation control shader bit for extensions.",
  "GL_TESS_CONTROL_SHADER_BIT_OES": "Tessellation control shader bit for OES extensions.",
  "GL_TESS_EVALUATION_SHADER_BIT": "Indicates tessellation evaluation shader usage.",
  "GL_TESS_EVALUATION_SHADER_BIT_EXT": "Tessellation evaluation shader bit for extensions.",
  "GL_TESS_EVALUATION_SHADER_BIT_OES": "Tessellation evaluation shader bit for OES extensions.",
  "GL_COMPUTE_SHADER_BIT": "Indicates compute shader usage.",
  "GL_MESH_SHADER_BIT_NV": "Indicates mesh shader usage (NV).",
  "GL_TASK_SHADER_BIT_NV": "Indicates task shader usage (NV).",
  "GL_ALL_SHADER_BITS": "Indicates all shader bits.",
  "GL_ALL_SHADER_BITS_EXT": "All shader bits for extensions.",
  "GL_SUBGROUP_FEATURE_BASIC_BIT_KHR": "Basic subgroup feature bit (KHR).",
  "GL_SUBGROUP_FEATURE_VOTE_BIT_KHR": "Vote subgroup feature bit (KHR).",
  "GL_SUBGROUP_FEATURE_ARITHMETIC_BIT_KHR": "Arithmetic subgroup feature bit (KHR).",
  "GL_SUBGROUP_FEATURE_BALLOT_BIT_KHR": "Ballot subgroup feature bit (KHR).",
  "GL_SUBGROUP_FEATURE_SHUFFLE_BIT_KHR": "Shuffle subgroup feature bit (KHR).",
  "GL_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT_KHR": "Shuffle relative subgroup feature bit (KHR).",
  "GL_SUBGROUP_FEATURE_CLUSTERED_BIT_KHR": "Clustered subgroup feature bit (KHR).",
  "GL_SUBGROUP_FEATURE_QUAD_BIT_KHR": "Quad subgroup feature bit (KHR).",
  "GL_SUBGROUP_FEATURE_PARTITIONED_BIT_NV": "Partitioned subgroup feature bit (NV).",
  "GL_TEXTURE_STORAGE_SPARSE_BIT_AMD": "Sparse texture storage bit (AMD).",
  "GL_RED_BIT_ATI": "Red color channel bit (ATI).",
  "GL_GREEN_BIT_ATI": "Green color channel bit (ATI).",
  "GL_BLUE_BIT_ATI": "Blue color channel bit (ATI).",
  "GL_2X_BIT_ATI": "2X scaling bit (ATI).",
  "GL_4X_BIT_ATI": "4X scaling bit (ATI).",
  "GL_8X_BIT_ATI": "8X scaling bit (ATI).",
  "GL_HALF_BIT_ATI": "Half channel bit (ATI).",
  "GL_QUARTER_BIT_ATI": "Quarter channel bit (ATI).",
  "GL_EIGHTH_BIT_ATI": "Eighth channel bit (ATI).",
  "GL_SATURATE_BIT_ATI": "Saturation channel bit (ATI).",
  "GL_COMP_BIT_ATI": "Component bit (ATI).",
  "GL_NEGATE_BIT_ATI": "Negate channel bit (ATI).",
  "GL_BIAS_BIT_ATI": "Bias channel bit (ATI).",
  "GL_TRACE_OPERATIONS_BIT_MESA": "Trace operations bit (Mesa).",
  "GL_TRACE_PRIMITIVES_BIT_MESA": "Trace primitives bit (Mesa).",
  "GL_TRACE_ARRAYS_BIT_MESA": "Trace arrays bit (Mesa).",
  "GL_TRACE_TEXTURES_BIT_MESA": "Trace textures bit (Mesa).",
  "GL_TRACE_PIXELS_BIT_MESA": "Trace pixels bit (Mesa).",
  "GL_TRACE_ERRORS_BIT_MESA": "Trace errors bit (Mesa).",
  "GL_TRACE_ALL_BITS_MESA": "Trace all bits (Mesa).",
  "GL_BOLD_BIT_NV": "Indicates bold font style.",
  "GL_ITALIC_BIT_NV": "Indicates italic font style.",
  "GL_GLYPH_WIDTH_BIT_NV": "Indicates glyph width property.",
  "GL_GLYPH_HEIGHT_BIT_NV": "Indicates glyph height property.",
  "GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV": "Indicates horizontal bearing X for glyphs.",
  "GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV": "Indicates horizontal bearing Y for glyphs.",
  "GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV": "Indicates horizontal bearing advance for glyphs.",
  "GL_GLYPH_VERTICAL_BEARING_X_BIT_NV": "Indicates vertical bearing X for glyphs.",
  "GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV": "Indicates vertical bearing Y for glyphs.",
  "GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV": "Indicates vertical bearing advance for glyphs.",
  "GL_GLYPH_HAS_KERNING_BIT_NV": "Indicates if glyphs have kerning.",
  "GL_FONT_X_MIN_BOUNDS_BIT_NV": "Indicates minimum X bounds for font.",
  "GL_FONT_Y_MIN_BOUNDS_BIT_NV": "Indicates minimum Y bounds for font.",
  "GL_FONT_X_MAX_BOUNDS_BIT_NV": "Indicates maximum X bounds for font.",
  "GL_FONT_Y_MAX_BOUNDS_BIT_NV": "Indicates maximum Y bounds for font.",
  "GL_FONT_UNITS_PER_EM_BIT_NV": "Indicates units per EM for font.",
  "GL_FONT_ASCENDER_BIT_NV": "Indicates ascender value for font.",
  "GL_FONT_DESCENDER_BIT_NV": "Indicates descender value for font.",
  "GL_FONT_HEIGHT_BIT_NV": "Indicates font height.",
  "GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV": "Indicates maximum advance width for font.",
  "GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV": "Indicates maximum advance height for font.",
  "GL_FONT_UNDERLINE_POSITION_BIT_NV": "Indicates underline position for font.",
  "GL_FONT_UNDERLINE_THICKNESS_BIT_NV": "Indicates underline thickness for font.",
  "GL_FONT_HAS_KERNING_BIT_NV": "Indicates if font has kerning.",
  "GL_FONT_NUM_GLYPH_INDICES_BIT_NV": "Indicates number of glyph indices in font.",
  "GL_PERFQUERY_SINGLE_CONTEXT_INTEL": "Performance query for single context (Intel).",
  "GL_PERFQUERY_GLOBAL_CONTEXT_INTEL": "Performance query for global context (Intel).",
  "GL_VERTEX23_BIT_PGI": "Vertex attribute 23 bit (PGI).",
  "GL_VERTEX4_BIT_PGI": "Vertex attribute 4 bit (PGI).",
  "GL_COLOR3_BIT_PGI": "Color attribute 3 bit (PGI).",
  "GL_COLOR4_BIT_PGI": "Color attribute 4 bit (PGI).",
  "GL_EDGEFLAG_BIT_PGI": "Edge flag bit (PGI).",
  "GL_INDEX_BIT_PGI": "Index attribute bit (PGI).",
  "GL_MAT_AMBIENT_BIT_PGI": "Ambient material bit (PGI).",
  "GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI": "Ambient and diffuse material bit (PGI).",
  "GL_MAT_DIFFUSE_BIT_PGI": "Diffuse material bit (PGI).",
  "GL_MAT_EMISSION_BIT_PGI": "Emission material bit (PGI).",
  "GL_MAT_COLOR_INDEXES_BIT_PGI": "Color indexes material bit (PGI).",
  "GL_MAT_SHININESS_BIT_PGI": "Shininess material bit (PGI).",
  "GL_MAT_SPECULAR_BIT_PGI": "Specular material bit (PGI).",
  "GL_NORMAL_BIT_PGI": "Normal attribute bit (PGI).",
  "GL_TEXCOORD1_BIT_PGI": "Texture coordinate 1 bit (PGI).",
  "GL_TEXCOORD2_BIT_PGI": "Texture coordinate 2 bit (PGI).",
  "GL_TEXCOORD3_BIT_PGI": "Texture coordinate 3 bit (PGI).",
  "GL_TEXCOORD4_BIT_PGI": "Texture coordinate 4 bit (PGI).",
  "GL_COLOR_BUFFER_BIT0_QCOM": "Color buffer bit 0 (QCOM).",
  "GL_COLOR_BUFFER_BIT1_QCOM": "Color buffer bit 1 (QCOM).",
  "GL_COLOR_BUFFER_BIT2_QCOM": "Color buffer bit 2 (QCOM).",
  "GL_COLOR_BUFFER_BIT3_QCOM": "Color buffer bit 3 (QCOM).",
  "GL_COLOR_BUFFER_BIT4_QCOM": "Color buffer bit 4 (QCOM).",
  "GL_COLOR_BUFFER_BIT5_QCOM": "Color buffer bit 5 (QCOM).",
  "GL_COLOR_BUFFER_BIT6_QCOM": "Color buffer bit 6 (QCOM).",
  "GL_COLOR_BUFFER_BIT7_QCOM": "Color buffer bit 7 (QCOM).",
  "GL_DEPTH_BUFFER_BIT0_QCOM": "Depth buffer bit 0 (QCOM).",
  "GL_DEPTH_BUFFER_BIT1_QCOM": "Depth buffer bit 1 (QCOM).",
  "GL_DEPTH_BUFFER_BIT2_QCOM": "Depth buffer bit 2 (QCOM).",
  "GL_DEPTH_BUFFER_BIT3_QCOM": "Depth buffer bit 3 (QCOM).",
  "GL_DEPTH_BUFFER_BIT4_QCOM": "Depth buffer bit 4 (QCOM).",
  "GL_DEPTH_BUFFER_BIT5_QCOM": "Depth buffer bit 5 (QCOM).",
  "GL_DEPTH_BUFFER_BIT6_QCOM": "Depth buffer bit 6 (QCOM).",
  "GL_DEPTH_BUFFER_BIT7_QCOM": "Depth buffer bit 7 (QCOM).",
  "GL_STENCIL_BUFFER_BIT0_QCOM": "Stencil buffer bit 0 (QCOM).",
  "GL_STENCIL_BUFFER_BIT1_QCOM": "Stencil buffer bit 1 (QCOM).",
  "GL_STENCIL_BUFFER_BIT2_QCOM": "Stencil buffer bit 2 (QCOM).",
  "GL_STENCIL_BUFFER_BIT3_QCOM": "Stencil buffer bit 3 (QCOM).",
  "GL_STENCIL_BUFFER_BIT4_QCOM": "Stencil buffer bit 4 (QCOM).",
  "GL_STENCIL_BUFFER_BIT5_QCOM": "Stencil buffer bit 5 (QCOM).",
  "GL_STENCIL_BUFFER_BIT6_QCOM": "Stencil buffer bit 6 (QCOM).",
  "GL_STENCIL_BUFFER_BIT7_QCOM": "Stencil buffer bit 7 (QCOM).",
  "GL_MULTISAMPLE_BUFFER_BIT0_QCOM": "Multisample buffer bit 0 (QCOM).",
  "GL_MULTISAMPLE_BUFFER_BIT1_QCOM": "Multisample buffer bit 1 (QCOM).",
  "GL_MULTISAMPLE_BUFFER_BIT2_QCOM": "Multisample buffer bit 2 (QCOM).",
  "GL_MULTISAMPLE_BUFFER_BIT3_QCOM": "Multisample buffer bit 3 (QCOM).",
  "GL_MULTISAMPLE_BUFFER_BIT4_QCOM": "Multisample buffer bit 4 (QCOM).",
  "GL_MULTISAMPLE_BUFFER_BIT5_QCOM": "Multisample buffer bit 5 (QCOM).",
  "GL_MULTISAMPLE_BUFFER_BIT6_QCOM": "Multisample buffer bit 6 (QCOM).",
  "GL_MULTISAMPLE_BUFFER_BIT7_QCOM": "Multisample buffer bit 7 (QCOM).",
  "GL_FOVEATION_ENABLE_BIT_QCOM": "Enables foveation rendering (QCOM).",
  "GL_FOVEATION_SCALED_BIN_METHOD_BIT_QCOM": "Foveation scaled bin method (QCOM).",
  "GL_FOVEATION_SUBSAMPLED_LAYOUT_METHOD_BIT_QCOM": "Foveation subsampled layout method (QCOM).",
  "GL_TEXTURE_DEFORMATION_BIT_SGIX": "Indicates texture deformation capability (SGIX).",
  "GL_GEOMETRY_DEFORMATION_BIT_SGIX": "Indicates geometry deformation capability (SGIX).",
  "GL_TERMINATE_SEQUENCE_COMMAND_NV": "Command to terminate a sequence (NV).",
  "GL_NOP_COMMAND_NV": "No operation command (NV).",
  "GL_DRAW_ELEMENTS_COMMAND_NV": "Command for drawing elements (NV).",
  "GL_DRAW_ARRAYS_COMMAND_NV": "Command for drawing arrays (NV).",
  "GL_DRAW_ELEMENTS_STRIP_COMMAND_NV": "Command for drawing elements in strips (NV).",
  "GL_DRAW_ARRAYS_STRIP_COMMAND_NV": "Command for drawing arrays in strips (NV).",
  "GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV": "Instanced draw elements command (NV).",
  "GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV": "Instanced draw arrays command (NV).",
  "GL_ELEMENT_ADDRESS_COMMAND_NV": "Command for specifying element address (NV).",
  "GL_ATTRIBUTE_ADDRESS_COMMAND_NV": "Command for specifying attribute address (NV).",
  "GL_UNIFORM_ADDRESS_COMMAND_NV": "Command for specifying uniform address (NV).",
  "GL_BLEND_COLOR_COMMAND_NV": "Command for setting blend color (NV).",
  "GL_STENCIL_REF_COMMAND_NV": "Command for setting stencil reference (NV).",
  "GL_LINE_WIDTH_COMMAND_NV": "Command for setting line width (NV).",
  "GL_POLYGON_OFFSET_COMMAND_NV": "Command for setting polygon offset (NV).",
  "GL_ALPHA_REF_COMMAND_NV": "Command for setting alpha reference value (NV).",
  "GL_VIEWPORT_COMMAND_NV": "Command for setting viewport (NV).",
  "GL_SCISSOR_COMMAND_NV": "Command for setting scissor rectangle (NV).",
  "GL_FRONT_FACE_COMMAND_NV": "Command for setting front face orientation (NV).",
  "GL_LAYOUT_DEFAULT_INTEL": "Default memory layout (Intel).",
  "GL_LAYOUT_LINEAR_INTEL": "Linear memory layout (Intel).",
  "GL_LAYOUT_LINEAR_CPU_CACHED_INTEL": "Linear CPU cached memory layout (Intel).",
  "GL_CLOSE_PATH_NV": "Command for closing a path (NV).",
  "GL_MOVE_TO_NV": "Command for moving to a position (NV).",
  "GL_RELATIVE_MOVE_TO_NV": "Command for moving to a relative position (NV).",
  "GL_LINE_TO_NV": "Command for drawing a line to a position (NV).",
  "GL_RELATIVE_LINE_TO_NV": "Command for drawing a relative line (NV).",
  "GL_HORIZONTAL_LINE_TO_NV": "Command for drawing a horizontal line (NV).",
  "GL_RELATIVE_HORIZONTAL_LINE_TO_NV": "Command for drawing a relative horizontal line (NV).",
  "GL_VERTICAL_LINE_TO_NV": "Command for drawing a vertical line (NV).",
  "GL_RELATIVE_VERTICAL_LINE_TO_NV": "Command for drawing a relative vertical line (NV).",
  "GL_QUADRATIC_CURVE_TO_NV": "Command for drawing a quadratic curve (NV).",
  "GL_RELATIVE_QUADRATIC_CURVE_TO_NV": "Command for drawing a relative quadratic curve (NV).",
  "GL_CUBIC_CURVE_TO_NV": "Command for drawing a cubic curve (NV).",
  "GL_RELATIVE_CUBIC_CURVE_TO_NV": "Command for drawing a relative cubic curve (NV).",
  "GL_SMOOTH_QUADRATIC_CURVE_TO_NV": "Command for drawing a smooth quadratic curve (NV).",
  "GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV": "Command for drawing a relative smooth quadratic curve (NV).",
  "GL_SMOOTH_CUBIC_CURVE_TO_NV": "Command for drawing a smooth cubic curve (NV).",
  "GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV": "Command for drawing a relative smooth cubic curve (NV).",
  "GL_SMALL_CCW_ARC_TO_NV": "Command for drawing a small counterclockwise arc (NV).",
  "GL_RELATIVE_SMALL_CCW_ARC_TO_NV": "Command for drawing a relative small counterclockwise arc (NV).",
  "GL_SMALL_CW_ARC_TO_NV": "Command for drawing a small clockwise arc (NV).",
  "GL_RELATIVE_SMALL_CW_ARC_TO_NV": "Command for drawing a relative small clockwise arc (NV).",
  "GL_LARGE_CCW_ARC_TO_NV": "Command for drawing a large counterclockwise arc (NV).",
  "GL_RELATIVE_LARGE_CCW_ARC_TO_NV": "Command for drawing a relative large counterclockwise arc (NV).",
  "GL_LARGE_CW_ARC_TO_NV": "Command for drawing a large clockwise arc (NV).",
  "GL_RELATIVE_LARGE_CW_ARC_TO_NV": "Command for drawing a relative large clockwise arc (NV).",
  "GL_CONIC_CURVE_TO_NV": "Command for drawing a conic curve (NV).",
  "GL_RELATIVE_CONIC_CURVE_TO_NV": "Command for drawing a relative conic curve (NV).",
  "GL_SHARED_EDGE_NV": "Command for defining a shared edge (NV).",
  "GL_ROUNDED_RECT_NV": "Command for drawing a rounded rectangle (NV).",
  "GL_RELATIVE_ROUNDED_RECT_NV": "Command for drawing a relative rounded rectangle (NV).",
  "GL_ROUNDED_RECT2_NV": "Command for drawing a 2-corner rounded rectangle (NV).",
  "GL_RELATIVE_ROUNDED_RECT2_NV": "Command for drawing a relative 2-corner rounded rectangle (NV).",
  "GL_ROUNDED_RECT4_NV": "Command for drawing a 4-corner rounded rectangle (NV).",
  "GL_RELATIVE_ROUNDED_RECT4_NV": "Command for drawing a relative 4-corner rounded rectangle (NV).",
  "GL_ROUNDED_RECT8_NV": "Command for drawing an 8-corner rounded rectangle (NV).",
  "GL_RELATIVE_ROUNDED_RECT8_NV": "Command for drawing a relative 8-corner rounded rectangle (NV).",
  "GL_RESTART_PATH_NV": "Command to restart a path (NV).",
  "GL_DUP_FIRST_CUBIC_CURVE_TO_NV": "Command for duplicating the first cubic curve (NV).",
  "GL_DUP_LAST_CUBIC_CURVE_TO_NV": "Command for duplicating the last cubic curve (NV).",
  "GL_RECT_NV": "Command for drawing a rectangle (NV).",
  "GL_RELATIVE_RECT_NV": "Command for drawing a relative rectangle (NV).",
  "GL_CIRCULAR_CCW_ARC_TO_NV": "Command for drawing a circular counterclockwise arc (NV).",
  "GL_CIRCULAR_CW_ARC_TO_NV": "Command for drawing a circular clockwise arc (NV).",
  "GL_CIRCULAR_TANGENT_ARC_TO_NV": "Command for drawing a circular tangent arc (NV).",
  "GL_ARC_TO_NV": "Command for drawing an arc (NV).",
  "GL_RELATIVE_ARC_TO_NV": "Command for drawing a relative arc (NV).",
  "GL_NEXT_BUFFER_NV": "Next buffer command (NV).",
  "GL_SKIP_COMPONENTS4_NV": "Skip 4 components for drawing (NV).",
  "GL_SKIP_COMPONENTS3_NV": "Skip 3 components for drawing (NV).",
  "GL_SKIP_COMPONENTS2_NV": "Skip 2 components for drawing (NV).",
  "GL_SKIP_COMPONENTS1_NV": "Skip 1 component for drawing (NV).",
  "GL_RESTART_SUN": "Command to restart a sequence (SUN).",
  "GL_REPLACE_MIDDLE_SUN": "Replace the middle of a sequence (SUN).",
  "GL_REPLACE_OLDEST_SUN": "Replace the oldest sequence (SUN).",
  "GL_FALSE": "Boolean false value.",
  "GL_NO_ERROR": "Indicates no error occurred.",
  "GL_ZERO": "Numeric zero value.",
  "GL_NONE": "Indicates no value or null.",
  "GL_NONE_OES": "No value, specific to OES extensions.",
  "GL_TRUE": "Boolean true value.",
  "GL_ONE": "Numeric one value.",
  "GL_INVALID_INDEX": "Indicates an invalid index.",
  "GL_ALL_PIXELS_AMD": "Indicates all pixels (AMD).",
  "GL_TIMEOUT_IGNORED": "Indicates a timeout that is ignored.",
  "GL_TIMEOUT_IGNORED_APPLE": "Timeout ignored, specific to Apple implementations.",
  "GL_VERSION_ES_CL_1_0": "Version for OpenGL ES CL 1.0.",
  "GL_VERSION_ES_CM_1_1": "Version for OpenGL ES CM 1.1.",
  "GL_VERSION_ES_CL_1_1": "Version for OpenGL ES CL 1.1.",
  "GL_UUID_SIZE_EXT": "UUID size extension (EXT).",
  "GL_LUID_SIZE_EXT": "LUID size extension (EXT).",
  "GL_POINTS": "Primitive type for points.",
  "GL_LINES": "Primitive type for lines.",
  "GL_LINE_LOOP": "Primitive type for a loop of lines.",
  "GL_LINE_STRIP": "Primitive type for a strip of lines.",
  "GL_TRIANGLES": "Primitive type for triangles.",
  "GL_TRIANGLE_STRIP": "Primitive type for a strip of triangles.",
  "GL_TRIANGLE_FAN": "Primitive type for a fan of triangles.",
  "GL_QUADS": "Primitive type for quadrilaterals.",
  "GL_QUADS_EXT": "Primitive type for quadrilaterals, specific to EXT.",
  "GL_QUADS_OES": "Primitive type for quadrilaterals, specific to OES.",
  "GL_QUAD_STRIP": "Primitive type for a strip of quadrilaterals.",
  "GL_POLYGON": "Primitive type for polygons.",
  "GL_LINES_ADJACENCY": "Primitive type for lines with adjacency information.",
  "GL_LINES_ADJACENCY_ARB": "Lines adjacency primitive type (ARB).",
  "GL_LINES_ADJACENCY_EXT": "Lines adjacency primitive type (EXT).",
  "GL_LINES_ADJACENCY_OES": "Lines adjacency primitive type (OES).",
  "GL_LINE_STRIP_ADJACENCY": "Line strip with adjacency information.",
  "GL_LINE_STRIP_ADJACENCY_ARB": "Line strip adjacency primitive type (ARB).",
  "GL_LINE_STRIP_ADJACENCY_EXT": "Line strip adjacency primitive type (EXT).",
  "GL_LINE_STRIP_ADJACENCY_OES": "Line strip adjacency primitive type (OES).",
  "GL_TRIANGLES_ADJACENCY": "Triangles with adjacency information.",
  "GL_TRIANGLES_ADJACENCY_ARB": "Triangles adjacency primitive type (ARB).",
  "GL_TRIANGLES_ADJACENCY_EXT": "Triangles adjacency primitive type (EXT).",
  "GL_TRIANGLES_ADJACENCY_OES": "Triangles adjacency primitive type (OES).",
  "GL_TRIANGLE_STRIP_ADJACENCY": "Triangle strip with adjacency information.",
  "GL_TRIANGLE_STRIP_ADJACENCY_ARB": "Triangle strip adjacency primitive type (ARB).",
  "GL_TRIANGLE_STRIP_ADJACENCY_EXT": "Triangle strip adjacency primitive type (EXT).",
  "GL_TRIANGLE_STRIP_ADJACENCY_OES": "Triangle strip adjacency primitive type (OES).",
  "GL_PATCHES": "Primitive type for patches.",
  "GL_PATCHES_EXT": "Primitive type for patches, specific to EXT.",
  "GL_PATCHES_OES": "Primitive type for patches, specific to OES.",
  "GL_ACCUM": "Accumulation buffer operation.",
  "GL_LOAD": "Load operation for accumulation buffer.",
  "GL_RETURN": "Return operation for accumulation buffer.",
  "GL_MULT": "Multiply operation for accumulation buffer.",
  "GL_ADD": "Add operation for accumulation buffer.",
  "GL_NEVER": "Never passes the depth test.",
  "GL_LESS": "Passes if the value is less than the reference.",
  "GL_EQUAL": "Passes if the value is equal to the reference.",
  "GL_LEQUAL": "Passes if the value is less than or equal to the reference.",
  "GL_GREATER": "Passes if the value is greater than the reference.",
  "GL_NOTEQUAL": "Passes if the value is not equal to the reference.",
  "GL_GEQUAL": "Passes if the value is greater than or equal to the reference.",
  "GL_ALWAYS": "Always passes the depth test.",
  "GL_SRC_COLOR": "Source color for blending operations.",
  "GL_ONE_MINUS_SRC_COLOR": "One minus the source color for blending operations.",
  "GL_SRC_ALPHA": "Source alpha for blending operations.",
  "GL_ONE_MINUS_SRC_ALPHA": "One minus the source alpha for blending operations.",
  "GL_DST_ALPHA": "Destination alpha for blending operations.",
  "GL_ONE_MINUS_DST_ALPHA": "One minus the destination alpha for blending operations.",
  "GL_DST_COLOR": "Destination color for blending operations.",
  "GL_ONE_MINUS_DST_COLOR": "One minus the destination color for blending operations.",
  "GL_SRC_ALPHA_SATURATE": "Source alpha saturate for blending operations.",
  "GL_SRC_ALPHA_SATURATE_EXT": "Source alpha saturate for blending operations, specific to EXT.",
  "GL_FRONT_LEFT": "Front left color buffer.",
  "GL_FRONT_RIGHT": "Front right color buffer.",
  "GL_BACK_LEFT": "Back left color buffer.",
  "GL_BACK_RIGHT": "Back right color buffer.",
  "GL_FRONT": "Front color buffer.",
  "GL_BACK": "Back color buffer.",
  "GL_LEFT": "Left color buffer.",
  "GL_RIGHT": "Right color buffer.",
  "GL_FRONT_AND_BACK": "Both front and back color buffers.",
  "GL_AUX0": "Auxiliary color buffer 0.",
  "GL_AUX1": "Auxiliary color buffer 1.",
  "GL_AUX2": "Auxiliary color buffer 2.",
  "GL_AUX3": "Auxiliary color buffer 3.",
  "GL_INVALID_ENUM": "Indicates an invalid enum value.",
  "GL_INVALID_VALUE": "Indicates an invalid value.",
  "GL_INVALID_OPERATION": "Indicates an invalid operation.",
  "GL_STACK_OVERFLOW": "Indicates a stack overflow error.",
  "GL_STACK_OVERFLOW_KHR": "Stack overflow error, specific to KHR.",
  "GL_STACK_UNDERFLOW": "Indicates a stack underflow error.",
  "GL_STACK_UNDERFLOW_KHR": "Stack underflow error, specific to KHR.",
  "GL_OUT_OF_MEMORY": "Indicates an out of memory error.",
  "GL_INVALID_FRAMEBUFFER_OPERATION": "Indicates an invalid framebuffer operation.",
  "GL_INVALID_FRAMEBUFFER_OPERATION_EXT": "Invalid framebuffer operation, specific to EXT.",
  "GL_INVALID_FRAMEBUFFER_OPERATION_OES": "Invalid framebuffer operation, specific to OES.",
  "GL_CONTEXT_LOST": "Indicates the OpenGL context was lost.",
  "GL_CONTEXT_LOST_KHR": "Context lost, specific to KHR.",
  "GL_2D": "Indicates 2D rendering.",
  "GL_3D": "Indicates 3D rendering.",
  "GL_3D_COLOR": "Indicates 3D color rendering.",
  "GL_3D_COLOR_TEXTURE": "Indicates 3D color texture rendering.",
  "GL_4D_COLOR_TEXTURE": "Indicates 4D color texture rendering.",
  "GL_PASS_THROUGH_TOKEN": "Token for pass-through operation.",
  "GL_POINT_TOKEN": "Token for point operation.",
  "GL_LINE_TOKEN": "Token for line operation.",
  "GL_POLYGON_TOKEN": "Token for polygon operation.",
  "GL_BITMAP_TOKEN": "Token for bitmap operation.",
  "GL_DRAW_PIXEL_TOKEN": "Token for drawing pixels.",
  "GL_COPY_PIXEL_TOKEN": "Token for copying pixels.",
  "GL_LINE_RESET_TOKEN": "Token for resetting line operation.",
  "GL_EXP": "Exponential function.",
  "GL_EXP2": "Exponential function base 2.",
  "GL_CW": "Indicates clockwise winding order.",
  "GL_CCW": "Indicates counter-clockwise winding order.",
  "GL_COEFF": "Coefficient for curve operations.",
  "GL_ORDER": "Order of the curve.",
  "GL_DOMAIN": "Domain for curve operations.",
  "GL_CURRENT_COLOR": "Current color used for drawing.",
  "GL_CURRENT_INDEX": "Current color index used for indexed colors.",
  "GL_CURRENT_NORMAL": "Current normal vector.",
  "GL_CURRENT_TEXTURE_COORDS": "Current texture coordinates.",
  "GL_CURRENT_RASTER_COLOR": "Current color for raster operations.",
  "GL_CURRENT_RASTER_INDEX": "Current color index for raster operations.",
  "GL_CURRENT_RASTER_TEXTURE_COORDS": "Current texture coordinates for raster operations.",
  "GL_CURRENT_RASTER_POSITION": "Current position for raster operations.",
  "GL_CURRENT_RASTER_POSITION_VALID": "Indicates if the current raster position is valid.",
  "GL_CURRENT_RASTER_DISTANCE": "Current distance for raster operations.",
  "GL_POINT_SMOOTH": "Indicates point smoothing is enabled.",
  "GL_POINT_SIZE": "Current size of points.",
  "GL_POINT_SIZE_RANGE": "Range of valid point sizes.",
  "GL_SMOOTH_POINT_SIZE_RANGE": "Range of smooth point sizes.",
  "GL_POINT_SIZE_GRANULARITY": "Granularity of point sizes.",
  "GL_SMOOTH_POINT_SIZE_GRANULARITY": "Granularity of smooth point sizes.",
  "GL_LINE_SMOOTH": "Indicates line smoothing is enabled.",
  "GL_LINE_WIDTH": "Current width of lines.",
  "GL_LINE_WIDTH_RANGE": "Range of valid line widths.",
  "GL_SMOOTH_LINE_WIDTH_RANGE": "Range of smooth line widths.",
  "GL_LINE_WIDTH_GRANULARITY": "Granularity of line widths.",
  "GL_SMOOTH_LINE_WIDTH_GRANULARITY": "Granularity of smooth line widths.",
  "GL_LINE_STIPPLE": "Indicates line stipple pattern is enabled.",
  "GL_LINE_STIPPLE_PATTERN": "Current line stipple pattern.",
  "GL_LINE_STIPPLE_REPEAT": "Repeat factor for line stipple pattern.",
  "GL_LIST_MODE": "Indicates the current display list mode.",
  "GL_MAX_LIST_NESTING": "Maximum allowed nesting of display lists.",
  "GL_LIST_BASE": "Base index for display lists.",
  "GL_LIST_INDEX": "Current index for display lists.",
  "GL_POLYGON_MODE": "Specifies the rendering mode for polygons.",
  "GL_POLYGON_MODE_NV": "Polygon mode, specific to NV extensions.",
  "GL_POLYGON_SMOOTH": "Enables or disables polygon smoothing.",
  "GL_POLYGON_STIPPLE": "Enables or disables polygon stippling.",
  "GL_EDGE_FLAG": "Indicates if edge vertices are to be rendered.",
  "GL_CULL_FACE": "Enables or disables face culling.",
  "GL_CULL_FACE_MODE": "Specifies the culling mode (front, back, or both).",
  "GL_FRONT_FACE": "Specifies the front face winding order.",
  "GL_LIGHTING": "Enables or disables lighting calculations.",
  "GL_LIGHT_MODEL_LOCAL_VIEWER": "Specifies whether local viewer lighting is enabled.",
  "GL_LIGHT_MODEL_TWO_SIDE": "Specifies if two-sided lighting is enabled.",
  "GL_LIGHT_MODEL_AMBIENT": "Specifies the ambient light color.",
  "GL_SHADE_MODEL": "Specifies the shading model (flat or smooth).",
  "GL_COLOR_MATERIAL_FACE": "Specifies which face to apply color material to.",
  "GL_COLOR_MATERIAL_PARAMETER": "Specifies which material property is affected by color material.",
  "GL_COLOR_MATERIAL": "Enables or disables color material.",
  "GL_FOG": "Enables or disables fog effects.",
  "GL_FOG_INDEX": "Specifies the fog index value.",
  "GL_FOG_DENSITY": "Specifies the density of the fog.",
  "GL_FOG_START": "Specifies the starting distance for fog effects.",
  "GL_FOG_END": "Specifies the ending distance for fog effects.",
  "GL_FOG_MODE": "Specifies the fog mode (exp, exp2, linear).",
  "GL_FOG_COLOR": "Specifies the color of the fog.",
  "GL_DEPTH_RANGE": "Specifies the mapping of depth values to normalized device coordinates.",
  "GL_DEPTH_TEST": "Enables or disables depth testing.",
  "GL_DEPTH_WRITEMASK": "Enables or disables writing to the depth buffer.",
  "GL_DEPTH_CLEAR_VALUE": "Specifies the clear value for the depth buffer.",
  "GL_DEPTH_FUNC": "Specifies the function used for depth comparisons.",
  "GL_ACCUM_CLEAR_VALUE": "Specifies the clear value for the accumulation buffer.",
  "GL_STENCIL_TEST": "Enables or disables stencil testing.",
  "GL_STENCIL_CLEAR_VALUE": "Specifies the clear value for the stencil buffer.",
  "GL_STENCIL_FUNC": "Specifies the function used for stencil testing.",
  "GL_STENCIL_VALUE_MASK": "Specifies the mask used for stencil values.",
  "GL_STENCIL_FAIL": "Specifies the action to take on stencil test failure.",
  "GL_STENCIL_PASS_DEPTH_FAIL": "Specifies action on stencil test success but depth test failure.",
  "GL_STENCIL_PASS_DEPTH_PASS": "Specifies action on stencil test and depth test success.",
  "GL_STENCIL_REF": "Specifies the reference value for stencil testing.",
  "GL_STENCIL_WRITEMASK": "Specifies the mask for writing stencil values.",
  "GL_MATRIX_MODE": "Specifies the current matrix mode (modelview, projection, etc.).",
  "GL_NORMALIZE": "Enables or disables normalization of normals.",
  "GL_VIEWPORT": "Specifies the viewport dimensions.",
  "GL_MODELVIEW_STACK_DEPTH": "Current depth of the modelview matrix stack.",
  "GL_MODELVIEW0_STACK_DEPTH_EXT": "Modelview stack depth for EXT extensions.",
  "GL_PATH_MODELVIEW_STACK_DEPTH_NV": "Modelview stack depth for paths, specific to NV.",
  "GL_PROJECTION_STACK_DEPTH": "Current depth of the projection matrix stack.",
  "GL_PATH_PROJECTION_STACK_DEPTH_NV": "Projection stack depth for paths, specific to NV.",
  "GL_TEXTURE_STACK_DEPTH": "Current depth of the texture matrix stack.",
  "GL_MODELVIEW_MATRIX": "Current modelview matrix.",
  "GL_MODELVIEW0_MATRIX_EXT": "Modelview matrix for EXT extensions.",
  "GL_PATH_MODELVIEW_MATRIX_NV": "Modelview matrix for paths, specific to NV.",
  "GL_PROJECTION_MATRIX": "Current projection matrix.",
  "GL_PATH_PROJECTION_MATRIX_NV": "Projection matrix for paths, specific to NV.",
  "GL_TEXTURE_MATRIX": "Current texture matrix.",
  "GL_ATTRIB_STACK_DEPTH": "Current depth of the attribute stack.",
  "GL_CLIENT_ATTRIB_STACK_DEPTH": "Current depth of the client attribute stack.",
  "GL_ALPHA_TEST": "Enables or disables alpha testing.",
  "GL_ALPHA_TEST_QCOM": "Alpha testing, specific to QCOM extensions.",
  "GL_ALPHA_TEST_FUNC": "Specifies the function for alpha testing.",
  "GL_ALPHA_TEST_FUNC_QCOM": "Alpha test function for QCOM extensions.",
  "GL_ALPHA_TEST_REF": "Specifies the reference value for alpha testing.",
  "GL_ALPHA_TEST_REF_QCOM": "Reference value for alpha testing, specific to QCOM.",
  "GL_DITHER": "Enables or disables dithering.",
  "GL_BLEND_DST": "Specifies the destination factor for blending.",
  "GL_BLEND_SRC": "Specifies the source factor for blending.",
  "GL_BLEND": "Enables or disables blending.",
  "GL_LOGIC_OP_MODE": "Specifies the current logical operation mode.",
  "GL_INDEX_LOGIC_OP": "Enables or disables index logic operations.",
  "GL_LOGIC_OP": "Specifies the logical operation to perform.",
  "GL_COLOR_LOGIC_OP": "Enables or disables color logic operations.",
  "GL_AUX_BUFFERS": "Number of auxiliary color buffers available.",
  "GL_DRAW_BUFFER": "Specifies the current draw buffer.",
  "GL_DRAW_BUFFER_EXT": "Specifies the current draw buffer, specific to EXT.",
  "GL_READ_BUFFER": "Specifies the buffer into which pixel data is read.",
  "GL_READ_BUFFER_EXT": "Specifies the read buffer, specific to EXT extensions.",
  "GL_READ_BUFFER_NV": "Specifies the read buffer, specific to NV extensions.",
  "GL_SCISSOR_BOX": "Specifies the rectangle that bounds the scissor test.",
  "GL_SCISSOR_TEST": "Enables or disables the scissor test.",
  "GL_INDEX_CLEAR_VALUE": "Specifies the clear value for the index buffer.",
  "GL_INDEX_WRITEMASK": "Specifies the write mask for the index buffer.",
  "GL_COLOR_CLEAR_VALUE": "Specifies the clear value for the color buffer.",
  "GL_COLOR_WRITEMASK": "Specifies the write mask for the color buffer.",
  "GL_INDEX_MODE": "Specifies whether to use color index or RGBA mode.",
  "GL_RGBA_MODE": "Specifies that RGBA mode is used.",
  "GL_DOUBLEBUFFER": "Enables or disables double buffering.",
  "GL_STEREO": "Enables or disables stereo buffering.",
  "GL_RENDER_MODE": "Specifies the rendering mode (e.g., selection or rendering).",
  "GL_PERSPECTIVE_CORRECTION_HINT": "Hints to the OpenGL implementation for perspective correction.",
  "GL_POINT_SMOOTH_HINT": "Hints to the OpenGL implementation for point smoothing.",
  "GL_LINE_SMOOTH_HINT": "Hints to the OpenGL implementation for line smoothing.",
  "GL_POLYGON_SMOOTH_HINT": "Hints to the OpenGL implementation for polygon smoothing.",
  "GL_FOG_HINT": "Hints to the OpenGL implementation for fog calculations.",
  "GL_TEXTURE_GEN_S": "Enables or disables texture coordinate generation for the S coordinate.",
  "GL_TEXTURE_GEN_T": "Enables or disables texture coordinate generation for the T coordinate.",
  "GL_TEXTURE_GEN_R": "Enables or disables texture coordinate generation for the R coordinate.",
  "GL_TEXTURE_GEN_Q": "Enables or disables texture coordinate generation for the Q coordinate.",
  "GL_PIXEL_MAP_I_TO_I": "Defines a pixel map for mapping index values to index values.",
  "GL_PIXEL_MAP_S_TO_S": "Defines a pixel map for mapping color index values to color index values.",
  "GL_PIXEL_MAP_I_TO_R": "Defines a pixel map for mapping index values to red component values.",
  "GL_PIXEL_MAP_I_TO_G": "Defines a pixel map for mapping index values to green component values.",
  "GL_PIXEL_MAP_I_TO_B": "Defines a pixel map for mapping index values to blue component values.",
  "GL_PIXEL_MAP_I_TO_A": "Defines a pixel map for mapping index values to alpha component values.",
  "GL_PIXEL_MAP_R_TO_R": "Defines a pixel map for mapping red component values to red component values.",
  "GL_PIXEL_MAP_G_TO_G": "Defines a pixel map for mapping green component values to green component values.",
  "GL_PIXEL_MAP_B_TO_B": "Defines a pixel map for mapping blue component values to blue component values.",
  "GL_PIXEL_MAP_A_TO_A": "Defines a pixel map for mapping alpha component values to alpha component values.",
  "GL_PIXEL_MAP_I_TO_I_SIZE": "Specifies the size of the pixel map for index to index mapping.",
  "GL_PIXEL_MAP_S_TO_S_SIZE": "Specifies the size of the pixel map for color index to color index mapping.",
  "GL_PIXEL_MAP_I_TO_R_SIZE": "Specifies the size of the pixel map for index to red component mapping.",
  "GL_PIXEL_MAP_I_TO_G_SIZE": "Specifies the size of the pixel map for index to green component mapping.",
  "GL_PIXEL_MAP_I_TO_B_SIZE": "Specifies the size of the pixel map for index to blue component mapping.",
  "GL_PIXEL_MAP_I_TO_A_SIZE": "Specifies the size of the pixel map for index to alpha component mapping.",
  "GL_PIXEL_MAP_R_TO_R_SIZE": "Specifies the size of the pixel map for red to red mapping.",
  "GL_PIXEL_MAP_G_TO_G_SIZE": "Specifies the size of the pixel map for green to green mapping.",
  "GL_PIXEL_MAP_B_TO_B_SIZE": "Specifies the size of the pixel map for blue to blue mapping.",
  "GL_PIXEL_MAP_A_TO_A_SIZE": "Specifies the size of the pixel map for alpha to alpha mapping.",
  "GL_UNPACK_SWAP_BYTES": "Enables or disables swapping of bytes when unpacking pixel data.",
  "GL_UNPACK_LSB_FIRST": "Specifies whether the least significant bit is unpacked first.",
  "GL_UNPACK_ROW_LENGTH": "Specifies the number of pixels in a row when unpacking.",
  "GL_UNPACK_ROW_LENGTH_EXT": "Specifies the row length for unpacking, specific to EXT extensions.",
  "GL_UNPACK_SKIP_ROWS": "Specifies the number of rows to skip when unpacking.",
  "GL_UNPACK_SKIP_ROWS_EXT": "Specifies the number of rows to skip, specific to EXT extensions.",
  "GL_UNPACK_SKIP_PIXELS": "Specifies the number of pixels to skip when unpacking.",
  "GL_UNPACK_SKIP_PIXELS_EXT": "Specifies the number of pixels to skip, specific to EXT extensions.",
  "GL_UNPACK_ALIGNMENT": "Specifies the alignment of pixel data in memory when unpacking.",
  "GL_PACK_SWAP_BYTES": "Enables or disables swapping of bytes when packing pixel data.",
  "GL_PACK_LSB_FIRST": "Specifies whether the least significant bit is packed first.",
  "GL_PACK_ROW_LENGTH": "Specifies the number of pixels in a row when packing.",
  "GL_PACK_ROW_LENGTH_NV": "Specifies the row length for packing, specific to NV extensions.",
  "GL_PACK_SKIP_ROWS": "Specifies the number of rows to skip when packing.",
  "GL_PACK_SKIP_ROWS_NV": "Specifies the number of rows to skip, specific to NV extensions.",
  "GL_PACK_SKIP_PIXELS": "Specifies the number of pixels to skip when packing.",
  "GL_PACK_SKIP_PIXELS_NV": "Specifies the number of pixels to skip, specific to NV extensions.",
  "GL_PACK_ALIGNMENT": "Specifies the alignment of pixel data in memory when packing.",
  "GL_MAP_COLOR": "Enables or disables color mapping.",
  "GL_MAP_STENCIL": "Enables or disables stencil mapping.",
  "GL_INDEX_SHIFT": "Specifies a shift value for index values.",
  "GL_INDEX_OFFSET": "Specifies an offset for index values.",
  "GL_RED_SCALE": "Specifies a scale factor for red component values.",
  "GL_RED_BIAS": "Specifies a bias for red component values.",
  "GL_ZOOM_X": "Specifies the zoom factor in the X direction.",
  "GL_ZOOM_Y": "Specifies the zoom factor in the Y direction.",
  "GL_GREEN_SCALE": "Specifies a scale factor for green component values.",
  "GL_GREEN_BIAS": "Specifies a bias for green component values.",
  "GL_BLUE_SCALE": "Specifies a scale factor for blue component values.",
  "GL_BLUE_BIAS": "Specifies a bias for blue component values.",
  "GL_ALPHA_SCALE": "Specifies a scale factor for alpha component values.",
  "GL_ALPHA_BIAS": "Specifies a bias for alpha component values.",
  "GL_DEPTH_SCALE": "Specifies a scale factor for depth values.",
  "GL_DEPTH_BIAS": "Specifies a bias factor for depth values.",
  "GL_MAX_EVAL_ORDER": "Specifies the maximum order of evaluation for the evaluation functions.",
  "GL_MAX_LIGHTS": "Specifies the maximum number of light sources supported.",
  "GL_MAX_CLIP_PLANES": "Specifies the maximum number of clipping planes supported.",
  "GL_MAX_CLIP_PLANES_IMG": "Specifies the maximum number of clipping planes for IMG extensions.",
  "GL_MAX_CLIP_DISTANCES": "Specifies the maximum number of clip distances.",
  "GL_MAX_CLIP_DISTANCES_EXT": "Specifies the maximum clip distances for EXT extensions.",
  "GL_MAX_CLIP_DISTANCES_APPLE": "Specifies the maximum clip distances for Apple extensions.",
  "GL_MAX_TEXTURE_SIZE": "Specifies the maximum dimensions of a texture.",
  "GL_MAX_PIXEL_MAP_TABLE": "Specifies the maximum size of the pixel map table.",
  "GL_MAX_ATTRIB_STACK_DEPTH": "Specifies the maximum depth of the attribute stack.",
  "GL_MAX_MODELVIEW_STACK_DEPTH": "Specifies the maximum depth of the modelview matrix stack.",
  "GL_PATH_MAX_MODELVIEW_STACK_DEPTH_NV": "Specifies the maximum depth of the modelview stack for NV extensions.",
  "GL_MAX_NAME_STACK_DEPTH": "Specifies the maximum depth of the name stack.",
  "GL_MAX_PROJECTION_STACK_DEPTH": "Specifies the maximum depth of the projection matrix stack.",
  "GL_PATH_MAX_PROJECTION_STACK_DEPTH_NV": "Specifies the maximum depth of the projection stack for NV extensions.",
  "GL_MAX_TEXTURE_STACK_DEPTH": "Specifies the maximum depth of the texture matrix stack.",
  "GL_MAX_VIEWPORT_DIMS": "Specifies the maximum dimensions of the viewport.",
  "GL_MAX_CLIENT_ATTRIB_STACK_DEPTH": "Specifies the maximum depth of the client attribute stack.",
  "GL_SUBPIXEL_BITS": "Specifies the number of bits used for subpixel precision.",
  "GL_INDEX_BITS": "Specifies the number of bits used for index values.",
  "GL_RED_BITS": "Specifies the number of bits used for the red component.",
  "GL_GREEN_BITS": "Specifies the number of bits used for the green component.",
  "GL_BLUE_BITS": "Specifies the number of bits used for the blue component.",
  "GL_ALPHA_BITS": "Specifies the number of bits used for the alpha component.",
  "GL_DEPTH_BITS": "Specifies the number of bits used for depth buffering.",
  "GL_STENCIL_BITS": "Specifies the number of bits used for stencil buffering.",
  "GL_ACCUM_RED_BITS": "Specifies the number of bits used for the red component in the accumulation buffer.",
  "GL_ACCUM_GREEN_BITS": "Specifies the number of bits used for the green component in the accumulation buffer.",
  "GL_ACCUM_BLUE_BITS": "Specifies the number of bits used for the blue component in the accumulation buffer.",
  "GL_ACCUM_ALPHA_BITS": "Specifies the number of bits used for the alpha component in the accumulation buffer.",
  "GL_NAME_STACK_DEPTH": "Specifies the current depth of the name stack.",
  "GL_AUTO_NORMAL": "Enables or disables automatic normal generation.",
  "GL_MAP1_COLOR_4": "Specifies a one-dimensional color map.",
  "GL_MAP1_INDEX": "Specifies a one-dimensional index map.",
  "GL_MAP1_NORMAL": "Specifies a one-dimensional normal map.",
  "GL_MAP1_TEXTURE_COORD_1": "Specifies the first texture coordinate in a one-dimensional map.",
  "GL_MAP1_TEXTURE_COORD_2": "Specifies the second texture coordinate in a one-dimensional map.",
  "GL_MAP1_TEXTURE_COORD_3": "Specifies the third texture coordinate in a one-dimensional map.",
  "GL_MAP1_TEXTURE_COORD_4": "Specifies the fourth texture coordinate in a one-dimensional map.",
  "GL_MAP1_VERTEX_3": "Specifies a three-dimensional vertex map.",
  "GL_MAP1_VERTEX_4": "Specifies a four-dimensional vertex map.",
  "GL_MAP2_COLOR_4": "Specifies a two-dimensional color map.",
  "GL_MAP2_INDEX": "Specifies a two-dimensional index map.",
  "GL_MAP2_NORMAL": "Specifies a two-dimensional normal map.",
  "GL_MAP2_TEXTURE_COORD_1": "Specifies the first texture coordinate in a two-dimensional map.",
  "GL_MAP2_TEXTURE_COORD_2": "Specifies the second texture coordinate in a two-dimensional map.",
  "GL_MAP2_TEXTURE_COORD_3": "Specifies the third texture coordinate in a two-dimensional map.",
  "GL_MAP2_TEXTURE_COORD_4": "Specifies the fourth texture coordinate in a two-dimensional map.",
  "GL_MAP2_VERTEX_3": "Specifies a three-dimensional vertex map for two-dimensional evaluation.",
  "GL_MAP2_VERTEX_4": "Specifies a four-dimensional vertex map for two-dimensional evaluation.",
  "GL_MAP1_GRID_DOMAIN": "Specifies the domain of a one-dimensional grid.",
  "GL_MAP1_GRID_SEGMENTS": "Specifies the number of segments in a one-dimensional grid.",
  "GL_MAP2_GRID_DOMAIN": "Specifies the domain of a two-dimensional grid.",
  "GL_MAP2_GRID_SEGMENTS": "Specifies the number of segments in a two-dimensional grid.",
  "GL_TEXTURE_1D": "Specifies a one-dimensional texture.",
  "GL_TEXTURE_2D": "Specifies a two-dimensional texture.",
  "GL_FEEDBACK_BUFFER_POINTER": "Specifies the pointer to the feedback buffer.",
  "GL_FEEDBACK_BUFFER_SIZE": "Specifies the size of the feedback buffer.",
  "GL_FEEDBACK_BUFFER_TYPE": "Specifies the type of the feedback buffer.",
  "GL_SELECTION_BUFFER_POINTER": "Specifies the pointer to the selection buffer.",
  "GL_SELECTION_BUFFER_SIZE": "Specifies the size of the selection buffer.",
  "GL_TEXTURE_WIDTH": "Specifies the width of the texture.",
  "GL_TEXTURE_HEIGHT": "Specifies the height of the texture.",
  "GL_TEXTURE_INTERNAL_FORMAT": "Specifies the internal format of the texture.",
  "GL_TEXTURE_COMPONENTS": "Specifies the number of components in the texture.",
  "GL_TEXTURE_BORDER_COLOR": "Specifies the border color of the texture.",
  "GL_TEXTURE_BORDER_COLOR_EXT": "Specifies the border color for EXT extensions.",
  "GL_TEXTURE_BORDER_COLOR_NV": "Specifies the border color for NV extensions.",
  "GL_TEXTURE_BORDER_COLOR_OES": "Specifies the border color for OES extensions.",
  "GL_TEXTURE_BORDER": "Specifies the width of the texture border.",
  "GL_TEXTURE_TARGET": "Specifies the target for the texture (e.g., 1D, 2D).",
  "GL_DONT_CARE": "Specifies that the implementation can ignore this parameter.",
  "GL_FASTEST": "Specifies that the fastest performance option is desired.",
  "GL_NICEST": "Specifies that the nicest quality option is desired.",
  "GL_AMBIENT": "Specifies the ambient light color.",
  "GL_DIFFUSE": "Specifies the diffuse light color.",
  "GL_SPECULAR": "Specifies the specular light color.",
  "GL_POSITION": "Specifies the position of the light source.",
  "GL_SPOT_DIRECTION": "Specifies the direction of the spotlight.",
  "GL_SPOT_EXPONENT": "Specifies the exponent for the spotlight attenuation.",
  "GL_SPOT_CUTOFF": "Specifies the cutoff angle for the spotlight.",
  "GL_CONSTANT_ATTENUATION": "Specifies the constant attenuation factor for lights.",
  "GL_LINEAR_ATTENUATION": "Specifies the linear attenuation factor for lights.",
  "GL_QUADRATIC_ATTENUATION": "Specifies the quadratic attenuation factor for lights.",
  "GL_COMPILE": "Specifies that the display list is to be compiled.",
  "GL_COMPILE_AND_EXECUTE": "Specifies that the display list is to be compiled and executed.",
  "GL_BYTE": "Specifies a signed byte data type.",
  "GL_UNSIGNED_BYTE": "Specifies an unsigned byte data type.",
  "GL_SHORT": "Specifies a signed short data type.",
  "GL_UNSIGNED_SHORT": "Specifies an unsigned short data type.",
  "GL_INT": "Specifies a signed integer data type.",
  "GL_UNSIGNED_INT": "Specifies an unsigned integer data type.",
  "GL_FLOAT": "Specifies a floating-point data type.",
  "GL_2_BYTES": "Specifies a data type that uses 2 bytes.",
  "GL_2_BYTES_NV": "Specifies a 2-byte data type for NV extensions.",
  "GL_3_BYTES": "Specifies a data type that uses 3 bytes.",
  "GL_3_BYTES_NV": "Specifies a 3-byte data type for NV extensions.",
  "GL_4_BYTES": "Specifies a data type that uses 4 bytes.",
  "GL_4_BYTES_NV": "Specifies a data type that uses 4 bytes for NV extensions.",
  "GL_DOUBLE": "Specifies a double-precision floating-point data type.",
  "GL_DOUBLE_EXT": "Specifies a double-precision data type for EXT extensions.",
  "GL_HALF_FLOAT": "Specifies a half-precision floating-point data type.",
  "GL_HALF_FLOAT_ARB": "Specifies a half-precision data type for ARB extensions.",
  "GL_HALF_FLOAT_NV": "Specifies a half-precision data type for NV extensions.",
  "GL_HALF_APPLE": "Specifies a half-precision data type for Apple extensions.",
  "GL_FIXED": "Specifies a fixed-point data type.",
  "GL_FIXED_OES": "Specifies a fixed-point data type for OES extensions.",
  "GL_INT64_ARB": "Specifies a 64-bit signed integer for ARB extensions.",
  "GL_INT64_NV": "Specifies a 64-bit signed integer for NV extensions.",
  "GL_UNSIGNED_INT64_ARB": "Specifies a 64-bit unsigned integer for ARB extensions.",
  "GL_UNSIGNED_INT64_NV": "Specifies a 64-bit unsigned integer for NV extensions.",
  "GL_CLEAR": "Specifies a clear operation for buffers.",
  "GL_AND": "Specifies a logical AND operation.",
  "GL_AND_REVERSE": "Specifies a logical AND operation with reverse.",
  "GL_COPY": "Specifies a copy operation for buffers.",
  "GL_AND_INVERTED": "Specifies a logical AND operation followed by inversion.",
  "GL_NOOP": "Specifies a no-operation, effectively does nothing.",
  "GL_XOR": "Specifies a logical XOR operation.",
  "GL_XOR_NV": "Specifies a logical XOR operation for NV extensions.",
  "GL_OR": "Specifies a logical OR operation.",
  "GL_NOR": "Specifies a logical NOR operation.",
  "GL_EQUIV": "Specifies a logical equivalence operation.",
  "GL_INVERT": "Specifies a logical inversion operation.",
  "GL_OR_REVERSE": "Specifies a logical OR operation with reverse.",
  "GL_COPY_INVERTED": "Specifies a copy operation that inverts the source.",
  "GL_OR_INVERTED": "Specifies a logical OR operation followed by inversion.",
  "GL_NAND": "Specifies a logical NAND operation.",
  "GL_SET": "Specifies a set operation for buffers.",
  "GL_EMISSION": "Specifies the emission color for lighting.",
  "GL_SHININESS": "Specifies the shininess factor for specular highlights.",
  "GL_AMBIENT_AND_DIFFUSE": "Specifies both ambient and diffuse light properties.",
  "GL_COLOR_INDEXES": "Specifies a color index mode for indexed color displays.",
  "GL_MODELVIEW": "Specifies the modelview matrix stack.",
  "GL_MODELVIEW0_ARB": "Specifies the first modelview matrix for ARB extensions.",
  "GL_MODELVIEW0_EXT": "Specifies the first modelview matrix for EXT extensions.",
  "GL_PATH_MODELVIEW_NV": "Specifies the modelview matrix for NV extensions.",
  "GL_PROJECTION": "Specifies the projection matrix stack.",
  "GL_PATH_PROJECTION_NV": "Specifies the projection matrix for NV extensions.",
  "GL_TEXTURE": "Specifies the texture matrix stack.",
  "GL_COLOR": "Specifies the color buffer.",
  "GL_COLOR_EXT": "Specifies the color buffer for EXT extensions.",
  "GL_DEPTH": "Specifies the depth buffer.",
  "GL_DEPTH_EXT": "Specifies the depth buffer for EXT extensions.",
  "GL_STENCIL": "Specifies the stencil buffer.",
  "GL_STENCIL_EXT": "Specifies the stencil buffer for EXT extensions.",
  "GL_COLOR_INDEX": "Specifies color index mode.",
  "GL_STENCIL_INDEX": "Specifies the stencil index buffer.",
  "GL_STENCIL_INDEX_OES": "Specifies the stencil index buffer for OES extensions.",
  "GL_DEPTH_COMPONENT": "Specifies a depth component for textures.",
  "GL_RED": "Specifies the red color component.",
  "GL_RED_EXT": "Specifies the red color component for EXT extensions.",
  "GL_RED_NV": "Specifies the red color component for NV extensions.",
  "GL_GREEN": "Specifies the green color component.",
  "GL_GREEN_NV": "Specifies the green color component for NV extensions.",
  "GL_BLUE": "Specifies the blue color component.",
  "GL_BLUE_NV": "Specifies the blue color component for NV extensions.",
  "GL_ALPHA": "Specifies the alpha component for transparency.",
  "GL_RGB": "Specifies a color in RGB format.",
  "GL_RGBA": "Specifies a color in RGBA format.",
  "GL_LUMINANCE": "Specifies a grayscale color value.",
  "GL_LUMINANCE_ALPHA": "Specifies a grayscale value with an alpha channel.",
  "GL_BITMAP": "Specifies a bitmap data type.",
  "GL_POINT": "Specifies the point primitive.",
  "GL_POINT_NV": "Specifies the point primitive for NV extensions.",
  "GL_LINE": "Specifies the line primitive.",
  "GL_LINE_NV": "Specifies the line primitive for NV extensions.",
  "GL_FILL": "Specifies fill mode for polygons.",
  "GL_FILL_NV": "Specifies fill mode for polygons for NV extensions.",
  "GL_RENDER": "Specifies render mode for drawing.",
  "GL_FEEDBACK": "Specifies feedback mode for drawing.",
  "GL_SELECT": "Specifies selection mode for drawing.",
  "GL_FLAT": "Specifies flat shading model.",
  "GL_SMOOTH": "Specifies smooth shading model.",
  "GL_KEEP": "Specifies keeping the current value.",
  "GL_REPLACE": "Specifies replacing the current value.",
  "GL_INCR": "Specifies incrementing the current value.",
  "GL_DECR": "Specifies decrementing the current value.",
  "GL_VENDOR": "Specifies the vendor of the OpenGL implementation.",
  "GL_RENDERER": "Specifies the renderer of the OpenGL implementation.",
  "GL_VERSION": "Specifies the version of the OpenGL implementation.",
  "GL_EXTENSIONS": "Specifies the supported OpenGL extensions.",
  "GL_S": "Specifies the S texture coordinate.",
  "GL_T": "Specifies the T texture coordinate.",
  "GL_R": "Specifies the R texture coordinate.",
  "GL_Q": "Specifies the Q texture coordinate.",
  "GL_MODULATE": "Specifies modulation of texture colors.",
  "GL_DECAL": "Specifies decal texture mode.",
  "GL_TEXTURE_ENV_MODE": "Specifies the texture environment mode.",
  "GL_TEXTURE_ENV_COLOR": "Specifies the color for the texture environment.",
  "GL_TEXTURE_ENV": "Specifies the texture environment settings.",
  "GL_EYE_LINEAR": "Specifies eye linear texture coordinate generation.",
  "GL_EYE_LINEAR_NV": "Specifies eye linear texture coordinate generation for NV extensions.",
  "GL_OBJECT_LINEAR": "Specifies object linear texture coordinate generation.",
  "GL_OBJECT_LINEAR_NV": "Specifies object linear texture coordinate generation for NV extensions.",
  "GL_SPHERE_MAP": "Specifies spherical mapping for textures.",
  "GL_TEXTURE_GEN_MODE": "Specifies the texture generation mode.",
  "GL_TEXTURE_GEN_MODE_OES": "Specifies the texture generation mode for OES extensions.",
  "GL_OBJECT_PLANE": "Specifies the object plane for texture generation.",
  "GL_EYE_PLANE": "Specifies the eye plane for texture coordinate generation.",
  "GL_NEAREST": "Specifies nearest neighbor filtering for textures.",
  "GL_LINEAR": "Specifies linear filtering for textures.",
  "GL_NEAREST_MIPMAP_NEAREST": "Specifies nearest neighbor filtering with nearest mipmap.",
  "GL_LINEAR_MIPMAP_NEAREST": "Specifies linear filtering with nearest mipmap.",
  "GL_NEAREST_MIPMAP_LINEAR": "Specifies nearest neighbor filtering with linear mipmap.",
  "GL_LINEAR_MIPMAP_LINEAR": "Specifies linear filtering with linear mipmap.",
  "GL_TEXTURE_MAG_FILTER": "Specifies the texture magnification filter.",
  "GL_TEXTURE_MIN_FILTER": "Specifies the texture minification filter.",
  "GL_TEXTURE_WRAP_S": "Specifies the texture wrapping mode for the S coordinate.",
  "GL_TEXTURE_WRAP_T": "Specifies the texture wrapping mode for the T coordinate.",
  "GL_CLAMP": "Specifies clamping for texture coordinates.",
  "GL_REPEAT": "Specifies repeating for texture coordinates.",
  "GL_POLYGON_OFFSET_UNITS": "Specifies the factor for polygon offset.",
  "GL_POLYGON_OFFSET_POINT": "Specifies polygon offset for point primitives.",
  "GL_POLYGON_OFFSET_POINT_NV": "Specifies polygon offset for point primitives (NV extension).",
  "GL_POLYGON_OFFSET_LINE": "Specifies polygon offset for line primitives.",
  "GL_POLYGON_OFFSET_LINE_NV": "Specifies polygon offset for line primitives (NV extension).",
  "GL_R3_G3_B2": "Specifies a 2-byte RGB format with 3 bits for each channel.",
  "GL_V2F": "Specifies vertex data in 2D floating-point format.",
  "GL_V3F": "Specifies vertex data in 3D floating-point format.",
  "GL_C4UB_V2F": "Specifies color data with 4 unsigned bytes and vertex data in 2D floating-point format.",
  "GL_C4UB_V3F": "Specifies color data with 4 unsigned bytes and vertex data in 3D floating-point format.",
  "GL_C3F_V3F": "Specifies color data with 3 floating-point components and vertex data in 3D floating-point format.",
  "GL_N3F_V3F": "Specifies normal data with 3 floating-point components and vertex data in 3D floating-point format.",
  "GL_C4F_N3F_V3F": "Specifies color data with 4 floating-point components, normal data, and vertex data in 3D floating-point format.",
  "GL_T2F_V3F": "Specifies texture coordinate data with 2 floating-point components and vertex data in 3D floating-point format.",
  "GL_T4F_V4F": "Specifies texture coordinate data with 4 floating-point components and vertex data in 4D floating-point format.",
  "GL_T2F_C4UB_V3F": "Specifies texture coordinate data with 2 floating-point components, color data with 4 unsigned bytes, and vertex data in 3D floating-point format.",
  "GL_T2F_C3F_V3F": "Specifies texture coordinate data with 2 floating-point components, color data with 3 floating-point components, and vertex data in 3D floating-point format.",
  "GL_T2F_N3F_V3F": "Specifies texture coordinate data with 2 floating-point components, normal data with 3 floating-point components, and vertex data in 3D floating-point format.",
  "GL_T2F_C4F_N3F_V3F": "Specifies texture coordinate data with 2 floating-point components, color data with 4 floating-point components, normal data, and vertex data in 3D floating-point format.",
  "GL_T4F_C4F_N3F_V4F": "Specifies texture coordinate data with 4 floating-point components, color data with 4 floating-point components, normal data, and vertex data in 4D floating-point format.",
  "GL_CLIP_PLANE0": "Specifies the first clipping plane.",
  "GL_CLIP_PLANE0_IMG": "Specifies the first clipping plane for IMG extensions.",
  "GL_CLIP_DISTANCE0": "Specifies the first clipping distance.",
  "GL_CLIP_DISTANCE0_EXT": "Specifies the first clipping distance for EXT extensions.",
  "GL_CLIP_DISTANCE0_APPLE": "Specifies the first clipping distance for Apple extensions.",
  "GL_CLIP_PLANE1": "Specifies the second clipping plane.",
  "GL_CLIP_PLANE1_IMG": "Specifies the second clipping plane for IMG extensions.",
  "GL_CLIP_DISTANCE1": "Specifies the second clipping distance.",
  "GL_CLIP_DISTANCE1_EXT": "Specifies the second clipping distance for EXT extensions.",
  "GL_CLIP_DISTANCE1_APPLE": "Specifies the second clipping distance for Apple extensions.",
  "GL_CLIP_PLANE2": "Specifies the third clipping plane.",
  "GL_CLIP_PLANE2_IMG": "Specifies the third clipping plane for IMG extensions.",
  "GL_CLIP_DISTANCE2": "Specifies the third clipping distance.",
  "GL_CLIP_DISTANCE2_EXT": "Specifies the third clipping distance for EXT extensions.",
  "GL_CLIP_DISTANCE2_APPLE": "Specifies the third clipping distance for Apple extensions.",
  "GL_CLIP_PLANE3": "Specifies the fourth clipping plane.",
  "GL_CLIP_PLANE3_IMG": "Specifies the fourth clipping plane for IMG extensions.",
  "GL_CLIP_DISTANCE3": "Specifies the fourth clipping distance.",
  "GL_CLIP_DISTANCE3_EXT": "Specifies the fourth clipping distance for EXT extensions.",
  "GL_CLIP_DISTANCE3_APPLE": "Specifies the fourth clipping distance for Apple extensions.",
  "GL_CLIP_PLANE4": "Specifies the fifth clipping plane.",
  "GL_CLIP_PLANE4_IMG": "Specifies the fifth clipping plane for IMG extensions.",
  "GL_CLIP_DISTANCE4": "Specifies the fifth clipping distance.",
  "GL_CLIP_DISTANCE4_EXT": "Specifies the fifth clipping distance for EXT extensions.",
  "GL_CLIP_DISTANCE4_APPLE": "Specifies the fifth clipping distance for Apple extensions.",
  "GL_CLIP_PLANE5": "Specifies the sixth clipping plane.",
  "GL_CLIP_PLANE5_IMG": "Specifies the sixth clipping plane for IMG extensions.",
  "GL_CLIP_DISTANCE5": "Specifies the sixth clipping distance.",
  "GL_CLIP_DISTANCE5_EXT": "Specifies the sixth clipping distance for EXT extensions.",
  "GL_CLIP_DISTANCE5_APPLE": "Specifies the sixth clipping distance for Apple extensions.",
  "GL_CLIP_DISTANCE6": "Specifies the seventh clipping distance.",
  "GL_CLIP_DISTANCE6_EXT": "Specifies the seventh clipping distance for EXT extensions.",
  "GL_CLIP_DISTANCE6_APPLE": "Specifies the seventh clipping distance for Apple extensions.",
  "GL_CLIP_DISTANCE7": "Specifies the eighth clipping distance.",
  "GL_CLIP_DISTANCE7_EXT": "Specifies the eighth clipping distance for EXT extensions.",
  "GL_CLIP_DISTANCE7_APPLE": "Specifies the eighth clipping distance for Apple extensions.",
  "GL_LIGHT0": "Specifies the first light source.",
  "GL_LIGHT1": "Specifies the second light source.",
  "GL_LIGHT2": "Specifies the third light source.",
  "GL_LIGHT3": "Specifies the fourth light source.",
  "GL_LIGHT4": "Specifies the fifth light source.",
  "GL_LIGHT5": "Specifies the sixth light source.",
  "GL_LIGHT6": "Specifies the seventh light source.",
  "GL_LIGHT7": "Specifies the eighth light source.",
  "GL_ABGR_EXT": "Specifies a color format with alpha, blue, green, and red channels for EXT extensions.",
  "GL_CONSTANT_COLOR": "Specifies a constant color for blending.",
  "GL_CONSTANT_COLOR_EXT": "Specifies a constant color for blending (EXT extension).",
  "GL_ONE_MINUS_CONSTANT_COLOR": "Specifies one minus the constant color for blending.",
  "GL_ONE_MINUS_CONSTANT_COLOR_EXT": "Specifies one minus the constant color for blending (EXT extension).",
  "GL_CONSTANT_ALPHA": "Specifies a constant alpha value for blending.",
  "GL_CONSTANT_ALPHA_EXT": "Specifies a constant alpha value for blending (EXT extension).",
  "GL_ONE_MINUS_CONSTANT_ALPHA": "Specifies one minus the constant alpha for blending.",
  "GL_ONE_MINUS_CONSTANT_ALPHA_EXT": "Specifies one minus the constant alpha for blending (EXT extension).",
  "GL_BLEND_COLOR": "Specifies the blend color for blending operations.",
  "GL_BLEND_COLOR_EXT": "Specifies the blend color for blending operations (EXT extension).",
  "GL_FUNC_ADD": "Specifies the addition function for blending.",
  "GL_FUNC_ADD_EXT": "Specifies the addition function for blending (EXT extension).",
  "GL_FUNC_ADD_OES": "Specifies the addition function for blending (OES extension).",
  "GL_MIN": "Specifies the minimum function for blending.",
  "GL_MIN_EXT": "Specifies the minimum function for blending (EXT extension).",
  "GL_MAX": "Specifies the maximum function for blending.",
  "GL_MAX_EXT": "Specifies the maximum function for blending (EXT extension).",
  "GL_BLEND_EQUATION": "Specifies the blend equation for blending operations.",
  "GL_BLEND_EQUATION_EXT": "Specifies the blend equation for blending operations (EXT extension).",
  "GL_BLEND_EQUATION_OES": "Specifies the blend equation for blending (OES extension).",
  "GL_BLEND_EQUATION_RGB": "Specifies the RGB blend equation for blending operations.",
  "GL_BLEND_EQUATION_RGB_EXT": "Specifies the RGB blend equation for blending operations (EXT extension).",
  "GL_BLEND_EQUATION_RGB_OES": "Specifies the RGB blend equation for blending operations (OES extension).",
  "GL_FUNC_SUBTRACT": "Specifies the subtraction function for blending.",
  "GL_FUNC_SUBTRACT_EXT": "Specifies the subtraction function for blending (EXT extension).",
  "GL_FUNC_SUBTRACT_OES": "Specifies the subtraction function for blending (OES extension).",
  "GL_FUNC_REVERSE_SUBTRACT": "Specifies the reverse subtraction function for blending.",
  "GL_FUNC_REVERSE_SUBTRACT_EXT": "Specifies the reverse subtraction function for blending (EXT extension).",
  "GL_FUNC_REVERSE_SUBTRACT_OES": "Specifies the reverse subtraction function for blending (OES extension).",
  "GL_CMYK_EXT": "Specifies a color format with cyan, magenta, yellow, and black channels for EXT extensions.",
  "GL_CMYKA_EXT": "Specifies a color format with cyan, magenta, yellow, black, and alpha channels for EXT extensions.",
  "GL_PACK_CMYK_HINT_EXT": "Specifies hints for packing CMYK data for EXT extensions.",
  "GL_UNPACK_CMYK_HINT_EXT": "Specifies hints for unpacking CMYK data for EXT extensions.",
  "GL_CONVOLUTION_1D": "Specifies 1D convolution operations.",
  "GL_CONVOLUTION_1D_EXT": "Specifies 1D convolution operations for EXT extensions.",
  "GL_CONVOLUTION_2D": "Specifies 2D convolution operations.",
  "GL_CONVOLUTION_2D_EXT": "Specifies 2D convolution operations for EXT extensions.",
  "GL_SEPARABLE_2D": "Specifies separable 2D convolution operations.",
  "GL_SEPARABLE_2D_EXT": "Specifies separable 2D convolution operations for EXT extensions.",
  "GL_CONVOLUTION_BORDER_MODE": "Specifies the border mode for convolution operations.",
  "GL_CONVOLUTION_BORDER_MODE_EXT": "Specifies the border mode for convolution operations for EXT extensions.",
  "GL_CONVOLUTION_FILTER_SCALE": "Specifies the scale factor for convolution filters.",
  "GL_CONVOLUTION_FILTER_SCALE_EXT": "Specifies the scale factor for convolution filters for EXT extensions.",
  "GL_CONVOLUTION_FILTER_BIAS": "Specifies the bias for convolution filters.",
  "GL_CONVOLUTION_FILTER_BIAS_EXT": "Specifies the bias for convolution filters for EXT extensions.",
  "GL_REDUCE": "Specifies reduction operations.",
  "GL_REDUCE_EXT": "Specifies reduction operations for EXT extensions.",
  "GL_CONVOLUTION_FORMAT": "Specifies the format for convolution operations.",
  "GL_CONVOLUTION_FORMAT_EXT": "Specifies the format for convolution operations for EXT extensions.",
  "GL_CONVOLUTION_WIDTH": "Specifies the width of the convolution filter.",
  "GL_CONVOLUTION_WIDTH_EXT": "Specifies the width of the convolution filter for EXT extensions.",
  "GL_CONVOLUTION_HEIGHT": "Specifies the height of the convolution filter.",
  "GL_CONVOLUTION_HEIGHT_EXT": "Specifies the height of the convolution filter for EXT extensions.",
  "GL_MAX_CONVOLUTION_WIDTH": "Specifies the maximum width for convolution filters.",
  "GL_MAX_CONVOLUTION_WIDTH_EXT": "Specifies the maximum width for convolution filters for EXT extensions.",
  "GL_MAX_CONVOLUTION_HEIGHT": "Specifies the maximum height for convolution filters.",
  "GL_MAX_CONVOLUTION_HEIGHT_EXT": "Specifies the maximum height for convolution filters for EXT extensions.",
  "GL_POST_CONVOLUTION_RED_SCALE": "Specifies the scale factor for the red component after convolution.",
  "GL_POST_CONVOLUTION_RED_SCALE_EXT": "Specifies the scale factor for the red component after convolution for EXT extensions.",
  "GL_POST_CONVOLUTION_GREEN_SCALE": "Specifies the scale factor for the green component after convolution.",
  "GL_POST_CONVOLUTION_GREEN_SCALE_EXT": "Specifies the scale factor for the green component after convolution for EXT extensions.",
  "GL_POST_CONVOLUTION_BLUE_SCALE": "Specifies the scale factor for the blue component after convolution.",
  "GL_POST_CONVOLUTION_BLUE_SCALE_EXT": "Specifies the scale factor for the blue component after convolution for EXT extensions.",
  "GL_POST_CONVOLUTION_ALPHA_SCALE": "Specifies the scale factor for the alpha component after convolution.",
  "GL_POST_CONVOLUTION_ALPHA_SCALE_EXT": "Specifies the scale factor for the alpha component after convolution for EXT extensions.",
  "GL_POST_CONVOLUTION_RED_BIAS": "Specifies the bias for the red component after convolution.",
  "GL_POST_CONVOLUTION_RED_BIAS_EXT": "Specifies the bias for the red component after convolution for EXT extensions.",
  "GL_POST_CONVOLUTION_GREEN_BIAS": "Specifies the bias for the green component after convolution.",
  "GL_POST_CONVOLUTION_GREEN_BIAS_EXT": "Specifies the bias for the green component after convolution for EXT extensions.",
  "GL_POST_CONVOLUTION_BLUE_BIAS": "Specifies the bias for the blue component after convolution.",
  "GL_POST_CONVOLUTION_BLUE_BIAS_EXT": "Specifies the bias for the blue component after convolution for EXT extensions.",
  "GL_POST_CONVOLUTION_ALPHA_BIAS": "Specifies the bias for the alpha component after convolution.",
  "GL_POST_CONVOLUTION_ALPHA_BIAS_EXT": "Specifies the bias for the alpha component after convolution for EXT extensions.",
  "GL_HISTOGRAM": "Specifies histogram operations.",
  "GL_HISTOGRAM_EXT": "Specifies histogram operations for EXT extensions.",
  "GL_PROXY_HISTOGRAM": "Specifies proxy histogram operations.",
  "GL_PROXY_HISTOGRAM_EXT": "Specifies proxy histogram operations for EXT extensions.",
  "GL_HISTOGRAM_WIDTH": "Specifies the width of the histogram.",
  "GL_HISTOGRAM_WIDTH_EXT": "Specifies the width of the histogram for EXT extensions.",
  "GL_HISTOGRAM_FORMAT": "Specifies the format of the histogram.",
  "GL_HISTOGRAM_FORMAT_EXT": "Specifies the format of the histogram for EXT extensions.",
  "GL_HISTOGRAM_RED_SIZE": "Specifies the size of the red component in the histogram.",
  "GL_HISTOGRAM_RED_SIZE_EXT": "Specifies the size of the red component in the histogram for EXT extensions.",
  "GL_HISTOGRAM_GREEN_SIZE": "Specifies the size of the green component in the histogram.",
  "GL_HISTOGRAM_GREEN_SIZE_EXT": "Specifies the size of the green component in the histogram for EXT extensions.",
  "GL_HISTOGRAM_BLUE_SIZE": "Specifies the size of the blue component in the histogram.",
  "GL_HISTOGRAM_BLUE_SIZE_EXT": "Specifies the size of the blue component in the histogram for EXT extensions.",
  "GL_HISTOGRAM_ALPHA_SIZE": "Specifies the size of the alpha component in the histogram.",
  "GL_HISTOGRAM_ALPHA_SIZE_EXT": "Specifies the size of the alpha component in the histogram for EXT extensions.",
  "GL_HISTOGRAM_LUMINANCE_SIZE": "Specifies the size of the luminance component in the histogram.",
  "GL_HISTOGRAM_LUMINANCE_SIZE_EXT": "Specifies the size of the luminance component in the histogram for EXT extensions.",
  "GL_HISTOGRAM_SINK": "Specifies the sink for histogram data.",
  "GL_HISTOGRAM_SINK_EXT": "Specifies the sink for histogram data for EXT extensions.",
  "GL_MINMAX": "Specifies min/max operations.",
  "GL_MINMAX_EXT": "Specifies min/max operations for EXT extensions.",
  "GL_MINMAX_FORMAT": "Specifies the format for min/max operations.",
  "GL_MINMAX_FORMAT_EXT": "Specifies the format for min/max operations for EXT extensions.",
  "GL_MINMAX_SINK": "Specifies the sink for min/max data.",
  "GL_MINMAX_SINK_EXT": "Specifies the sink for min/max data for EXT extensions.",
  "GL_TABLE_TOO_LARGE_EXT": "Specifies an error condition when a table is too large for EXT extensions.",
  "GL_TABLE_TOO_LARGE": "Specifies an error condition when a table is too large.",
  "GL_UNSIGNED_BYTE_3_3_2": "Specifies a format with 3 bits for red, 3 bits for green, and 2 bits for blue.",
  "GL_UNSIGNED_BYTE_3_3_2_EXT": "Specifies a format with 3 bits for red, 3 bits for green, and 2 bits for blue for EXT extensions.",
  "GL_UNSIGNED_SHORT_4_4_4_4": "Specifies a format with 4 bits for each color channel and 4 bits for alpha.",
  "GL_UNSIGNED_SHORT_4_4_4_4_EXT": "Specifies a format with 4 bits for each color channel and 4 bits for alpha for EXT extensions.",
  "GL_UNSIGNED_SHORT_5_5_5_1": "Specifies a format with 5 bits for red, 5 bits for green, 5 bits for blue, and 1 bit for alpha.",
  "GL_UNSIGNED_SHORT_5_5_5_1_EXT": "Specifies a format with 5 bits for red, 5 bits for green, 5 bits for blue, and 1 bit for alpha for EXT extensions.",
  "GL_UNSIGNED_INT_8_8_8_8": "Specifies a format with 8 bits for each color channel and 8 bits for alpha.",
  "GL_UNSIGNED_INT_8_8_8_8_EXT": "Specifies a format with 8 bits for each color channel and 8 bits for alpha for EXT extensions.",
  "GL_UNSIGNED_INT_10_10_10_2": "Specifies a format with 10 bits for each color channel and 2 bits for alpha.",
  "GL_UNSIGNED_INT_10_10_10_2_EXT": "Specifies a format with 10 bits for each color channel and 2 bits for alpha for EXT extensions.",
  "GL_POLYGON_OFFSET_EXT": "Specifies polygon offset operations for EXT extensions.",
  "GL_POLYGON_OFFSET_FILL": "Specifies the polygon offset for filled polygons.",
  "GL_POLYGON_OFFSET_FACTOR": "Specifies the scale factor for polygon offsets.",
  "GL_POLYGON_OFFSET_FACTOR_EXT": "Specifies the scale factor for polygon offsets for EXT extensions.",
  "GL_POLYGON_OFFSET_BIAS_EXT": "Specifies the bias for polygon offsets for EXT extensions.",
  "GL_RESCALE_NORMAL": "Specifies that normals should be rescaled when they are transformed.",
  "GL_RESCALE_NORMAL_EXT": "Specifies that normals should be rescaled when they are transformed for EXT extensions.",
  "GL_ALPHA4": "Specifies a format with 4 bits for alpha.",
  "GL_ALPHA4_EXT": "Specifies a format with 4 bits for alpha for EXT extensions.",
  "GL_ALPHA8": "Specifies a format with 8 bits for alpha.",
  "GL_ALPHA8_EXT": "Specifies a format with 8 bits for alpha for EXT extensions.",
  "GL_ALPHA8_OES": "Specifies an 8-bit alpha format for OES extensions.",
  "GL_ALPHA12": "Specifies a 12-bit alpha format.",
  "GL_ALPHA12_EXT": "Specifies a 12-bit alpha format for EXT extensions.",
  "GL_ALPHA16": "Specifies a 16-bit alpha format.",
  "GL_ALPHA16_EXT": "Specifies a 16-bit alpha format for EXT extensions.",
  "GL_LUMINANCE4": "Specifies a 4-bit luminance format.",
  "GL_LUMINANCE4_EXT": "Specifies a 4-bit luminance format for EXT extensions.",
  "GL_LUMINANCE8": "Specifies an 8-bit luminance format.",
  "GL_LUMINANCE8_EXT": "Specifies an 8-bit luminance format for EXT extensions.",
  "GL_LUMINANCE8_OES": "Specifies an 8-bit luminance format for OES extensions.",
  "GL_LUMINANCE12": "Specifies a 12-bit luminance format.",
  "GL_LUMINANCE12_EXT": "Specifies a 12-bit luminance format for EXT extensions.",
  "GL_LUMINANCE16": "Specifies a 16-bit luminance format.",
  "GL_LUMINANCE16_EXT": "Specifies a 16-bit luminance format for EXT extensions.",
  "GL_LUMINANCE4_ALPHA4": "Specifies a format with 4 bits for luminance and 4 bits for alpha.",
  "GL_LUMINANCE4_ALPHA4_EXT": "Specifies a format with 4 bits for luminance and 4 bits for alpha for EXT extensions.",
  "GL_LUMINANCE4_ALPHA4_OES": "Specifies a format with 4 bits for luminance and 4 bits for alpha for OES extensions.",
  "GL_LUMINANCE6_ALPHA2": "Specifies a format with 6 bits for luminance and 2 bits for alpha.",
  "GL_LUMINANCE6_ALPHA2_EXT": "Specifies a format with 6 bits for luminance and 2 bits for alpha for EXT extensions.",
  "GL_LUMINANCE8_ALPHA8": "Specifies a format with 8 bits for luminance and 8 bits for alpha.",
  "GL_LUMINANCE8_ALPHA8_EXT": "Specifies a format with 8 bits for luminance and 8 bits for alpha for EXT extensions.",
  "GL_LUMINANCE8_ALPHA8_OES": "Specifies a format with 8 bits for luminance and 8 bits for alpha for OES extensions.",
  "GL_LUMINANCE12_ALPHA4": "Specifies a format with 12 bits for luminance and 4 bits for alpha.",
  "GL_LUMINANCE12_ALPHA4_EXT": "Specifies a format with 12 bits for luminance and 4 bits for alpha for EXT extensions.",
  "GL_LUMINANCE12_ALPHA12": "Specifies a format with 12 bits for luminance and 12 bits for alpha.",
  "GL_LUMINANCE12_ALPHA12_EXT": "Specifies a format with 12 bits for luminance and 12 bits for alpha for EXT extensions.",
  "GL_LUMINANCE16_ALPHA16": "Specifies a format with 16 bits for luminance and 16 bits for alpha.",
  "GL_LUMINANCE16_ALPHA16_EXT": "Specifies a format with 16 bits for luminance and 16 bits for alpha for EXT extensions.",
  "GL_INTENSITY": "Specifies intensity format.",
  "GL_INTENSITY_EXT": "Specifies intensity format for EXT extensions.",
  "GL_INTENSITY4": "Specifies a 4-bit intensity format.",
  "GL_INTENSITY4_EXT": "Specifies a 4-bit intensity format for EXT extensions.",
  "GL_INTENSITY8": "Specifies an 8-bit intensity format.",
  "GL_INTENSITY8_EXT": "Specifies an 8-bit intensity format for EXT extensions.",
  "GL_INTENSITY12": "Specifies a 12-bit intensity format.",
  "GL_INTENSITY12_EXT": "Specifies a 12-bit intensity format for EXT extensions.",
  "GL_INTENSITY16": "Specifies a 16-bit intensity format.",
  "GL_INTENSITY16_EXT": "Specifies a 16-bit intensity format for EXT extensions.",
  "GL_RGB2_EXT": "Specifies a 2-bit RGB format for EXT extensions.",
  "GL_RGB4": "Specifies a 4-bit RGB format.",
  "GL_RGB4_EXT": "Specifies a 4-bit RGB format for EXT extensions.",
  "GL_RGB5": "Specifies a 5-bit RGB format.",
  "GL_RGB5_EXT": "Specifies a 5-bit RGB format for EXT extensions.",
  "GL_RGB8": "Specifies an 8-bit RGB format.",
  "GL_RGB8_EXT": "Specifies an 8-bit RGB format for EXT extensions.",
  "GL_RGB8_OES": "Specifies an 8-bit RGB format for OES extensions.",
  "GL_RGB10": "Specifies a 10-bit RGB format.",
  "GL_RGB10_EXT": "Specifies a 10-bit RGB format for EXT extensions.",
  "GL_RGB12": "Specifies a 12-bit RGB format.",
  "GL_RGB12_EXT": "Specifies a 12-bit RGB format for EXT extensions.",
  "GL_RGB16": "Specifies a 16-bit RGB format.",
  "GL_RGB16_EXT": "Specifies a 16-bit RGB format for EXT extensions.",
  "GL_RGBA2": "Specifies a 2-bit RGBA format.",
  "GL_RGBA2_EXT": "Specifies a 2-bit RGBA format for EXT extensions.",
  "GL_RGBA4": "Specifies a 4-bit RGBA format.",
  "GL_RGBA4_EXT": "Specifies a 4-bit RGBA format for EXT extensions.",
  "GL_RGBA4_OES": "Specifies a 4-bit RGBA format for OES extensions.",
  "GL_RGB5_A1": "Specifies a 5-bit RGB format with 1-bit alpha.",
  "GL_RGB5_A1_EXT": "Specifies a 5-bit RGB format with 1-bit alpha for EXT extensions.",
  "GL_RGB5_A1_OES": "Specifies a 5-bit RGB format with 1-bit alpha for OES extensions.",
  "GL_RGBA8": "Specifies an 8-bit RGBA format.",
  "GL_RGBA8_EXT": "Specifies an 8-bit RGBA format for EXT extensions.",
  "GL_RGBA8_OES": "Specifies an 8-bit RGBA format for OES extensions.",
  "GL_RGB10_A2": "Specifies a 10-bit RGB format with 2 bits for alpha.",
  "GL_RGB10_A2_EXT": "Specifies a 10-bit RGB format with 2 bits for alpha for EXT extensions.",
  "GL_RGBA12": "Specifies a 12-bit RGBA format.",
  "GL_RGBA12_EXT": "Specifies a 12-bit RGBA format for EXT extensions.",
  "GL_RGBA16": "Specifies a 16-bit RGBA format.",
  "GL_RGBA16_EXT": "Specifies a 16-bit RGBA format for EXT extensions.",
  "GL_TEXTURE_RED_SIZE": "Specifies the size of the red component in texture formats.",
  "GL_TEXTURE_RED_SIZE_EXT": "Specifies the size of the red component in texture formats for EXT extensions.",
  "GL_TEXTURE_GREEN_SIZE": "Specifies the size of the green component in texture formats.",
  "GL_TEXTURE_GREEN_SIZE_EXT": "Specifies the size of the green component in texture formats for EXT extensions.",
  "GL_TEXTURE_BLUE_SIZE": "Specifies the size of the blue component in texture formats.",
  "GL_TEXTURE_BLUE_SIZE_EXT": "Specifies the size of the blue component in texture formats for EXT extensions.",
  "GL_TEXTURE_ALPHA_SIZE": "Specifies the size of the alpha component in texture formats.",
  "GL_TEXTURE_ALPHA_SIZE_EXT": "Specifies the size of the alpha component in texture formats for EXT extensions.",
  "GL_TEXTURE_LUMINANCE_SIZE": "Specifies the size of the luminance component in texture formats.",
  "GL_TEXTURE_LUMINANCE_SIZE_EXT": "Specifies the size of the luminance component in texture formats for EXT extensions.",
  "GL_TEXTURE_INTENSITY_SIZE": "Specifies the size of the intensity component in texture formats.",
  "GL_TEXTURE_INTENSITY_SIZE_EXT": "Specifies the size of the intensity component in texture formats for EXT extensions.",
  "GL_REPLACE_EXT": "Specifies a replacement operation for texture mapping (EXT extension).",
  "GL_PROXY_TEXTURE_1D": "Specifies a proxy texture for 1D textures.",
  "GL_PROXY_TEXTURE_1D_EXT": "Specifies a proxy texture for 1D textures for EXT extensions.",
  "GL_PROXY_TEXTURE_2D": "Specifies a proxy texture for 2D textures.",
  "GL_PROXY_TEXTURE_2D_EXT": "Specifies a proxy texture for 2D textures for EXT extensions.",
  "GL_TEXTURE_TOO_LARGE_EXT": "Specifies an error condition when a texture is too large for EXT extensions.",
  "GL_TEXTURE_PRIORITY": "Specifies texture priority for texture operations.",
  "GL_TEXTURE_PRIORITY_EXT": "Specifies texture priority for texture operations for EXT extensions.",
  "GL_TEXTURE_RESIDENT": "Specifies whether a texture is resident in graphics memory.",
  "GL_TEXTURE_RESIDENT_EXT": "Specifies whether a texture is resident in graphics memory for EXT extensions.",
  "GL_TEXTURE_1D_BINDING_EXT": "Specifies the currently bound 1D texture for EXT extensions.",
  "GL_TEXTURE_BINDING_1D": "Specifies the currently bound 1D texture.",
  "GL_TEXTURE_2D_BINDING_EXT": "Specifies the currently bound 2D texture for EXT extensions.",
  "GL_TEXTURE_BINDING_2D": "Specifies the currently bound 2D texture.",
  "GL_TEXTURE_3D_BINDING_EXT": "Specifies the currently bound 3D texture for EXT extensions.",
  "GL_TEXTURE_3D_BINDING_OES": "Specifies the currently bound 3D texture for OES extensions.",
  "GL_TEXTURE_BINDING_3D": "Specifies the currently bound 3D texture.",
  "GL_TEXTURE_BINDING_3D_OES": "Specifies the currently bound 3D texture for OES extensions.",
  "GL_PACK_SKIP_IMAGES": "Specifies the number of images to skip when packing textures.",
  "GL_PACK_SKIP_IMAGES_EXT": "Specifies the number of images to skip when packing textures for EXT extensions.",
  "GL_PACK_IMAGE_HEIGHT": "Specifies the height of images in the texture packing.",
  "GL_PACK_IMAGE_HEIGHT_EXT": "Specifies the height of images in the texture packing for EXT extensions.",
  "GL_UNPACK_SKIP_IMAGES": "Specifies the number of images to skip when unpacking textures.",
  "GL_UNPACK_SKIP_IMAGES_EXT": "Specifies the number of images to skip when unpacking textures for EXT extensions.",
  "GL_UNPACK_IMAGE_HEIGHT": "Specifies the height of images in the texture unpacking.",
  "GL_UNPACK_IMAGE_HEIGHT_EXT": "Specifies the height of images in the texture unpacking for EXT extensions.",
  "GL_TEXTURE_3D": "Specifies a 3D texture.",
  "GL_TEXTURE_3D_EXT": "Specifies a 3D texture for EXT extensions.",
  "GL_TEXTURE_3D_OES": "Specifies a 3D texture for OES extensions.",
  "GL_PROXY_TEXTURE_3D": "Specifies a proxy texture for 3D textures.",
  "GL_PROXY_TEXTURE_3D_EXT": "Specifies a proxy texture for 3D textures for EXT extensions.",
  "GL_TEXTURE_DEPTH": "Specifies the depth of a 3D texture.",
  "GL_TEXTURE_DEPTH_EXT": "Specifies the depth of a 3D texture for EXT extensions.",
  "GL_TEXTURE_WRAP_R": "Specifies the wrapping mode for the R coordinate of 3D textures.",
  "GL_TEXTURE_WRAP_R_EXT": "Specifies the wrapping mode for the R coordinate of 3D textures for EXT extensions.",
  "GL_TEXTURE_WRAP_R_OES": "Specifies the wrapping mode for the R coordinate of 3D textures for OES extensions.",
  "GL_MAX_3D_TEXTURE_SIZE": "Specifies the maximum size for 3D textures.",
  "GL_MAX_3D_TEXTURE_SIZE_EXT": "Specifies the maximum size for 3D textures for EXT extensions.",
  "GL_MAX_3D_TEXTURE_SIZE_OES": "Specifies the maximum size for 3D textures for OES extensions.",
  "GL_VERTEX_ARRAY": "Specifies a vertex array for rendering.",
  "GL_VERTEX_ARRAY_EXT": "Specifies a vertex array for rendering for EXT extensions.",
  "GL_VERTEX_ARRAY_KHR": "Specifies a vertex array for rendering for KHR extensions.",
  "GL_NORMAL_ARRAY": "Specifies a normal array for rendering.",
  "GL_NORMAL_ARRAY_EXT": "Specifies a normal array for rendering for EXT extensions.",
  "GL_COLOR_ARRAY": "Specifies a color array for rendering.",
  "GL_COLOR_ARRAY_EXT": "Specifies a color array for rendering for EXT extensions.",
  "GL_INDEX_ARRAY": "Specifies an index array for rendering.",
  "GL_INDEX_ARRAY_EXT": "Specifies an index array for rendering for EXT extensions.",
  "GL_TEXTURE_COORD_ARRAY": "Specifies a texture coordinate array for rendering.",
  "GL_TEXTURE_COORD_ARRAY_EXT": "Specifies a texture coordinate array for rendering for EXT extensions.",
  "GL_EDGE_FLAG_ARRAY": "Specifies an edge flag array for rendering.",
  "GL_EDGE_FLAG_ARRAY_EXT": "Specifies an edge flag array for rendering for EXT extensions.",
  "GL_VERTEX_ARRAY_SIZE": "Specifies the size of each vertex in the vertex array.",
  "GL_VERTEX_ARRAY_SIZE_EXT": "Specifies the size of each vertex in the vertex array for EXT extensions.",
  "GL_VERTEX_ARRAY_TYPE": "Specifies the data type of the vertex array.",
  "GL_VERTEX_ARRAY_TYPE_EXT": "Specifies the data type of the vertex array for EXT extensions.",
  "GL_VERTEX_ARRAY_STRIDE": "Specifies the stride (byte offset) between vertex array elements.",
  "GL_VERTEX_ARRAY_STRIDE_EXT": "Specifies the stride (byte offset) between vertex array elements for EXT extensions.",
  "GL_VERTEX_ARRAY_COUNT_EXT": "Specifies the count of vertices in the vertex array for EXT extensions.",
  "GL_NORMAL_ARRAY_TYPE": "Specifies the data type of the normal array.",
  "GL_NORMAL_ARRAY_TYPE_EXT": "Specifies the data type of the normal array for EXT extensions.",
  "GL_NORMAL_ARRAY_STRIDE": "Specifies the stride (byte offset) between normal array elements.",
  "GL_NORMAL_ARRAY_STRIDE_EXT": "Specifies the stride (byte offset) between normal array elements for EXT extensions.",
  "GL_NORMAL_ARRAY_COUNT_EXT": "Specifies the count of normals in the normal array for EXT extensions.",
  "GL_COLOR_ARRAY_SIZE": "Specifies the size of each color in the color array.",
  "GL_COLOR_ARRAY_SIZE_EXT": "Specifies the size of each color in the color array for EXT extensions.",
  "GL_COLOR_ARRAY_TYPE": "Specifies the data type of the color array.",
  "GL_COLOR_ARRAY_TYPE_EXT": "Specifies the data type of the color array for EXT extensions.",
  "GL_COLOR_ARRAY_STRIDE": "Specifies the stride (byte offset) between color array elements.",
  "GL_COLOR_ARRAY_STRIDE_EXT": "Specifies the stride (byte offset) between color array elements for EXT extensions.",
  "GL_COLOR_ARRAY_COUNT_EXT": "Specifies the count of colors in the color array for EXT extensions.",
  "GL_INDEX_ARRAY_TYPE": "Specifies the data type of the index array.",
  "GL_INDEX_ARRAY_TYPE_EXT": "Specifies the data type of the index array for EXT extensions.",
  "GL_INDEX_ARRAY_STRIDE": "Specifies the stride (byte offset) between index array elements.",
  "GL_INDEX_ARRAY_STRIDE_EXT": "Specifies the stride (byte offset) between index array elements for EXT extensions.",
  "GL_INDEX_ARRAY_COUNT_EXT": "Specifies the count of indices in the index array for EXT extensions.",
  "GL_TEXTURE_COORD_ARRAY_SIZE": "Specifies the size of each texture coordinate in the texture coordinate array.",
  "GL_TEXTURE_COORD_ARRAY_SIZE_EXT": "Specifies the size of each texture coordinate in the texture coordinate array for EXT extensions.",
  "GL_TEXTURE_COORD_ARRAY_TYPE": "Specifies the data type of the texture coordinate array.",
  "GL_TEXTURE_COORD_ARRAY_TYPE_EXT": "Specifies the data type of the texture coordinate array for EXT extensions.",
  "GL_TEXTURE_COORD_ARRAY_STRIDE": "Specifies the stride (byte offset) between texture coordinate array elements.",
  "GL_TEXTURE_COORD_ARRAY_STRIDE_EXT": "Specifies the stride (byte offset) between texture coordinate array elements for EXT extensions.",
  "GL_TEXTURE_COORD_ARRAY_COUNT_EXT": "Specifies the count of texture coordinates in the texture coordinate array for EXT extensions.",
  "GL_EDGE_FLAG_ARRAY_STRIDE": "Specifies the stride (byte offset) between edge flag array elements.",
  "GL_EDGE_FLAG_ARRAY_STRIDE_EXT": "Specifies the stride (byte offset) between edge flag array elements for EXT extensions.",
  "GL_EDGE_FLAG_ARRAY_COUNT_EXT": "Specifies the count of edge flags in the edge flag array for EXT extensions.",
  "GL_VERTEX_ARRAY_POINTER": "Specifies the pointer to the vertex array.",
  "GL_VERTEX_ARRAY_POINTER_EXT": "Specifies the pointer to the vertex array for EXT extensions.",
  "GL_NORMAL_ARRAY_POINTER": "Specifies the pointer to the normal array.",
  "GL_NORMAL_ARRAY_POINTER_EXT": "Specifies the pointer to the normal array for EXT extensions.",
  "GL_COLOR_ARRAY_POINTER": "Specifies the pointer to the color array.",
  "GL_COLOR_ARRAY_POINTER_EXT": "Specifies the pointer to the color array for EXT extensions.",
  "GL_INDEX_ARRAY_POINTER": "Specifies the pointer to the index array.",
  "GL_INDEX_ARRAY_POINTER_EXT": "Specifies the pointer to the index array for EXT extensions.",
  "GL_TEXTURE_COORD_ARRAY_POINTER": "Specifies the pointer to the texture coordinate array.",
  "GL_TEXTURE_COORD_ARRAY_POINTER_EXT": "Specifies the pointer to the texture coordinate array for EXT extensions.",
  "GL_EDGE_FLAG_ARRAY_POINTER": "Specifies the pointer to the edge flag array.",
  "GL_EDGE_FLAG_ARRAY_POINTER_EXT": "Specifies the pointer to the edge flag array for EXT extensions.",
  "GL_INTERLACE_SGIX": "Specifies interlaced rendering mode for SGIX extensions.",
  "GL_DETAIL_TEXTURE_2D_SGIS": "Specifies detail texture for 2D textures (SGIS extension).",
  "GL_DETAIL_TEXTURE_2D_BINDING_SGIS": "Specifies the binding for detail textures in 2D for SGIS extensions.",
  "GL_LINEAR_DETAIL_SGIS": "Specifies linear detail texture filtering for SGIS extensions.",
  "GL_LINEAR_DETAIL_ALPHA_SGIS": "Specifies linear detail texture filtering with alpha for SGIS extensions.",
  "GL_LINEAR_DETAIL_COLOR_SGIS": "Specifies linear detail texture filtering with color for SGIS extensions.",
  "GL_DETAIL_TEXTURE_LEVEL_SGIS": "Specifies the level of detail for textures (SGIS extension).",
  "GL_DETAIL_TEXTURE_MODE_SGIS": "Specifies the mode for detail textures (SGIS extension).",
  "GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS": "Specifies function points for detail textures (SGIS extension).",
  "GL_MULTISAMPLE": "Specifies multisampling for anti-aliasing.",
  "GL_MULTISAMPLE_ARB": "Specifies multisampling for anti-aliasing (ARB extension).",
  "GL_MULTISAMPLE_EXT": "Specifies multisampling for anti-aliasing (EXT extension).",
  "GL_MULTISAMPLE_SGIS": "Specifies multisampling for anti-aliasing (SGIS extension).",
  "GL_SAMPLE_ALPHA_TO_COVERAGE": "Specifies alpha-to-coverage sampling for anti-aliasing.",
  "GL_SAMPLE_ALPHA_TO_COVERAGE_ARB": "Specifies alpha-to-coverage sampling for anti-aliasing (ARB extension).",
  "GL_SAMPLE_ALPHA_TO_MASK_EXT": "Specifies alpha-to-mask sampling for anti-aliasing (EXT extension).",
  "GL_SAMPLE_ALPHA_TO_MASK_SGIS": "Specifies alpha-to-mask sampling for anti-aliasing (SGIS extension).",
  "GL_SAMPLE_ALPHA_TO_ONE": "Specifies sampling to one for anti-aliasing.",
  "GL_SAMPLE_ALPHA_TO_ONE_ARB": "Specifies sampling to one for anti-aliasing (ARB extension).",
  "GL_SAMPLE_ALPHA_TO_ONE_EXT": "Specifies sampling to one for anti-aliasing (EXT extension).",
  "GL_SAMPLE_ALPHA_TO_ONE_SGIS": "Specifies sampling to one for anti-aliasing (SGIS extension).",
  "GL_SAMPLE_COVERAGE": "Specifies the sample coverage value for alpha blending.",
  "GL_SAMPLE_COVERAGE_ARB": "Specifies the sample coverage value for alpha blending (ARB extension).",
  "GL_SAMPLE_MASK_EXT": "Specifies the sample mask for controlling sample coverage (EXT extension).",
  "GL_SAMPLE_MASK_SGIS": "Specifies the sample mask for controlling sample coverage (SGIS extension).",
  "GL_1PASS_EXT": "Specifies a single-pass rendering mode (EXT extension).",
  "GL_1PASS_SGIS": "Specifies a single-pass rendering mode (SGIS extension).",
  "GL_2PASS_0_EXT": "Specifies the first pass of a two-pass rendering mode (EXT extension).",
  "GL_2PASS_0_SGIS": "Specifies the first pass of a two-pass rendering mode (SGIS extension).",
  "GL_2PASS_1_EXT": "Specifies the second pass of a two-pass rendering mode (EXT extension).",
  "GL_2PASS_1_SGIS": "Specifies the second pass of a two-pass rendering mode (SGIS extension).",
  "GL_4PASS_0_EXT": "Specifies the first pass of a four-pass rendering mode (EXT extension).",
  "GL_4PASS_0_SGIS": "Specifies the first pass of a four-pass rendering mode (SGIS extension).",
  "GL_4PASS_1_EXT": "Specifies the second pass of a four-pass rendering mode (EXT extension).",
  "GL_4PASS_1_SGIS": "Specifies the second pass of a four-pass rendering mode (SGIS extension).",
  "GL_4PASS_2_EXT": "Specifies the third pass of a four-pass rendering mode (EXT extension).",
  "GL_4PASS_2_SGIS": "Specifies the third pass of a four-pass rendering mode (SGIS extension).",
  "GL_4PASS_3_EXT": "Specifies the fourth pass of a four-pass rendering mode (EXT extension).",
  "GL_4PASS_3_SGIS": "Specifies the fourth pass of a four-pass rendering mode (SGIS extension).",
  "GL_SAMPLE_BUFFERS": "Specifies the number of sample buffers used for multisampling.",
  "GL_SAMPLE_BUFFERS_ARB": "Specifies the number of sample buffers used for multisampling (ARB extension).",
  "GL_SAMPLE_BUFFERS_EXT": "Specifies the number of sample buffers used for multisampling (EXT extension).",
  "GL_SAMPLE_BUFFERS_SGIS": "Specifies the number of sample buffers used for multisampling (SGIS extension).",
  "GL_SAMPLES": "Specifies the number of samples in a sample buffer.",
  "GL_SAMPLES_ARB": "Specifies the number of samples in a sample buffer (ARB extension).",
  "GL_SAMPLES_EXT": "Specifies the number of samples in a sample buffer (EXT extension).",
  "GL_SAMPLES_SGIS": "Specifies the number of samples in a sample buffer (SGIS extension).",
  "GL_SAMPLE_COVERAGE_VALUE": "Specifies the sample coverage value.",
  "GL_SAMPLE_COVERAGE_VALUE_ARB": "Specifies the sample coverage value (ARB extension).",
  "GL_SAMPLE_MASK_VALUE_EXT": "Specifies the value of the sample mask (EXT extension).",
  "GL_SAMPLE_MASK_VALUE_SGIS": "Specifies the value of the sample mask (SGIS extension).",
  "GL_SAMPLE_COVERAGE_INVERT": "Specifies whether to invert the sample coverage.",
  "GL_SAMPLE_COVERAGE_INVERT_ARB": "Specifies whether to invert the sample coverage (ARB extension).",
  "GL_SAMPLE_MASK_INVERT_EXT": "Specifies whether to invert the sample mask (EXT extension).",
  "GL_SAMPLE_MASK_INVERT_SGIS": "Specifies whether to invert the sample mask (SGIS extension).",
  "GL_SAMPLE_PATTERN_EXT": "Specifies the sample pattern for multisampling (EXT extension).",
  "GL_SAMPLE_PATTERN_SGIS": "Specifies the sample pattern for multisampling (SGIS extension).",
  "GL_LINEAR_SHARPEN_SGIS": "Specifies linear sharpening of textures (SGIS extension).",
  "GL_LINEAR_SHARPEN_ALPHA_SGIS": "Specifies linear sharpening of textures with alpha (SGIS extension).",
  "GL_LINEAR_SHARPEN_COLOR_SGIS": "Specifies linear sharpening of textures with color (SGIS extension).",
  "GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS": "Specifies function points for texture sharpening (SGIS extension).",
  "GL_COLOR_MATRIX": "Specifies the color matrix for color transformation.",
  "GL_COLOR_MATRIX_SGI": "Specifies the color matrix for color transformation (SGI extension).",
  "GL_COLOR_MATRIX_STACK_DEPTH": "Specifies the depth of the color matrix stack.",
  "GL_COLOR_MATRIX_STACK_DEPTH_SGI": "Specifies the depth of the color matrix stack (SGI extension).",
  "GL_MAX_COLOR_MATRIX_STACK_DEPTH": "Specifies the maximum depth of the color matrix stack.",
  "GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI": "Specifies the maximum depth of the color matrix stack (SGI extension).",
  "GL_POST_COLOR_MATRIX_RED_SCALE": "Specifies the red scale for post-color matrix transformations.",
  "GL_POST_COLOR_MATRIX_RED_SCALE_SGI": "Specifies the red scale for post-color matrix transformations (SGI extension).",
  "GL_POST_COLOR_MATRIX_GREEN_SCALE": "Specifies the green scale for post-color matrix transformations.",
  "GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI": "Specifies the green scale for post-color matrix transformations (SGI extension).",
  "GL_POST_COLOR_MATRIX_BLUE_SCALE": "Specifies the blue scale for post-color matrix transformations.",
  "GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI": "Specifies the blue scale for post-color matrix transformations (SGI extension).",
  "GL_POST_COLOR_MATRIX_ALPHA_SCALE": "Specifies the alpha scale for post-color matrix transformations.",
  "GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI": "Specifies the alpha scale for post-color matrix transformations (SGI extension).",
  "GL_POST_COLOR_MATRIX_RED_BIAS": "Specifies the red bias for post-color matrix transformations.",
  "GL_POST_COLOR_MATRIX_RED_BIAS_SGI": "Specifies the red bias for post-color matrix transformations (SGI extension).",
  "GL_POST_COLOR_MATRIX_GREEN_BIAS": "Specifies the green bias for post-color matrix transformations.",
  "GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI": "Specifies the green bias for post-color matrix transformations (SGI extension).",
  "GL_POST_COLOR_MATRIX_BLUE_BIAS": "Specifies the blue bias for post-color matrix transformations.",
  "GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI": "Specifies the blue bias for post-color matrix transformations (SGI extension).",
  "GL_POST_COLOR_MATRIX_ALPHA_BIAS": "Specifies the alpha bias for post-color matrix transformations.",
  "GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI": "Specifies the alpha bias for post-color matrix transformations (SGI extension).",
  "GL_TEXTURE_COLOR_TABLE_SGI": "Specifies the texture color table (SGI extension).",
  "GL_PROXY_TEXTURE_COLOR_TABLE_SGI": "Specifies a proxy for the texture color table (SGI extension).",
  "GL_TEXTURE_ENV_BIAS_SGIX": "Specifies texture environment bias for SGIX extensions.",
  "GL_SHADOW_AMBIENT_SGIX": "Specifies shadow ambient properties for SGIX extensions.",
  "GL_TEXTURE_COMPARE_FAIL_VALUE_ARB": "Specifies the value used when texture comparison fails (ARB extension).",
  "GL_BLEND_DST_RGB": "Specifies the destination color for RGB blending.",
  "GL_BLEND_DST_RGB_EXT": "Specifies the destination color for RGB blending (EXT extension).",
  "GL_BLEND_DST_RGB_OES": "Specifies the destination color for RGB blending (OES extension).",
  "GL_BLEND_SRC_RGB": "Specifies the source color for RGB blending.",
  "GL_BLEND_SRC_RGB_EXT": "Specifies the source color for RGB blending (EXT extension).",
  "GL_BLEND_SRC_RGB_OES": "Specifies the source color for RGB blending (OES extension).",
  "GL_BLEND_DST_ALPHA": "Specifies the destination alpha for blending.",
  "GL_BLEND_DST_ALPHA_EXT": "Specifies the destination alpha for blending (EXT extension).",
  "GL_BLEND_DST_ALPHA_OES": "Specifies the destination alpha for blending (OES extension).",
  "GL_BLEND_SRC_ALPHA": "Specifies the source alpha for blending.",
  "GL_BLEND_SRC_ALPHA_EXT": "Specifies the source alpha for blending (EXT extension).",
  "GL_BLEND_SRC_ALPHA_OES": "Specifies the source alpha for blending (OES extension).",
  "GL_422_EXT": "Specifies 4:2:2 chroma subsampling format (EXT extension).",
  "GL_422_REV_EXT": "Specifies reversed 4:2:2 chroma subsampling format (EXT extension).",
  "GL_422_AVERAGE_EXT": "Specifies average 4:2:2 chroma subsampling format (EXT extension).",
  "GL_422_REV_AVERAGE_EXT": "Specifies reversed average 4:2:2 chroma subsampling format (EXT extension).",
  "GL_COLOR_TABLE": "Specifies a color table for color lookup.",
  "GL_COLOR_TABLE_SGI": "Specifies a color table for color lookup (SGI extension).",
  "GL_POST_CONVOLUTION_COLOR_TABLE": "Specifies a color table for post-convolution processing.",
  "GL_POST_CONVOLUTION_COLOR_TABLE_SGI": "Specifies a color table for post-convolution processing (SGI extension).",
  "GL_POST_COLOR_MATRIX_COLOR_TABLE": "Specifies a color table for post-color matrix processing.",
  "GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI": "Specifies a color table for post-color matrix processing (SGI extension).",
  "GL_PROXY_COLOR_TABLE": "Specifies a proxy for color tables.",
  "GL_PROXY_COLOR_TABLE_SGI": "Specifies a proxy for color tables (SGI extension).",
  "GL_PROXY_POST_CONVOLUTION_COLOR_TABLE": "Specifies a proxy for post-convolution color tables.",
  "GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI": "Specifies a proxy for post-convolution color tables (SGI extension).",
  "GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE": "Specifies a proxy for post-color matrix color tables.",
  "GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI": "Specifies a proxy for post-color matrix color tables (SGI extension).",
  "GL_COLOR_TABLE_SCALE": "Specifies the scale factor for color tables.",
  "GL_COLOR_TABLE_SCALE_SGI": "Specifies the scale factor for color tables (SGI extension).",
  "GL_COLOR_TABLE_BIAS": "Specifies the bias for color tables.",
  "GL_COLOR_TABLE_BIAS_SGI": "Specifies the bias for color tables (SGI extension).",
  "GL_COLOR_TABLE_FORMAT": "Specifies the format of the color table.",
  "GL_COLOR_TABLE_FORMAT_SGI": "Specifies the format of the color table (SGI extension).",
  "GL_COLOR_TABLE_WIDTH": "Specifies the width of the color table.",
  "GL_COLOR_TABLE_WIDTH_SGI": "Specifies the width of the color table (SGI extension).",
  "GL_COLOR_TABLE_RED_SIZE": "Specifies the size of the red component in the color table.",
  "GL_COLOR_TABLE_RED_SIZE_SGI": "Specifies the size of the red component in the color table (SGI extension).",
  "GL_COLOR_TABLE_GREEN_SIZE": "Specifies the size of the green component in the color table.",
  "GL_COLOR_TABLE_GREEN_SIZE_SGI": "Specifies the size of the green component in the color table (SGI extension).",
  "GL_COLOR_TABLE_BLUE_SIZE": "Specifies the size of the blue component in the color table.",
  "GL_COLOR_TABLE_BLUE_SIZE_SGI": "Specifies the size of the blue component in the color table (SGI extension).",
  "GL_COLOR_TABLE_ALPHA_SIZE": "Specifies the size of the alpha component in the color table.",
  "GL_COLOR_TABLE_ALPHA_SIZE_SGI": "Specifies the size of the alpha component in the color table (SGI extension).",
  "GL_COLOR_TABLE_LUMINANCE_SIZE": "Specifies the size of the luminance component in the color table.",
  "GL_COLOR_TABLE_LUMINANCE_SIZE_SGI": "Specifies the size of the luminance component in the color table (SGI extension).",
  "GL_COLOR_TABLE_INTENSITY_SIZE": "Specifies the size of the intensity component in the color table.",
  "GL_COLOR_TABLE_INTENSITY_SIZE_SGI": "Specifies the size of the intensity component in the color table (SGI extension).",
  "GL_BGR": "Specifies the order of the color components as blue, green, red.",
  "GL_BGR_EXT": "Specifies the order of the color components as blue, green, red (EXT extension).",
  "GL_BGRA": "Specifies the order of the color components as blue, green, red, alpha.",
  "GL_BGRA_EXT": "Specifies the order of the color components as blue, green, red, alpha (EXT extension).",
  "GL_BGRA_IMG": "Specifies the order of the color components as blue, green, red, alpha in image data.",
  "GL_COLOR_INDEX1_EXT": "Specifies a color index with one component (EXT extension).",
  "GL_COLOR_INDEX2_EXT": "Specifies a color index with two components (EXT extension).",
  "GL_COLOR_INDEX4_EXT": "Specifies a color index with four components (EXT extension).",
  "GL_COLOR_INDEX8_EXT": "Specifies a color index with eight components (EXT extension).",
  "GL_COLOR_INDEX12_EXT": "Specifies a color index with twelve components (EXT extension).",
  "GL_COLOR_INDEX16_EXT": "Specifies a color index with sixteen components (EXT extension).",
  "GL_MAX_ELEMENTS_VERTICES": "Specifies the maximum number of vertices in a single draw call.",
  "GL_MAX_ELEMENTS_VERTICES_EXT": "Specifies the maximum number of vertices in a single draw call (EXT extension).",
  "GL_MAX_ELEMENTS_INDICES": "Specifies the maximum number of indices in a single draw call.",
  "GL_MAX_ELEMENTS_INDICES_EXT": "Specifies the maximum number of indices in a single draw call (EXT extension).",
  "GL_PHONG_WIN": "Specifies the Phong shading model in Win32 extensions.",
  "GL_PHONG_HINT_WIN": "Specifies the hint for using the Phong shading model in Win32 extensions.",
  "GL_FOG_SPECULAR_TEXTURE_WIN": "Specifies the fog specular texture in Win32 extensions.",
  "GL_TEXTURE_INDEX_SIZE_EXT": "Specifies the size of the texture index (EXT extension).",
  "GL_PARAMETER_BUFFER": "Specifies a buffer for parameters.",
  "GL_PARAMETER_BUFFER_ARB": "Specifies a buffer for parameters (ARB extension).",
  "GL_PARAMETER_BUFFER_BINDING": "Specifies the binding point for the parameter buffer.",
  "GL_PARAMETER_BUFFER_BINDING_ARB": "Specifies the binding point for the parameter buffer (ARB extension).",
  "GL_CLIP_VOLUME_CLIPPING_HINT_EXT": "Specifies the hint for clipping volume (EXT extension).",
  "GL_DUAL_ALPHA4_SGIS": "Specifies dual alpha with 4 bits (SGIS extension).",
  "GL_DUAL_ALPHA8_SGIS": "Specifies dual alpha with 8 bits (SGIS extension).",
  "GL_DUAL_ALPHA12_SGIS": "Specifies dual alpha with 12 bits (SGIS extension).",
  "GL_DUAL_ALPHA16_SGIS": "Specifies dual alpha with 16 bits (SGIS extension).",
  "GL_DUAL_LUMINANCE4_SGIS": "Specifies dual luminance with 4 bits (SGIS extension).",
  "GL_DUAL_LUMINANCE8_SGIS": "Specifies dual luminance with 8 bits (SGIS extension).",
  "GL_DUAL_LUMINANCE12_SGIS": "Specifies dual luminance with 12 bits (SGIS extension).",
  "GL_DUAL_LUMINANCE16_SGIS": "Specifies dual luminance with 16 bits (SGIS extension).",
  "GL_DUAL_INTENSITY4_SGIS": "Specifies dual intensity with 4 bits (SGIS extension).",
  "GL_DUAL_INTENSITY8_SGIS": "Specifies dual intensity with 8 bits (SGIS extension).",
  "GL_DUAL_INTENSITY12_SGIS": "Specifies dual intensity with 12 bits (SGIS extension).",
  "GL_DUAL_INTENSITY16_SGIS": "Specifies dual intensity with 16 bits (SGIS extension).",
  "GL_DUAL_LUMINANCE_ALPHA4_SGIS": "Specifies dual luminance and alpha with 4 bits (SGIS extension).",
  "GL_DUAL_LUMINANCE_ALPHA8_SGIS": "Specifies dual luminance and alpha with 8 bits (SGIS extension).",
  "GL_QUAD_ALPHA4_SGIS": "Specifies quad alpha with 4 bits (SGIS extension).",
  "GL_QUAD_ALPHA8_SGIS": "Specifies quad alpha with 8 bits (SGIS extension).",
  "GL_QUAD_LUMINANCE4_SGIS": "Specifies quad luminance with 4 bits (SGIS extension).",
  "GL_QUAD_LUMINANCE8_SGIS": "Specifies quad luminance with 8 bits (SGIS extension).",
  "GL_QUAD_INTENSITY4_SGIS": "Specifies quad intensity with 4 bits (SGIS extension).",
  "GL_QUAD_INTENSITY8_SGIS": "Specifies quad intensity with 8 bits (SGIS extension).",
  "GL_DUAL_TEXTURE_SELECT_SGIS": "Specifies dual texture selection (SGIS extension).",
  "GL_QUAD_TEXTURE_SELECT_SGIS": "Specifies quad texture selection (SGIS extension).",
  "GL_POINT_SIZE_MIN": "Specifies the minimum size of points.",
  "GL_POINT_SIZE_MIN_ARB": "Specifies the minimum size of points (ARB extension).",
  "GL_POINT_SIZE_MIN_EXT": "Specifies the minimum size of points (EXT extension).",
  "GL_POINT_SIZE_MIN_SGIS": "Specifies the minimum size of points (SGIS extension).",
  "GL_POINT_SIZE_MAX": "Specifies the maximum size of points.",
  "GL_POINT_SIZE_MAX_ARB": "Specifies the maximum size of points (ARB extension).",
  "GL_POINT_SIZE_MAX_EXT": "Specifies the maximum size of points (EXT extension).",
  "GL_POINT_SIZE_MAX_SGIS": "Specifies the maximum size of points (SGIS extension).",
  "GL_POINT_FADE_THRESHOLD_SIZE": "Specifies the size threshold for point fading.",
  "GL_POINT_FADE_THRESHOLD_SIZE_ARB": "Specifies the size threshold for point fading (ARB extension).",
  "GL_POINT_FADE_THRESHOLD_SIZE_EXT": "Specifies the size threshold for point fading (EXT extension).",
  "GL_POINT_FADE_THRESHOLD_SIZE_SGIS": "Specifies the size threshold for point fading (SGIS extension).",
  "GL_DISTANCE_ATTENUATION_EXT": "Specifies the distance attenuation factor (EXT extension).",
  "GL_DISTANCE_ATTENUATION_SGIS": "Specifies the distance attenuation factor (SGIS extension).",
  "GL_POINT_DISTANCE_ATTENUATION": "Specifies point distance attenuation.",
  "GL_POINT_DISTANCE_ATTENUATION_ARB": "Specifies point distance attenuation (ARB extension).",
  "GL_FOG_FUNC_SGIS": "Specifies the fog function (SGIS extension).",
  "GL_FOG_FUNC_POINTS_SGIS": "Specifies points for the fog function (SGIS extension).",
  "GL_MAX_FOG_FUNC_POINTS_SGIS": "Specifies the maximum number of fog function points (SGIS extension).",
  "GL_CLAMP_TO_BORDER": "Specifies clamping behavior for texture coordinates to the border.",
  "GL_CLAMP_TO_BORDER_ARB": "Specifies clamping behavior for texture coordinates to the border (ARB extension).",
  "GL_CLAMP_TO_BORDER_EXT": "Specifies clamping behavior for texture coordinates to the border (EXT extension).",
  "GL_CLAMP_TO_BORDER_NV": "Specifies clamping behavior for texture coordinates to the border (NV extension).",
  "GL_CLAMP_TO_BORDER_SGIS": "Specifies clamping behavior for texture coordinates to the border (SGIS extension).",
  "GL_CLAMP_TO_BORDER_OES": "Specifies clamping behavior for texture coordinates to the border (OES extension).",
  "GL_TEXTURE_MULTI_BUFFER_HINT_SGIX": "Specifies a hint for multi-buffered textures (SGIX extension).",
  "GL_CLAMP_TO_EDGE": "Specifies clamping behavior for texture coordinates to the edge.",
  "GL_CLAMP_TO_EDGE_SGIS": "Specifies clamping behavior for texture coordinates to the edge (SGIS extension).",
  "GL_PACK_SKIP_VOLUMES_SGIS": "Specifies the number of volumes to skip when packing (SGIS extension).",
  "GL_PACK_IMAGE_DEPTH_SGIS": "Specifies the depth of the packed image (SGIS extension).",
  "GL_UNPACK_SKIP_VOLUMES_SGIS": "Specifies the number of volumes to skip when unpacking (SGIS extension).",
  "GL_UNPACK_IMAGE_DEPTH_SGIS": "Specifies the depth of the unpacked image (SGIS extension).",
  "GL_TEXTURE_4D_SGIS": "Specifies a 4D texture (SGIS extension).",
  "GL_PROXY_TEXTURE_4D_SGIS": "Specifies a proxy for a 4D texture (SGIS extension).",
  "GL_TEXTURE_4DSIZE_SGIS": "Specifies the size of a 4D texture (SGIS extension).",
  "GL_TEXTURE_WRAP_Q_SGIS": "Specifies the wrap mode for the Q coordinate (SGIS extension).",
  "GL_MAX_4D_TEXTURE_SIZE_SGIS": "Specifies the maximum size of a 4D texture (SGIS extension).",
  "GL_PIXEL_TEX_GEN_SGIX": "Specifies pixel texture generation (SGIX extension).",
  "GL_TEXTURE_MIN_LOD": "Specifies the minimum level of detail for textures.",
  "GL_TEXTURE_MIN_LOD_SGIS": "Specifies the minimum level of detail for texture filtering (SGIS extension).",
  "GL_TEXTURE_MAX_LOD": "Specifies the maximum level of detail for texture filtering.",
  "GL_TEXTURE_MAX_LOD_SGIS": "Specifies the maximum level of detail for texture filtering (SGIS extension).",
  "GL_TEXTURE_BASE_LEVEL": "Specifies the base mipmap level of a texture.",
  "GL_TEXTURE_BASE_LEVEL_SGIS": "Specifies the base mipmap level of a texture (SGIS extension).",
  "GL_TEXTURE_MAX_LEVEL": "Specifies the maximum mipmap level of a texture.",
  "GL_TEXTURE_MAX_LEVEL_APPLE": "Specifies the maximum mipmap level of a texture (APPLE extension).",
  "GL_TEXTURE_MAX_LEVEL_SGIS": "Specifies the maximum mipmap level of a texture (SGIS extension).",
  "GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX": "Specifies the best alignment for pixel tiles (SGIX extension).",
  "GL_PIXEL_TILE_CACHE_INCREMENT_SGIX": "Specifies the cache increment for pixel tiles (SGIX extension).",
  "GL_PIXEL_TILE_WIDTH_SGIX": "Specifies the width of pixel tiles (SGIX extension).",
  "GL_PIXEL_TILE_HEIGHT_SGIX": "Specifies the height of pixel tiles (SGIX extension).",
  "GL_PIXEL_TILE_GRID_WIDTH_SGIX": "Specifies the width of the pixel tile grid (SGIX extension).",
  "GL_PIXEL_TILE_GRID_HEIGHT_SGIX": "Specifies the height of the pixel tile grid (SGIX extension).",
  "GL_PIXEL_TILE_GRID_DEPTH_SGIX": "Specifies the depth of the pixel tile grid (SGIX extension).",
  "GL_PIXEL_TILE_CACHE_SIZE_SGIX": "Specifies the size of the pixel tile cache (SGIX extension).",
  "GL_FILTER4_SGIS": "Specifies a filter with four components (SGIS extension).",
  "GL_TEXTURE_FILTER4_SIZE_SGIS": "Specifies the size of the four-component texture filter (SGIS extension).",
  "GL_SPRITE_SGIX": "Specifies the sprite (SGIX extension).",
  "GL_SPRITE_MODE_SGIX": "Specifies the mode of the sprite (SGIX extension).",
  "GL_SPRITE_AXIS_SGIX": "Specifies the axis for the sprite (SGIX extension).",
  "GL_SPRITE_TRANSLATION_SGIX": "Specifies the translation for the sprite (SGIX extension).",
  "GL_SPRITE_AXIAL_SGIX": "Specifies axial sprite behavior (SGIX extension).",
  "GL_SPRITE_OBJECT_ALIGNED_SGIX": "Specifies object-aligned sprite behavior (SGIX extension).",
  "GL_SPRITE_EYE_ALIGNED_SGIX": "Specifies eye-aligned sprite behavior (SGIX extension).",
  "GL_TEXTURE_4D_BINDING_SGIS": "Specifies the binding of a 4D texture (SGIS extension).",
  "GL_IGNORE_BORDER_HP": "Specifies to ignore the border of the texture (HP extension).",
  "GL_CONSTANT_BORDER": "Specifies constant border behavior for textures.",
  "GL_CONSTANT_BORDER_HP": "Specifies constant border behavior for textures (HP extension).",
  "GL_REPLICATE_BORDER": "Specifies border behavior that replicates the edge texels.",
  "GL_REPLICATE_BORDER_HP": "Specifies border behavior that replicates the edge texels (HP extension).",
  "GL_CONVOLUTION_BORDER_COLOR": "Specifies the border color for convolutions.",
  "GL_CONVOLUTION_BORDER_COLOR_HP": "Specifies the border color for convolutions (HP extension).",
  "GL_IMAGE_SCALE_X_HP": "Specifies the scale factor in the X direction for image transformations (HP extension).",
  "GL_IMAGE_SCALE_Y_HP": "Specifies the scale factor in the Y direction for image transformations (HP extension).",
  "GL_IMAGE_TRANSLATE_X_HP": "Specifies the translation in the X direction for image transformations (HP extension).",
  "GL_IMAGE_TRANSLATE_Y_HP": "Specifies the translation in the Y direction for image transformations (HP extension).",
  "GL_IMAGE_ROTATE_ANGLE_HP": "Specifies the rotation angle for image transformations (HP extension).",
  "GL_IMAGE_ROTATE_ORIGIN_X_HP": "Specifies the origin for rotation in the X direction for image transformations (HP extension).",
  "GL_IMAGE_ROTATE_ORIGIN_Y_HP": "Specifies the origin for rotation in the Y direction for image transformations (HP extension).",
  "GL_IMAGE_MAG_FILTER_HP": "Specifies the magnification filter for images (HP extension).",
  "GL_IMAGE_MIN_FILTER_HP": "Specifies the minification filter for images (HP extension).",
  "GL_IMAGE_CUBIC_WEIGHT_HP": "Specifies the cubic weight for image transformations (HP extension).",
  "GL_CUBIC_HP": "Specifies cubic interpolation behavior (HP extension).",
  "GL_AVERAGE_HP": "Specifies averaging behavior for images (HP extension).",
  "GL_IMAGE_TRANSFORM_2D_HP": "Specifies 2D image transformations (HP extension).",
  "GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP": "Specifies the color table after image transformation (HP extension).",
  "GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP": "Specifies a proxy for the post-image transform color table (HP extension).",
  "GL_OCCLUSION_TEST_HP": "Specifies the occlusion test behavior (HP extension).",
  "GL_OCCLUSION_TEST_RESULT_HP": "Specifies the result of the occlusion test (HP extension).",
  "GL_TEXTURE_LIGHTING_MODE_HP": "Specifies the lighting mode for textures (HP extension).",
  "GL_TEXTURE_POST_SPECULAR_HP": "Specifies post-specular treatment for textures (HP extension).",
  "GL_TEXTURE_PRE_SPECULAR_HP": "Specifies pre-specular treatment for textures (HP extension).",
  "GL_LINEAR_CLIPMAP_LINEAR_SGIX": "Specifies linear clipmap filtering (SGIX extension).",
  "GL_TEXTURE_CLIPMAP_CENTER_SGIX": "Specifies the center of the clipmap (SGIX extension).",
  "GL_TEXTURE_CLIPMAP_FRAME_SGIX": "Specifies the frame of the clipmap (SGIX extension).",
  "GL_TEXTURE_CLIPMAP_OFFSET_SGIX": "Specifies the offset for the clipmap (SGIX extension).",
  "GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX": "Specifies the virtual depth of the clipmap (SGIX extension).",
  "GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX": "Specifies the LOD offset for the clipmap (SGIX extension).",
  "GL_TEXTURE_CLIPMAP_DEPTH_SGIX": "Specifies the depth of the clipmap (SGIX extension).",
  "GL_MAX_CLIPMAP_DEPTH_SGIX": "Specifies the maximum depth of the clipmap (SGIX extension).",
  "GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX": "Specifies the maximum virtual depth of the clipmap (SGIX extension).",
  "GL_POST_TEXTURE_FILTER_BIAS_SGIX": "Specifies the bias for post texture filtering (SGIX extension).",
  "GL_POST_TEXTURE_FILTER_SCALE_SGIX": "Specifies the scale for post texture filtering (SGIX extension).",
  "GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX": "Specifies the bias range for post texture filtering (SGIX extension).",
  "GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX": "Specifies the scale range for post texture filtering (SGIX extension).",
  "GL_REFERENCE_PLANE_SGIX": "Specifies the reference plane for operations (SGIX extension).",
  "GL_REFERENCE_PLANE_EQUATION_SGIX": "Specifies the equation for the reference plane (SGIX extension).",
  "GL_IR_INSTRUMENT1_SGIX": "Specifies the first instrument for IR measurements (SGIX extension).",
  "GL_INSTRUMENT_BUFFER_POINTER_SGIX": "Specifies the pointer to the instrument buffer (SGIX extension).",
  "GL_INSTRUMENT_MEASUREMENTS_SGIX": "Specifies the measurements taken by the instrument (SGIX extension).",
  "GL_LIST_PRIORITY_SGIX": "Specifies the priority of display lists (SGIX extension).",
  "GL_CALLIGRAPHIC_FRAGMENT_SGIX": "Specifies calligraphic fragments (SGIX extension).",
  "GL_PIXEL_TEX_GEN_Q_CEILING_SGIX": "Specifies ceiling behavior for Q generation (SGIX extension).",
  "GL_PIXEL_TEX_GEN_Q_ROUND_SGIX": "Specifies rounding behavior for Q generation (SGIX extension).",
  "GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX": "Specifies floor behavior for Q generation (SGIX extension).",
  "GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX": "Specifies alpha generation behavior (SGIX extension).",
  "GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX": "Specifies multi-sample alpha generation behavior (SGIX extension).",
  "GL_FRAMEZOOM_SGIX": "Specifies zoom behavior for frames (SGIX extension).",
  "GL_FRAMEZOOM_FACTOR_SGIX": "Specifies the zoom factor for frames (SGIX extension).",
  "GL_MAX_FRAMEZOOM_FACTOR_SGIX": "Specifies the maximum frame zoom factor (SGIX extension).",
  "GL_TEXTURE_LOD_BIAS_S_SGIX": "Specifies the LOD bias for the S texture coordinate (SGIX extension).",
  "GL_TEXTURE_LOD_BIAS_T_SGIX": "Specifies the LOD bias for the T texture coordinate (SGIX extension).",
  "GL_TEXTURE_LOD_BIAS_R_SGIX": "Specifies the LOD bias for the R texture coordinate (SGIX extension).",
  "GL_GENERATE_MIPMAP": "Specifies the generation of mipmaps.",
  "GL_GENERATE_MIPMAP_SGIS": "Specifies the generation of mipmaps (SGIS extension).",
  "GL_GENERATE_MIPMAP_HINT": "Specifies a hint for generating mipmaps.",
  "GL_GENERATE_MIPMAP_HINT_SGIS": "Specifies a hint for generating mipmaps (SGIS extension).",
  "GL_GEOMETRY_DEFORMATION_SGIX": "Specifies geometry deformation (SGIX extension).",
  "GL_TEXTURE_DEFORMATION_SGIX": "Specifies texture deformation (SGIX extension).",
  "GL_DEFORMATIONS_MASK_SGIX": "Specifies a mask for deformations (SGIX extension).",
  "GL_MAX_DEFORMATION_ORDER_SGIX": "Specifies the maximum order of deformation (SGIX extension).",
  "GL_FOG_OFFSET_SGIX": "Specifies the fog offset (SGIX extension).",
  "GL_FOG_OFFSET_VALUE_SGIX": "Specifies the value for fog offset (SGIX extension).",
  "GL_TEXTURE_COMPARE_SGIX": "Specifies texture comparison behavior (SGIX extension).",
  "GL_TEXTURE_COMPARE_OPERATOR_SGIX": "Specifies the operator used for texture comparison (SGIX extension).",
  "GL_TEXTURE_LEQUAL_R_SGIX": "Specifies the less than or equal comparison for texture (SGIX extension).",
  "GL_TEXTURE_GEQUAL_R_SGIX": "Specifies the greater than or equal comparison for texture (SGIX extension).",
  "GL_DEPTH_COMPONENT16": "Specifies a 16-bit depth component for textures.",
  "GL_DEPTH_COMPONENT16_ARB": "Specifies a 16-bit depth component for textures (ARB extension).",
  "GL_DEPTH_COMPONENT16_OES": "Specifies a 16-bit depth component for textures (OES extension).",
  "GL_DEPTH_COMPONENT16_SGIX": "Specifies a 16-bit depth component for textures (SGIX extension).",
  "GL_DEPTH_COMPONENT24": "Specifies a 24-bit depth component for textures.",
  "GL_DEPTH_COMPONENT24_ARB": "Specifies a 24-bit depth component for textures (ARB extension).",
  "GL_DEPTH_COMPONENT24_OES": "Specifies a 24-bit depth component for textures (OES extension).",
  "GL_DEPTH_COMPONENT24_SGIX": "Specifies a 24-bit depth component for textures (SGIX extension).",
  "GL_DEPTH_COMPONENT32": "Specifies a 32-bit depth component for textures.",
  "GL_DEPTH_COMPONENT32_ARB": "Specifies a 32-bit depth component for textures (ARB extension).",
  "GL_DEPTH_COMPONENT32_OES": "Specifies a 32-bit depth component for textures (OES extension).",
  "GL_DEPTH_COMPONENT32_SGIX": "Specifies a 32-bit depth component for textures (SGIX extension).",
  "GL_ARRAY_ELEMENT_LOCK_FIRST_EXT": "Specifies the first element locked in an array (EXT extension).",
  "GL_ARRAY_ELEMENT_LOCK_COUNT_EXT": "Specifies the count of elements locked in an array (EXT extension).",
  "GL_CULL_VERTEX_EXT": "Specifies culling behavior for vertices (EXT extension).",
  "GL_CULL_VERTEX_EYE_POSITION_EXT": "Specifies eye position based vertex culling (EXT extension).",
  "GL_CULL_VERTEX_OBJECT_POSITION_EXT": "Specifies object position based vertex culling (EXT extension).",
  "GL_IUI_V2F_EXT": "Specifies a 2D vertex format with unsigned integer indices (EXT extension).",
  "GL_IUI_V3F_EXT": "Specifies a 3D vertex format with unsigned integer indices (EXT extension).",
  "GL_IUI_N3F_V2F_EXT": "Specifies a 2D vertex format with normals and unsigned integer indices (EXT extension).",
  "GL_IUI_N3F_V3F_EXT": "Specifies a 3D vertex format with normals and unsigned integer indices (EXT extension).",
  "GL_T2F_IUI_V2F_EXT": "Specifies a 2D vertex format with texture coordinates and unsigned integer indices (EXT extension).",
  "GL_T2F_IUI_V3F_EXT": "Specifies a 3D vertex format with texture coordinates and unsigned integer indices (EXT extension).",
  "GL_T2F_IUI_N3F_V2F_EXT": "Specifies a 2D vertex format with normals, texture coordinates, and unsigned integer indices (EXT extension).",
  "GL_T2F_IUI_N3F_V3F_EXT": "Specifies a 3D vertex format with normals, texture coordinates, and unsigned integer indices (EXT extension).",
  "GL_INDEX_TEST_EXT": "Specifies index testing behavior (EXT extension).",
  "GL_INDEX_TEST_FUNC_EXT": "Specifies the function used for index testing (EXT extension).",
  "GL_INDEX_TEST_REF_EXT": "Specifies the reference value for index testing (EXT extension).",
  "GL_INDEX_MATERIAL_EXT": "Specifies index material behavior (EXT extension).",
  "GL_INDEX_MATERIAL_PARAMETER_EXT": "Specifies the parameter for index material (EXT extension).",
  "GL_INDEX_MATERIAL_FACE_EXT": "Specifies the face for index material (EXT extension).",
  "GL_YCRCB_422_SGIX": "Specifies YCrCb 4:2:2 format (SGIX extension).",
  "GL_YCRCB_444_SGIX": "Specifies YCrCb 4:4:4 format (SGIX extension).",
  "GL_WRAP_BORDER_SUN": "Specifies border wrapping behavior in SUN extensions.",
  "GL_UNPACK_CONSTANT_DATA_SUNX": "Specifies constant unpack data behavior in SUNX extensions.",
  "GL_TEXTURE_CONSTANT_DATA_SUNX": "Specifies constant texture data behavior in SUNX extensions.",
  "GL_TRIANGLE_LIST_SUN": "Specifies triangle list behavior in SUN extensions.",
  "GL_REPLACEMENT_CODE_SUN": "Specifies replacement code behavior in SUN extensions.",
  "GL_GLOBAL_ALPHA_SUN": "Specifies global alpha behavior in SUN extensions.",
  "GL_GLOBAL_ALPHA_FACTOR_SUN": "Specifies the global alpha factor in SUN extensions.",
  "GL_TEXTURE_COLOR_WRITEMASK_SGIS": "Specifies the color write mask for textures (SGIS extension).",
  "GL_EYE_DISTANCE_TO_POINT_SGIS": "Specifies the eye distance to a point for calculations (SGIS extension).",
  "GL_OBJECT_DISTANCE_TO_POINT_SGIS": "Specifies the object distance to a point for calculations (SGIS extension).",
  "GL_EYE_DISTANCE_TO_LINE_SGIS": "Specifies the eye distance to a line for calculations (SGIS extension).",
  "GL_OBJECT_DISTANCE_TO_LINE_SGIS": "Specifies the object distance to a line for calculations (SGIS extension).",
  "GL_EYE_POINT_SGIS": "Specifies the eye point for calculations (SGIS extension).",
  "GL_OBJECT_POINT_SGIS": "Specifies the object point for calculations (SGIS extension).",
  "GL_EYE_LINE_SGIS": "Specifies the eye line for calculations (SGIS extension).",
  "GL_OBJECT_LINE_SGIS": "Specifies the object line for calculations (SGIS extension).",
  "GL_LIGHT_MODEL_COLOR_CONTROL": "Specifies color control for lighting.",
  "GL_LIGHT_MODEL_COLOR_CONTROL_EXT": "Specifies color control for lighting (EXT extension).",
  "GL_SINGLE_COLOR": "Specifies single color lighting behavior.",
  "GL_SINGLE_COLOR_EXT": "Specifies single color lighting behavior (EXT extension).",
  "GL_SEPARATE_SPECULAR_COLOR": "Specifies separate specular color behavior.",
  "GL_SEPARATE_SPECULAR_COLOR_EXT": "Specifies separate specular color behavior (EXT extension).",
  "GL_SHARED_TEXTURE_PALETTE_EXT": "Specifies shared texture palette behavior (EXT extension).",
  "GL_TEXT_FRAGMENT_SHADER_ATI": "Specifies text fragment shader behavior (ATI extension).",
  "GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING": "Specifies the color encoding for framebuffer attachments.",
  "GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT": "Specifies the color encoding for framebuffer attachments (EXT extension).",
  "GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE": "Specifies the component type for framebuffer attachments.",
  "GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT": "Specifies the component type for framebuffer attachments (EXT extension).",
  "GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE": "Specifies the red size for framebuffer attachments.",
  "GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE": "Specifies the green size for framebuffer attachments.",
  "GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE": "Specifies the blue size for framebuffer attachments.",
  "GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE": "Specifies the alpha size for framebuffer attachments.",
  "GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE": "Specifies the depth size for framebuffer attachments.",
  "GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE": "Specifies the stencil size for framebuffer attachments.",
  "GL_FRAMEBUFFER_DEFAULT": "Specifies the default framebuffer.",
  "GL_FRAMEBUFFER_UNDEFINED": "Specifies an undefined framebuffer.",
  "GL_FRAMEBUFFER_UNDEFINED_OES": "Specifies an undefined framebuffer (OES extension).",
  "GL_DEPTH_STENCIL_ATTACHMENT": "Specifies a depth-stencil attachment for framebuffers.",
  "GL_MAJOR_VERSION": "Specifies the major version of the OpenGL context.",
  "GL_MINOR_VERSION": "Specifies the minor version of the OpenGL context.",
  "GL_NUM_EXTENSIONS": "Specifies the number of extensions available in the OpenGL context.",
  "GL_CONTEXT_FLAGS": "Specifies the context flags for the OpenGL context.",
  "GL_BUFFER_IMMUTABLE_STORAGE": "Specifies immutable storage for buffers.",
  "GL_BUFFER_IMMUTABLE_STORAGE_EXT": "Specifies immutable storage for buffers (EXT extension).",
  "GL_BUFFER_STORAGE_FLAGS": "Specifies storage flags for buffers.",
  "GL_BUFFER_STORAGE_FLAGS_EXT": "Specifies storage flags for buffers (EXT extension).",
  "GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED": "Specifies support for primitive restart for patches.",
  "GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED_OES": "Specifies support for primitive restart for patches (OES extension).",
  "GL_INDEX": "Specifies the index for vertex data.",
  "GL_COMPRESSED_RED": "Specifies a compressed red texture format.",
  "GL_COMPRESSED_RG": "Specifies a compressed RG texture format.",
  "GL_RG": "Specifies RG color format.",
  "GL_RG_EXT": "Specifies RG color format (EXT extension).",
  "GL_RG_INTEGER": "Specifies RG integer format.",
  "GL_R8": "Specifies 8-bit red component format.",
  "GL_R8_EXT": "Specifies 8-bit red component format (EXT extension).",
  "GL_R16": "Specifies 16-bit red component format.",
  "GL_R16_EXT": "Specifies 16-bit red component format (EXT extension).",
  "GL_RG8": "Specifies 8-bit RG format.",
  "GL_RG8_EXT": "Specifies 8-bit RG format (EXT extension).",
  "GL_RG16": "Specifies 16-bit RG format.",
  "GL_RG16_EXT": "Specifies 16-bit RG format (EXT extension).",
  "GL_R16F": "Specifies 16-bit floating-point red component format.",
  "GL_R16F_EXT": "Specifies 16-bit floating-point red component format (EXT extension).",
  "GL_R32F": "Specifies 32-bit floating-point red component format.",
  "GL_R32F_EXT": "Specifies 32-bit floating-point red component format (EXT extension).",
  "GL_RG16F": "Specifies 16-bit floating-point RG format.",
  "GL_RG16F_EXT": "Specifies 16-bit floating-point RG format (EXT extension).",
  "GL_RG32F": "Specifies 32-bit floating-point RG format.",
  "GL_RG32F_EXT": "Specifies a 32-bit floating-point RG format (EXT extension).",
  "GL_R8I": "Specifies an 8-bit signed integer red component format.",
  "GL_R8UI": "Specifies an 8-bit unsigned integer red component format.",
  "GL_R16I": "Specifies a 16-bit signed integer red component format.",
  "GL_R16UI": "Specifies a 16-bit unsigned integer red component format.",
  "GL_R32I": "Specifies a 32-bit signed integer red component format.",
  "GL_R32UI": "Specifies a 32-bit unsigned integer red component format.",
  "GL_RG8I": "Specifies an 8-bit signed integer RG format.",
  "GL_RG8UI": "Specifies an 8-bit unsigned integer RG format.",
  "GL_RG16I": "Specifies a 16-bit signed integer RG format.",
  "GL_RG16UI": "Specifies a 16-bit unsigned integer RG format.",
  "GL_RG32I": "Specifies a 32-bit signed integer RG format.",
  "GL_RG32UI": "Specifies a 32-bit unsigned integer RG format.",
  "GL_SYNC_CL_EVENT_ARB": "Specifies synchronization with a CL event (ARB extension).",
  "GL_SYNC_CL_EVENT_COMPLETE_ARB": "Specifies completion of a CL event synchronization (ARB extension).",
  "GL_DEBUG_OUTPUT_SYNCHRONOUS": "Specifies synchronous debugging output behavior.",
  "GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB": "Specifies synchronous debugging output behavior (ARB extension).",
  "GL_DEBUG_OUTPUT_SYNCHRONOUS_KHR": "Specifies synchronous debugging output behavior in KHR extensions.",
  "GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH": "Specifies the length of the next logged debug message.",
  "GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB": "Specifies the length of the next logged debug message (ARB extension).",
  "GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR": "Specifies the length of the next logged debug message in KHR extensions.",
  "GL_DEBUG_CALLBACK_FUNCTION": "Specifies the function to call for debug messages.",
  "GL_DEBUG_CALLBACK_FUNCTION_ARB": "Specifies the function to call for debug messages (ARB extension).",
  "GL_DEBUG_CALLBACK_FUNCTION_KHR": "Specifies the function to call for debug messages in KHR extensions.",
  "GL_DEBUG_CALLBACK_USER_PARAM": "Specifies user parameter for the debug callback function.",
  "GL_DEBUG_CALLBACK_USER_PARAM_ARB": "Specifies user parameter for the debug callback function (ARB extension).",
  "GL_DEBUG_CALLBACK_USER_PARAM_KHR": "Specifies user parameter for the debug callback function in KHR extensions.",
  "GL_DEBUG_SOURCE_API": "Specifies the source of debug messages as API calls.",
  "GL_DEBUG_SOURCE_API_ARB": "Specifies the source of debug messages as API calls (ARB extension).",
  "GL_DEBUG_SOURCE_API_KHR": "Specifies the source of debug messages as API calls in KHR extensions.",
  "GL_DEBUG_SOURCE_WINDOW_SYSTEM": "Specifies the source of debug messages as window system related.",
  "GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB": "Specifies the source of debug messages as window system related (ARB extension).",
  "GL_DEBUG_SOURCE_WINDOW_SYSTEM_KHR": "Specifies the source of debug messages as window system related in KHR extensions.",
  "GL_DEBUG_SOURCE_SHADER_COMPILER": "Specifies the source of debug messages as shader compiler related.",
  "GL_DEBUG_SOURCE_SHADER_COMPILER_ARB": "Specifies the source of debug messages as shader compiler related (ARB extension).",
  "GL_DEBUG_SOURCE_SHADER_COMPILER_KHR": "Specifies the source of debug messages as shader compiler related in KHR extensions.",
  "GL_DEBUG_SOURCE_THIRD_PARTY": "Specifies the source of debug messages as third-party applications.",
  "GL_DEBUG_SOURCE_THIRD_PARTY_ARB": "Specifies the source of debug messages as third-party applications (ARB extension).",
  "GL_DEBUG_SOURCE_THIRD_PARTY_KHR": "Specifies the source of debug messages as third-party applications in KHR extensions.",
  "GL_DEBUG_SOURCE_APPLICATION": "Specifies the source of debug messages as application related.",
  "GL_DEBUG_SOURCE_APPLICATION_ARB": "Specifies the source of debug messages as application related (ARB extension).",
  "GL_DEBUG_SOURCE_APPLICATION_KHR": "Specifies the source of debug messages as application related in KHR extensions.",
  "GL_DEBUG_SOURCE_OTHER": "Specifies the source of debug messages as other.",
  "GL_DEBUG_SOURCE_OTHER_ARB": "Specifies the source of debug messages as other (ARB extension).",
  "GL_DEBUG_SOURCE_OTHER_KHR": "Specifies the source of debug messages as other in KHR extensions.",
  "GL_DEBUG_TYPE_ERROR": "Specifies an error type debug message.",
  "GL_DEBUG_TYPE_ERROR_ARB": "Specifies an error type debug message (ARB extension).",
  "GL_DEBUG_TYPE_ERROR_KHR": "Specifies an error type debug message in KHR extensions.",
  "GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR": "Specifies a deprecated behavior type debug message.",
  "GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB": "Specifies a deprecated behavior type debug message (ARB extension).",
  "GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR": "Specifies a deprecated behavior type debug message in KHR extensions.",
  "GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR": "Specifies an undefined behavior type debug message.",
  "GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB": "Specifies an undefined behavior type debug message (ARB extension).",
  "GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR": "Specifies an undefined behavior type debug message in KHR extensions.",
  "GL_DEBUG_TYPE_PORTABILITY": "Specifies a portability type debug message.",
  "GL_DEBUG_TYPE_PORTABILITY_ARB": "Specifies a portability type debug message (ARB extension).",
  "GL_DEBUG_TYPE_PORTABILITY_KHR": "Specifies a portability type debug message in KHR extensions.",
  "GL_DEBUG_TYPE_PERFORMANCE": "Specifies a performance type debug message.",
  "GL_DEBUG_TYPE_PERFORMANCE_ARB": "Specifies a performance type debug message (ARB extension).",
  "GL_DEBUG_TYPE_PERFORMANCE_KHR": "Specifies a performance type debug message in KHR extensions.",
  "GL_DEBUG_TYPE_OTHER": "Specifies another type of debug message.",
  "GL_DEBUG_TYPE_OTHER_ARB": "Specifies another type of debug message (ARB extension).",
  "GL_DEBUG_TYPE_OTHER_KHR": "Specifies another type of debug message in KHR extensions.",
  "GL_LOSE_CONTEXT_ON_RESET": "Specifies behavior when the context is lost on reset.",
  "GL_LOSE_CONTEXT_ON_RESET_ARB": "Specifies behavior when the context is lost on reset (ARB extension).",
  "GL_LOSE_CONTEXT_ON_RESET_EXT": "Specifies behavior when the context is lost on reset (EXT extension).",
  "GL_LOSE_CONTEXT_ON_RESET_KHR": "Specifies behavior when the context is lost on reset in KHR extensions.",
  "GL_GUILTY_CONTEXT_RESET": "Specifies a guilty context reset behavior.",
  "GL_GUILTY_CONTEXT_RESET_ARB": "Specifies a guilty context reset behavior (ARB extension).",
  "GL_GUILTY_CONTEXT_RESET_EXT": "Specifies a guilty context reset behavior (EXT extension).",
  "GL_GUILTY_CONTEXT_RESET_KHR": "Specifies a guilty context reset behavior in KHR extensions.",
  "GL_INNOCENT_CONTEXT_RESET": "Specifies an innocent context reset behavior.",
  "GL_INNOCENT_CONTEXT_RESET_ARB": "Specifies an innocent context reset behavior (ARB extension).",
  "GL_INNOCENT_CONTEXT_RESET_EXT": "Specifies an innocent context reset behavior (EXT extension).",
  "GL_INNOCENT_CONTEXT_RESET_KHR": "Specifies an innocent context reset behavior in KHR extensions.",
  "GL_UNKNOWN_CONTEXT_RESET": "Specifies an unknown context reset behavior.",
  "GL_UNKNOWN_CONTEXT_RESET_ARB": "Specifies an unknown context reset behavior (ARB extension).",
  "GL_UNKNOWN_CONTEXT_RESET_EXT": "Specifies an unknown context reset behavior (EXT extension).",
  "GL_UNKNOWN_CONTEXT_RESET_KHR": "Specifies an unknown context reset behavior in KHR extensions.",
  "GL_RESET_NOTIFICATION_STRATEGY": "Specifies the reset notification strategy.",
  "GL_RESET_NOTIFICATION_STRATEGY_ARB": "Specifies the reset notification strategy (ARB extension).",
  "GL_RESET_NOTIFICATION_STRATEGY_EXT": "Specifies the reset notification strategy (EXT extension).",
  "GL_RESET_NOTIFICATION_STRATEGY_KHR": "Specifies the reset notification strategy in KHR extensions.",
  "GL_PROGRAM_BINARY_RETRIEVABLE_HINT": "Specifies a hint that program binaries are retrievable.",
  "GL_PROGRAM_SEPARABLE": "Specifies that a program is separable.",
  "GL_PROGRAM_SEPARABLE_EXT": "Specifies that a program is separable (EXT extension).",
  "GL_ACTIVE_PROGRAM": "Specifies the currently active program.",
  "GL_PROGRAM_PIPELINE_BINDING": "Specifies the program pipeline binding.",
  "GL_PROGRAM_PIPELINE_BINDING_EXT": "Specifies the program pipeline binding (EXT extension).",
  "GL_MAX_VIEWPORTS": "Specifies the maximum number of viewports.",
  "GL_MAX_VIEWPORTS_NV": "Specifies the maximum number of viewports (NV extension).",
  "GL_MAX_VIEWPORTS_OES": "Specifies the maximum number of viewports (OES extension).",
  "GL_VIEWPORT_SUBPIXEL_BITS": "Specifies the number of bits for subpixel precision in viewports.",
  "GL_VIEWPORT_SUBPIXEL_BITS_EXT": "Specifies the number of bits for subpixel precision in viewports (EXT extension).",
  "GL_VIEWPORT_SUBPIXEL_BITS_NV": "Specifies the number of bits for subpixel precision in viewports (NV extension).",
  "GL_VIEWPORT_SUBPIXEL_BITS_OES": "Specifies the number of bits for subpixel precision in viewports (OES extension).",
  "GL_VIEWPORT_BOUNDS_RANGE": "Specifies the bounds range for viewports.",
  "GL_VIEWPORT_BOUNDS_RANGE_EXT": "Specifies the bounds range for viewports (EXT extension).",
  "GL_VIEWPORT_BOUNDS_RANGE_NV": "Specifies the bounds range for viewports (NV extension).",
  "GL_VIEWPORT_BOUNDS_RANGE_OES": "Specifies the bounds range for viewports (OES extension).",
  "GL_LAYER_PROVOKING_VERTEX": "Specifies the layer provoking vertex behavior.",
  "GL_LAYER_PROVOKING_VERTEX_EXT": "Specifies the layer provoking vertex behavior (EXT extension).",
  "GL_LAYER_PROVOKING_VERTEX_OES": "Specifies the layer provoking vertex behavior (OES extension).",
  "GL_VIEWPORT_INDEX_PROVOKING_VERTEX": "Specifies the viewport index provoking vertex behavior.",
  "GL_VIEWPORT_INDEX_PROVOKING_VERTEX_EXT": "Specifies the viewport index provoking vertex behavior (EXT extension).",
  "GL_VIEWPORT_INDEX_PROVOKING_VERTEX_NV": "Specifies the viewport index provoking vertex behavior (NV extension).",
  "GL_VIEWPORT_INDEX_PROVOKING_VERTEX_OES": "Specifies the viewport index provoking vertex behavior (OES extension).",
  "GL_UNDEFINED_VERTEX": "Specifies an undefined vertex behavior.",
  "GL_UNDEFINED_VERTEX_EXT": "Specifies an undefined vertex behavior (EXT extension).",
  "GL_UNDEFINED_VERTEX_OES": "Specifies an undefined vertex behavior (OES extension).",
  "GL_NO_RESET_NOTIFICATION": "Specifies no reset notification behavior.",
  "GL_NO_RESET_NOTIFICATION_ARB": "Specifies no reset notification behavior (ARB extension).",
  "GL_NO_RESET_NOTIFICATION_EXT": "Specifies no reset notification behavior (EXT extension).",
  "GL_NO_RESET_NOTIFICATION_KHR": "Specifies no reset notification behavior in KHR extensions.",
  "GL_MAX_COMPUTE_SHARED_MEMORY_SIZE": "Specifies the maximum size of shared memory in compute shaders.",
  "GL_MAX_COMPUTE_UNIFORM_COMPONENTS": "Specifies the maximum number of uniform components in compute shaders.",
  "GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS": "Specifies the maximum number of atomic counter buffers in compute shaders.",
  "GL_MAX_COMPUTE_ATOMIC_COUNTERS": "Specifies the maximum number of atomic counters in compute shaders.",
  "GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS": "Specifies the maximum combined uniform components across all compute shaders.",
  "GL_COMPUTE_WORK_GROUP_SIZE": "Specifies the work group size in compute shaders.",
  "GL_DEBUG_TYPE_MARKER": "Specifies a debug type marker.",
  "GL_DEBUG_TYPE_MARKER_KHR": "Specifies a debug type marker in KHR extensions.",
  "GL_DEBUG_TYPE_PUSH_GROUP": "Specifies the start of a debug push group.",
  "GL_DEBUG_TYPE_PUSH_GROUP_KHR": "Specifies the start of a debug push group in KHR extensions.",
  "GL_DEBUG_TYPE_POP_GROUP": "Specifies the end of a debug push group.",
  "GL_DEBUG_TYPE_POP_GROUP_KHR": "Specifies the end of a debug push group in KHR extensions.",
  "GL_DEBUG_SEVERITY_NOTIFICATION": "Specifies a notification severity for debug messages.",
  "GL_DEBUG_SEVERITY_NOTIFICATION_KHR": "Specifies a notification severity for debug messages in KHR extensions.",
  "GL_MAX_DEBUG_GROUP_STACK_DEPTH": "Specifies the maximum depth of debug group stack.",
  "GL_MAX_DEBUG_GROUP_STACK_DEPTH_KHR": "Specifies the maximum depth of debug group stack in KHR extensions.",
  "GL_DEBUG_GROUP_STACK_DEPTH": "Specifies the current depth of the debug group stack.",
  "GL_DEBUG_GROUP_STACK_DEPTH_KHR": "Specifies the current depth of the debug group stack in KHR extensions.",
  "GL_MAX_UNIFORM_LOCATIONS": "Specifies the maximum number of uniform locations available.",
  "GL_INTERNALFORMAT_SUPPORTED": "Specifies if a given internal format is supported.",
  "GL_INTERNALFORMAT_PREFERRED": "Specifies the preferred internal format.",
  "GL_INTERNALFORMAT_RED_SIZE": "Specifies the size of the red component in an internal format.",
  "GL_INTERNALFORMAT_GREEN_SIZE": "Specifies the size of the green component in an internal format.",
  "GL_INTERNALFORMAT_BLUE_SIZE": "Specifies the size of the blue component in an internal format.",
  "GL_INTERNALFORMAT_ALPHA_SIZE": "Specifies the size of the alpha component in an internal format.",
  "GL_INTERNALFORMAT_DEPTH_SIZE": "Specifies the size of the depth component in an internal format.",
  "GL_INTERNALFORMAT_STENCIL_SIZE": "Specifies the size of the stencil component in an internal format.",
  "GL_INTERNALFORMAT_SHARED_SIZE": "Specifies the size of shared components in an internal format.",
  "GL_INTERNALFORMAT_RED_TYPE": "Specifies the type of the red component in an internal format.",
  "GL_INTERNALFORMAT_GREEN_TYPE": "Specifies the type of the green component in an internal format.",
  "GL_INTERNALFORMAT_BLUE_TYPE": "Specifies the type of the blue component in an internal format.",
  "GL_INTERNALFORMAT_ALPHA_TYPE": "Specifies the type of the alpha component in an internal format.",
  "GL_INTERNALFORMAT_DEPTH_TYPE": "Specifies the type of the depth component in an internal format.",
  "GL_INTERNALFORMAT_STENCIL_TYPE": "Specifies the type of the stencil component in an internal format.",
  "GL_MAX_WIDTH": "Specifies the maximum width of textures.",
  "GL_MAX_HEIGHT": "Specifies the maximum height of textures.",
  "GL_MAX_DEPTH": "Specifies the maximum depth of textures.",
  "GL_MAX_LAYERS": "Specifies the maximum number of layers in 3D textures.",
  "GL_MAX_COMBINED_DIMENSIONS": "Specifies the maximum combined dimensions for textures.",
  "GL_COLOR_COMPONENTS": "Specifies the number of color components.",
  "GL_DEPTH_COMPONENTS": "Specifies the number of depth components.",
  "GL_STENCIL_COMPONENTS": "Specifies the number of stencil components.",
  "GL_COLOR_RENDERABLE": "Specifies if color rendering is supported.",
  "GL_DEPTH_RENDERABLE": "Specifies if depth rendering is supported.",
  "GL_STENCIL_RENDERABLE": "Specifies if stencil rendering is supported.",
  "GL_FRAMEBUFFER_RENDERABLE": "Specifies if the framebuffer is renderable.",
  "GL_FRAMEBUFFER_RENDERABLE_LAYERED": "Specifies if the framebuffer is renderable and layered.",
  "GL_FRAMEBUFFER_BLEND": "Specifies if framebuffer blending is supported.",
  "GL_READ_PIXELS": "Specifies the read pixels operation.",
  "GL_READ_PIXELS_FORMAT": "Specifies the format for reading pixels.",
  "GL_READ_PIXELS_TYPE": "Specifies the data type for reading pixels.",
  "GL_TEXTURE_IMAGE_FORMAT": "Specifies the format of a texture image.",
  "GL_TEXTURE_IMAGE_TYPE": "Specifies the data type of a texture image.",
  "GL_GET_TEXTURE_IMAGE_FORMAT": "Specifies the format for getting a texture image.",
  "GL_GET_TEXTURE_IMAGE_TYPE": "Specifies the data type for getting a texture image.",
  "GL_MIPMAP": "Specifies the mipmap generation behavior.",
  "GL_MANUAL_GENERATE_MIPMAP": "Specifies manual mipmap generation.",
  "GL_AUTO_GENERATE_MIPMAP": "Specifies automatic mipmap generation.",
  "GL_COLOR_ENCODING": "Specifies the color encoding method.",
  "GL_SRGB_READ": "Specifies if sRGB read is supported.",
  "GL_SRGB_WRITE": "Specifies if sRGB write is supported.",
  "GL_SRGB_DECODE_ARB": "Specifies sRGB decode behavior (ARB extension).",
  "GL_FILTER": "Specifies the filtering method for textures.",
  "GL_VERTEX_TEXTURE": "Specifies if vertex textures are supported.",
  "GL_TESS_CONTROL_TEXTURE": "Specifies if tessellation control textures are supported.",
  "GL_TESS_EVALUATION_TEXTURE": "Specifies if tessellation evaluation textures are supported.",
  "GL_GEOMETRY_TEXTURE": "Specifies if geometry textures are supported.",
  "GL_FRAGMENT_TEXTURE": "Specifies if fragment textures are supported.",
  "GL_COMPUTE_TEXTURE": "Specifies if compute textures are supported.",
  "GL_TEXTURE_SHADOW": "Specifies if shadow textures are supported.",
  "GL_TEXTURE_GATHER": "Specifies if texture gathering is supported.",
  "GL_TEXTURE_GATHER_SHADOW": "Specifies if shadow texture gathering is supported.",
  "GL_SHADER_IMAGE_LOAD": "Specifies the shader image load operation.",
  "GL_SHADER_IMAGE_STORE": "Specifies the shader image store operation.",
  "GL_SHADER_IMAGE_ATOMIC": "Specifies atomic operations on shader images.",
  "GL_IMAGE_TEXEL_SIZE": "Specifies the size of texels in images.",
  "GL_IMAGE_COMPATIBILITY_CLASS": "Specifies the compatibility class for images.",
  "GL_IMAGE_PIXEL_FORMAT": "Specifies the pixel format of an image.",
  "GL_IMAGE_PIXEL_TYPE": "Specifies the pixel type of an image.",
  "GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST": "Specifies simultaneous texture and depth testing behavior.",
  "GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST": "Specifies simultaneous texture and stencil testing behavior.",
  "GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE": "Specifies simultaneous texture and depth writing behavior.",
  "GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE": "Specifies simultaneous texture and stencil writing behavior.",
  "GL_TEXTURE_COMPRESSED_BLOCK_WIDTH": "Specifies the width of a compressed texture block.",
  "GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT": "Specifies the height of a compressed texture block.",
  "GL_TEXTURE_COMPRESSED_BLOCK_SIZE": "Specifies the size of a compressed texture block.",
  "GL_CLEAR_BUFFER": "Specifies the clear buffer operation.",
  "GL_TEXTURE_VIEW": "Specifies the texture view operation.",
  "GL_VIEW_COMPATIBILITY_CLASS": "Specifies the compatibility class for views.",
  "GL_FULL_SUPPORT": "Specifies full support for a feature.",
  "GL_CAVEAT_SUPPORT": "Specifies caveat support for a feature.",
  "GL_IMAGE_CLASS_4_X_32": "Specifies the image class for 4x32 bit formats.",
  "GL_IMAGE_CLASS_2_X_32": "Specifies the image class for 2x32 bit formats.",
  "GL_IMAGE_CLASS_1_X_32": "Specifies the image class for 1x32 bit formats.",
  "GL_IMAGE_CLASS_4_X_16": "Specifies the image class for 4x16 bit formats.",
  "GL_IMAGE_CLASS_2_X_16": "Specifies the image class for 2x16 bit formats.",
  "GL_IMAGE_CLASS_1_X_16": "Specifies the image class for 1x16 bit formats.",
  "GL_IMAGE_CLASS_4_X_8": "Specifies the image class for 4x8 bit formats.",
  "GL_IMAGE_CLASS_2_X_8": "Specifies the image class for 2x8 bit formats.",
  "GL_IMAGE_CLASS_1_X_8": "Specifies the image class for 1x8 bit formats.",
  "GL_IMAGE_CLASS_11_11_10": "Specifies the image class for 11-11-10 bit formats.",
  "GL_IMAGE_CLASS_10_10_10_2": "Specifies the image class for 10-10-10-2 bit formats.",
  "GL_VIEW_CLASS_128_BITS": "Specifies the view class for 128 bits.",
  "GL_VIEW_CLASS_96_BITS": "Specifies the view class for 96 bits.",
  "GL_VIEW_CLASS_64_BITS": "Specifies the view class for 64 bits.",
  "GL_VIEW_CLASS_48_BITS": "Specifies the view class for 48 bits.",
  "GL_VIEW_CLASS_32_BITS": "Specifies the view class for 32 bits.",
  "GL_VIEW_CLASS_24_BITS": "Specifies the view class for 24 bits.",
  "GL_VIEW_CLASS_16_BITS": "Specifies the view class for 16 bits.",
  "GL_VIEW_CLASS_8_BITS": "Specifies the view class for 8 bits.",
  "GL_VIEW_CLASS_S3TC_DXT1_RGB": "Specifies the view class for S3TC DXT1 RGB format.",
  "GL_VIEW_CLASS_S3TC_DXT1_RGBA": "Specifies the view class for S3TC DXT1 RGBA format.",
  "GL_VIEW_CLASS_S3TC_DXT3_RGBA": "Specifies the view class for S3TC DXT3 RGBA format.",
  "GL_VIEW_CLASS_S3TC_DXT5_RGBA": "Specifies the view class for S3TC DXT5 RGBA format.",
  "GL_VIEW_CLASS_RGTC1_RED": "Specifies the view class for RGTC1 red format.",
  "GL_VIEW_CLASS_RGTC2_RG": "Specifies the view class for RGTC2 green-red format.",
  "GL_VIEW_CLASS_BPTC_UNORM": "Specifies the view class for BPTC unorm format.",
  "GL_VIEW_CLASS_BPTC_FLOAT": "Specifies the view class for BPTC float format.",
  "GL_VERTEX_ATTRIB_BINDING": "Specifies the vertex attribute binding.",
  "GL_VERTEX_ATTRIB_RELATIVE_OFFSET": "Specifies the relative offset for vertex attributes.",
  "GL_VERTEX_BINDING_DIVISOR": "Specifies the divisor for vertex binding.",
  "GL_VERTEX_BINDING_OFFSET": "Specifies the offset for vertex binding.",
  "GL_VERTEX_BINDING_STRIDE": "Specifies the stride for vertex binding.",
  "GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET": "Specifies the maximum relative offset for vertex attributes.",
  "GL_MAX_VERTEX_ATTRIB_BINDINGS": "Specifies the maximum number of vertex attrib bindings.",
  "GL_TEXTURE_VIEW_MIN_LEVEL": "Specifies the minimum mipmap level for texture views.",
  "GL_TEXTURE_VIEW_MIN_LEVEL_EXT": "Specifies the minimum mipmap level for texture views (EXT extension).",
  "GL_TEXTURE_VIEW_MIN_LEVEL_OES": "Specifies the minimum mipmap level for texture views (OES extension).",
  "GL_TEXTURE_VIEW_NUM_LEVELS": "Specifies the number of mipmap levels in texture views.",
  "GL_TEXTURE_VIEW_NUM_LEVELS_EXT": "Specifies the number of mipmap levels in texture views (EXT extension).",
  "GL_TEXTURE_VIEW_NUM_LEVELS_OES": "Specifies the number of mipmap levels in texture views (OES extension).",
  "GL_TEXTURE_VIEW_MIN_LAYER": "Specifies the minimum layer for texture views.",
  "GL_TEXTURE_VIEW_MIN_LAYER_EXT": "Specifies the minimum layer for texture views (EXT extension).",
  "GL_TEXTURE_VIEW_MIN_LAYER_OES": "Specifies the minimum layer for texture views (OES extension).",
  "GL_TEXTURE_VIEW_NUM_LAYERS": "Specifies the number of layers in texture views.",
  "GL_TEXTURE_VIEW_NUM_LAYERS_EXT": "Specifies the number of layers in texture views (EXT extension).",
  "GL_TEXTURE_VIEW_NUM_LAYERS_OES": "Specifies the number of layers in texture views (OES extension).",
  "GL_TEXTURE_IMMUTABLE_LEVELS": "Specifies the number of immutable levels in textures.",
  "GL_BUFFER": "Specifies buffer objects.",
  "GL_BUFFER_KHR": "Specifies buffer objects in KHR extensions.",
  "GL_SHADER": "Specifies shader objects.",
  "GL_SHADER_KHR": "Specifies shader objects in KHR extensions.",
  "GL_PROGRAM": "Specifies program objects.",
  "GL_PROGRAM_KHR": "Specifies program objects in KHR extensions.",
  "GL_QUERY": "Specifies query objects.",
  "GL_QUERY_KHR": "Specifies query objects in KHR extensions.",
  "GL_PROGRAM_PIPELINE": "Specifies program pipeline objects.",
  "GL_PROGRAM_PIPELINE_KHR": "Specifies program pipeline objects in KHR extensions.",
  "GL_MAX_VERTEX_ATTRIB_STRIDE": "Specifies the maximum stride for vertex attributes.",
  "GL_SAMPLER": "Specifies sampler objects.",
  "GL_SAMPLER_KHR": "Specifies sampler objects in KHR extensions.",
  "GL_DISPLAY_LIST": "Specifies display list objects.",
  "GL_MAX_LABEL_LENGTH": "Specifies the maximum length of labels.",
  "GL_MAX_LABEL_LENGTH_KHR": "Specifies the maximum length of labels in KHR extensions.",
  "GL_NUM_SHADING_LANGUAGE_VERSIONS": "Specifies the number of shading language versions available.",
  "GL_QUERY_TARGET": "Specifies the target for queries.",
  "GL_TRANSFORM_FEEDBACK_OVERFLOW": "Specifies overflow in transform feedback operations.",
  "GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB": "Specifies overflow in transform feedback operations (ARB extension).",
  "GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW": "Specifies stream overflow in transform feedback operations.",
  "GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB": "Specifies stream overflow in transform feedback operations (ARB extension).",
  "GL_VERTICES_SUBMITTED": "Specifies the number of vertices submitted.",
  "GL_VERTICES_SUBMITTED_ARB": "Specifies the number of vertices submitted (ARB extension).",
  "GL_PRIMITIVES_SUBMITTED": "Specifies the number of primitives submitted.",
  "GL_PRIMITIVES_SUBMITTED_ARB": "Specifies the number of primitives submitted (ARB extension).",
  "GL_VERTEX_SHADER_INVOCATIONS": "Specifies the number of invocations of the vertex shader.",
  "GL_VERTEX_SHADER_INVOCATIONS_ARB": "Specifies the number of invocations of the vertex shader (ARB extension).",
  "GL_TESS_CONTROL_SHADER_PATCHES": "Specifies the number of patches processed by the tessellation control shader.",
  "GL_TESS_CONTROL_SHADER_PATCHES_ARB": "Specifies the number of patches processed by the tessellation control shader (ARB extension).",
  "GL_TESS_EVALUATION_SHADER_INVOCATIONS": "Specifies the number of invocations of the tessellation evaluation shader.",
  "GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB": "Specifies the number of invocations of the tessellation evaluation shader (ARB extension).",
  "GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED": "Specifies the number of primitives emitted by the geometry shader.",
  "GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB": "Specifies the number of primitives emitted by the geometry shader (ARB extension).",
  "GL_FRAGMENT_SHADER_INVOCATIONS": "Specifies the number of invocations of the fragment shader.",
  "GL_FRAGMENT_SHADER_INVOCATIONS_ARB": "Specifies the number of invocations of the fragment shader (ARB extension).",
  "GL_COMPUTE_SHADER_INVOCATIONS": "Specifies the number of invocations of the compute shader.",
  "GL_COMPUTE_SHADER_INVOCATIONS_ARB": "Specifies the number of invocations of the compute shader (ARB extension).",
  "GL_CLIPPING_INPUT_PRIMITIVES": "Specifies the number of input primitives in clipping.",
  "GL_CLIPPING_INPUT_PRIMITIVES_ARB": "Specifies the number of input primitives in clipping (ARB extension).",
  "GL_CLIPPING_OUTPUT_PRIMITIVES": "Specifies the number of output primitives in clipping.",
  "GL_CLIPPING_OUTPUT_PRIMITIVES_ARB": "Specifies the number of output primitives in clipping (ARB extension).",
  "GL_SPARSE_BUFFER_PAGE_SIZE_ARB": "Specifies the page size for sparse buffers (ARB extension).",
  "GL_MAX_CULL_DISTANCES": "Specifies the maximum number of cull distances.",
  "GL_MAX_CULL_DISTANCES_EXT": "Specifies the maximum number of cull distances (EXT extension).",
  "GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES": "Specifies the maximum combined clip and cull distances.",
  "GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES_EXT": "Specifies the maximum combined clip and cull distances (EXT extension).",
  "GL_CONTEXT_RELEASE_BEHAVIOR": "Specifies the behavior when the OpenGL context is released.",
  "GL_CONTEXT_RELEASE_BEHAVIOR_KHR": "Specifies the behavior of context release in KHR extensions.",
  "GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH": "Specifies that commands will be flushed on context release.",
  "GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_KHR": "Specifies flushing behavior in KHR extensions upon context release.",
  "GL_ROBUST_GPU_TIMEOUT_MS_KHR": "Specifies the robust GPU timeout in milliseconds.",
  "GL_DEPTH_PASS_INSTRUMENT_SGIX": "Specifies depth pass instrumentation (SGIX extension).",
  "GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX": "Specifies counters for depth pass instrumentation (SGIX extension).",
  "GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX": "Specifies the maximum value for depth pass instrumentation (SGIX extension).",
  "GL_FRAGMENTS_INSTRUMENT_SGIX": "Specifies fragment instrumentation (SGIX extension).",
  "GL_FRAGMENTS_INSTRUMENT_COUNTERS_SGIX": "Specifies counters for fragment instrumentation (SGIX extension).",
  "GL_FRAGMENTS_INSTRUMENT_MAX_SGIX": "Specifies the maximum value for fragment instrumentation (SGIX extension).",
  "GL_CONVOLUTION_HINT_SGIX": "Specifies hints for convolution operations (SGIX extension).",
  "GL_YCRCB_SGIX": "Specifies YCbCr format (SGIX extension).",
  "GL_YCRCBA_SGIX": "Specifies YCbCrA format (SGIX extension).",
  "GL_UNPACK_COMPRESSED_SIZE_SGIX": "Specifies the size of unpacked compressed data (SGIX extension).",
  "GL_PACK_MAX_COMPRESSED_SIZE_SGIX": "Specifies the maximum size for packed compressed data (SGIX extension).",
  "GL_PACK_COMPRESSED_SIZE_SGIX": "Specifies the size of packed compressed data (SGIX extension).",
  "GL_SLIM8U_SGIX": "Specifies the Slim8U format (SGIX extension).",
  "GL_SLIM10U_SGIX": "Specifies the Slim10U format (SGIX extension).",
  "GL_SLIM12S_SGIX": "Specifies the Slim12S format (SGIX extension).",
  "GL_ALPHA_MIN_SGIX": "Specifies the minimum alpha value (SGIX extension).",
  "GL_ALPHA_MAX_SGIX": "Specifies the maximum alpha value (SGIX extension).",
  "GL_SCALEBIAS_HINT_SGIX": "Specifies hints for scale-bias operations (SGIX extension).",
  "GL_ASYNC_MARKER_SGIX": "Specifies asynchronous markers (SGIX extension).",
  "GL_PIXEL_TEX_GEN_MODE_SGIX": "Specifies the pixel texture generation mode (SGIX extension).",
  "GL_ASYNC_HISTOGRAM_SGIX": "Specifies asynchronous histogram operations (SGIX extension).",
  "GL_MAX_ASYNC_HISTOGRAM_SGIX": "Specifies the maximum number of asynchronous histogram operations (SGIX extension).",
  "GL_PIXEL_TRANSFORM_2D_EXT": "Specifies 2D pixel transformation (EXT extension).",
  "GL_PIXEL_MAG_FILTER_EXT": "Specifies the magnification filter for pixel operations (EXT extension).",
  "GL_PIXEL_MIN_FILTER_EXT": "Specifies the minification filter for pixel operations (EXT extension).",
  "GL_PIXEL_CUBIC_WEIGHT_EXT": "Specifies the cubic weight for pixel operations (EXT extension).",
  "GL_CUBIC_EXT": "Specifies cubic filtering (EXT extension).",
  "GL_AVERAGE_EXT": "Specifies average filtering (EXT extension).",
  "GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT": "Specifies the stack depth for 2D pixel transformations (EXT extension).",
  "GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT": "Specifies the maximum stack depth for 2D pixel transformations (EXT extension).",
  "GL_PIXEL_TRANSFORM_2D_MATRIX_EXT": "Specifies the transformation matrix for 2D pixel transformations (EXT extension).",
  "GL_FRAGMENT_MATERIAL_EXT": "Specifies material properties for fragments (EXT extension).",
  "GL_FRAGMENT_NORMAL_EXT": "Specifies normal properties for fragments (EXT extension).",
  "GL_FRAGMENT_COLOR_EXT": "Specifies color properties for fragments (EXT extension).",
  "GL_ATTENUATION_EXT": "Specifies attenuation properties (EXT extension).",
  "GL_SHADOW_ATTENUATION_EXT": "Specifies shadow attenuation properties (EXT extension).",
  "GL_TEXTURE_APPLICATION_MODE_EXT": "Specifies the application mode for textures (EXT extension).",
  "GL_TEXTURE_LIGHT_EXT": "Specifies lighting properties for textures (EXT extension).",
  "GL_TEXTURE_MATERIAL_FACE_EXT": "Specifies the face for material properties (EXT extension).",
  "GL_TEXTURE_MATERIAL_PARAMETER_EXT": "Specifies material parameters for textures (EXT extension).",
  "GL_PIXEL_TEXTURE_SGIS": "Specifies pixel texture operations (SGIS extension).",
  "GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS": "Specifies the RGB source for pixel fragment (SGIS extension).",
  "GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS": "Specifies the alpha source for pixel fragment (SGIS extension).",
  "GL_PIXEL_GROUP_COLOR_SGIS": "Specifies group color for pixel operations (SGIS extension).",
  "GL_LINE_QUALITY_HINT_SGIX": "Specifies hints for line quality (SGIX extension).",
  "GL_ASYNC_TEX_IMAGE_SGIX": "Specifies asynchronous texture image operations (SGIX extension).",
  "GL_ASYNC_DRAW_PIXELS_SGIX": "Specifies asynchronous pixel drawing operations (SGIX extension).",
  "GL_ASYNC_READ_PIXELS_SGIX": "Specifies asynchronous pixel reading operations (SGIX extension).",
  "GL_MAX_ASYNC_TEX_IMAGE_SGIX": "Specifies the maximum number of asynchronous texture images (SGIX extension).",
  "GL_MAX_ASYNC_DRAW_PIXELS_SGIX": "Specifies the maximum number of asynchronous draw pixels (SGIX extension).",
  "GL_MAX_ASYNC_READ_PIXELS_SGIX": "Specifies the maximum number of asynchronous read pixels (SGIX extension).",
  "GL_UNSIGNED_BYTE_2_3_3_REV": "Specifies unsigned byte format in 2-3-3 reversed order.",
  "GL_UNSIGNED_BYTE_2_3_3_REV_EXT": "Specifies unsigned byte format in 2-3-3 reversed order (EXT extension).",
  "GL_UNSIGNED_SHORT_5_6_5": "Specifies unsigned short format in 5-6-5 format.",
  "GL_UNSIGNED_SHORT_5_6_5_EXT": "Specifies unsigned short format in 5-6-5 format (EXT extension).",
  "GL_UNSIGNED_SHORT_5_6_5_REV": "Specifies unsigned short format in 5-6-5 format reversed.",
  "GL_UNSIGNED_SHORT_5_6_5_REV_EXT": "Specifies unsigned short format in 5-6-5 reversed (EXT extension).",
  "GL_UNSIGNED_SHORT_4_4_4_4_REV": "Specifies unsigned short format in 4-4-4-4 reversed.",
  "GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT": "Specifies unsigned short format in 4-4-4-4 reversed (EXT extension).",
  "GL_UNSIGNED_SHORT_4_4_4_4_REV_IMG": "Specifies unsigned short format in 4-4-4-4 reversed for images.",
  "GL_UNSIGNED_SHORT_1_5_5_5_REV": "Specifies unsigned short format in 1-5-5-5 reversed.",
  "GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT": "Specifies unsigned short format in 1-5-5-5 reversed (EXT extension).",
  "GL_UNSIGNED_INT_8_8_8_8_REV": "Specifies unsigned int format in 8-8-8-8 reversed.",
  "GL_UNSIGNED_INT_8_8_8_8_REV_EXT": "Specifies unsigned int format in 8-8-8-8 reversed (EXT extension).",
  "GL_UNSIGNED_INT_2_10_10_10_REV": "Specifies unsigned int format in 2-10-10-10 reversed.",
  "GL_UNSIGNED_INT_2_10_10_10_REV_EXT": "Specifies unsigned int format in 2-10-10-10 reversed (EXT extension).",
  "GL_TEXTURE_MAX_CLAMP_S_SGIX": "Specifies the maximum clamp value for S texture coordinates (SGIX extension).",
  "GL_TEXTURE_MAX_CLAMP_T_SGIX": "Specifies the maximum clamp value for T texture coordinates (SGIX extension).",
  "GL_TEXTURE_MAX_CLAMP_R_SGIX": "Specifies the maximum clamp value for R texture coordinates (SGIX extension).",
  "GL_MIRRORED_REPEAT": "Specifies mirrored repeat texture wrapping mode.",
  "GL_MIRRORED_REPEAT_ARB": "Specifies mirrored repeat texture wrapping mode (ARB extension).",
  "GL_MIRRORED_REPEAT_IBM": "Specifies mirrored repeat texture wrapping mode in IBM extensions.",
  "GL_MIRRORED_REPEAT_OES": "Specifies mirrored repeat texture wrapping mode (OES extension).",
  "GL_RGB_S3TC": "Specifies S3TC RGB compressed texture format.",
  "GL_RGB4_S3TC": "Specifies S3TC RGB4 compressed texture format.",
  "GL_RGBA_S3TC": "Specifies S3TC RGBA compressed texture format.",
  "GL_RGBA4_S3TC": "Specifies S3TC RGBA4 compressed texture format.",
  "GL_RGBA_DXT5_S3TC": "Specifies S3TC DXT5 compressed texture format.",
  "GL_RGBA4_DXT5_S3TC": "Specifies S3TC DXT5 compressed texture format with RGBA4.",
  "GL_VERTEX_PRECLIP_SGIX": "Specifies vertex pre-clipping (SGIX extension).",
  "GL_VERTEX_PRECLIP_HINT_SGIX": "Specifies hints for vertex pre-clipping (SGIX extension).",
  "GL_COMPRESSED_RGB_S3TC_DXT1_EXT": "Specifies S3TC DXT1 compressed RGB texture format (EXT extension).",
  "GL_COMPRESSED_RGBA_S3TC_DXT1_EXT": "Specifies S3TC DXT1 compressed RGBA texture format (EXT extension).",
  "GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE": "Specifies S3TC DXT3 compressed RGBA texture format (ANGLE extension).",
  "GL_COMPRESSED_RGBA_S3TC_DXT3_EXT": "Specifies S3TC DXT3 compressed RGBA texture format (EXT extension).",
  "GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE": "Specifies S3TC DXT5 compressed RGBA texture format (ANGLE extension).",
  "GL_COMPRESSED_RGBA_S3TC_DXT5_EXT": "Specifies S3TC DXT5 compressed RGBA texture format (EXT extension).",
  "GL_PARALLEL_ARRAYS_INTEL": "Specifies parallel arrays (INTEL extension).",
  "GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL": "Specifies vertex array parallel pointers (INTEL extension).",
  "GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL": "Specifies normal array parallel pointers (INTEL extension).",
  "GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL": "Specifies color array parallel pointers (INTEL extension).",
  "GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL": "Specifies texture coordinate array parallel pointers (INTEL extension).",
  "GL_PERFQUERY_DONOT_FLUSH_INTEL": "Specifies not to flush performance queries (INTEL extension).",
  "GL_PERFQUERY_FLUSH_INTEL": "Specifies to flush performance queries (INTEL extension).",
  "GL_PERFQUERY_WAIT_INTEL": "Specifies to wait for performance queries (INTEL extension).",
  "GL_BLACKHOLE_RENDER_INTEL": "Specifies blackhole render mode (INTEL extension).",
  "GL_CONSERVATIVE_RASTERIZATION_INTEL": "Specifies conservative rasterization mode (INTEL extension).",
  "GL_TEXTURE_MEMORY_LAYOUT_INTEL": "Specifies memory layout for textures (INTEL extension).",
  "GL_FRAGMENT_LIGHTING_SGIX": "Enables fragment lighting (SGIX extension).",
  "GL_FRAGMENT_COLOR_MATERIAL_SGIX": "Specifies color material properties for fragments (SGIX extension).",
  "GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX": "Specifies the face for fragment color material properties (SGIX extension).",
  "GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX": "Specifies material parameters for fragment colors (SGIX extension).",
  "GL_MAX_FRAGMENT_LIGHTS_SGIX": "Specifies the maximum number of fragment lights (SGIX extension).",
  "GL_MAX_ACTIVE_LIGHTS_SGIX": "Specifies the maximum number of active lights (SGIX extension).",
  "GL_CURRENT_RASTER_NORMAL_SGIX": "Specifies the current raster normal (SGIX extension).",
  "GL_LIGHT_ENV_MODE_SGIX": "Specifies the mode of the light environment (SGIX extension).",
  "GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX": "Specifies the local viewer mode for fragment light model (SGIX extension).",
  "GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX": "Specifies the two-sided lighting mode for fragment light model (SGIX extension).",
  "GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX": "Specifies the ambient light model for fragments (SGIX extension).",
  "GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX": "Specifies normal interpolation for the fragment light model (SGIX extension).",
  "GL_FRAGMENT_LIGHT0_SGIX": "Specifies the first fragment light source (SGIX extension).",
  "GL_FRAGMENT_LIGHT1_SGIX": "Specifies the second fragment light source (SGIX extension).",
  "GL_FRAGMENT_LIGHT2_SGIX": "Specifies the third fragment light source (SGIX extension).",
  "GL_FRAGMENT_LIGHT3_SGIX": "Specifies the fourth fragment light source (SGIX extension).",
  "GL_FRAGMENT_LIGHT4_SGIX": "Specifies the fifth fragment light source (SGIX extension).",
  "GL_FRAGMENT_LIGHT5_SGIX": "Specifies the sixth fragment light source (SGIX extension).",
  "GL_FRAGMENT_LIGHT6_SGIX": "Specifies the seventh fragment light source (SGIX extension).",
  "GL_FRAGMENT_LIGHT7_SGIX": "Specifies the eighth fragment light source (SGIX extension).",
  "GL_PACK_RESAMPLE_SGIX": "Specifies packing resample method (SGIX extension).",
  "GL_UNPACK_RESAMPLE_SGIX": "Specifies unpacking resample method (SGIX extension).",
  "GL_RESAMPLE_DECIMATE_SGIX": "Specifies decimation method for resampling (SGIX extension).",
  "GL_RESAMPLE_REPLICATE_SGIX": "Specifies replication method for resampling (SGIX extension).",
  "GL_RESAMPLE_ZERO_FILL_SGIX": "Specifies zero-fill method for resampling (SGIX extension).",
  "GL_TANGENT_ARRAY_EXT": "Specifies the tangent array (EXT extension).",
  "GL_BINORMAL_ARRAY_EXT": "Specifies the binormal array (EXT extension).",
  "GL_CURRENT_TANGENT_EXT": "Specifies the current tangent (EXT extension).",
  "GL_CURRENT_BINORMAL_EXT": "Specifies the current binormal (EXT extension).",
  "GL_TANGENT_ARRAY_TYPE_EXT": "Specifies the data type of the tangent array (EXT extension).",
  "GL_TANGENT_ARRAY_STRIDE_EXT": "Specifies the stride of the tangent array (EXT extension).",
  "GL_BINORMAL_ARRAY_TYPE_EXT": "Specifies the data type of the binormal array (EXT extension).",
  "GL_BINORMAL_ARRAY_STRIDE_EXT": "Specifies the stride of the binormal array (EXT extension).",
  "GL_TANGENT_ARRAY_POINTER_EXT": "Specifies the pointer to the tangent array (EXT extension).",
  "GL_BINORMAL_ARRAY_POINTER_EXT": "Specifies the pointer to the binormal array (EXT extension).",
  "GL_MAP1_TANGENT_EXT": "Specifies 1D tangent mapping (EXT extension).",
  "GL_MAP2_TANGENT_EXT": "Specifies 2D tangent mapping (EXT extension).",
  "GL_MAP1_BINORMAL_EXT": "Specifies 1D binormal mapping (EXT extension).",
  "GL_MAP2_BINORMAL_EXT": "Specifies 2D binormal mapping (EXT extension).",
  "GL_NEAREST_CLIPMAP_NEAREST_SGIX": "Specifies nearest clipmap nearest filtering (SGIX extension).",
  "GL_NEAREST_CLIPMAP_LINEAR_SGIX": "Specifies nearest clipmap linear filtering (SGIX extension).",
  "GL_LINEAR_CLIPMAP_NEAREST_SGIX": "Specifies linear clipmap nearest filtering (SGIX extension).",
  "GL_FOG_COORDINATE_SOURCE": "Specifies the source of fog coordinates.",
  "GL_FOG_COORDINATE_SOURCE_EXT": "Specifies the source of fog coordinates (EXT extension).",
  "GL_FOG_COORD_SRC": "Specifies the source of fog coordinates (deprecated).",
  "GL_FOG_COORDINATE": "Specifies fog coordinate.",
  "GL_FOG_COORDINATE_EXT": "Specifies fog coordinate (EXT extension).",
  "GL_FOG_COORD": "Specifies fog coordinates.",
  "GL_FRAGMENT_DEPTH": "Specifies fragment depth.",
  "GL_FRAGMENT_DEPTH_EXT": "Specifies fragment depth (EXT extension).",
  "GL_CURRENT_FOG_COORDINATE": "Specifies the current fog coordinate.",
  "GL_CURRENT_FOG_COORD": "Specifies the current fog coordinates.",
  "GL_CURRENT_FOG_COORDINATE_EXT": "Specifies the current fog coordinate (EXT extension).",
  "GL_FOG_COORDINATE_ARRAY_TYPE": "Specifies the data type of the fog coordinate array.",
  "GL_FOG_COORDINATE_ARRAY_TYPE_EXT": "Specifies the data type of the fog coordinate array (EXT extension).",
  "GL_FOG_COORD_ARRAY_TYPE": "Specifies the data type of the fog coordinate array (deprecated).",
  "GL_FOG_COORDINATE_ARRAY_STRIDE": "Specifies the stride of the fog coordinate array.",
  "GL_FOG_COORDINATE_ARRAY_STRIDE_EXT": "Specifies the stride of the fog coordinate array (EXT extension).",
  "GL_FOG_COORD_ARRAY_STRIDE": "Specifies the stride of the fog coordinate array (deprecated).",
  "GL_FOG_COORDINATE_ARRAY_POINTER": "Specifies the pointer to the fog coordinate array.",
  "GL_FOG_COORDINATE_ARRAY_POINTER_EXT": "Specifies the pointer to the fog coordinate array (EXT extension).",
  "GL_FOG_COORD_ARRAY_POINTER": "Specifies the pointer to the fog coordinate array (deprecated).",
  "GL_FOG_COORDINATE_ARRAY": "Specifies the fog coordinate array.",
  "GL_FOG_COORDINATE_ARRAY_EXT": "Specifies the fog coordinate array (EXT extension).",
  "GL_FOG_COORD_ARRAY": "Specifies the fog coordinate array (deprecated).",
  "GL_COLOR_SUM": "Specifies color sum.",
  "GL_COLOR_SUM_ARB": "Specifies color sum (ARB extension).",
  "GL_COLOR_SUM_EXT": "Specifies color sum (EXT extension).",
  "GL_CURRENT_SECONDARY_COLOR": "Specifies the current secondary color.",
  "GL_CURRENT_SECONDARY_COLOR_EXT": "Specifies the current secondary color (EXT extension).",
  "GL_SECONDARY_COLOR_ARRAY_SIZE": "Specifies the size of the secondary color array.",
  "GL_SECONDARY_COLOR_ARRAY_SIZE_EXT": "Specifies the size of the secondary color array (EXT extension).",
  "GL_SECONDARY_COLOR_ARRAY_TYPE": "Specifies the data type of the secondary color array.",
  "GL_SECONDARY_COLOR_ARRAY_TYPE_EXT": "Specifies the data type of the secondary color array (EXT extension).",
  "GL_SECONDARY_COLOR_ARRAY_STRIDE": "Specifies the stride of the secondary color array.",
  "GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT": "Specifies the stride of the secondary color array (EXT extension).",
  "GL_SECONDARY_COLOR_ARRAY_POINTER": "Specifies the pointer to the secondary color array.",
  "GL_SECONDARY_COLOR_ARRAY_POINTER_EXT": "Specifies the pointer to the secondary color array (EXT extension).",
  "GL_SECONDARY_COLOR_ARRAY": "Specifies the secondary color array.",
  "GL_SECONDARY_COLOR_ARRAY_EXT": "Specifies the secondary color array (EXT extension).",
  "GL_CURRENT_RASTER_SECONDARY_COLOR": "Specifies the current raster secondary color.",
  "GL_ALIASED_POINT_SIZE_RANGE": "Specifies the range of aliased point sizes.",
  "GL_ALIASED_LINE_WIDTH_RANGE": "Specifies the range of aliased line widths.",
  "GL_SCREEN_COORDINATES_REND": "Specifies screen coordinates in REND extensions.",
  "GL_INVERTED_SCREEN_W_REND": "Specifies inverted screen W in REND extensions.",
  "GL_TEXTURE0": "Specifies texture unit 0.",
  "GL_TEXTURE0_ARB": "Specifies texture unit 0 (ARB extension).",
  "GL_TEXTURE1": "Specifies texture unit 1.",
  "GL_TEXTURE1_ARB": "Specifies texture unit 1 (ARB extension).",
  "GL_TEXTURE2": "Specifies texture unit 2.",
  "GL_TEXTURE2_ARB": "Specifies texture unit 2 (ARB extension).",
  "GL_TEXTURE3": "Specifies texture unit 3.",
  "GL_TEXTURE3_ARB": "Specifies texture unit 3 (ARB extension).",
  "GL_TEXTURE4": "Specifies texture unit 4.",
  "GL_TEXTURE4_ARB": "Specifies texture unit 4 (ARB extension).",
  "GL_TEXTURE5": "Specifies texture unit 5.",
  "GL_TEXTURE5_ARB": "Specifies texture unit 5 (ARB extension).",
  "GL_TEXTURE6": "Specifies texture unit 6.",
  "GL_TEXTURE6_ARB": "Specifies texture unit 6 (ARB extension).",
  "GL_TEXTURE7": "Specifies texture unit 7.",
  "GL_TEXTURE7_ARB": "Specifies texture unit 7 (ARB extension).",
  "GL_TEXTURE8": "Specifies texture unit 8.",
  "GL_TEXTURE8_ARB": "Specifies texture unit 8 (ARB extension).",
  "GL_TEXTURE9": "Specifies texture unit 9.",
  "GL_TEXTURE9_ARB": "Specifies texture unit 9 (ARB extension).",
  "GL_TEXTURE10": "Specifies texture unit 10.",
  "GL_TEXTURE10_ARB": "Specifies texture unit 10 (ARB extension).",
  "GL_TEXTURE11": "Specifies texture unit 11.",
  "GL_TEXTURE11_ARB": "Specifies texture unit 11 (ARB extension).",
  "GL_TEXTURE12": "Specifies texture unit 12.",
  "GL_TEXTURE12_ARB": "Specifies texture unit 12 (ARB extension).",
  "GL_TEXTURE13": "Specifies texture unit 13.",
  "GL_TEXTURE13_ARB": "Specifies texture unit 13 (ARB extension).",
  "GL_TEXTURE14": "Specifies texture unit 14.",
  "GL_TEXTURE14_ARB": "Specifies texture unit 14 (ARB extension).",
  "GL_TEXTURE15": "Specifies texture unit 15.",
  "GL_TEXTURE15_ARB": "Specifies texture unit 15 (ARB extension).",
  "GL_TEXTURE16": "Specifies texture unit 16.",
  "GL_TEXTURE16_ARB": "Specifies texture unit 16 (ARB extension).",
  "GL_TEXTURE17": "Specifies texture unit 17.",
  "GL_TEXTURE17_ARB": "Specifies texture unit 17 (ARB extension).",
  "GL_TEXTURE18": "Specifies texture unit 18.",
  "GL_TEXTURE18_ARB": "Specifies texture unit 18 (ARB extension).",
  "GL_TEXTURE19": "Specifies texture unit 19.",
  "GL_TEXTURE19_ARB": "Specifies texture unit 19 (ARB extension).",
  "GL_TEXTURE20": "Specifies texture unit 20.",
  "GL_TEXTURE20_ARB": "Specifies texture unit 20 (ARB extension).",
  "GL_TEXTURE21": "Specifies texture unit 21.",
  "GL_TEXTURE21_ARB": "Specifies texture unit 21 (ARB extension).",
  "GL_TEXTURE22": "Specifies texture unit 22.",
  "GL_TEXTURE22_ARB": "Specifies texture unit 22 (ARB extension).",
  "GL_TEXTURE23": "Specifies texture unit 23.",
  "GL_TEXTURE23_ARB": "Specifies texture unit 23 (ARB extension).",
  "GL_TEXTURE24": "Specifies texture unit 24.",
  "GL_TEXTURE24_ARB": "Specifies texture unit 24 (ARB extension).",
  "GL_TEXTURE25": "Specifies texture unit 25.",
  "GL_TEXTURE25_ARB": "Specifies texture unit 25 (ARB extension).",
  "GL_TEXTURE26": "Specifies texture unit 26.",
  "GL_TEXTURE26_ARB": "Specifies texture unit 26 (ARB extension).",
  "GL_TEXTURE27": "Specifies texture unit 27.",
  "GL_TEXTURE27_ARB": "Specifies texture unit 27 (ARB extension).",
  "GL_TEXTURE28": "Specifies texture unit 28.",
  "GL_TEXTURE28_ARB": "Specifies texture unit 28 (ARB extension).",
  "GL_TEXTURE29": "Specifies texture unit 29.",
  "GL_TEXTURE29_ARB": "Specifies texture unit 29 (ARB extension).",
  "GL_TEXTURE30": "Specifies texture unit 30.",
  "GL_TEXTURE30_ARB": "Specifies texture unit 30 (ARB extension).",
  "GL_TEXTURE31": "Specifies texture unit 31.",
  "GL_TEXTURE31_ARB": "Specifies texture unit 31 (ARB extension).",
  "GL_ACTIVE_TEXTURE": "Specifies the active texture unit.",
  "GL_ACTIVE_TEXTURE_ARB": "Specifies the active texture unit (ARB extension).",
  "GL_CLIENT_ACTIVE_TEXTURE": "Specifies the active texture unit for client operations.",
  "GL_CLIENT_ACTIVE_TEXTURE_ARB": "Specifies the active texture unit for client operations (ARB extension).",
  "GL_MAX_TEXTURE_UNITS": "Specifies the maximum number of texture units available.",
  "GL_MAX_TEXTURE_UNITS_ARB": "Specifies the maximum number of texture units (ARB extension).",
  "GL_TRANSPOSE_MODELVIEW_MATRIX": "Specifies the transpose of the modelview matrix.",
  "GL_TRANSPOSE_MODELVIEW_MATRIX_ARB": "Specifies the transpose of the modelview matrix (ARB extension).",
  "GL_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV": "Specifies the transpose of the modelview matrix (NV extension).",
  "GL_TRANSPOSE_PROJECTION_MATRIX": "Specifies the transpose of the projection matrix.",
  "GL_TRANSPOSE_PROJECTION_MATRIX_ARB": "Specifies the transpose of the projection matrix (ARB extension).",
  "GL_PATH_TRANSPOSE_PROJECTION_MATRIX_NV": "Specifies the transpose of the projection matrix (NV extension).",
  "GL_TRANSPOSE_TEXTURE_MATRIX": "Specifies the transpose of the texture matrix.",
  "GL_TRANSPOSE_TEXTURE_MATRIX_ARB": "Specifies the transpose of the texture matrix (ARB extension).",
  "GL_TRANSPOSE_COLOR_MATRIX": "Specifies the transpose of the color matrix.",
  "GL_TRANSPOSE_COLOR_MATRIX_ARB": "Specifies the transpose of the color matrix (ARB extension).",
  "GL_SUBTRACT": "Specifies subtraction operation for blending.",
  "GL_SUBTRACT_ARB": "Specifies subtraction operation for blending (ARB extension).",
  "GL_MAX_RENDERBUFFER_SIZE": "Specifies the maximum size of renderbuffers.",
  "GL_MAX_RENDERBUFFER_SIZE_EXT": "Specifies the maximum size of renderbuffers (EXT extension).",
  "GL_MAX_RENDERBUFFER_SIZE_OES": "Specifies the maximum size of renderbuffers (OES extension).",
  "GL_COMPRESSED_ALPHA": "Specifies compressed alpha format.",
  "GL_COMPRESSED_ALPHA_ARB": "Specifies compressed alpha format (ARB extension).",
  "GL_COMPRESSED_LUMINANCE": "Specifies compressed luminance format.",
  "GL_COMPRESSED_LUMINANCE_ARB": "Specifies compressed luminance format (ARB extension).",
  "GL_COMPRESSED_LUMINANCE_ALPHA": "Specifies compressed luminance-alpha format.",
  "GL_COMPRESSED_LUMINANCE_ALPHA_ARB": "Specifies compressed luminance-alpha format (ARB extension).",
  "GL_COMPRESSED_INTENSITY": "Specifies compressed intensity format.",
  "GL_COMPRESSED_INTENSITY_ARB": "Specifies compressed intensity format (ARB extension).",
  "GL_COMPRESSED_RGB": "Specifies compressed RGB format.",
  "GL_COMPRESSED_RGB_ARB": "Specifies compressed RGB format (ARB extension).",
  "GL_COMPRESSED_RGBA": "Specifies compressed RGBA format.",
  "GL_COMPRESSED_RGBA_ARB": "Specifies compressed RGBA format (ARB extension).",
  "GL_TEXTURE_COMPRESSION_HINT": "Specifies the hint for texture compression.",
  "GL_TEXTURE_COMPRESSION_HINT_ARB": "Specifies the hint for texture compression (ARB extension).",
  "GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER": "Specifies whether a uniform block is referenced by a tessellation control shader.",
  "GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER": "Specifies whether a uniform block is referenced by a tessellation evaluation shader.",
  "GL_ALL_COMPLETED_NV": "Specifies if all operations are completed (NV extension).",
  "GL_FENCE_STATUS_NV": "Specifies the status of a fence (NV extension).",
  "GL_FENCE_CONDITION_NV": "Specifies the condition for a fence (NV extension).",
  "GL_TEXTURE_RECTANGLE": "Specifies a rectangle texture.",
  "GL_TEXTURE_RECTANGLE_ARB": "Specifies a rectangle texture (ARB extension).",
  "GL_TEXTURE_RECTANGLE_NV": "Specifies a rectangle texture (NV extension).",
  "GL_TEXTURE_BINDING_RECTANGLE": "Specifies the texture currently bound to the rectangle target.",
  "GL_TEXTURE_BINDING_RECTANGLE_ARB": "Specifies the texture currently bound to the rectangle target (ARB extension).",
  "GL_TEXTURE_BINDING_RECTANGLE_NV": "Specifies the texture currently bound to the rectangle target (NV extension).",
  "GL_PROXY_TEXTURE_RECTANGLE": "Specifies a proxy for rectangle textures.",
  "GL_PROXY_TEXTURE_RECTANGLE_ARB": "Specifies a proxy for rectangle textures (ARB extension).",
  "GL_PROXY_TEXTURE_RECTANGLE_NV": "Specifies a proxy for rectangle textures (NV extension).",
  "GL_MAX_RECTANGLE_TEXTURE_SIZE": "Specifies the maximum size of rectangle textures.",
  "GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB": "Specifies the maximum size of rectangle textures (ARB extension).",
  "GL_MAX_RECTANGLE_TEXTURE_SIZE_NV": "Specifies the maximum size of rectangle textures (NV extension).",
  "GL_DEPTH_STENCIL": "Specifies a combined depth and stencil buffer format.",
  "GL_DEPTH_STENCIL_EXT": "Specifies a combined depth and stencil buffer format (EXT extension).",
  "GL_DEPTH_STENCIL_NV": "Specifies a combined depth and stencil buffer format (NV extension).",
  "GL_DEPTH_STENCIL_OES": "Specifies a combined depth and stencil buffer format (OES extension).",
  "GL_UNSIGNED_INT_24_8": "Specifies a 24-bit depth and 8-bit stencil format.",
  "GL_UNSIGNED_INT_24_8_EXT": "Specifies a 24-bit depth and 8-bit stencil format (EXT extension).",
  "GL_UNSIGNED_INT_24_8_NV": "Specifies a 24-bit depth and 8-bit stencil format (NV extension).",
  "GL_UNSIGNED_INT_24_8_OES": "Specifies a 24-bit depth and 8-bit stencil format (OES extension).",
  "GL_MAX_TEXTURE_LOD_BIAS": "Specifies the maximum Level of Detail (LOD) bias.",
  "GL_MAX_TEXTURE_LOD_BIAS_EXT": "Specifies the maximum LOD bias (EXT extension).",
  "GL_TEXTURE_MAX_ANISOTROPY": "Specifies the maximum anisotropic filtering level.",
  "GL_TEXTURE_MAX_ANISOTROPY_EXT": "Specifies the maximum anisotropic filtering level (EXT extension).",
  "GL_MAX_TEXTURE_MAX_ANISOTROPY": "Specifies the maximum supported anisotropic filtering level.",
  "GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT": "Specifies the maximum supported anisotropic filtering level (EXT extension).",
  "GL_TEXTURE_FILTER_CONTROL": "Specifies the texture filter control mode.",
  "GL_TEXTURE_FILTER_CONTROL_EXT": "Specifies the texture filter control mode (EXT extension).",
  "GL_TEXTURE_LOD_BIAS": "Specifies the LOD bias applied to textures.",
  "GL_TEXTURE_LOD_BIAS_EXT": "Specifies the LOD bias applied to textures (EXT extension).",
  "GL_MODELVIEW1_STACK_DEPTH_EXT": "Specifies the stack depth for the modelview matrix (EXT extension).",
  "GL_COMBINE4_NV": "Specifies the fourth combine mode for texture environment (NV extension).",
  "GL_MAX_SHININESS_NV": "Specifies the maximum shininess value (NV extension).",
  "GL_MAX_SPOT_EXPONENT_NV": "Specifies the maximum spot exponent value (NV extension).",
  "GL_MODELVIEW1_MATRIX_EXT": "Specifies the modelview matrix (EXT extension).",
  "GL_INCR_WRAP": "Specifies wrap mode for incremental blending.",
  "GL_INCR_WRAP_EXT": "Specifies wrap mode for incremental blending (EXT extension).",
  "GL_INCR_WRAP_OES": "Specifies wrap mode for incremental blending (OES extension).",
  "GL_DECR_WRAP": "Specifies wrap mode for decremental blending.",
  "GL_DECR_WRAP_EXT": "Specifies wrap mode for decremental blending (EXT extension).",
  "GL_DECR_WRAP_OES": "Specifies wrap mode for decremental blending (OES extension).",
  "GL_VERTEX_WEIGHTING_EXT": "Specifies vertex weighting (EXT extension).",
  "GL_MODELVIEW1_ARB": "Specifies the modelview matrix (ARB extension).",
  "GL_MODELVIEW1_EXT": "Specifies the modelview matrix (EXT extension).",
  "GL_CURRENT_VERTEX_WEIGHT_EXT": "Specifies the current vertex weight (EXT extension).",
  "GL_VERTEX_WEIGHT_ARRAY_EXT": "Specifies the vertex weight array (EXT extension).",
  "GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT": "Specifies the size of the vertex weight array (EXT extension).",
  "GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT": "Specifies the data type of the vertex weight array (EXT extension).",
  "GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT": "Specifies the stride of the vertex weight array (EXT extension).",
  "GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT": "Specifies the pointer to the vertex weight array (EXT extension).",
  "GL_NORMAL_MAP": "Specifies a normal map texture.",
  "GL_NORMAL_MAP_ARB": "Specifies a normal map texture (ARB extension).",
  "GL_NORMAL_MAP_EXT": "Specifies a normal map texture (EXT extension).",
  "GL_NORMAL_MAP_NV": "Specifies a normal map texture (NV extension).",
  "GL_NORMAL_MAP_OES": "Specifies a normal map texture (OES extension).",
  "GL_REFLECTION_MAP": "Specifies a reflection map texture.",
  "GL_REFLECTION_MAP_ARB": "Specifies a reflection map texture (ARB extension).",
  "GL_REFLECTION_MAP_EXT": "Specifies a reflection map texture (EXT extension).",
  "GL_REFLECTION_MAP_NV": "Specifies a reflection map texture (NV extension).",
  "GL_REFLECTION_MAP_OES": "Specifies a reflection map texture (OES extension).",
  "GL_TEXTURE_CUBE_MAP": "Specifies a cube map texture.",
  "GL_TEXTURE_CUBE_MAP_ARB": "Specifies a cube map texture (ARB extension).",
  "GL_TEXTURE_CUBE_MAP_EXT": "Specifies a cube map texture (EXT extension).",
  "GL_TEXTURE_CUBE_MAP_OES": "Specifies a cube map texture (OES extension).",
  "GL_TEXTURE_BINDING_CUBE_MAP": "Specifies the currently bound cube map texture.",
  "GL_TEXTURE_BINDING_CUBE_MAP_ARB": "Specifies the currently bound cube map texture (ARB extension).",
  "GL_TEXTURE_BINDING_CUBE_MAP_EXT": "Specifies the currently bound cube map texture (EXT extension).",
  "GL_TEXTURE_BINDING_CUBE_MAP_OES": "Specifies the currently bound cube map texture (OES extension).",
  "GL_TEXTURE_CUBE_MAP_POSITIVE_X": "Specifies the positive X face of the cube map.",
  "GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB": "Specifies the positive X face of the cube map (ARB extension).",
  "GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT": "Specifies the positive X face of the cube map (EXT extension).",
  "GL_TEXTURE_CUBE_MAP_POSITIVE_X_OES": "Specifies the positive X face of the cube map (OES extension).",
  "GL_TEXTURE_CUBE_MAP_NEGATIVE_X": "Specifies the negative X face of the cube map.",
  "GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB": "Specifies the negative X face of the cube map (ARB extension).",
  "GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT": "Specifies the negative X face of the cube map (EXT extension).",
  "GL_TEXTURE_CUBE_MAP_NEGATIVE_X_OES": "Specifies the negative X face of the cube map (OES extension).",
  "GL_TEXTURE_CUBE_MAP_POSITIVE_Y": "Specifies the positive Y face of the cube map.",
  "GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB": "Specifies the positive Y face of the cube map (ARB extension).",
  "GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT": "Specifies the positive Y face of the cube map (EXT extension).",
  "GL_TEXTURE_CUBE_MAP_POSITIVE_Y_OES": "Specifies the positive Y face of the cube map (OES extension).",
  "GL_TEXTURE_CUBE_MAP_NEGATIVE_Y": "Specifies the negative Y face of the cube map.",
  "GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB": "Specifies the negative Y face of the cube map (ARB extension).",
  "GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT": "Specifies the negative Y face of the cube map (EXT extension).",
  "GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES": "Specifies the negative Y face of the cube map (OES extension).",
  "GL_TEXTURE_CUBE_MAP_POSITIVE_Z": "Specifies the positive Z face of the cube map.",
  "GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB": "Specifies the positive Z face of the cube map (ARB extension).",
  "GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT": "Specifies the positive Z face of the cube map (EXT extension).",
  "GL_TEXTURE_CUBE_MAP_POSITIVE_Z_OES": "Specifies the positive Z face of the cube map (OES extension).",
  "GL_TEXTURE_CUBE_MAP_NEGATIVE_Z": "Specifies the negative Z face of the cube map.",
  "GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB": "Specifies the negative Z face of the cube map (ARB extension).",
  "GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT": "Specifies the negative Z face of the cube map (EXT extension).",
  "GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES": "Specifies the negative Z face of the cube map (OES extension).",
  "GL_PROXY_TEXTURE_CUBE_MAP": "Specifies a proxy for cube map textures.",
  "GL_PROXY_TEXTURE_CUBE_MAP_ARB": "Specifies a proxy for cube map textures (ARB extension).",
  "GL_PROXY_TEXTURE_CUBE_MAP_EXT": "Specifies a proxy for cube map textures (EXT extension).",
  "GL_MAX_CUBE_MAP_TEXTURE_SIZE": "Specifies the maximum size of cube map textures.",
  "GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB": "Specifies the maximum size of cube map textures (ARB extension).",
  "GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT": "Specifies the maximum size of cube map textures (EXT extension).",
  "GL_MAX_CUBE_MAP_TEXTURE_SIZE_OES": "Specifies the maximum size of cube map textures (OES extension).",
  "GL_VERTEX_ARRAY_RANGE_APPLE": "Specifies a range of vertex array data (APPLE extension).",
  "GL_VERTEX_ARRAY_RANGE_NV": "Specifies a range of vertex array data (NV extension).",
  "GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE": "Specifies the length of the vertex array range (APPLE extension).",
  "GL_VERTEX_ARRAY_RANGE_LENGTH_NV": "Specifies the length of the vertex array range (NV extension).",
  "GL_VERTEX_ARRAY_RANGE_VALID_NV": "Specifies the validity of the vertex array range (NV extension).",
  "GL_VERTEX_ARRAY_STORAGE_HINT_APPLE": "Specifies the storage hint for vertex arrays (APPLE extension).",
  "GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV": "Specifies the maximum vertex array range element (NV extension).",
  "GL_VERTEX_ARRAY_RANGE_POINTER_APPLE": "Specifies the pointer to the vertex array range (APPLE extension).",
  "GL_VERTEX_ARRAY_RANGE_POINTER_NV": "Specifies the pointer to the vertex array range (NV extension).",
  "GL_REGISTER_COMBINERS_NV": "Specifies register combiners (NV extension).",
  "GL_VARIABLE_A_NV": "Specifies a variable in NV register combiners.",
  "GL_VARIABLE_B_NV": "Specifies a variable in NV register combiners.",
  "GL_VARIABLE_C_NV": "Specifies a variable in NV register combiners.",
  "GL_VARIABLE_D_NV": "Specifies a variable in NV register combiners.",
  "GL_VARIABLE_E_NV": "Specifies a variable in NV register combiners.",
  "GL_VARIABLE_F_NV": "Specifies a variable in NV register combiners.",
  "GL_VARIABLE_G_NV": "Specifies a variable in NV register combiners.",
  "GL_CONSTANT_COLOR0_NV": "Specifies the first constant color in NV register combiners.",
  "GL_CONSTANT_COLOR1_NV": "Specifies the second constant color in NV register combiners.",
  "GL_PRIMARY_COLOR_NV": "Specifies the primary color input in NV register combiners.",
  "GL_SECONDARY_COLOR_NV": "Specifies the secondary color input in NV register combiners.",
  "GL_SPARE0_NV": "Specifies a spare register in NV register combiners.",
  "GL_SPARE1_NV": "Specifies another spare register in NV register combiners.",
  "GL_DISCARD_NV": "Specifies a discard operation in NV register combiners.",
  "GL_E_TIMES_F_NV": "Specifies the product of E and F variables in NV register combiners.",
  "GL_SPARE0_PLUS_SECONDARY_COLOR_NV": "Specifies the sum of spare0 and secondary color in NV register combiners.",
  "GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV": "Specifies vertex array range without flushing (NV extension).",
  "GL_MULTISAMPLE_FILTER_HINT_NV": "Specifies the hint for multisample filtering (NV extension).",
  "GL_PER_STAGE_CONSTANTS_NV": "Specifies per-stage constants (NV extension).",
  "GL_UNSIGNED_IDENTITY_NV": "Specifies an unsigned identity operation (NV extension).",
  "GL_UNSIGNED_INVERT_NV": "Specifies an unsigned invert operation (NV extension).",
  "GL_EXPAND_NORMAL_NV": "Specifies an expansion operation for normal values (NV extension).",
  "GL_EXPAND_NEGATE_NV": "Specifies an expansion operation for negated values (NV extension).",
  "GL_HALF_BIAS_NORMAL_NV": "Specifies half bias for normal values (NV extension).",
  "GL_HALF_BIAS_NEGATE_NV": "Specifies half bias for negated values (NV extension).",
  "GL_SIGNED_IDENTITY_NV": "Specifies a signed identity operation (NV extension).",
  "GL_SIGNED_NEGATE_NV": "Specifies a signed negate operation (NV extension).",
  "GL_SCALE_BY_TWO_NV": "Specifies a scaling operation by two (NV extension).",
  "GL_SCALE_BY_FOUR_NV": "Specifies a scaling operation by four (NV extension).",
  "GL_SCALE_BY_ONE_HALF_NV": "Specifies a scaling operation by one half (NV extension).",
  "GL_BIAS_BY_NEGATIVE_ONE_HALF_NV": "Specifies bias by negative one half (NV extension).",
  "GL_COMBINER_INPUT_NV": "Specifies the input for combiners (NV extension).",
  "GL_COMBINER_MAPPING_NV": "Specifies the mapping for combiners (NV extension).",
  "GL_COMBINER_COMPONENT_USAGE_NV": "Specifies the usage of combiner components (NV extension).",
  "GL_COMBINER_AB_DOT_PRODUCT_NV": "Specifies the dot product of combiner A and B (NV extension).",
  "GL_COMBINER_CD_DOT_PRODUCT_NV": "Specifies the dot product of combiner C and D (NV extension).",
  "GL_COMBINER_MUX_SUM_NV": "Specifies the mux sum operation (NV extension).",
  "GL_COMBINER_SCALE_NV": "Specifies the scale for combiners (NV extension).",
  "GL_COMBINER_BIAS_NV": "Specifies the bias for combiners (NV extension).",
  "GL_COMBINER_AB_OUTPUT_NV": "Specifies the output from combiners A and B (NV extension).",
  "GL_COMBINER_CD_OUTPUT_NV": "Specifies the output from combiners C and D (NV extension).",
  "GL_COMBINER_SUM_OUTPUT_NV": "Specifies the sum output from combiners (NV extension).",
  "GL_MAX_GENERAL_COMBINERS_NV": "Specifies the maximum number of general combiners (NV extension).",
  "GL_NUM_GENERAL_COMBINERS_NV": "Specifies the number of general combiners (NV extension).",
  "GL_COLOR_SUM_CLAMP_NV": "Specifies clamping for color sums (NV extension).",
  "GL_COMBINER0_NV": "Specifies the first combiner (NV extension).",
  "GL_COMBINER1_NV": "Specifies the second combiner (NV extension).",
  "GL_COMBINER2_NV": "Specifies the third combiner (NV extension).",
  "GL_COMBINER3_NV": "Specifies the fourth combiner (NV extension).",
  "GL_COMBINER4_NV": "Specifies the fifth combiner (NV extension).",
  "GL_COMBINER5_NV": "Specifies the sixth combiner (NV extension).",
  "GL_COMBINER6_NV": "Specifies the seventh combiner (NV extension).",
  "GL_COMBINER7_NV": "Specifies the eighth combiner (NV extension).",
  "GL_PRIMITIVE_RESTART_NV": "Specifies primitive restart (NV extension).",
  "GL_PRIMITIVE_RESTART_INDEX_NV": "Specifies the restart index for primitives (NV extension).",
  "GL_FOG_DISTANCE_MODE_NV": "Specifies the fog distance mode (NV extension).",
  "GL_EYE_RADIAL_NV": "Specifies the eye radial fog mode (NV extension).",
  "GL_EYE_PLANE_ABSOLUTE_NV": "Specifies absolute eye plane fog mode (NV extension).",
  "GL_EMBOSS_LIGHT_NV": "Specifies emboss light effect (NV extension).",
  "GL_EMBOSS_CONSTANT_NV": "Specifies constant emboss effect (NV extension).",
  "GL_EMBOSS_MAP_NV": "Specifies an emboss map (NV extension).",
  "GL_RED_MIN_CLAMP_INGR": "Specifies the minimum red clamp value in INGR extensions.",
  "GL_GREEN_MIN_CLAMP_INGR": "Specifies the minimum green clamp value in INGR extensions.",
  "GL_BLUE_MIN_CLAMP_INGR": "Specifies the minimum blue clamp value in INGR extensions.",
  "GL_ALPHA_MIN_CLAMP_INGR": "Specifies the minimum alpha clamp value in INGR extensions.",
  "GL_RED_MAX_CLAMP_INGR": "Specifies the maximum red clamp value in INGR extensions.",
  "GL_GREEN_MAX_CLAMP_INGR": "Specifies the maximum green clamp value in INGR extensions.",
  "GL_BLUE_MAX_CLAMP_INGR": "Specifies the maximum blue clamp value in INGR extensions.",
  "GL_ALPHA_MAX_CLAMP_INGR": "Specifies the maximum alpha clamp value in INGR extensions.",
  "GL_INTERLACE_READ_INGR": "Specifies interlaced reading in INGR extensions.",
  "GL_COMBINE": "Specifies the combine mode for texture environment.",
  "GL_COMBINE_ARB": "Specifies the combine mode for texture environment (ARB extension).",
  "GL_COMBINE_EXT": "Specifies the combine mode for texture environment (EXT extension).",
  "GL_COMBINE_RGB": "Specifies the RGB combine mode.",
  "GL_COMBINE_RGB_ARB": "Specifies the RGB combine mode (ARB extension).",
  "GL_COMBINE_RGB_EXT": "Specifies the RGB combine mode (EXT extension).",
  "GL_COMBINE_ALPHA": "Specifies the alpha combine mode.",
  "GL_COMBINE_ALPHA_ARB": "Specifies the alpha combine mode (ARB extension).",
  "GL_COMBINE_ALPHA_EXT": "Specifies the alpha combine mode (EXT extension).",
  "GL_RGB_SCALE": "Specifies the scale factor for RGB values.",
  "GL_RGB_SCALE_ARB": "Specifies the scale factor for RGB values (ARB extension).",
  "GL_RGB_SCALE_EXT": "Specifies the scale factor for RGB values (EXT extension).",
  "GL_ADD_SIGNED": "Specifies a signed addition operation.",
  "GL_ADD_SIGNED_ARB": "Specifies a signed addition operation (ARB extension).",
  "GL_ADD_SIGNED_EXT": "Specifies a signed addition operation (EXT extension).",
  "GL_INTERPOLATE": "Specifies interpolation for combine modes.",
  "GL_INTERPOLATE_ARB": "Specifies interpolation for combine modes (ARB extension).",
  "GL_INTERPOLATE_EXT": "Specifies interpolation for combine modes (EXT extension).",
  "GL_CONSTANT": "Specifies a constant value for combine modes.",
  "GL_CONSTANT_ARB": "Specifies a constant value for combine modes (ARB extension).",
  "GL_CONSTANT_EXT": "Specifies a constant value for combine modes (EXT extension).",
  "GL_CONSTANT_NV": "Specifies a constant value (NV extension).",
  "GL_PRIMARY_COLOR": "Specifies the primary color input.",
  "GL_PRIMARY_COLOR_ARB": "Specifies the primary color input (ARB extension).",
  "GL_PRIMARY_COLOR_EXT": "Specifies the primary color input (EXT extension).",
  "GL_PREVIOUS": "Specifies the previous output in combine modes.",
  "GL_PREVIOUS_ARB": "Specifies the previous output in combine modes (ARB extension).",
  "GL_PREVIOUS_EXT": "Specifies the previous output in combine modes (EXT extension).",
  "GL_SOURCE0_RGB": "Specifies the first RGB source input.",
  "GL_SOURCE0_RGB_ARB": "Specifies the first RGB source input (ARB extension).",
  "GL_SOURCE0_RGB_EXT": "Specifies the first RGB source input (EXT extension).",
  "GL_SRC0_RGB": "Specifies the first RGB source input.",
  "GL_SOURCE1_RGB": "Specifies the second RGB source input.",
  "GL_SOURCE1_RGB_ARB": "Specifies the second RGB source input (ARB extension).",
  "GL_SOURCE1_RGB_EXT": "Specifies the second RGB source input (EXT extension).",
  "GL_SRC1_RGB": "Specifies the second RGB source input.",
  "GL_SOURCE2_RGB": "Specifies the third RGB source input.",
  "GL_SOURCE2_RGB_ARB": "Specifies the third RGB source input (ARB extension).",
  "GL_SOURCE2_RGB_EXT": "Specifies the third RGB source input (EXT extension).",
  "GL_SRC2_RGB": "Specifies the third RGB source input.",
  "GL_SOURCE3_RGB_NV": "Specifies the fourth RGB source input (NV extension).",
  "GL_SOURCE0_ALPHA": "Specifies the first alpha source input.",
  "GL_SOURCE0_ALPHA_ARB": "Specifies the first alpha source input (ARB extension).",
  "GL_SOURCE0_ALPHA_EXT": "Specifies the first alpha source input (EXT extension).",
  "GL_SRC0_ALPHA": "Specifies the first alpha source input.",
  "GL_SOURCE1_ALPHA": "Specifies the second alpha source input.",
  "GL_SOURCE1_ALPHA_ARB": "Specifies the second alpha source input (ARB extension).",
  "GL_SOURCE1_ALPHA_EXT": "Specifies the second alpha source input (EXT extension).",
  "GL_SRC1_ALPHA": "Specifies the second alpha source input.",
  "GL_SRC1_ALPHA_EXT": "Specifies the second alpha source input (EXT extension).",
  "GL_SOURCE2_ALPHA": "Specifies the third alpha source input.",
  "GL_SOURCE2_ALPHA_ARB": "Specifies the third alpha source input (ARB extension).",
  "GL_SOURCE2_ALPHA_EXT": "Specifies the third alpha source input (EXT extension).",
  "GL_SRC2_ALPHA": "Specifies the third alpha source input.",
  "GL_SOURCE3_ALPHA_NV": "Specifies the fourth alpha source input (NV extension).",
  "GL_OPERAND0_RGB": "Specifies the first RGB operand input.",
  "GL_OPERAND0_RGB_ARB": "Specifies the first RGB operand input (ARB extension).",
  "GL_OPERAND0_RGB_EXT": "Specifies the first RGB operand input (EXT extension).",
  "GL_OPERAND1_RGB": "Specifies the second RGB operand input.",
  "GL_OPERAND1_RGB_ARB": "Specifies the second RGB operand input (ARB extension).",
  "GL_OPERAND1_RGB_EXT": "Specifies the second RGB operand input (EXT extension).",
  "GL_OPERAND2_RGB": "Specifies the third RGB operand input.",
  "GL_OPERAND2_RGB_ARB": "Specifies the third RGB operand input (ARB extension).",
  "GL_OPERAND2_RGB_EXT": "Specifies the third RGB operand input (EXT extension).",
  "GL_OPERAND3_RGB_NV": "Specifies the fourth RGB operand input (NV extension).",
  "GL_OPERAND0_ALPHA": "Specifies the first alpha operand input.",
  "GL_OPERAND0_ALPHA_ARB": "Specifies the first alpha operand input (ARB extension).",
  "GL_OPERAND0_ALPHA_EXT": "Specifies the first alpha operand input (EXT extension).",
  "GL_OPERAND1_ALPHA": "Specifies the second alpha operand input.",
  "GL_OPERAND1_ALPHA_ARB": "Specifies the second alpha operand input (ARB extension).",
  "GL_OPERAND1_ALPHA_EXT": "Specifies the second alpha operand input (EXT extension).",
  "GL_OPERAND2_ALPHA": "Specifies the third alpha operand input.",
  "GL_OPERAND2_ALPHA_ARB": "Specifies the third alpha operand input (ARB extension).",
  "GL_OPERAND2_ALPHA_EXT": "Specifies the third alpha operand input (EXT extension).",
  "GL_OPERAND3_ALPHA_NV": "Specifies the fourth alpha operand input (NV extension).",
  "GL_PACK_SUBSAMPLE_RATE_SGIX": "Specifies the subsample rate for packing (SGIX extension).",
  "GL_UNPACK_SUBSAMPLE_RATE_SGIX": "Specifies the subsample rate for unpacking (SGIX extension).",
  "GL_PIXEL_SUBSAMPLE_4444_SGIX": "Specifies a pixel subsample rate of 4:4:4:4 (SGIX extension).",
  "GL_PIXEL_SUBSAMPLE_2424_SGIX": "Specifies a pixel subsample rate of 2:4:2:4 (SGIX extension).",
  "GL_PIXEL_SUBSAMPLE_4242_SGIX": "Specifies a pixel subsample rate of 4:2:4:2 (SGIX extension).",
  "GL_PERTURB_EXT": "Specifies perturbation for texture coordinates (EXT extension).",
  "GL_TEXTURE_NORMAL_EXT": "Specifies texture normal generation (EXT extension).",
  "GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE": "Specifies the specular vector for the light model (APPLE extension).",
  "GL_TRANSFORM_HINT_APPLE": "Specifies a hint for transformations (APPLE extension).",
  "GL_UNPACK_CLIENT_STORAGE_APPLE": "Specifies unpacking of client storage (APPLE extension).",
  "GL_BUFFER_OBJECT_APPLE": "Specifies buffer objects (APPLE extension).",
  "GL_STORAGE_CLIENT_APPLE": "Specifies client storage (APPLE extension).",
  "GL_VERTEX_ARRAY_BINDING": "Specifies the current vertex array binding.",
  "GL_VERTEX_ARRAY_BINDING_APPLE": "Specifies the current vertex array binding (APPLE extension).",
  "GL_VERTEX_ARRAY_BINDING_OES": "Specifies the current vertex array binding (OES extension).",
  "GL_TEXTURE_RANGE_LENGTH_APPLE": "Specifies the texture range length (APPLE extension).",
  "GL_TEXTURE_RANGE_POINTER_APPLE": "Specifies the texture range pointer (APPLE extension).",
  "GL_YCBCR_422_APPLE": "Specifies YCbCr 422 format (APPLE extension).",
  "GL_UNSIGNED_SHORT_8_8_APPLE": "Specifies an unsigned short format with 8 bits for red and blue (APPLE extension).",
  "GL_UNSIGNED_SHORT_8_8_MESA": "Specifies an unsigned short format with 8 bits for red and blue (MESA extension).",
  "GL_UNSIGNED_SHORT_8_8_REV_APPLE": "Specifies an unsigned short format with reversed 8 bits for red and blue (APPLE extension).",
  "GL_UNSIGNED_SHORT_8_8_REV_MESA": "Specifies an unsigned short format with reversed 8 bits for red and blue (MESA extension).",
  "GL_TEXTURE_STORAGE_HINT_APPLE": "Specifies texture storage hints (APPLE extension).",
  "GL_STORAGE_PRIVATE_APPLE": "Specifies private storage (APPLE extension).",
  "GL_STORAGE_CACHED_APPLE": "Specifies cached storage (APPLE extension).",
  "GL_STORAGE_SHARED_APPLE": "Specifies shared storage (APPLE extension).",
  "GL_REPLACEMENT_CODE_ARRAY_SUN": "Specifies a replacement code array in SUN extensions.",
  "GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN": "Specifies the type of replacement code array in SUN extensions.",
  "GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN": "Specifies the stride of replacement code array in SUN extensions.",
  "GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN": "Specifies the pointer to replacement code array in SUN extensions.",
  "GL_R1UI_V3F_SUN": "Specifies a vertex format with 1 unsigned integer and 3 floats in SUN extensions.",
  "GL_R1UI_C4UB_V3F_SUN": "Specifies a vertex format with 1 unsigned integer and 4 unsigned bytes and 3 floats in SUN extensions.",
  "GL_R1UI_C3F_V3F_SUN": "Specifies a vertex format with 1 unsigned integer and 3 floats in SUN extensions.",
  "GL_R1UI_N3F_V3F_SUN": "Specifies a vertex format with 1 unsigned integer and 3 normal floats in SUN extensions.",
  "GL_R1UI_C4F_N3F_V3F_SUN": "Specifies a vertex format with 1 unsigned integer, 4 floats and 3 normal floats in SUN extensions.",
  "GL_R1UI_T2F_V3F_SUN": "Specifies a vertex format with 1 unsigned integer and 2 texture floats in SUN extensions.",
  "GL_R1UI_T2F_N3F_V3F_SUN": "Specifies a vertex format with 1 unsigned integer, 2 texture floats and 3 normal floats in SUN extensions.",
  "GL_R1UI_T2F_C4F_N3F_V3F_SUN": "Specifies a vertex format with 1 unsigned integer, 2 texture floats, 4 floats, and 3 normal floats in SUN extensions.",
  "GL_SLICE_ACCUM_SUN": "Specifies a slice accumulation operation in SUN extensions.",
  "GL_QUAD_MESH_SUN": "Specifies a quad mesh format in SUN extensions.",
  "GL_TRIANGLE_MESH_SUN": "Specifies a triangle mesh format in SUN extensions.",
  "GL_VERTEX_PROGRAM_ARB": "Specifies vertex program functionality (ARB extension).",
  "GL_VERTEX_PROGRAM_NV": "Specifies vertex program functionality (NV extension).",
  "GL_VERTEX_STATE_PROGRAM_NV": "Specifies vertex state program functionality (NV extension).",
  "GL_VERTEX_ATTRIB_ARRAY_ENABLED": "Specifies whether the vertex attribute array is enabled.",
  "GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB": "Specifies whether the vertex attribute array is enabled (ARB extension).",
  "GL_ATTRIB_ARRAY_SIZE_NV": "Specifies the size of vertex attribute arrays (NV extension).",
  "GL_VERTEX_ATTRIB_ARRAY_SIZE": "Specifies the size of the vertex attribute array.",
  "GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB": "Specifies the size of the vertex attribute array (ARB extension).",
  "GL_ATTRIB_ARRAY_STRIDE_NV": "Specifies the stride of vertex attribute arrays (NV extension).",
  "GL_VERTEX_ATTRIB_ARRAY_STRIDE": "Specifies the stride of the vertex attribute array.",
  "GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB": "Specifies the stride of the vertex attribute array (ARB extension).",
  "GL_ATTRIB_ARRAY_TYPE_NV": "Specifies the type of vertex attribute arrays (NV extension).",
  "GL_VERTEX_ATTRIB_ARRAY_TYPE": "Specifies the type of the vertex attribute array.",
  "GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB": "Specifies the type of the vertex attribute array (ARB extension).",
  "GL_CURRENT_ATTRIB_NV": "Specifies the current vertex attribute (NV extension).",
  "GL_CURRENT_VERTEX_ATTRIB": "Specifies the current vertex attribute.",
  "GL_CURRENT_VERTEX_ATTRIB_ARB": "Specifies the current vertex attribute (ARB extension).",
  "GL_PROGRAM_LENGTH_ARB": "Specifies the length of a program (ARB extension).",
  "GL_PROGRAM_LENGTH_NV": "Specifies the length of a program (NV extension).",
  "GL_PROGRAM_STRING_ARB": "Specifies the program string (ARB extension).",
  "GL_PROGRAM_STRING_NV": "Specifies the program string (NV extension).",
  "GL_MODELVIEW_PROJECTION_NV": "Specifies the modelview projection matrix (NV extension).",
  "GL_IDENTITY_NV": "Specifies the identity matrix (NV extension).",
  "GL_INVERSE_NV": "Specifies the inverse matrix (NV extension).",
  "GL_TRANSPOSE_NV": "Specifies the transposed matrix (NV extension).",
  "GL_INVERSE_TRANSPOSE_NV": "Specifies the inverse transpose matrix (NV extension).",
  "GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB": "Specifies the maximum depth of the program matrix stack (ARB extension).",
  "GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV": "Specifies the maximum depth of the track matrix stack (NV extension).",
  "GL_MAX_PROGRAM_MATRICES_ARB": "Specifies the maximum number of program matrices (ARB extension).",
  "GL_MAX_TRACK_MATRICES_NV": "Specifies the maximum number of track matrices (NV extension).",
  "GL_MATRIX0_NV": "Specifies the first matrix (NV extension).",
  "GL_MATRIX1_NV": "Specifies the second matrix (NV extension).",
  "GL_MATRIX2_NV": "Specifies the third matrix (NV extension).",
  "GL_MATRIX3_NV": "Specifies the fourth matrix (NV extension).",
  "GL_MATRIX4_NV": "Specifies the fifth matrix (NV extension).",
  "GL_MATRIX5_NV": "Specifies the sixth matrix (NV extension).",
  "GL_MATRIX6_NV": "Specifies the seventh matrix (NV extension).",
  "GL_MATRIX7_NV": "Specifies the eighth matrix (NV extension).",
  "GL_CURRENT_MATRIX_STACK_DEPTH_ARB": "Specifies the current matrix stack depth (ARB extension).",
  "GL_CURRENT_MATRIX_STACK_DEPTH_NV": "Specifies the current matrix stack depth (NV extension).",
  "GL_CURRENT_MATRIX_ARB": "Specifies the current matrix (ARB extension).",
  "GL_CURRENT_MATRIX_NV": "Specifies the current matrix (NV extension).",
  "GL_VERTEX_PROGRAM_POINT_SIZE": "Specifies that vertex programs can adjust point sizes.",
  "GL_VERTEX_PROGRAM_POINT_SIZE_ARB": "Specifies that vertex programs can adjust point sizes (ARB extension).",
  "GL_VERTEX_PROGRAM_POINT_SIZE_NV": "Specifies that vertex programs can adjust point sizes (NV extension).",
  "GL_PROGRAM_POINT_SIZE": "Specifies the point size for programs.",
  "GL_PROGRAM_POINT_SIZE_ARB": "Specifies the point size for programs (ARB extension).",
  "GL_PROGRAM_POINT_SIZE_EXT": "Specifies the point size for programs (EXT extension).",
  "GL_VERTEX_PROGRAM_TWO_SIDE": "Specifies that vertex programs can be applied to two sides.",
  "GL_VERTEX_PROGRAM_TWO_SIDE_ARB": "Specifies that vertex programs can be applied to two sides (ARB extension).",
  "GL_VERTEX_PROGRAM_TWO_SIDE_NV": "Specifies that vertex programs can be applied to two sides (NV extension).",
  "GL_PROGRAM_PARAMETER_NV": "Specifies program parameters (NV extension).",
  "GL_ATTRIB_ARRAY_POINTER_NV": "Specifies the pointer to vertex attribute arrays (NV extension).",
  "GL_VERTEX_ATTRIB_ARRAY_POINTER": "Specifies the pointer to vertex attribute arrays.",
  "GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB": "Specifies the pointer to vertex attribute arrays (ARB extension).",
  "GL_PROGRAM_TARGET_NV": "Specifies the target for a program (NV extension).",
  "GL_PROGRAM_RESIDENT_NV": "Specifies whether a program is resident (NV extension).",
  "GL_TRACK_MATRIX_NV": "Specifies a track matrix (NV extension).",
  "GL_TRACK_MATRIX_TRANSFORM_NV": "Specifies track matrix transformations (NV extension).",
  "GL_VERTEX_PROGRAM_BINDING_NV": "Specifies the binding of a vertex program (NV extension).",
  "GL_PROGRAM_ERROR_POSITION_ARB": "Specifies the error position of a program (ARB extension).",
  "GL_PROGRAM_ERROR_POSITION_NV": "Specifies the error position of a program (NV extension).",
  "GL_OFFSET_TEXTURE_RECTANGLE_NV": "Specifies texture offsets for rectangle textures (NV extension).",
  "GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV": "Specifies texture rectangle scaling offsets (NV extension).",
  "GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV": "Specifies dot product texture operations for rectangle textures (NV extension).",
  "GL_DEPTH_CLAMP": "Specifies whether depth clamping is enabled.",
  "GL_DEPTH_CLAMP_NV": "Specifies depth clamping (NV extension).",
  "GL_DEPTH_CLAMP_EXT": "Specifies depth clamping (EXT extension).",
  "GL_VERTEX_ATTRIB_ARRAY0_NV": "Specifies the first vertex attribute array (NV extension).",
  "GL_VERTEX_ATTRIB_ARRAY1_NV": "Specifies the second vertex attribute array (NV extension).",
  "GL_VERTEX_ATTRIB_ARRAY2_NV": "Specifies the third vertex attribute array (NV extension).",
  "GL_VERTEX_ATTRIB_ARRAY3_NV": "Specifies the fourth vertex attribute array (NV extension).",
  "GL_VERTEX_ATTRIB_ARRAY4_NV": "Specifies the fifth vertex attribute array (NV extension).",
  "GL_VERTEX_ATTRIB_ARRAY5_NV": "Specifies the sixth vertex attribute array (NV extension).",
  "GL_VERTEX_ATTRIB_ARRAY6_NV": "Specifies the seventh vertex attribute array (NV extension).",
  "GL_VERTEX_ATTRIB_ARRAY7_NV": "Specifies the eighth vertex attribute array (NV extension).",
  "GL_VERTEX_ATTRIB_ARRAY8_NV": "Specifies the ninth vertex attribute array (NV extension).",
  "GL_VERTEX_ATTRIB_ARRAY9_NV": "Specifies the tenth vertex attribute array (NV extension).",
  "GL_VERTEX_ATTRIB_ARRAY10_NV": "Specifies the eleventh vertex attribute array (NV extension).",
  "GL_VERTEX_ATTRIB_ARRAY11_NV": "Specifies the twelfth vertex attribute array (NV extension).",
  "GL_VERTEX_ATTRIB_ARRAY12_NV": "Specifies the thirteenth vertex attribute array (NV extension).",
  "GL_VERTEX_ATTRIB_ARRAY13_NV": "Specifies the fourteenth vertex attribute array (NV extension).",
  "GL_VERTEX_ATTRIB_ARRAY14_NV": "Specifies the fifteenth vertex attribute array (NV extension).",
  "GL_VERTEX_ATTRIB_ARRAY15_NV": "Specifies the sixteenth vertex attribute array (NV extension).",
  "GL_MAP1_VERTEX_ATTRIB0_4_NV": "Specifies the first vertex attribute for map 1 (NV extension).",
  "GL_MAP1_VERTEX_ATTRIB1_4_NV": "Specifies the second vertex attribute for map 1 (NV extension).",
  "GL_MAP1_VERTEX_ATTRIB2_4_NV": "Specifies the third vertex attribute for map 1 (NV extension).",
  "GL_MAP1_VERTEX_ATTRIB3_4_NV": "Specifies the fourth vertex attribute for map 1 (NV extension).",
  "GL_MAP1_VERTEX_ATTRIB4_4_NV": "Specifies the fifth vertex attribute for map 1 (NV extension).",
  "GL_MAP1_VERTEX_ATTRIB5_4_NV": "Specifies the sixth vertex attribute for map 1 (NV extension).",
  "GL_MAP1_VERTEX_ATTRIB6_4_NV": "Specifies the seventh vertex attribute for map 1 (NV extension).",
  "GL_MAP1_VERTEX_ATTRIB7_4_NV": "Specifies the eighth vertex attribute for map 1 (NV extension).",
  "GL_MAP1_VERTEX_ATTRIB8_4_NV": "Specifies the ninth vertex attribute for map 1 (NV extension).",
  "GL_MAP1_VERTEX_ATTRIB9_4_NV": "Specifies the tenth vertex attribute for map 1 (NV extension).",
  "GL_MAP1_VERTEX_ATTRIB10_4_NV": "Specifies the eleventh vertex attribute for map 1 (NV extension).",
  "GL_MAP1_VERTEX_ATTRIB11_4_NV": "Specifies the twelfth vertex attribute for map 1 (NV extension).",
  "GL_MAP1_VERTEX_ATTRIB12_4_NV": "Specifies the thirteenth vertex attribute for map 1 (NV extension).",
  "GL_MAP1_VERTEX_ATTRIB13_4_NV": "Specifies the fourteenth vertex attribute for map 1 (NV extension).",
  "GL_MAP1_VERTEX_ATTRIB14_4_NV": "Specifies the fifteenth vertex attribute for map 1 (NV extension).",
  "GL_MAP1_VERTEX_ATTRIB15_4_NV": "Specifies the sixteenth vertex attribute for map 1 (NV extension).",
  "GL_MAP2_VERTEX_ATTRIB0_4_NV": "Specifies the first vertex attribute for map 2 (NV extension).",
  "GL_MAP2_VERTEX_ATTRIB1_4_NV": "Specifies the second vertex attribute for map 2 (NV extension).",
  "GL_MAP2_VERTEX_ATTRIB2_4_NV": "Specifies the third vertex attribute for map 2 (NV extension).",
  "GL_MAP2_VERTEX_ATTRIB3_4_NV": "Specifies the fourth vertex attribute for map 2 (NV extension).",
  "GL_MAP2_VERTEX_ATTRIB4_4_NV": "Specifies the fifth vertex attribute for map 2 (NV extension).",
  "GL_MAP2_VERTEX_ATTRIB5_4_NV": "Specifies the sixth vertex attribute for map 2 (NV extension).",
  "GL_MAP2_VERTEX_ATTRIB6_4_NV": "Specifies the seventh vertex attribute for map 2 (NV extension).",
  "GL_MAP2_VERTEX_ATTRIB7_4_NV": "Specifies the eighth vertex attribute for map 2 (NV extension).",
  "GL_PROGRAM_BINDING_ARB": "Specifies the binding of a program (ARB extension).",
  "GL_MAP2_VERTEX_ATTRIB8_4_NV": "Specifies the ninth vertex attribute for map 2 (NV extension).",
  "GL_MAP2_VERTEX_ATTRIB9_4_NV": "Specifies the tenth vertex attribute for map 2 (NV extension).",
  "GL_MAP2_VERTEX_ATTRIB10_4_NV": "Specifies the eleventh vertex attribute for map 2 (NV extension).",
  "GL_MAP2_VERTEX_ATTRIB11_4_NV": "Specifies the twelfth vertex attribute for map 2 (NV extension).",
  "GL_MAP2_VERTEX_ATTRIB12_4_NV": "Specifies the thirteenth vertex attribute for map 2 (NV extension).",
  "GL_MAP2_VERTEX_ATTRIB13_4_NV": "Specifies the thirteenth vertex attribute for map 2 (NV extension).",
  "GL_MAP2_VERTEX_ATTRIB14_4_NV": "Specifies the fourteenth vertex attribute for map 2 (NV extension).",
  "GL_MAP2_VERTEX_ATTRIB15_4_NV": "Specifies the fifteenth vertex attribute for map 2 (NV extension).",
  "GL_TEXTURE_COMPRESSED_IMAGE_SIZE": "Specifies the size of a compressed texture image.",
  "GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB": "Specifies the size of a compressed texture image (ARB extension).",
  "GL_TEXTURE_COMPRESSED": "Indicates if a texture is compressed.",
  "GL_TEXTURE_COMPRESSED_ARB": "Indicates if a texture is compressed (ARB extension).",
  "GL_NUM_COMPRESSED_TEXTURE_FORMATS": "Specifies the number of compressed texture formats available.",
  "GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB": "Specifies the number of compressed texture formats available (ARB extension).",
  "GL_COMPRESSED_TEXTURE_FORMATS": "Lists the compressed texture formats.",
  "GL_COMPRESSED_TEXTURE_FORMATS_ARB": "Lists the compressed texture formats (ARB extension).",
  "GL_MAX_VERTEX_UNITS_ARB": "Specifies the maximum number of vertex units (ARB extension).",
  "GL_MAX_VERTEX_UNITS_OES": "Specifies the maximum number of vertex units (OES extension).",
  "GL_ACTIVE_VERTEX_UNITS_ARB": "Specifies the active vertex units (ARB extension).",
  "GL_WEIGHT_SUM_UNITY_ARB": "Specifies that the weight sum for vertex blending must equal one (ARB extension).",
  "GL_VERTEX_BLEND_ARB": "Indicates that vertex blending is enabled (ARB extension).",
  "GL_CURRENT_WEIGHT_ARB": "Specifies the current weight for vertex blending (ARB extension).",
  "GL_WEIGHT_ARRAY_TYPE_ARB": "Specifies the type of the weight array (ARB extension).",
  "GL_WEIGHT_ARRAY_TYPE_OES": "Specifies the type of the weight array (OES extension).",
  "GL_WEIGHT_ARRAY_STRIDE_ARB": "Specifies the stride of the weight array (ARB extension).",
  "GL_WEIGHT_ARRAY_STRIDE_OES": "Specifies the stride of the weight array (OES extension).",
  "GL_WEIGHT_ARRAY_SIZE_ARB": "Specifies the size of the weight array (ARB extension).",
  "GL_WEIGHT_ARRAY_SIZE_OES": "Specifies the size of the weight array (OES extension).",
  "GL_WEIGHT_ARRAY_POINTER_ARB": "Specifies the pointer to the weight array (ARB extension).",
  "GL_WEIGHT_ARRAY_POINTER_OES": "Specifies the pointer to the weight array (OES extension).",
  "GL_WEIGHT_ARRAY_ARB": "Specifies the weight array (ARB extension).",
  "GL_WEIGHT_ARRAY_OES": "Specifies the weight array (OES extension).",
  "GL_DOT3_RGB": "Specifies a dot product operation for RGB textures.",
  "GL_DOT3_RGB_ARB": "Specifies a dot product operation for RGB textures (ARB extension).",
  "GL_DOT3_RGBA": "Specifies a dot product operation for RGBA textures.",
  "GL_DOT3_RGBA_ARB": "Specifies a dot product operation for RGBA textures (ARB extension).",
  "GL_DOT3_RGBA_IMG": "Specifies a dot product operation for RGBA textures (IMG extension).",
  "GL_COMPRESSED_RGB_FXT1_3DFX": "Specifies a compressed RGB texture format specific to 3DFX.",
  "GL_COMPRESSED_RGBA_FXT1_3DFX": "Specifies a compressed RGBA texture format specific to 3DFX.",
  "GL_MULTISAMPLE_3DFX": "Specifies multisampling functionality in 3DFX extensions.",
  "GL_SAMPLE_BUFFERS_3DFX": "Specifies the number of sample buffers in 3DFX extensions.",
  "GL_SAMPLES_3DFX": "Specifies the number of samples in 3DFX extensions.",
  "GL_EVAL_2D_NV": "Specifies 2D evaluation (NV extension).",
  "GL_EVAL_TRIANGULAR_2D_NV": "Specifies triangular 2D evaluation (NV extension).",
  "GL_MAP_TESSELLATION_NV": "Specifies tessellation mapping (NV extension).",
  "GL_MAP_ATTRIB_U_ORDER_NV": "Specifies the U order for attribute mapping (NV extension).",
  "GL_MAP_ATTRIB_V_ORDER_NV": "Specifies the V order for attribute mapping (NV extension).",
  "GL_EVAL_FRACTIONAL_TESSELLATION_NV": "Specifies fractional tessellation evaluation (NV extension).",
  "GL_EVAL_VERTEX_ATTRIB0_NV": "Specifies the first vertex attribute for evaluation (NV extension).",
  "GL_EVAL_VERTEX_ATTRIB1_NV": "Specifies the second vertex attribute for evaluation (NV extension).",
  "GL_EVAL_VERTEX_ATTRIB2_NV": "Specifies the third vertex attribute for evaluation (NV extension).",
  "GL_EVAL_VERTEX_ATTRIB3_NV": "Specifies the fourth vertex attribute for evaluation (NV extension).",
  "GL_EVAL_VERTEX_ATTRIB4_NV": "Specifies the fifth vertex attribute for evaluation (NV extension).",
  "GL_EVAL_VERTEX_ATTRIB5_NV": "Specifies the sixth vertex attribute for evaluation (NV extension).",
  "GL_EVAL_VERTEX_ATTRIB6_NV": "Specifies the seventh vertex attribute for evaluation (NV extension).",
  "GL_EVAL_VERTEX_ATTRIB7_NV": "Specifies the eighth vertex attribute for evaluation (NV extension).",
  "GL_EVAL_VERTEX_ATTRIB8_NV": "Specifies the ninth vertex attribute for evaluation (NV extension).",
  "GL_EVAL_VERTEX_ATTRIB9_NV": "Specifies the tenth vertex attribute for evaluation (NV extension).",
  "GL_EVAL_VERTEX_ATTRIB10_NV": "Specifies the eleventh vertex attribute for evaluation (NV extension).",
  "GL_EVAL_VERTEX_ATTRIB11_NV": "Specifies the twelfth vertex attribute for evaluation (NV extension).",
  "GL_EVAL_VERTEX_ATTRIB12_NV": "Specifies the thirteenth vertex attribute for evaluation (NV extension).",
  "GL_EVAL_VERTEX_ATTRIB13_NV": "Specifies the fourteenth vertex attribute for evaluation (NV extension).",
  "GL_EVAL_VERTEX_ATTRIB14_NV": "Specifies the fifteenth vertex attribute for evaluation (NV extension).",
  "GL_EVAL_VERTEX_ATTRIB15_NV": "Specifies the sixteenth vertex attribute for evaluation (NV extension).",
  "GL_MAX_MAP_TESSELLATION_NV": "Specifies the maximum tessellation level (NV extension).",
  "GL_MAX_RATIONAL_EVAL_ORDER_NV": "Specifies the maximum rational evaluation order (NV extension).",
  "GL_MAX_PROGRAM_PATCH_ATTRIBS_NV": "Specifies the maximum number of program patch attributes (NV extension).",
  "GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV": "Specifies the mapping for RGBA unsigned dot products (NV extension).",
  "GL_UNSIGNED_INT_S8_S8_8_8_NV": "Specifies an unsigned integer format with 8-bit channels (NV extension).",
  "GL_UNSIGNED_INT_8_8_S8_S8_REV_NV": "Specifies a reverse unsigned integer format with 8-bit channels (NV extension).",
  "GL_DSDT_MAG_INTENSITY_NV": "Specifies DSDT magnitude intensity (NV extension).",
  "GL_SHADER_CONSISTENT_NV": "Specifies shader consistency (NV extension).",
  "GL_TEXTURE_SHADER_NV": "Specifies texture shader functionality (NV extension).",
  "GL_SHADER_OPERATION_NV": "Specifies shader operations (NV extension).",
  "GL_CULL_MODES_NV": "Specifies culling modes (NV extension).",
  "GL_OFFSET_TEXTURE_MATRIX_NV": "Specifies the offset texture matrix (NV extension).",
  "GL_OFFSET_TEXTURE_2D_MATRIX_NV": "Specifies the offset texture 2D matrix (NV extension).",
  "GL_OFFSET_TEXTURE_SCALE_NV": "Specifies the offset texture scale (NV extension).",
  "GL_OFFSET_TEXTURE_2D_SCALE_NV": "Specifies the offset texture 2D scale (NV extension).",
  "GL_OFFSET_TEXTURE_BIAS_NV": "Specifies the offset texture bias (NV extension).",
  "GL_OFFSET_TEXTURE_2D_BIAS_NV": "Specifies the offset texture 2D bias (NV extension).",
  "GL_PREVIOUS_TEXTURE_INPUT_NV": "Specifies the previous texture input (NV extension).",
  "GL_CONST_EYE_NV": "Specifies the constant eye vector (NV extension).",
  "GL_PASS_THROUGH_NV": "Specifies pass-through functionality (NV extension).",
  "GL_CULL_FRAGMENT_NV": "Specifies fragment culling (NV extension).",
  "GL_OFFSET_TEXTURE_2D_NV": "Specifies offset texture 2D functionality (NV extension).",
  "GL_DEPENDENT_AR_TEXTURE_2D_NV": "Specifies dependent AR texture 2D functionality (NV extension).",
  "GL_DEPENDENT_GB_TEXTURE_2D_NV": "Specifies dependent GB texture 2D functionality (NV extension).",
  "GL_SURFACE_STATE_NV": "Specifies the surface state (NV extension).",
  "GL_DOT_PRODUCT_NV": "Specifies dot product functionality (NV extension).",
  "GL_DOT_PRODUCT_DEPTH_REPLACE_NV": "Specifies dot product depth replacement (NV extension).",
  "GL_DOT_PRODUCT_TEXTURE_2D_NV": "Specifies dot product texture 2D functionality (NV extension).",
  "GL_DOT_PRODUCT_TEXTURE_3D_NV": "Specifies dot product texture 3D functionality (NV extension).",
  "GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV": "Specifies dot product texture cube map functionality (NV extension).",
  "GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV": "Specifies dot product diffuse cube map functionality (NV extension).",
  "GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV": "Specifies dot product reflect cube map functionality (NV extension).",
  "GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV": "Specifies dot product constant eye reflect cube map functionality (NV extension).",
  "GL_HILO_NV": "Specifies HILO functionality (NV extension).",
  "GL_DSDT_NV": "Specifies DSDT functionality (NV extension).",
  "GL_DSDT_MAG_NV": "Specifies DSDT magnitude functionality (NV extension).",
  "GL_DSDT_MAG_VIB_NV": "Specifies DSDT magnitude vibration functionality (NV extension).",
  "GL_HILO16_NV": "Specifies 16-bit HILO functionality (NV extension).",
  "GL_SIGNED_HILO_NV": "Specifies signed HILO functionality (NV extension).",
  "GL_SIGNED_HILO16_NV": "Specifies signed 16-bit HILO functionality (NV extension).",
  "GL_SIGNED_RGBA_NV": "Specifies signed RGBA functionality (NV extension).",
  "GL_SIGNED_RGBA8_NV": "Specifies a signed RGBA format (NV extension).",
  "GL_SURFACE_REGISTERED_NV": "Indicates that a surface is registered (NV extension).",
  "GL_SIGNED_RGB_NV": "Specifies a signed RGB format (NV extension).",
  "GL_SIGNED_RGB8_NV": "Specifies an 8-bit signed RGB format (NV extension).",
  "GL_SURFACE_MAPPED_NV": "Indicates that a surface is mapped (NV extension).",
  "GL_SIGNED_LUMINANCE_NV": "Specifies a signed luminance format (NV extension).",
  "GL_SIGNED_LUMINANCE8_NV": "Specifies an 8-bit signed luminance format (NV extension).",
  "GL_SIGNED_LUMINANCE_ALPHA_NV": "Specifies a signed luminance and alpha format (NV extension).",
  "GL_SIGNED_LUMINANCE8_ALPHA8_NV": "Specifies an 8-bit signed luminance and alpha format (NV extension).",
  "GL_SIGNED_ALPHA_NV": "Specifies a signed alpha format (NV extension).",
  "GL_SIGNED_ALPHA8_NV": "Specifies an 8-bit signed alpha format (NV extension).",
  "GL_SIGNED_INTENSITY_NV": "Specifies a signed intensity format (NV extension).",
  "GL_SIGNED_INTENSITY8_NV": "Specifies an 8-bit signed intensity format (NV extension).",
  "GL_DSDT8_NV": "Specifies DSDT functionality with 8-bit depth (NV extension).",
  "GL_DSDT8_MAG8_NV": "Specifies DSDT and magnitude functionality with 8-bit depth (NV extension).",
  "GL_DSDT8_MAG8_INTENSITY8_NV": "Specifies DSDT, magnitude, and intensity functionality with 8-bit depth (NV extension).",
  "GL_SIGNED_RGB_UNSIGNED_ALPHA_NV": "Specifies a signed RGB format with an unsigned alpha (NV extension).",
  "GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV": "Specifies an 8-bit signed RGB format with an 8-bit unsigned alpha (NV extension).",
  "GL_HI_SCALE_NV": "Specifies high scale (NV extension).",
  "GL_LO_SCALE_NV": "Specifies low scale (NV extension).",
  "GL_DS_SCALE_NV": "Specifies depth scale (NV extension).",
  "GL_DT_SCALE_NV": "Specifies time scale (NV extension).",
  "GL_MAGNITUDE_SCALE_NV": "Specifies magnitude scale (NV extension).",
  "GL_VIBRANCE_SCALE_NV": "Specifies vibrance scale (NV extension).",
  "GL_HI_BIAS_NV": "Specifies high bias (NV extension).",
  "GL_LO_BIAS_NV": "Specifies low bias (NV extension).",
  "GL_DS_BIAS_NV": "Specifies depth bias (NV extension).",
  "GL_DT_BIAS_NV": "Specifies time bias (NV extension).",
  "GL_MAGNITUDE_BIAS_NV": "Specifies magnitude bias (NV extension).",
  "GL_VIBRANCE_BIAS_NV": "Specifies vibrance bias (NV extension).",
  "GL_TEXTURE_BORDER_VALUES_NV": "Specifies border values for textures (NV extension).",
  "GL_TEXTURE_HI_SIZE_NV": "Specifies the high size of textures (NV extension).",
  "GL_TEXTURE_LO_SIZE_NV": "Specifies the low size of textures (NV extension).",
  "GL_TEXTURE_DS_SIZE_NV": "Specifies the depth size of textures (NV extension).",
  "GL_TEXTURE_DT_SIZE_NV": "Specifies the time size of textures (NV extension).",
  "GL_TEXTURE_MAG_SIZE_NV": "Specifies the magnitude size of textures (NV extension).",
  "GL_MODELVIEW2_ARB": "Specifies the modelview matrix 2 (ARB extension).",
  "GL_MODELVIEW3_ARB": "Specifies the modelview matrix 3 (ARB extension).",
  "GL_MODELVIEW4_ARB": "Specifies the modelview matrix 4 (ARB extension).",
  "GL_MODELVIEW5_ARB": "Specifies the modelview matrix 5 (ARB extension).",
  "GL_MODELVIEW6_ARB": "Specifies the modelview matrix 6 (ARB extension).",
  "GL_MODELVIEW7_ARB": "Specifies the modelview matrix 7 (ARB extension).",
  "GL_MODELVIEW8_ARB": "Specifies the modelview matrix 8 (ARB extension).",
  "GL_MODELVIEW9_ARB": "Specifies the modelview matrix 9 (ARB extension).",
  "GL_MODELVIEW10_ARB": "Specifies the modelview matrix 10 (ARB extension).",
  "GL_MODELVIEW11_ARB": "Specifies the modelview matrix 11 (ARB extension).",
  "GL_MODELVIEW12_ARB": "Specifies the modelview matrix 12 (ARB extension).",
  "GL_MODELVIEW13_ARB": "Specifies the modelview matrix 13 (ARB extension).",
  "GL_MODELVIEW14_ARB": "Specifies the modelview matrix 14 (ARB extension).",
  "GL_MODELVIEW15_ARB": "Specifies the modelview matrix 15 (ARB extension).",
  "GL_MODELVIEW16_ARB": "Specifies the modelview matrix 16 (ARB extension).",
  "GL_MODELVIEW17_ARB": "Specifies the modelview matrix 17 (ARB extension).",
  "GL_MODELVIEW18_ARB": "Specifies the modelview matrix 18 (ARB extension).",
  "GL_MODELVIEW19_ARB": "Specifies the modelview matrix 19 (ARB extension).",
  "GL_MODELVIEW20_ARB": "Specifies the modelview matrix 20 (ARB extension).",
  "GL_MODELVIEW21_ARB": "Specifies the modelview matrix 21 (ARB extension).",
  "GL_MODELVIEW22_ARB": "Specifies the modelview matrix 22 (ARB extension).",
  "GL_MODELVIEW23_ARB": "Specifies the modelview matrix 23 (ARB extension).",
  "GL_MODELVIEW24_ARB": "Specifies the modelview matrix 24 (ARB extension).",
  "GL_MODELVIEW25_ARB": "Specifies the modelview matrix 25 (ARB extension).",
  "GL_MODELVIEW26_ARB": "Specifies the modelview matrix 26 (ARB extension).",
  "GL_MODELVIEW27_ARB": "Specifies the modelview matrix 27 (ARB extension).",
  "GL_MODELVIEW28_ARB": "Specifies the modelview matrix 28 (ARB extension).",
  "GL_MODELVIEW29_ARB": "Specifies the modelview matrix 29 (ARB extension).",
  "GL_MODELVIEW30_ARB": "Specifies the modelview matrix 30 (ARB extension).",
  "GL_MODELVIEW31_ARB": "Specifies the modelview matrix 31 (ARB extension).",
  "GL_DOT3_RGB_EXT": "Specifies a dot product operation for RGB textures (EXT extension).",
  "GL_Z400_BINARY_AMD": "Specifies a binary format (AMD extension).",
  "GL_DOT3_RGBA_EXT": "Specifies a dot product operation for RGBA textures (EXT extension).",
  "GL_PROGRAM_BINARY_LENGTH_OES": "Specifies the length of a program binary (OES extension).",
  "GL_PROGRAM_BINARY_LENGTH": "Specifies the length of a program binary.",
  "GL_MIRROR_CLAMP_ATI": "Specifies mirror clamp functionality (ATI extension).",
  "GL_MIRROR_CLAMP_EXT": "Specifies mirror clamp functionality (EXT extension).",
  "GL_MIRROR_CLAMP_TO_EDGE": "Specifies mirror clamp to edge functionality.",
  "GL_MIRROR_CLAMP_TO_EDGE_ATI": "Specifies mirror clamp to edge functionality (ATI extension).",
  "GL_MIRROR_CLAMP_TO_EDGE_EXT": "Specifies mirror clamp to edge functionality (EXT extension).",
  "GL_MODULATE_ADD_ATI": "Specifies modulate add functionality (ATI extension).",
  "GL_MODULATE_SIGNED_ADD_ATI": "Specifies modulate signed add functionality (ATI extension).",
  "GL_MODULATE_SUBTRACT_ATI": "Specifies modulate subtract functionality (ATI extension).",
  "GL_SET_AMD": "Specifies set functionality (AMD extension).",
  "GL_REPLACE_VALUE_AMD": "Specifies replace value functionality (AMD extension).",
  "GL_STENCIL_OP_VALUE_AMD": "Specifies stencil operation value (AMD extension).",
  "GL_STENCIL_BACK_OP_VALUE_AMD": "Specifies stencil back operation value (AMD extension).",
  "GL_VERTEX_ATTRIB_ARRAY_LONG": "Specifies long vertex attribute array functionality.",
  "GL_OCCLUSION_QUERY_EVENT_MASK_AMD": "Specifies occlusion query event mask (AMD extension).",
  "GL_DEPTH_STENCIL_MESA": "Specifies depth-stencil functionality (MESA extension).",
  "GL_UNSIGNED_INT_24_8_MESA": "Specifies an unsigned integer format with 24 bits for depth and 8 bits for stencil (MESA extension).",
  "GL_UNSIGNED_INT_8_24_REV_MESA": "Specifies a reverse unsigned integer format with 8 bits for depth and 24 bits for stencil (MESA extension).",
  "GL_UNSIGNED_SHORT_15_1_MESA": "Specifies a 15-bit unsigned short format with 1 bit for padding (MESA extension).",
  "GL_UNSIGNED_SHORT_1_15_REV_MESA": "Specifies a reverse 15-bit unsigned short format with 1 bit for padding (MESA extension).",
  "GL_TRACE_MASK_MESA": "Specifies trace mask functionality (MESA extension).",
  "GL_TRACE_NAME_MESA": "Specifies trace name functionality (MESA extension).",
  "GL_YCBCR_MESA": "Specifies YCbCr format (MESA extension).",
  "GL_PACK_INVERT_MESA": "Specifies pack invert functionality (MESA extension).",
  "GL_DEBUG_OBJECT_MESA": "Specifies debug object functionality (MESA extension).",
  "GL_TEXTURE_1D_STACK_MESAX": "Specifies a 1D texture stack (MESA extension).",
  "GL_DEBUG_PRINT_MESA": "Specifies debug print functionality (MESA extension).",
  "GL_TEXTURE_2D_STACK_MESAX": "Specifies a 2D texture stack (MESA extension).",
  "GL_DEBUG_ASSERT_MESA": "Specifies debug assert functionality (MESA extension).",
  "GL_PROXY_TEXTURE_1D_STACK_MESAX": "Specifies a proxy for 1D texture stacks (MESA extension).",
  "GL_PROXY_TEXTURE_2D_STACK_MESAX": "Specifies a proxy for 2D texture stacks (MESA extension).",
  "GL_TEXTURE_1D_STACK_BINDING_MESAX": "Specifies the binding for 1D texture stacks (MESA extension).",
  "GL_TEXTURE_2D_STACK_BINDING_MESAX": "Specifies the binding for 2D texture stacks (MESA extension).",
  "GL_PROGRAM_BINARY_FORMAT_MESA": "Specifies the format of program binaries (MESA extension).",
  "GL_STATIC_ATI": "Specifies static buffer usage (ATI extension).",
  "GL_DYNAMIC_ATI": "Specifies dynamic buffer usage (ATI extension).",
  "GL_PRESERVE_ATI": "Specifies preservation of data (ATI extension).",
  "GL_DISCARD_ATI": "Specifies data discard behavior (ATI extension).",
  "GL_BUFFER_SIZE": "Specifies the size of a buffer.",
  "GL_BUFFER_SIZE_ARB": "Specifies the size of a buffer (ARB extension).",
  "GL_OBJECT_BUFFER_SIZE_ATI": "Specifies the size of an object buffer (ATI extension).",
  "GL_BUFFER_USAGE": "Specifies the usage of a buffer.",
  "GL_BUFFER_USAGE_ARB": "Specifies the usage of a buffer (ARB extension).",
  "GL_OBJECT_BUFFER_USAGE_ATI": "Specifies the usage of an object buffer (ATI extension).",
  "GL_ARRAY_OBJECT_BUFFER_ATI": "Specifies an array object buffer (ATI extension).",
  "GL_ARRAY_OBJECT_OFFSET_ATI": "Specifies the offset for an array object (ATI extension).",
  "GL_ELEMENT_ARRAY_ATI": "Specifies an element array (ATI extension).",
  "GL_ELEMENT_ARRAY_TYPE_ATI": "Specifies the type of an element array (ATI extension).",
  "GL_ELEMENT_ARRAY_POINTER_ATI": "Specifies a pointer to an element array (ATI extension).",
  "GL_MAX_VERTEX_STREAMS_ATI": "Specifies the maximum number of vertex streams (ATI extension).",
  "GL_VERTEX_STREAM0_ATI": "Specifies the first vertex stream (ATI extension).",
  "GL_VERTEX_STREAM1_ATI": "Specifies the second vertex stream (ATI extension).",
  "GL_VERTEX_STREAM2_ATI": "Specifies the third vertex stream (ATI extension).",
  "GL_VERTEX_STREAM3_ATI": "Specifies the fourth vertex stream (ATI extension).",
  "GL_VERTEX_STREAM4_ATI": "Specifies the fifth vertex stream (ATI extension).",
  "GL_VERTEX_STREAM5_ATI": "Specifies the sixth vertex stream (ATI extension).",
  "GL_VERTEX_STREAM6_ATI": "Specifies the seventh vertex stream (ATI extension).",
  "GL_VERTEX_STREAM7_ATI": "Specifies the eighth vertex stream (ATI extension).",
  "GL_VERTEX_SOURCE_ATI": "Specifies the vertex source (ATI extension).",
  "GL_BUMP_ROT_MATRIX_ATI": "Specifies the bump rotation matrix (ATI extension).",
  "GL_BUMP_ROT_MATRIX_SIZE_ATI": "Specifies the size of the bump rotation matrix (ATI extension).",
  "GL_BUMP_NUM_TEX_UNITS_ATI": "Specifies the number of texture units for bump mapping (ATI extension).",
  "GL_BUMP_TEX_UNITS_ATI": "Specifies the bump texture units (ATI extension).",
  "GL_DUDV_ATI": "Specifies the DUDV texture (ATI extension).",
  "GL_DU8DV8_ATI": "Specifies the DU8DV8 texture (ATI extension).",
  "GL_BUMP_ENVMAP_ATI": "Specifies the bump environment map (ATI extension).",
  "GL_BUMP_TARGET_ATI": "Specifies the target for bump mapping (ATI extension).",
  "GL_VERTEX_SHADER_EXT": "Specifies a vertex shader (EXT extension).",
  "GL_VERTEX_SHADER_BINDING_EXT": "Specifies the binding for vertex shaders (EXT extension).",
  "GL_OP_INDEX_EXT": "Specifies the index operation in EXT vertex shader.",
  "GL_OP_NEGATE_EXT": "Specifies the negate operation in EXT vertex shader.",
  "GL_OP_DOT3_EXT": "Specifies the dot product operation for 3-component vectors in EXT vertex shader.",
  "GL_OP_DOT4_EXT": "Specifies the dot product operation for 4-component vectors in EXT vertex shader.",
  "GL_OP_MUL_EXT": "Specifies the multiplication operation in EXT vertex shader.",
  "GL_OP_ADD_EXT": "Specifies the addition operation in EXT vertex shader.",
  "GL_OP_MADD_EXT": "Specifies the multiply-add operation in EXT vertex shader.",
  "GL_OP_FRAC_EXT": "Specifies the fractional part operation in EXT vertex shader.",
  "GL_OP_MAX_EXT": "Specifies the maximum operation in EXT vertex shader.",
  "GL_OP_MIN_EXT": "Specifies the minimum operation in EXT vertex shader.",
  "GL_OP_SET_GE_EXT": "Specifies the set greater than or equal operation in EXT vertex shader.",
  "GL_OP_SET_LT_EXT": "Specifies the set less than operation in EXT vertex shader.",
  "GL_OP_CLAMP_EXT": "Specifies the clamp operation in EXT vertex shader.",
  "GL_OP_FLOOR_EXT": "Specifies the floor operation in EXT vertex shader.",
  "GL_OP_ROUND_EXT": "Specifies the round operation in EXT vertex shader.",
  "GL_OP_EXP_BASE_2_EXT": "Specifies the base 2 exponential operation in EXT vertex shader.",
  "GL_OP_LOG_BASE_2_EXT": "Specifies the base 2 logarithm operation in EXT vertex shader.",
  "GL_OP_POWER_EXT": "Specifies the power operation in EXT vertex shader.",
  "GL_OP_RECIP_EXT": "Specifies the reciprocal operation in EXT vertex shader.",
  "GL_OP_RECIP_SQRT_EXT": "Specifies the reciprocal square root operation in EXT vertex shader.",
  "GL_OP_SUB_EXT": "Specifies the subtraction operation in EXT vertex shader.",
  "GL_OP_CROSS_PRODUCT_EXT": "Specifies the cross product operation in EXT vertex shader.",
  "GL_OP_MULTIPLY_MATRIX_EXT": "Specifies the matrix multiplication operation in EXT vertex shader.",
  "GL_OP_MOV_EXT": "Specifies the move operation in EXT vertex shader.",
  "GL_OUTPUT_VERTEX_EXT": "Specifies the output vertex from EXT vertex shader.",
  "GL_OUTPUT_COLOR0_EXT": "Specifies the first output color from EXT vertex shader.",
  "GL_OUTPUT_COLOR1_EXT": "Specifies the second output color from EXT vertex shader.",
  "GL_OUTPUT_TEXTURE_COORD0_EXT": "Specifies the first output texture coordinate from EXT vertex shader.",
  "GL_OUTPUT_TEXTURE_COORD1_EXT": "Specifies the second output texture coordinate from EXT vertex shader.",
  "GL_OUTPUT_TEXTURE_COORD2_EXT": "Specifies the third output texture coordinate from EXT vertex shader.",
  "GL_OUTPUT_TEXTURE_COORD3_EXT": "Specifies the fourth output texture coordinate from EXT vertex shader.",
  "GL_OUTPUT_TEXTURE_COORD4_EXT": "Specifies the fifth output texture coordinate from EXT vertex shader.",
  "GL_OUTPUT_TEXTURE_COORD5_EXT": "Specifies the sixth output texture coordinate from EXT vertex shader.",
  "GL_OUTPUT_TEXTURE_COORD6_EXT": "Specifies the seventh output texture coordinate from EXT vertex shader.",
  "GL_OUTPUT_TEXTURE_COORD7_EXT": "Specifies the eighth output texture coordinate from EXT vertex shader.",
  "GL_OUTPUT_TEXTURE_COORD8_EXT": "Specifies the ninth output texture coordinate from EXT vertex shader.",
  "GL_OUTPUT_TEXTURE_COORD9_EXT": "Specifies the tenth output texture coordinate from EXT vertex shader.",
  "GL_OUTPUT_TEXTURE_COORD10_EXT": "Specifies the eleventh output texture coordinate from EXT vertex shader.",
  "GL_OUTPUT_TEXTURE_COORD11_EXT": "Specifies the twelfth output texture coordinate from EXT vertex shader.",
  "GL_OUTPUT_TEXTURE_COORD12_EXT": "Specifies the thirteenth output texture coordinate from EXT vertex shader.",
  "GL_OUTPUT_TEXTURE_COORD13_EXT": "Specifies the fourteenth output texture coordinate from EXT vertex shader.",
  "GL_OUTPUT_TEXTURE_COORD14_EXT": "Specifies the fifteenth output texture coordinate from EXT vertex shader.",
  "GL_OUTPUT_TEXTURE_COORD15_EXT": "Specifies the sixteenth output texture coordinate from EXT vertex shader.",
  "GL_OUTPUT_TEXTURE_COORD16_EXT": "Specifies the seventeenth output texture coordinate from EXT vertex shader.",
  "GL_OUTPUT_TEXTURE_COORD17_EXT": "Specifies the eighteenth output texture coordinate from EXT vertex shader.",
  "GL_OUTPUT_TEXTURE_COORD18_EXT": "Specifies the nineteenth output texture coordinate from EXT vertex shader.",
  "GL_OUTPUT_TEXTURE_COORD19_EXT": "Specifies the twentieth output texture coordinate from EXT vertex shader.",
  "GL_OUTPUT_TEXTURE_COORD20_EXT": "Specifies the twenty-first output texture coordinate from EXT vertex shader.",
  "GL_OUTPUT_TEXTURE_COORD21_EXT": "Specifies the twenty-second output texture coordinate from EXT vertex shader.",
  "GL_OUTPUT_TEXTURE_COORD22_EXT": "Specifies the twenty-third output texture coordinate from EXT vertex shader.",
  "GL_OUTPUT_TEXTURE_COORD23_EXT": "Specifies the twenty-fourth output texture coordinate from EXT vertex shader.",
  "GL_OUTPUT_TEXTURE_COORD24_EXT": "Specifies the twenty-fifth output texture coordinate from EXT vertex shader.",
  "GL_OUTPUT_TEXTURE_COORD25_EXT": "Specifies the twenty-sixth output texture coordinate from EXT vertex shader.",
  "GL_OUTPUT_TEXTURE_COORD26_EXT": "Specifies the twenty-seventh output texture coordinate from EXT vertex shader.",
  "GL_OUTPUT_TEXTURE_COORD27_EXT": "Specifies the twenty-eighth output texture coordinate from EXT vertex shader.",
  "GL_OUTPUT_TEXTURE_COORD28_EXT": "Specifies the twenty-ninth output texture coordinate from EXT vertex shader.",
  "GL_OUTPUT_TEXTURE_COORD29_EXT": "Specifies the thirtieth output texture coordinate from EXT vertex shader.",
  "GL_OUTPUT_TEXTURE_COORD30_EXT": "Specifies the thirty-first output texture coordinate from EXT vertex shader.",
  "GL_OUTPUT_TEXTURE_COORD31_EXT": "Specifies the thirty-second output texture coordinate from EXT vertex shader.",
  "GL_OUTPUT_FOG_EXT": "Specifies the output fog value from EXT vertex shader.",
  "GL_SCALAR_EXT": "Specifies scalar output from EXT vertex shader.",
  "GL_VECTOR_EXT": "Specifies a vector in EXT vertex shader.",
  "GL_MATRIX_EXT": "Specifies a matrix in EXT vertex shader.",
  "GL_VARIANT_EXT": "Specifies a variant in EXT vertex shader.",
  "GL_INVARIANT_EXT": "Specifies an invariant in EXT vertex shader.",
  "GL_LOCAL_CONSTANT_EXT": "Specifies a local constant in EXT vertex shader.",
  "GL_LOCAL_EXT": "Specifies a local variable in EXT vertex shader.",
  "GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT": "Specifies the maximum number of instructions for vertex shaders (EXT extension).",
  "GL_MAX_VERTEX_SHADER_VARIANTS_EXT": "Specifies the maximum number of vertex shader variants (EXT extension).",
  "GL_MAX_VERTEX_SHADER_INVARIANTS_EXT": "Specifies the maximum number of vertex shader invariants (EXT extension).",
  "GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT": "Specifies the maximum number of local constants in vertex shaders (EXT extension).",
  "GL_MAX_VERTEX_SHADER_LOCALS_EXT": "Specifies the maximum number of local variables in vertex shaders (EXT extension).",
  "GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT": "Specifies the maximum number of optimized instructions in vertex shaders (EXT extension).",
  "GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT": "Specifies the maximum number of optimized vertex shader variants (EXT extension).",
  "GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT": "Specifies the maximum number of optimized local constants in vertex shaders (EXT extension).",
  "GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT": "Specifies the maximum number of optimized vertex shader invariants (EXT extension).",
  "GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT": "Specifies the maximum number of optimized local variables in vertex shaders (EXT extension).",
  "GL_VERTEX_SHADER_INSTRUCTIONS_EXT": "Specifies the instructions count in vertex shaders (EXT extension).",
  "GL_VERTEX_SHADER_VARIANTS_EXT": "Specifies the variants count in vertex shaders (EXT extension).",
  "GL_VERTEX_SHADER_INVARIANTS_EXT": "Specifies the invariants count in vertex shaders (EXT extension).",
  "GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT": "Specifies the local constants count in vertex shaders (EXT extension).",
  "GL_VERTEX_SHADER_LOCALS_EXT": "Specifies the local variables count in vertex shaders (EXT extension).",
  "GL_VERTEX_SHADER_OPTIMIZED_EXT": "Specifies an optimized vertex shader (EXT extension).",
  "GL_X_EXT": "Specifies the X component in EXT vertex shader.",
  "GL_Y_EXT": "Specifies the Y component in EXT vertex shader.",
  "GL_Z_EXT": "Specifies the Z component in EXT vertex shader.",
  "GL_W_EXT": "Specifies the W component in EXT vertex shader.",
  "GL_NEGATIVE_X_EXT": "Specifies the negative X component in EXT vertex shader.",
  "GL_NEGATIVE_Y_EXT": "Specifies the negative Y component in EXT vertex shader.",
  "GL_NEGATIVE_Z_EXT": "Specifies the negative Z component in EXT vertex shader.",
  "GL_NEGATIVE_W_EXT": "Specifies the negative W component in EXT vertex shader.",
  "GL_ZERO_EXT": "Specifies the zero constant in EXT vertex shader.",
  "GL_ONE_EXT": "Specifies the one constant in EXT vertex shader.",
  "GL_NEGATIVE_ONE_EXT": "Specifies the negative one constant in EXT vertex shader.",
  "GL_NORMALIZED_RANGE_EXT": "Specifies the normalized range in EXT vertex shader.",
  "GL_FULL_RANGE_EXT": "Specifies the full range in EXT vertex shader.",
  "GL_CURRENT_VERTEX_EXT": "Specifies the current vertex in EXT vertex shader.",
  "GL_MVP_MATRIX_EXT": "Specifies the Model-View-Projection matrix in EXT vertex shader.",
  "GL_VARIANT_VALUE_EXT": "Specifies the value of a variant in EXT vertex shader.",
  "GL_VARIANT_DATATYPE_EXT": "Specifies the data type of a variant in EXT vertex shader.",
  "GL_VARIANT_ARRAY_STRIDE_EXT": "Specifies the stride of a variant array in EXT vertex shader.",
  "GL_VARIANT_ARRAY_TYPE_EXT": "Specifies the type of a variant array in EXT vertex shader.",
  "GL_VARIANT_ARRAY_EXT": "Specifies a variant array in EXT vertex shader.",
  "GL_VARIANT_ARRAY_POINTER_EXT": "Specifies a pointer to a variant array in EXT vertex shader.",
  "GL_INVARIANT_VALUE_EXT": "Specifies the value of an invariant in EXT vertex shader.",
  "GL_INVARIANT_DATATYPE_EXT": "Specifies the data type of an invariant in EXT vertex shader.",
  "GL_LOCAL_CONSTANT_VALUE_EXT": "Specifies the value of a local constant in EXT vertex shader.",
  "GL_LOCAL_CONSTANT_DATATYPE_EXT": "Specifies the data type of a local constant in EXT vertex shader.",
  "GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD": "Specifies interpolated alpha format for ATC texture (AMD extension).",
  "GL_PN_TRIANGLES_ATI": "Specifies the use of PN triangles (ATI extension).",
  "GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI": "Specifies the maximum tessellation level for PN triangles (ATI extension).",
  "GL_PN_TRIANGLES_POINT_MODE_ATI": "Specifies the point mode for PN triangles (ATI extension).",
  "GL_PN_TRIANGLES_NORMAL_MODE_ATI": "Specifies the normal mode for PN triangles (ATI extension).",
  "GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI": "Specifies the tessellation level for PN triangles (ATI extension).",
  "GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI": "Specifies linear point mode for PN triangles (ATI extension).",
  "GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI": "Specifies cubic point mode for PN triangles (ATI extension).",
  "GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI": "Specifies linear normal mode for PN triangles (ATI extension).",
  "GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI": "Specifies quadratic normal mode for PN triangles (ATI extension).",
  "GL_3DC_X_AMD": "Specifies 3DC compression format X (AMD extension).",
  "GL_3DC_XY_AMD": "Specifies 3DC compression format XY (AMD extension).",
  "GL_VBO_FREE_MEMORY_ATI": "Specifies free memory available for vertex buffer objects (ATI extension).",
  "GL_TEXTURE_FREE_MEMORY_ATI": "Specifies free memory available for textures (ATI extension).",
  "GL_RENDERBUFFER_FREE_MEMORY_ATI": "Specifies free memory available for renderbuffers (ATI extension).",
  "GL_NUM_PROGRAM_BINARY_FORMATS": "Specifies the number of program binary formats.",
  "GL_NUM_PROGRAM_BINARY_FORMATS_OES": "Specifies the number of program binary formats (OES extension).",
  "GL_PROGRAM_BINARY_FORMATS": "Specifies available program binary formats.",
  "GL_PROGRAM_BINARY_FORMATS_OES": "Specifies available program binary formats (OES extension).",
  "GL_STENCIL_BACK_FUNC": "Specifies the stencil function for the back face.",
  "GL_STENCIL_BACK_FUNC_ATI": "Specifies the stencil function for the back face (ATI extension).",
  "GL_STENCIL_BACK_FAIL": "Specifies the stencil operation on failure for the back face.",
  "GL_STENCIL_BACK_FAIL_ATI": "Specifies the stencil operation on failure for the back face (ATI extension).",
  "GL_STENCIL_BACK_PASS_DEPTH_FAIL": "Specifies the stencil operation on depth fail for the back face.",
  "GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI": "Specifies the stencil operation on depth fail for the back face (ATI extension).",
  "GL_STENCIL_BACK_PASS_DEPTH_PASS": "Specifies the stencil operation on depth pass for the back face.",
  "GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI": "Specifies the stencil operation on depth pass for the back face (ATI extension).",
  "GL_FRAGMENT_PROGRAM_ARB": "Specifies a fragment program (ARB extension).",
  "GL_PROGRAM_ALU_INSTRUCTIONS_ARB": "Specifies the number of ALU instructions in a program (ARB extension).",
  "GL_PROGRAM_TEX_INSTRUCTIONS_ARB": "Specifies the number of texture instructions in a program (ARB extension).",
  "GL_PROGRAM_TEX_INDIRECTIONS_ARB": "Specifies the number of texture indirections in a program (ARB extension).",
  "GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB": "Specifies the number of native ALU instructions in a program (ARB extension).",
  "GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB": "Specifies the number of native texture instructions in a program (ARB extension).",
  "GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB": "Specifies the number of native texture indirections in a program (ARB extension).",
  "GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB": "Specifies the maximum number of ALU instructions in a program (ARB extension).",
  "GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB": "Specifies the maximum number of texture instructions in a program (ARB extension).",
  "GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB": "Specifies the maximum number of texture indirections in a program (ARB extension).",
  "GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB": "Specifies the maximum number of native ALU instructions in a program (ARB extension).",
  "GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB": "Specifies the maximum number of native texture instructions in a program (ARB extension).",
  "GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB": "Specifies the maximum number of native texture indirections in a program (ARB extension).",
  "GL_RGBA32F": "Specifies a 32-bit floating-point RGBA texture format.",
  "GL_RGBA32F_ARB": "Specifies a 32-bit floating-point RGBA texture format (ARB extension).",
  "GL_RGBA32F_EXT": "Specifies a 32-bit floating-point RGBA texture format (EXT extension).",
  "GL_RGBA_FLOAT32_APPLE": "Specifies a 32-bit floating-point RGBA format (APPLE extension).",
  "GL_RGBA_FLOAT32_ATI": "Specifies a 32-bit floating-point RGBA format (ATI extension).",
  "GL_RGB32F": "Specifies a 32-bit floating-point RGB texture format.",
  "GL_RGB32F_ARB": "Specifies a 32-bit floating-point RGB texture format (ARB extension).",
  "GL_RGB32F_EXT": "Specifies a 32-bit floating-point RGB texture format (EXT extension).",
  "GL_RGB_FLOAT32_APPLE": "Specifies a 32-bit floating-point RGB format (APPLE extension).",
  "GL_RGB_FLOAT32_ATI": "Specifies a 32-bit floating-point RGB format (ATI extension).",
  "GL_ALPHA32F_ARB": "Specifies a 32-bit floating-point alpha texture format (ARB extension).",
  "GL_ALPHA32F_EXT": "Specifies a 32-bit floating-point alpha texture format (EXT extension).",
  "GL_ALPHA_FLOAT32_APPLE": "Specifies a 32-bit floating-point alpha format (APPLE extension).",
  "GL_ALPHA_FLOAT32_ATI": "Specifies a 32-bit floating-point alpha format (ATI extension).",
  "GL_INTENSITY32F_ARB": "Specifies a 32-bit floating-point intensity texture format (ARB extension).",
  "GL_INTENSITY_FLOAT32_APPLE": "Specifies a 32-bit floating-point intensity format (APPLE extension).",
  "GL_INTENSITY_FLOAT32_ATI": "Specifies a 32-bit floating-point intensity format (ATI extension).",
  "GL_LUMINANCE32F_ARB": "Specifies a 32-bit floating-point luminance texture format (ARB extension).",
  "GL_LUMINANCE32F_EXT": "Specifies a 32-bit floating-point luminance texture format (EXT extension).",
  "GL_LUMINANCE_FLOAT32_APPLE": "Specifies a 32-bit floating-point luminance format (APPLE extension).",
  "GL_LUMINANCE_FLOAT32_ATI": "Specifies a 32-bit floating-point luminance format (ATI extension).",
  "GL_LUMINANCE_ALPHA32F_ARB": "Specifies a 32-bit floating-point luminance-alpha texture format (ARB extension).",
  "GL_LUMINANCE_ALPHA32F_EXT": "Specifies a 32-bit floating-point luminance-alpha texture format (EXT extension).",
  "GL_LUMINANCE_ALPHA_FLOAT32_APPLE": "Specifies a 32-bit floating-point luminance-alpha format (APPLE extension).",
  "GL_LUMINANCE_ALPHA_FLOAT32_ATI": "Specifies a 32-bit floating-point luminance-alpha format (ATI extension).",
  "GL_RGBA16F": "Specifies a 16-bit floating-point RGBA texture format.",
  "GL_RGBA16F_ARB": "Specifies a 16-bit floating-point RGBA texture format (ARB extension).",
  "GL_RGBA16F_EXT": "Specifies a 16-bit floating-point RGBA texture format (EXT extension).",
  "GL_RGBA_FLOAT16_APPLE": "Specifies a 16-bit floating-point RGBA format (APPLE extension).",
  "GL_RGBA_FLOAT16_ATI": "Specifies a 16-bit floating-point RGBA format (ATI extension).",
  "GL_RGB16F": "Specifies a 16-bit floating-point RGB texture format.",
  "GL_RGB16F_ARB": "Specifies a 16-bit floating-point RGB texture format (ARB extension).",
  "GL_RGB16F_EXT": "Specifies a 16-bit floating-point RGB texture format (EXT extension).",
  "GL_RGB_FLOAT16_APPLE": "Specifies a 16-bit floating-point RGB format (APPLE extension).",
  "GL_RGB_FLOAT16_ATI": "Specifies a 16-bit floating-point RGB format (ATI extension).",
  "GL_ALPHA16F_ARB": "Specifies a 16-bit floating-point alpha texture format (ARB extension).",
  "GL_ALPHA16F_EXT": "Specifies a 16-bit floating-point alpha texture format (EXT extension).",
  "GL_ALPHA_FLOAT16_APPLE": "Specifies a 16-bit floating-point alpha format (APPLE extension).",
  "GL_ALPHA_FLOAT16_ATI": "Specifies a 16-bit floating-point alpha format (ATI extension).",
  "GL_INTENSITY16F_ARB": "Specifies a 16-bit floating-point intensity texture format (ARB extension).",
  "GL_INTENSITY_FLOAT16_APPLE": "Specifies a 16-bit floating-point intensity format (APPLE extension).",
  "GL_INTENSITY_FLOAT16_ATI": "Specifies a 16-bit floating-point intensity format (ATI extension).",
  "GL_LUMINANCE16F_ARB": "Specifies a 16-bit floating-point luminance texture format (ARB extension).",
  "GL_LUMINANCE16F_EXT": "Specifies a 16-bit floating-point luminance texture format (EXT extension).",
  "GL_LUMINANCE_FLOAT16_APPLE": "Specifies a 16-bit floating-point luminance format (APPLE extension).",
  "GL_LUMINANCE_FLOAT16_ATI": "Specifies a 16-bit floating-point luminance format (ATI extension).",
  "GL_LUMINANCE_ALPHA16F_ARB": "Specifies a 16-bit floating-point luminance-alpha texture format (ARB extension).",
  "GL_LUMINANCE_ALPHA16F_EXT": "Specifies a 16-bit floating-point luminance-alpha texture format (EXT extension).",
  "GL_LUMINANCE_ALPHA_FLOAT16_APPLE": "Specifies a 16-bit floating-point luminance-alpha format (APPLE extension).",
  "GL_LUMINANCE_ALPHA_FLOAT16_ATI": "Specifies a 16-bit floating-point luminance-alpha format (ATI extension).",
  "GL_RGBA_FLOAT_MODE_ARB": "Specifies the floating-point mode for RGBA formats (ARB extension).",
  "GL_RGBA_FLOAT_MODE_ATI": "Specifies the floating-point mode for RGBA formats (ATI extension).",
  "GL_WRITEONLY_RENDERING_QCOM": "Specifies write-only rendering mode in Qualcomm extensions.",
  "GL_MAX_DRAW_BUFFERS": "Specifies the maximum number of draw buffers.",
  "GL_MAX_DRAW_BUFFERS_ARB": "Specifies the maximum number of draw buffers (ARB extension).",
  "GL_MAX_DRAW_BUFFERS_ATI": "Specifies the maximum number of draw buffers (ATI extension).",
  "GL_MAX_DRAW_BUFFERS_EXT": "Specifies the maximum number of draw buffers (EXT extension).",
  "GL_MAX_DRAW_BUFFERS_NV": "Specifies the maximum number of draw buffers (NV extension).",
  "GL_DRAW_BUFFER0": "Specifies the first draw buffer.",
  "GL_DRAW_BUFFER0_ARB": "Specifies the first draw buffer (ARB extension).",
  "GL_DRAW_BUFFER0_ATI": "Specifies the first draw buffer (ATI extension).",
  "GL_DRAW_BUFFER0_EXT": "Specifies the first draw buffer (EXT extension).",
  "GL_DRAW_BUFFER0_NV": "Specifies the first draw buffer (NV extension).",
  "GL_DRAW_BUFFER1": "Specifies the second draw buffer.",
  "GL_DRAW_BUFFER1_ARB": "Specifies the second draw buffer (ARB extension).",
  "GL_DRAW_BUFFER1_ATI": "Specifies the second draw buffer (ATI extension).",
  "GL_DRAW_BUFFER1_EXT": "Specifies the second draw buffer (EXT extension).",
  "GL_DRAW_BUFFER1_NV": "Specifies the second draw buffer (NV extension).",
  "GL_DRAW_BUFFER2": "Specifies the third draw buffer.",
  "GL_DRAW_BUFFER2_ARB": "Specifies the third draw buffer (ARB extension).",
  "GL_DRAW_BUFFER2_ATI": "Specifies the third draw buffer (ATI extension).",
  "GL_DRAW_BUFFER2_EXT": "Specifies the third draw buffer (EXT extension).",
  "GL_DRAW_BUFFER2_NV": "Specifies the third draw buffer (NV extension).",
  "GL_DRAW_BUFFER3": "Specifies the fourth draw buffer.",
  "GL_DRAW_BUFFER3_ARB": "Specifies the fourth draw buffer (ARB extension).",
  "GL_DRAW_BUFFER3_ATI": "Specifies the fourth draw buffer (ATI extension).",
  "GL_DRAW_BUFFER3_EXT": "Specifies the fourth draw buffer (EXT extension).",
  "GL_DRAW_BUFFER3_NV": "Specifies the fourth draw buffer (NV extension).",
  "GL_DRAW_BUFFER4": "Specifies the fifth draw buffer.",
  "GL_DRAW_BUFFER4_ARB": "Specifies the fifth draw buffer (ARB extension).",
  "GL_DRAW_BUFFER4_ATI": "Specifies the fifth draw buffer (ATI extension).",
  "GL_DRAW_BUFFER4_EXT": "Specifies the fifth draw buffer (EXT extension).",
  "GL_DRAW_BUFFER4_NV": "Specifies the fifth draw buffer (NV extension).",
  "GL_DRAW_BUFFER5": "Specifies the sixth draw buffer.",
  "GL_DRAW_BUFFER5_ARB": "Specifies the sixth draw buffer (ARB extension).",
  "GL_DRAW_BUFFER5_ATI": "Specifies the sixth draw buffer (ATI extension).",
  "GL_DRAW_BUFFER5_EXT": "Specifies the sixth draw buffer (EXT extension).",
  "GL_DRAW_BUFFER5_NV": "Specifies the sixth draw buffer (NV extension).",
  "GL_DRAW_BUFFER6": "Specifies the seventh draw buffer.",
  "GL_DRAW_BUFFER6_ARB": "Specifies the seventh draw buffer (ARB extension).",
  "GL_DRAW_BUFFER6_ATI": "Specifies the seventh draw buffer (ATI extension).",
  "GL_DRAW_BUFFER6_EXT": "Specifies the seventh draw buffer (EXT extension).",
  "GL_DRAW_BUFFER6_NV": "Specifies the seventh draw buffer (NV extension).",
  "GL_DRAW_BUFFER7": "Specifies the eighth draw buffer.",
  "GL_DRAW_BUFFER7_ARB": "Specifies the eighth draw buffer (ARB extension).",
  "GL_DRAW_BUFFER7_ATI": "Specifies the eighth draw buffer (ATI extension).",
  "GL_DRAW_BUFFER7_EXT": "Specifies the eighth draw buffer (EXT extension).",
  "GL_DRAW_BUFFER7_NV": "Specifies the eighth draw buffer (NV extension).",
  "GL_DRAW_BUFFER8": "Specifies the ninth draw buffer.",
  "GL_DRAW_BUFFER8_ARB": "Specifies the ninth draw buffer (ARB extension).",
  "GL_DRAW_BUFFER8_ATI": "Specifies the ninth draw buffer (ATI extension).",
  "GL_DRAW_BUFFER8_EXT": "Specifies the ninth draw buffer (EXT extension).",
  "GL_DRAW_BUFFER8_NV": "Specifies the ninth draw buffer (NV extension).",
  "GL_DRAW_BUFFER9": "Specifies the tenth draw buffer.",
  "GL_DRAW_BUFFER9_ARB": "Specifies the tenth draw buffer (ARB extension).",
  "GL_DRAW_BUFFER9_ATI": "Specifies the tenth draw buffer (ATI extension).",
  "GL_DRAW_BUFFER9_EXT": "Specifies the tenth draw buffer (EXT extension).",
  "GL_DRAW_BUFFER9_NV": "Specifies the tenth draw buffer (NV extension).",
  "GL_DRAW_BUFFER10": "Specifies the eleventh draw buffer.",
  "GL_DRAW_BUFFER10_ARB": "Specifies the eleventh draw buffer (ARB extension).",
  "GL_DRAW_BUFFER10_ATI": "Specifies the eleventh draw buffer (ATI extension).",
  "GL_DRAW_BUFFER10_EXT": "Specifies the eleventh draw buffer (EXT extension).",
  "GL_DRAW_BUFFER10_NV": "Specifies the eleventh draw buffer (NV extension).",
  "GL_DRAW_BUFFER11": "Specifies the twelfth draw buffer.",
  "GL_DRAW_BUFFER11_ARB": "Specifies the twelfth draw buffer (ARB extension).",
  "GL_DRAW_BUFFER11_ATI": "Specifies the twelfth draw buffer (ATI extension).",
  "GL_DRAW_BUFFER11_EXT": "Specifies the twelfth draw buffer (EXT extension).",
  "GL_DRAW_BUFFER11_NV": "Specifies the twelfth draw buffer (NV extension).",
  "GL_DRAW_BUFFER12": "Specifies the thirteenth draw buffer.",
  "GL_DRAW_BUFFER12_ARB": "Specifies the thirteenth draw buffer (ARB extension).",
  "GL_DRAW_BUFFER12_ATI": "Specifies the thirteenth draw buffer (ATI extension).",
  "GL_DRAW_BUFFER12_EXT": "Specifies the thirteenth draw buffer (EXT extension).",
  "GL_DRAW_BUFFER12_NV": "Specifies the thirteenth draw buffer (NV extension).",
  "GL_DRAW_BUFFER13": "Specifies the fourteenth draw buffer.",
  "GL_DRAW_BUFFER13_ARB": "Specifies the fourteenth draw buffer (ARB extension).",
  "GL_DRAW_BUFFER13_ATI": "Specifies the fourteenth draw buffer (ATI extension).",
  "GL_DRAW_BUFFER13_EXT": "Specifies the fourteenth draw buffer (EXT extension).",
  "GL_DRAW_BUFFER13_NV": "Specifies the fourteenth draw buffer (NV extension).",
  "GL_DRAW_BUFFER14": "Specifies the fifteenth draw buffer.",
  "GL_DRAW_BUFFER14_ARB": "Specifies the fifteenth draw buffer (ARB extension).",
  "GL_DRAW_BUFFER14_ATI": "Specifies the fifteenth draw buffer (ATI extension).",
  "GL_DRAW_BUFFER14_EXT": "Specifies the fifteenth draw buffer (EXT extension).",
  "GL_DRAW_BUFFER14_NV": "Specifies the fifteenth draw buffer (NV extension).",
  "GL_DRAW_BUFFER15": "Specifies the sixteenth draw buffer.",
  "GL_DRAW_BUFFER15_ARB": "Specifies the sixteenth draw buffer (ARB extension).",
  "GL_DRAW_BUFFER15_ATI": "Specifies the sixteenth draw buffer (ATI extension).",
  "GL_DRAW_BUFFER15_EXT": "Specifies the sixteenth draw buffer (EXT extension).",
  "GL_DRAW_BUFFER15_NV": "Specifies the sixteenth draw buffer (NV extension).",
  "GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI": "Specifies the un-clamped clear color value (ATI extension).",
  "GL_COMPRESSED_LUMINANCE_ALPHA_3DC_ATI": "Specifies a compressed luminance-alpha format (ATI extension).",
  "GL_BLEND_EQUATION_ALPHA": "Specifies the blend equation for alpha blending.",
  "GL_BLEND_EQUATION_ALPHA_EXT": "Specifies the blend equation for alpha blending (EXT extension).",
  "GL_BLEND_EQUATION_ALPHA_OES": "Specifies the blend equation for alpha blending (OES extension).",
  "GL_SUBSAMPLE_DISTANCE_AMD": "Specifies the subsample distance (AMD extension).",
  "GL_MATRIX_PALETTE_ARB": "Specifies the matrix palette (ARB extension).",
  "GL_MATRIX_PALETTE_OES": "Specifies the matrix palette (OES extension).",
  "GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB": "Specifies the maximum depth of the matrix palette stack (ARB extension).",
  "GL_MAX_PALETTE_MATRICES_ARB": "Specifies the maximum number of matrices in a palette (ARB extension).",
  "GL_MAX_PALETTE_MATRICES_OES": "Specifies the maximum number of matrices in a palette (OES extension).",
  "GL_CURRENT_PALETTE_MATRIX_ARB": "Specifies the current palette matrix (ARB extension).",
  "GL_CURRENT_PALETTE_MATRIX_OES": "Specifies the current palette matrix (OES extension).",
  "GL_MATRIX_INDEX_ARRAY_ARB": "Specifies the matrix index array (ARB extension).",
  "GL_MATRIX_INDEX_ARRAY_OES": "Specifies the matrix index array (OES extension).",
  "GL_CURRENT_MATRIX_INDEX_ARB": "Specifies the current matrix index (ARB extension).",
  "GL_MATRIX_INDEX_ARRAY_SIZE_ARB": "Specifies the size of the matrix index array (ARB extension).",
  "GL_MATRIX_INDEX_ARRAY_SIZE_OES": "Specifies the size of the matrix index array (OES extension).",
  "GL_MATRIX_INDEX_ARRAY_TYPE_ARB": "Specifies the type of the matrix index array (ARB extension).",
  "GL_MATRIX_INDEX_ARRAY_TYPE_OES": "Specifies the type of the matrix index array (OES extension).",
  "GL_MATRIX_INDEX_ARRAY_STRIDE_ARB": "Specifies the stride of the matrix index array (ARB extension).",
  "GL_MATRIX_INDEX_ARRAY_STRIDE_OES": "Specifies the stride of the matrix index array (OES extension).",
  "GL_MATRIX_INDEX_ARRAY_POINTER_ARB": "Specifies the pointer to the matrix index array (ARB extension).",
  "GL_MATRIX_INDEX_ARRAY_POINTER_OES": "Specifies the pointer to the matrix index array (OES extension).",
  "GL_TEXTURE_DEPTH_SIZE": "Specifies the size of the depth component in texture.",
  "GL_TEXTURE_DEPTH_SIZE_ARB": "Specifies the size of the depth component in texture (ARB extension).",
  "GL_DEPTH_TEXTURE_MODE": "Specifies the mode for depth texture comparisons.",
  "GL_DEPTH_TEXTURE_MODE_ARB": "Specifies the mode for depth texture comparisons (ARB extension).",
  "GL_TEXTURE_COMPARE_MODE": "Specifies the comparison mode for texture.",
  "GL_TEXTURE_COMPARE_MODE_ARB": "Specifies the comparison mode for texture (ARB extension).",
  "GL_TEXTURE_COMPARE_MODE_EXT": "Specifies the comparison mode for texture (EXT extension).",
  "GL_TEXTURE_COMPARE_FUNC": "Specifies the comparison function for texture.",
  "GL_TEXTURE_COMPARE_FUNC_ARB": "Specifies the comparison function for texture (ARB extension).",
  "GL_TEXTURE_COMPARE_FUNC_EXT": "Specifies the comparison function for texture (EXT extension).",
  "GL_COMPARE_R_TO_TEXTURE": "Specifies comparison of R component to texture.",
  "GL_COMPARE_R_TO_TEXTURE_ARB": "Specifies comparison of R component to texture (ARB extension).",
  "GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT": "Specifies comparison of reference depth to texture (EXT extension).",
  "GL_COMPARE_REF_TO_TEXTURE": "Specifies comparison of reference to texture.",
  "GL_COMPARE_REF_TO_TEXTURE_EXT": "Specifies comparison of reference to texture (EXT extension).",
  "GL_TEXTURE_CUBE_MAP_SEAMLESS": "Enables seamless texture cube mapping.",
  "GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV": "Specifies offset projective texture for 2D (NV extension).",
  "GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV": "Specifies scale for offset projective texture for 2D (NV extension).",
  "GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV": "Specifies offset projective texture for rectangle (NV extension).",
  "GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV": "Specifies scale for offset projective texture for rectangle (NV extension).",
  "GL_OFFSET_HILO_TEXTURE_2D_NV": "Specifies HILO offset texture for 2D (NV extension).",
  "GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV": "Specifies HILO offset texture for rectangle (NV extension).",
  "GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV": "Specifies HILO projective texture for 2D (NV extension).",
  "GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV": "Specifies HILO projective texture for rectangle (NV extension).",
  "GL_DEPENDENT_HILO_TEXTURE_2D_NV": "Specifies dependent HILO texture for 2D (NV extension).",
  "GL_DEPENDENT_RGB_TEXTURE_3D_NV": "Specifies dependent RGB texture for 3D (NV extension).",
  "GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV": "Specifies dependent RGB texture for cube map (NV extension).",
  "GL_DOT_PRODUCT_PASS_THROUGH_NV": "Specifies dot product pass-through (NV extension).",
  "GL_DOT_PRODUCT_TEXTURE_1D_NV": "Specifies dot product texture for 1D (NV extension).",
  "GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV": "Specifies dot product affine depth replace (NV extension).",
  "GL_HILO8_NV": "Specifies 8-bit HILO texture (NV extension).",
  "GL_SIGNED_HILO8_NV": "Specifies signed 8-bit HILO texture (NV extension).",
  "GL_FORCE_BLUE_TO_ONE_NV": "Forces the blue component to one (NV extension).",
  "GL_POINT_SPRITE": "Enables point sprite rendering.",
  "GL_POINT_SPRITE_ARB": "Enables point sprite rendering (ARB extension).",
  "GL_POINT_SPRITE_NV": "Enables point sprite rendering (NV extension).",
  "GL_POINT_SPRITE_OES": "Enables point sprite rendering (OES extension).",
  "GL_COORD_REPLACE": "Enables coordinate replacement.",
  "GL_COORD_REPLACE_ARB": "Enables coordinate replacement (ARB extension).",
  "GL_COORD_REPLACE_NV": "Enables coordinate replacement (NV extension).",
  "GL_COORD_REPLACE_OES": "Enables coordinate replacement (OES extension).",
  "GL_POINT_SPRITE_R_MODE_NV": "Specifies the rendering mode for point sprites (NV extension).",
  "GL_PIXEL_COUNTER_BITS_NV": "Specifies pixel counter bits (NV extension).",
  "GL_QUERY_COUNTER_BITS": "Specifies the number of bits in query counters.",
  "GL_QUERY_COUNTER_BITS_ARB": "Specifies the number of bits in query counters (ARB extension).",
  "GL_QUERY_COUNTER_BITS_EXT": "Specifies the number of bits in query counters (EXT extension).",
  "GL_CURRENT_OCCLUSION_QUERY_ID_NV": "Specifies the current occlusion query ID (NV extension).",
  "GL_CURRENT_QUERY": "Specifies the current query.",
  "GL_CURRENT_QUERY_ARB": "Specifies the current query (ARB extension).",
  "GL_CURRENT_QUERY_EXT": "Specifies the current query (EXT extension).",
  "GL_PIXEL_COUNT_NV": "Specifies the pixel count (NV extension).",
  "GL_QUERY_RESULT": "Specifies the result of the query.",
  "GL_QUERY_RESULT_ARB": "Specifies the result of the query (ARB extension).",
  "GL_QUERY_RESULT_EXT": "Specifies the result of the query (EXT extension).",
  "GL_PIXEL_COUNT_AVAILABLE_NV": "Specifies if pixel counts are available (NV extension).",
  "GL_QUERY_RESULT_AVAILABLE": "Specifies if the query result is available.",
  "GL_QUERY_RESULT_AVAILABLE_ARB": "Specifies if the query result is available (ARB extension).",
  "GL_QUERY_RESULT_AVAILABLE_EXT": "Specifies if the query result is available (EXT extension).",
  "GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV": "Specifies the maximum number of local parameters in fragment programs (NV extension).",
  "GL_MAX_VERTEX_ATTRIBS": "Specifies the maximum number of vertex attributes.",
  "GL_MAX_VERTEX_ATTRIBS_ARB": "Specifies the maximum number of vertex attributes (ARB extension).",
  "GL_VERTEX_ATTRIB_ARRAY_NORMALIZED": "Specifies whether vertex attributes are normalized.",
  "GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB": "Specifies whether vertex attributes are normalized (ARB extension).",
  "GL_MAX_TESS_CONTROL_INPUT_COMPONENTS": "Specifies the maximum number of input components for tessellation control shaders.",
  "GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_EXT": "Specifies the maximum number of input components for tessellation control shaders (EXT extension).",
  "GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_OES": "Specifies the maximum number of input components for tessellation control shaders (OES extension).",
  "GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS": "Specifies the maximum number of input components for tessellation evaluation shaders.",
  "GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_EXT": "Specifies the maximum number of input components for tessellation evaluation shaders (EXT extension).",
  "GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_OES": "Specifies the maximum number of input components for tessellation evaluation shaders (OES extension).",
  "GL_DEPTH_STENCIL_TO_RGBA_NV": "Specifies the conversion from depth-stencil to RGBA (NV extension).",
  "GL_DEPTH_STENCIL_TO_BGRA_NV": "Specifies the conversion from depth-stencil to BGRA (NV extension).",
  "GL_FRAGMENT_PROGRAM_NV": "Specifies a fragment program (NV extension).",
  "GL_MAX_TEXTURE_COORDS": "Specifies the maximum number of texture coordinate sets.",
  "GL_MAX_TEXTURE_COORDS_ARB": "Specifies the maximum number of texture coordinate sets (ARB extension).",
  "GL_MAX_TEXTURE_COORDS_NV": "Specifies the maximum number of texture coordinate sets (NV extension).",
  "GL_MAX_TEXTURE_IMAGE_UNITS": "Specifies the maximum number of texture image units.",
  "GL_MAX_TEXTURE_IMAGE_UNITS_ARB": "Specifies the maximum number of texture image units (ARB extension).",
  "GL_MAX_TEXTURE_IMAGE_UNITS_NV": "Specifies the maximum number of texture image units (NV extension).",
  "GL_FRAGMENT_PROGRAM_BINDING_NV": "Specifies the binding of fragment programs (NV extension).",
  "GL_PROGRAM_ERROR_STRING_ARB": "Specifies the error string for programs (ARB extension).",
  "GL_PROGRAM_ERROR_STRING_NV": "Specifies the error string for programs (NV extension).",
  "GL_PROGRAM_FORMAT_ASCII_ARB": "Specifies the program format in ASCII (ARB extension).",
  "GL_PROGRAM_FORMAT_ARB": "Specifies the program format (ARB extension).",
  "GL_WRITE_PIXEL_DATA_RANGE_NV": "Specifies the range for writing pixel data (NV extension).",
  "GL_READ_PIXEL_DATA_RANGE_NV": "Specifies the range for reading pixel data (NV extension).",
  "GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV": "Specifies the length of the pixel data range for writing (NV extension).",
  "GL_READ_PIXEL_DATA_RANGE_LENGTH_NV": "Specifies the length of the pixel data range for reading (NV extension).",
  "GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV": "Specifies the pointer for writing pixel data (NV extension).",
  "GL_READ_PIXEL_DATA_RANGE_POINTER_NV": "Specifies the pointer for reading pixel data (NV extension).",
  "GL_GEOMETRY_SHADER_INVOCATIONS": "Specifies the number of invocations of the geometry shader.",
  "GL_GEOMETRY_SHADER_INVOCATIONS_EXT": "Specifies the number of invocations of the geometry shader (EXT extension).",
  "GL_GEOMETRY_SHADER_INVOCATIONS_OES": "Specifies the number of invocations of the geometry shader (OES extension).",
  "GL_FLOAT_R_NV": "Specifies a single-channel float format (NV extension).",
  "GL_FLOAT_RG_NV": "Specifies a two-channel float format (NV extension).",
  "GL_FLOAT_RGB_NV": "Specifies a three-channel float format (NV extension).",
  "GL_FLOAT_RGBA_NV": "Specifies a four-channel float format (NV extension).",
  "GL_FLOAT_R16_NV": "Specifies a 16-bit single-channel float format (NV extension).",
  "GL_FLOAT_R32_NV": "Specifies a 32-bit single-channel float format (NV extension).",
  "GL_FLOAT_RG16_NV": "Specifies a 16-bit two-channel float format (NV extension).",
  "GL_FLOAT_RG32_NV": "Specifies a 32-bit two-channel float format (NV extension).",
  "GL_FLOAT_RGB16_NV": "Specifies a 16-bit three-channel float format (NV extension).",
  "GL_FLOAT_RGB32_NV": "Specifies a 32-bit three-channel float format (NV extension).",
  "GL_FLOAT_RGBA16_NV": "Specifies a 16-bit four-channel float format (NV extension).",
  "GL_FLOAT_RGBA32_NV": "Specifies a 32-bit four-channel float format (NV extension).",
  "GL_TEXTURE_FLOAT_COMPONENTS_NV": "Specifies that texture components are float (NV extension).",
  "GL_FLOAT_CLEAR_COLOR_VALUE_NV": "Specifies the clear color value in float (NV extension).",
  "GL_FLOAT_RGBA_MODE_NV": "Specifies that RGBA mode is float (NV extension).",
  "GL_TEXTURE_UNSIGNED_REMAP_MODE_NV": "Specifies unsigned remapping mode for texture (NV extension).",
  "GL_DEPTH_BOUNDS_TEST_EXT": "Specifies depth bounds testing (EXT extension).",
  "GL_DEPTH_BOUNDS_EXT": "Specifies the depth bounds (EXT extension).",
  "GL_ARRAY_BUFFER": "Specifies an array buffer.",
  "GL_ARRAY_BUFFER_ARB": "Specifies an array buffer (ARB extension).",
  "GL_ELEMENT_ARRAY_BUFFER": "Specifies an element array buffer.",
  "GL_ELEMENT_ARRAY_BUFFER_ARB": "Specifies an element array buffer (ARB extension).",
  "GL_ARRAY_BUFFER_BINDING": "Specifies the binding point for the array buffer.",
  "GL_ARRAY_BUFFER_BINDING_ARB": "Specifies the binding point for the array buffer (ARB extension).",
  "GL_ELEMENT_ARRAY_BUFFER_BINDING": "Specifies the binding point for the element array buffer.",
  "GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB": "Specifies the binding point for the element array buffer (ARB extension).",
  "GL_VERTEX_ARRAY_BUFFER_BINDING": "Specifies the binding point for the vertex array buffer.",
  "GL_VERTEX_ARRAY_BUFFER_BINDING_ARB": "Specifies the binding point for the vertex array buffer (ARB extension).",
  "GL_NORMAL_ARRAY_BUFFER_BINDING": "Specifies the binding point for the normal array buffer.",
  "GL_NORMAL_ARRAY_BUFFER_BINDING_ARB": "Specifies the binding point for the normal array buffer (ARB extension).",
  "GL_COLOR_ARRAY_BUFFER_BINDING": "Specifies the binding point for the color array buffer.",
  "GL_COLOR_ARRAY_BUFFER_BINDING_ARB": "Specifies the binding point for the color array buffer (ARB extension).",
  "GL_INDEX_ARRAY_BUFFER_BINDING": "Specifies the binding point for the index array buffer.",
  "GL_INDEX_ARRAY_BUFFER_BINDING_ARB": "Specifies the binding point for the index array buffer (ARB extension).",
  "GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING": "Specifies the binding point for the texture coordinate array buffer.",
  "GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB": "Specifies the binding point for the texture coordinate array buffer (ARB extension).",
  "GL_EDGE_FLAG_ARRAY_BUFFER_BINDING": "Specifies the binding point for the edge flag array buffer.",
  "GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB": "Specifies the binding point for the edge flag array buffer (ARB extension).",
  "GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING": "Specifies the binding point for the secondary color array buffer.",
  "GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB": "Specifies the binding point for the secondary color array buffer (ARB extension).",
  "GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB": "Specifies the binding point for the fog coordinate array buffer (ARB extension).",
  "GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING": "Specifies the binding point for the fog coordinate array buffer.",
  "GL_FOG_COORD_ARRAY_BUFFER_BINDING": "Specifies the binding point for the fog coordinate array buffer.",
  "GL_WEIGHT_ARRAY_BUFFER_BINDING": "Specifies the binding point for the weight array buffer.",
  "GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB": "Specifies the binding point for the weight array buffer (ARB extension).",
  "GL_WEIGHT_ARRAY_BUFFER_BINDING_OES": "Specifies the binding point for the weight array buffer (OES extension).",
  "GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING": "Specifies the binding point for the vertex attrib array buffer.",
  "GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB": "Specifies the binding point for the vertex attrib array buffer (ARB extension).",
  "GL_PROGRAM_INSTRUCTIONS_ARB": "Specifies the number of program instructions (ARB extension).",
  "GL_MAX_PROGRAM_INSTRUCTIONS_ARB": "Specifies the maximum number of program instructions (ARB extension).",
  "GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB": "Specifies the number of native program instructions (ARB extension).",
  "GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB": "Specifies the maximum number of native program instructions (ARB extension).",
  "GL_PROGRAM_TEMPORARIES_ARB": "Specifies the number of temporary variables in programs (ARB extension).",
  "GL_MAX_PROGRAM_TEMPORARIES_ARB": "Specifies the maximum number of temporary variables in programs (ARB extension).",
  "GL_PROGRAM_NATIVE_TEMPORARIES_ARB": "Specifies the number of native temporary variables in programs (ARB extension).",
  "GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB": "Specifies the maximum number of native temporary variables in programs (ARB extension).",
  "GL_PROGRAM_PARAMETERS_ARB": "Specifies the number of parameters in programs (ARB extension).",
  "GL_MAX_PROGRAM_PARAMETERS_ARB": "Specifies the maximum number of parameters in programs (ARB extension).",
  "GL_PROGRAM_NATIVE_PARAMETERS_ARB": "Specifies the number of native parameters in programs (ARB extension).",
  "GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB": "Specifies the maximum number of native parameters in ARB programs.",
  "GL_PROGRAM_ATTRIBS_ARB": "Specifies the attributes of a program (ARB extension).",
  "GL_MAX_PROGRAM_ATTRIBS_ARB": "Specifies the maximum number of attributes in ARB programs.",
  "GL_PROGRAM_NATIVE_ATTRIBS_ARB": "Specifies the native attributes of a program (ARB extension).",
  "GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB": "Specifies the maximum number of native attributes in ARB programs.",
  "GL_PROGRAM_ADDRESS_REGISTERS_ARB": "Specifies the address registers for programs (ARB extension).",
  "GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB": "Specifies the maximum number of address registers in ARB programs.",
  "GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB": "Specifies the native address registers for programs (ARB extension).",
  "GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB": "Specifies the maximum number of native address registers in ARB programs.",
  "GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB": "Specifies the maximum number of local parameters in ARB programs.",
  "GL_MAX_PROGRAM_ENV_PARAMETERS_ARB": "Specifies the maximum number of environment parameters in ARB programs.",
  "GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB": "Indicates if the program operates under native limits (ARB extension).",
  "GL_TRANSPOSE_CURRENT_MATRIX_ARB": "Specifies if the current matrix is transposed (ARB extension).",
  "GL_READ_ONLY": "Specifies read-only access to a buffer.",
  "GL_READ_ONLY_ARB": "Specifies read-only access (ARB extension).",
  "GL_WRITE_ONLY": "Specifies write-only access to a buffer.",
  "GL_WRITE_ONLY_ARB": "Specifies write-only access (ARB extension).",
  "GL_WRITE_ONLY_OES": "Specifies write-only access (OES extension).",
  "GL_READ_WRITE": "Specifies read/write access to a buffer.",
  "GL_READ_WRITE_ARB": "Specifies read/write access (ARB extension).",
  "GL_BUFFER_ACCESS": "Specifies the access type for buffer objects.",
  "GL_BUFFER_ACCESS_ARB": "Specifies the access type for buffer objects (ARB extension).",
  "GL_BUFFER_ACCESS_OES": "Specifies the access type for buffer objects (OES extension).",
  "GL_BUFFER_MAPPED": "Specifies if a buffer is mapped.",
  "GL_BUFFER_MAPPED_ARB": "Specifies if a buffer is mapped (ARB extension).",
  "GL_BUFFER_MAPPED_OES": "Specifies if a buffer is mapped (OES extension).",
  "GL_BUFFER_MAP_POINTER": "Specifies a pointer to a mapped buffer.",
  "GL_BUFFER_MAP_POINTER_ARB": "Specifies a pointer to a mapped buffer (ARB extension).",
  "GL_BUFFER_MAP_POINTER_OES": "Specifies a pointer to a mapped buffer (OES extension).",
  "GL_WRITE_DISCARD_NV": "Specifies the discard behavior for writing to a buffer (NV extension).",
  "GL_TIME_ELAPSED": "Specifies the elapsed time since a specific event.",
  "GL_TIME_ELAPSED_EXT": "Specifies the elapsed time (EXT extension).",
  "GL_MATRIX0_ARB": "Specifies the first matrix (ARB extension).",
  "GL_MATRIX1_ARB": "Specifies the second matrix (ARB extension).",
  "GL_MATRIX2_ARB": "Specifies the third matrix (ARB extension).",
  "GL_MATRIX3_ARB": "Specifies the fourth matrix (ARB extension).",
  "GL_MATRIX4_ARB": "Specifies the fifth matrix (ARB extension).",
  "GL_MATRIX5_ARB": "Specifies the sixth matrix (ARB extension).",
  "GL_MATRIX6_ARB": "Specifies the seventh matrix (ARB extension).",
  "GL_MATRIX7_ARB": "Specifies the eighth matrix (ARB extension).",
  "GL_MATRIX8_ARB": "Specifies the ninth matrix (ARB extension).",
  "GL_MATRIX9_ARB": "Specifies the tenth matrix (ARB extension).",
  "GL_MATRIX10_ARB": "Specifies the eleventh matrix (ARB extension).",
  "GL_MATRIX11_ARB": "Specifies the twelfth matrix (ARB extension).",
  "GL_MATRIX12_ARB": "Specifies the thirteenth matrix (ARB extension).",
  "GL_MATRIX13_ARB": "Specifies the fourteenth matrix (ARB extension).",
  "GL_MATRIX14_ARB": "Specifies the fifteenth matrix (ARB extension).",
  "GL_MATRIX15_ARB": "Specifies the sixteenth matrix (ARB extension).",
  "GL_MATRIX16_ARB": "Specifies the seventeenth matrix (ARB extension).",
  "GL_MATRIX17_ARB": "Specifies the eighteenth matrix (ARB extension).",
  "GL_MATRIX18_ARB": "Specifies the nineteenth matrix (ARB extension).",
  "GL_MATRIX19_ARB": "Specifies the twentieth matrix (ARB extension).",
  "GL_MATRIX20_ARB": "Specifies the twenty-first matrix (ARB extension).",
  "GL_MATRIX21_ARB": "Specifies the twenty-second matrix (ARB extension).",
  "GL_MATRIX22_ARB": "Specifies the twenty-third matrix (ARB extension).",
  "GL_MATRIX23_ARB": "Specifies the twenty-fourth matrix (ARB extension).",
  "GL_MATRIX24_ARB": "Specifies the twenty-fifth matrix (ARB extension).",
  "GL_MATRIX25_ARB": "Specifies the twenty-sixth matrix (ARB extension).",
  "GL_MATRIX26_ARB": "Specifies the twenty-seventh matrix (ARB extension).",
  "GL_MATRIX27_ARB": "Specifies the twenty-eighth matrix (ARB extension).",
  "GL_MATRIX28_ARB": "Specifies the twenty-ninth matrix (ARB extension).",
  "GL_MATRIX29_ARB": "Specifies the thirtieth matrix (ARB extension).",
  "GL_MATRIX30_ARB": "Specifies the thirty-first matrix (ARB extension).",
  "GL_MATRIX31_ARB": "Specifies the thirty-second matrix (ARB extension).",
  "GL_STREAM_DRAW": "Specifies a hint that data will be set frequently and used for drawing.",
  "GL_STREAM_DRAW_ARB": "Specifies a hint that data will be set frequently (ARB extension).",
  "GL_STREAM_READ": "Specifies a hint that data will be read frequently.",
  "GL_STREAM_READ_ARB": "Specifies a hint that data will be read frequently (ARB extension).",
  "GL_STREAM_COPY": "Specifies a hint that data will be copied frequently.",
  "GL_STREAM_COPY_ARB": "Specifies a hint that data will be copied frequently (ARB extension).",
  "GL_STATIC_DRAW": "Specifies a hint that data will be set once and used for drawing.",
  "GL_STATIC_DRAW_ARB": "Specifies a hint that data will be set once (ARB extension).",
  "GL_STATIC_READ": "Specifies a hint that data will be read once.",
  "GL_STATIC_READ_ARB": "Specifies a hint that data will be read once (ARB extension).",
  "GL_STATIC_COPY": "Specifies a hint that data will be copied once.",
  "GL_STATIC_COPY_ARB": "Specifies a hint that data will be copied once (ARB extension).",
  "GL_DYNAMIC_DRAW": "Specifies a hint that data will be changed frequently and used for drawing.",
  "GL_DYNAMIC_DRAW_ARB": "Specifies a hint that data will be changed frequently (ARB extension).",
  "GL_DYNAMIC_READ": "Specifies a hint that data will be read frequently.",
  "GL_DYNAMIC_READ_ARB": "Specifies a hint that data will be read frequently (ARB extension).",
  "GL_DYNAMIC_COPY": "Specifies a hint that data will be copied frequently.",
  "GL_DYNAMIC_COPY_ARB": "Specifies a hint that data will be copied frequently (ARB extension).",
  "GL_PIXEL_PACK_BUFFER": "Specifies a buffer for pixel packing.",
  "GL_PIXEL_PACK_BUFFER_ARB": "Specifies a buffer for pixel packing (ARB extension).",
  "GL_PIXEL_PACK_BUFFER_EXT": "Specifies a buffer for pixel packing (EXT extension).",
  "GL_PIXEL_PACK_BUFFER_NV": "Specifies a buffer for pixel packing (NV extension).",
  "GL_PIXEL_UNPACK_BUFFER": "Specifies a buffer for pixel unpacking.",
  "GL_PIXEL_UNPACK_BUFFER_ARB": "Specifies a buffer for pixel unpacking (ARB extension).",
  "GL_PIXEL_UNPACK_BUFFER_EXT": "Specifies a buffer for pixel unpacking (EXT extension).",
  "GL_PIXEL_UNPACK_BUFFER_NV": "Specifies a buffer for pixel unpacking (NV extension).",
  "GL_PIXEL_PACK_BUFFER_BINDING": "Specifies the binding point for the pixel pack buffer.",
  "GL_PIXEL_PACK_BUFFER_BINDING_ARB": "Specifies the binding point for the pixel pack buffer (ARB extension).",
  "GL_PIXEL_PACK_BUFFER_BINDING_EXT": "Specifies the binding point for the pixel pack buffer (EXT extension).",
  "GL_PIXEL_PACK_BUFFER_BINDING_NV": "Specifies the binding point for the pixel pack buffer (NV extension).",
  "GL_ETC1_SRGB8_NV": "Specifies a compressed texture format (NV extension).",
  "GL_PIXEL_UNPACK_BUFFER_BINDING": "Specifies the binding point for the pixel unpack buffer.",
  "GL_PIXEL_UNPACK_BUFFER_BINDING_ARB": "Specifies the binding point for the pixel unpack buffer (ARB extension).",
  "GL_PIXEL_UNPACK_BUFFER_BINDING_EXT": "Specifies the binding point for the pixel unpack buffer (EXT extension).",
  "GL_PIXEL_UNPACK_BUFFER_BINDING_NV": "Specifies the binding point for the pixel unpack buffer (NV extension).",
  "GL_DEPTH24_STENCIL8": "Specifies a combined depth and stencil format.",
  "GL_DEPTH24_STENCIL8_EXT": "Specifies a combined depth and stencil format for EXT extensions.",
  "GL_DEPTH24_STENCIL8_OES": "Specifies a combined depth and stencil format for OES extensions.",
  "GL_TEXTURE_STENCIL_SIZE": "Specifies the stencil size for a texture.",
  "GL_TEXTURE_STENCIL_SIZE_EXT": "Specifies the stencil size for a texture (EXT extension).",
  "GL_STENCIL_TAG_BITS_EXT": "Specifies the number of bits used for stencil tags (EXT extension).",
  "GL_STENCIL_CLEAR_TAG_VALUE_EXT": "Specifies the clear value for stencil tags (EXT extension).",
  "GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV": "Specifies the maximum number of executable instructions in a program (NV extension).",
  "GL_MAX_PROGRAM_CALL_DEPTH_NV": "Specifies the maximum depth of calls in a program (NV extension).",
  "GL_MAX_PROGRAM_IF_DEPTH_NV": "Specifies the maximum depth of if statements in a program (NV extension).",
  "GL_MAX_PROGRAM_LOOP_DEPTH_NV": "Specifies the maximum loop depth in a program (NV extension).",
  "GL_MAX_PROGRAM_LOOP_COUNT_NV": "Specifies the maximum number of iterations in a loop in a program (NV extension).",
  "GL_SRC1_COLOR": "Specifies the second source color for blending.",
  "GL_SRC1_COLOR_EXT": "Specifies the second source color for blending (EXT extension).",
  "GL_ONE_MINUS_SRC1_COLOR": "Specifies the one minus second source color for blending.",
  "GL_ONE_MINUS_SRC1_COLOR_EXT": "Specifies the one minus second source color for blending (EXT extension).",
  "GL_ONE_MINUS_SRC1_ALPHA": "Specifies the one minus second source alpha for blending.",
  "GL_ONE_MINUS_SRC1_ALPHA_EXT": "Specifies the one minus second source alpha for blending (EXT extension).",
  "GL_MAX_DUAL_SOURCE_DRAW_BUFFERS": "Specifies the maximum number of dual source draw buffers.",
  "GL_MAX_DUAL_SOURCE_DRAW_BUFFERS_EXT": "Specifies the maximum number of dual source draw buffers (EXT extension).",
  "GL_VERTEX_ATTRIB_ARRAY_INTEGER": "Specifies if the vertex attribute array contains integer data.",
  "GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT": "Specifies if the vertex attribute array contains integer data (EXT extension).",
  "GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV": "Specifies if the vertex attribute array contains integer data (NV extension).",
  "GL_VERTEX_ATTRIB_ARRAY_DIVISOR": "Specifies the divisor for a vertex attribute array.",
  "GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE": "Specifies the divisor for a vertex attribute array (ANGLE extension).",
  "GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB": "Specifies the divisor for a vertex attribute array (ARB extension).",
  "GL_VERTEX_ATTRIB_ARRAY_DIVISOR_EXT": "Specifies the divisor for a vertex attribute array (EXT extension).",
  "GL_VERTEX_ATTRIB_ARRAY_DIVISOR_NV": "Specifies the divisor for a vertex attribute array (NV extension).",
  "GL_MAX_ARRAY_TEXTURE_LAYERS": "Specifies the maximum number of texture layers for array textures.",
  "GL_MAX_ARRAY_TEXTURE_LAYERS_EXT": "Specifies the maximum number of texture layers for array textures (EXT extension).",
  "GL_MIN_PROGRAM_TEXEL_OFFSET": "Specifies the minimum texture coordinate offset for programs.",
  "GL_MIN_PROGRAM_TEXEL_OFFSET_EXT": "Specifies the minimum texture coordinate offset for programs (EXT extension).",
  "GL_MIN_PROGRAM_TEXEL_OFFSET_NV": "Specifies the minimum texture coordinate offset for programs (NV extension).",
  "GL_MAX_PROGRAM_TEXEL_OFFSET": "Specifies the maximum texture coordinate offset for programs.",
  "GL_MAX_PROGRAM_TEXEL_OFFSET_EXT": "Specifies the maximum texture coordinate offset for programs (EXT extension).",
  "GL_MAX_PROGRAM_TEXEL_OFFSET_NV": "Specifies the maximum texture coordinate offset for programs (NV extension).",
  "GL_PROGRAM_ATTRIB_COMPONENTS_NV": "Specifies the number of components for program attributes (NV extension).",
  "GL_PROGRAM_RESULT_COMPONENTS_NV": "Specifies the number of components for program results (NV extension).",
  "GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV": "Specifies the maximum number of components for program attributes (NV extension).",
  "GL_MAX_PROGRAM_RESULT_COMPONENTS_NV": "Specifies the maximum number of components for program results (NV extension).",
  "GL_STENCIL_TEST_TWO_SIDE_EXT": "Specifies if two-sided stencil tests are enabled (EXT extension).",
  "GL_ACTIVE_STENCIL_FACE_EXT": "Specifies the active stencil face (EXT extension).",
  "GL_MIRROR_CLAMP_TO_BORDER_EXT": "Specifies mirror clamping to the border (EXT extension).",
  "GL_SAMPLES_PASSED": "Specifies the number of samples passed in an occlusion query.",
  "GL_SAMPLES_PASSED_ARB": "Specifies the number of samples passed in an occlusion query (ARB extension).",
  "GL_GEOMETRY_VERTICES_OUT": "Specifies the output vertices of a geometry shader.",
  "GL_GEOMETRY_LINKED_VERTICES_OUT_EXT": "Specifies linked output vertices (EXT extension).",
  "GL_GEOMETRY_LINKED_VERTICES_OUT_OES": "Specifies linked output vertices (OES extension).",
  "GL_GEOMETRY_INPUT_TYPE": "Specifies the input type for a geometry shader.",
  "GL_GEOMETRY_LINKED_INPUT_TYPE_EXT": "Specifies linked input type (EXT extension).",
  "GL_GEOMETRY_LINKED_INPUT_TYPE_OES": "Specifies linked input type (OES extension).",
  "GL_GEOMETRY_OUTPUT_TYPE": "Specifies the output type for a geometry shader.",
  "GL_GEOMETRY_LINKED_OUTPUT_TYPE_EXT": "Specifies linked output type (EXT extension).",
  "GL_GEOMETRY_LINKED_OUTPUT_TYPE_OES": "Specifies linked output type (OES extension).",
  "GL_SAMPLER_BINDING": "Specifies the binding point for texture samplers.",
  "GL_CLAMP_VERTEX_COLOR": "Specifies clamping for vertex colors.",
  "GL_CLAMP_VERTEX_COLOR_ARB": "Specifies clamping for vertex colors (ARB extension).",
  "GL_CLAMP_FRAGMENT_COLOR": "Specifies clamping for fragment colors.",
  "GL_CLAMP_FRAGMENT_COLOR_ARB": "Specifies clamping for fragment colors (ARB extension).",
  "GL_CLAMP_READ_COLOR": "Specifies clamping for read colors.",
  "GL_CLAMP_READ_COLOR_ARB": "Specifies clamping for read colors (ARB extension).",
  "GL_FIXED_ONLY": "Specifies that a texture format only supports fixed-point formats.",
  "GL_FIXED_ONLY_ARB": "Specifies that a texture format only supports fixed-point formats (ARB extension).",
  "GL_TESS_CONTROL_PROGRAM_NV": "Specifies the tessellation control program (NV extension).",
  "GL_TESS_EVALUATION_PROGRAM_NV": "Specifies the tessellation evaluation program (NV extension).",
  "GL_FRAGMENT_SHADER_ATI": "Specifies a fragment shader (ATI extension).",
  "GL_REG_0_ATI": "Specifies the first register in ATI fragment shaders.",
  "GL_REG_1_ATI": "Specifies the second register in ATI fragment shaders.",
  "GL_REG_2_ATI": "Specifies the third register in ATI fragment shaders.",
  "GL_REG_3_ATI": "Specifies the fourth register in ATI fragment shaders.",
  "GL_REG_4_ATI": "Specifies the fifth register in ATI fragment shaders.",
  "GL_REG_5_ATI": "Specifies the sixth register in ATI fragment shaders.",
  "GL_REG_6_ATI": "Specifies the seventh register in ATI fragment shaders.",
  "GL_REG_7_ATI": "Specifies the eighth register in ATI fragment shaders.",
  "GL_REG_8_ATI": "Specifies the ninth register in ATI fragment shaders.",
  "GL_REG_9_ATI": "Specifies the tenth register in ATI fragment shaders.",
  "GL_REG_10_ATI": "Specifies the eleventh register in ATI fragment shaders.",
  "GL_REG_11_ATI": "Specifies the twelfth register in ATI fragment shaders.",
  "GL_REG_12_ATI": "Specifies the thirteenth register in ATI fragment shaders.",
  "GL_REG_13_ATI": "Specifies the fourteenth register in ATI fragment shaders.",
  "GL_REG_14_ATI": "Specifies the fifteenth register in ATI fragment shaders.",
  "GL_REG_15_ATI": "Specifies the sixteenth register in ATI fragment shaders.",
  "GL_REG_16_ATI": "Specifies the seventeenth register in ATI fragment shaders.",
  "GL_REG_17_ATI": "Specifies the eighteenth register in ATI fragment shaders.",
  "GL_REG_18_ATI": "Specifies the nineteenth register in ATI fragment shaders.",
  "GL_REG_19_ATI": "Specifies the twentieth register in ATI fragment shaders.",
  "GL_REG_20_ATI": "Specifies the twenty-first register in ATI fragment shaders.",
  "GL_REG_21_ATI": "Specifies the twenty-second register in ATI fragment shaders.",
  "GL_REG_22_ATI": "Specifies the twenty-third register in ATI fragment shaders.",
  "GL_REG_23_ATI": "Specifies the twenty-fourth register in ATI fragment shaders.",
  "GL_REG_24_ATI": "Specifies the twenty-fifth register in ATI fragment shaders.",
  "GL_REG_25_ATI": "Specifies the twenty-sixth register in ATI fragment shaders.",
  "GL_REG_26_ATI": "Specifies the twenty-seventh register in ATI fragment shaders.",
  "GL_REG_27_ATI": "Specifies the twenty-eighth register in ATI fragment shaders.",
  "GL_REG_28_ATI": "Specifies the twenty-ninth register in ATI fragment shaders.",
  "GL_REG_29_ATI": "Specifies the thirtieth register in ATI fragment shaders.",
  "GL_REG_30_ATI": "Specifies the thirty-first register in ATI fragment shaders.",
  "GL_REG_31_ATI": "Specifies the thirty-second register in ATI fragment shaders.",
  "GL_CON_0_ATI": "Specifies the first constant in ATI fragment shaders.",
  "GL_CON_1_ATI": "Specifies the second constant in ATI fragment shaders.",
  "GL_CON_2_ATI": "Specifies the third constant in ATI fragment shaders.",
  "GL_CON_3_ATI": "Specifies the fourth constant in ATI fragment shaders.",
  "GL_CON_4_ATI": "Specifies the fifth constant in ATI fragment shaders.",
  "GL_CON_5_ATI": "Specifies the sixth constant in ATI fragment shaders.",
  "GL_CON_6_ATI": "Specifies the seventh constant in ATI fragment shaders.",
  "GL_CON_7_ATI": "Specifies the eighth constant in ATI fragment shaders.",
  "GL_CON_8_ATI": "Specifies the ninth constant in ATI fragment shaders.",
  "GL_CON_9_ATI": "Specifies the tenth constant in ATI fragment shaders.",
  "GL_CON_10_ATI": "Specifies the eleventh constant in ATI fragment shaders.",
  "GL_CON_11_ATI": "Specifies the twelfth constant in ATI fragment shaders.",
  "GL_CON_12_ATI": "Specifies the thirteenth constant in ATI fragment shaders.",
  "GL_CON_13_ATI": "Specifies the fourteenth constant in ATI fragment shaders.",
  "GL_CON_14_ATI": "Specifies the fifteenth constant in ATI fragment shaders.",
  "GL_CON_15_ATI": "Specifies the sixteenth constant in ATI fragment shaders.",
  "GL_CON_16_ATI": "Specifies the seventeenth constant in ATI fragment shaders.",
  "GL_CON_17_ATI": "Specifies the eighteenth constant in ATI fragment shaders.",
  "GL_CON_18_ATI": "Specifies the nineteenth constant in ATI fragment shaders.",
  "GL_CON_19_ATI": "Specifies the twentieth constant in ATI fragment shaders.",
  "GL_CON_20_ATI": "Specifies the twenty-first constant in ATI fragment shaders.",
  "GL_CON_21_ATI": "Specifies the twenty-second constant in ATI fragment shaders.",
  "GL_CON_22_ATI": "Specifies the twenty-third constant in ATI fragment shaders.",
  "GL_CON_23_ATI": "Specifies the twenty-fourth constant in ATI fragment shaders.",
  "GL_CON_24_ATI": "Specifies the twenty-fifth constant in ATI fragment shaders.",
  "GL_CON_25_ATI": "Specifies the twenty-sixth constant in ATI fragment shaders.",
  "GL_CON_26_ATI": "Specifies the twenty-seventh constant in ATI fragment shaders.",
  "GL_CON_27_ATI": "Specifies the twenty-eighth constant in ATI fragment shaders.",
  "GL_CON_28_ATI": "Specifies the twenty-ninth constant in ATI fragment shaders.",
  "GL_CON_29_ATI": "Specifies the thirtieth constant in ATI fragment shaders.",
  "GL_CON_30_ATI": "Specifies the thirty-first constant in ATI fragment shaders.",
  "GL_CON_31_ATI": "Specifies the thirty-second constant in ATI fragment shaders.",
  "GL_MOV_ATI": "Specifies the move operation in ATI fragment shaders.",
  "GL_ADD_ATI": "Specifies the addition operation in ATI fragment shaders.",
  "GL_MUL_ATI": "Specifies the multiplication operation in ATI fragment shaders.",
  "GL_SUB_ATI": "Specifies the subtraction operation in ATI fragment shaders.",
  "GL_DOT3_ATI": "Specifies the dot product of three components in ATI fragment shaders.",
  "GL_DOT4_ATI": "Specifies the dot product of four components in ATI fragment shaders.",
  "GL_MAD_ATI": "Specifies the multiply-add operation in ATI fragment shaders.",
  "GL_LERP_ATI": "Specifies the linear interpolation operation in ATI fragment shaders.",
  "GL_CND_ATI": "Specifies the conditional operation in ATI fragment shaders.",
  "GL_CND0_ATI": "Specifies the first conditional operation in ATI fragment shaders.",
  "GL_DOT2_ADD_ATI": "Specifies the addition of a dot product of two components in ATI fragment shaders.",
  "GL_SECONDARY_INTERPOLATOR_ATI": "Specifies a secondary interpolator in ATI fragment shaders.",
  "GL_NUM_FRAGMENT_REGISTERS_ATI": "Specifies the number of fragment registers available in ATI fragment shaders.",
  "GL_NUM_FRAGMENT_CONSTANTS_ATI": "Specifies the number of fragment constants available in ATI fragment shaders.",
  "GL_NUM_PASSES_ATI": "Specifies the number of passes in ATI fragment shaders.",
  "GL_NUM_INSTRUCTIONS_PER_PASS_ATI": "Specifies the number of instructions executed per pass in ATI fragment shaders.",
  "GL_NUM_INSTRUCTIONS_TOTAL_ATI": "Specifies the total number of instructions executed in ATI fragment shaders.",
  "GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI": "Specifies the number of input interpolator components in ATI fragment shaders.",
  "GL_NUM_LOOPBACK_COMPONENTS_ATI": "Specifies the number of loopback components in ATI fragment shaders.",
  "GL_COLOR_ALPHA_PAIRING_ATI": "Specifies the pairing of color and alpha in ATI fragment shaders.",
  "GL_SWIZZLE_STR_ATI": "Specifies the swizzle operation for STR channels in ATI fragment shaders.",
  "GL_SWIZZLE_STQ_ATI": "Specifies the swizzle operation for STQ channels in ATI fragment shaders.",
  "GL_SWIZZLE_STR_DR_ATI": "Specifies the swizzle operation for STR channels with destination register in ATI fragment shaders.",
  "GL_SWIZZLE_STQ_DQ_ATI": "Specifies the swizzle operation for STQ channels with destination queue in ATI fragment shaders.",
  "GL_SWIZZLE_STRQ_ATI": "Specifies the swizzle operation for STRQ channels in ATI fragment shaders.",
  "GL_SWIZZLE_STRQ_DQ_ATI": "Specifies the swizzle operation for STRQ channels with destination queue in ATI fragment shaders.",
  "GL_INTERLACE_OML": "Specifies interlacing for textures in OML extensions.",
  "GL_INTERLACE_READ_OML": "Specifies interlacing read behavior in OML extensions.",
  "GL_FORMAT_SUBSAMPLE_24_24_OML": "Specifies a subsampled format for textures in OML extensions.",
  "GL_FORMAT_SUBSAMPLE_244_244_OML": "Specifies a specific subsampling format in OML extensions.",
  "GL_PACK_RESAMPLE_OML": "Specifies packing for resampling textures in OML extensions.",
  "GL_UNPACK_RESAMPLE_OML": "Specifies unpacking for resampling textures in OML extensions.",
  "GL_RESAMPLE_REPLICATE_OML": "Specifies replicate resampling method in OML extensions.",
  "GL_RESAMPLE_ZERO_FILL_OML": "Specifies zero-fill resampling method in OML extensions.",
  "GL_RESAMPLE_AVERAGE_OML": "Specifies average resampling method in OML extensions.",
  "GL_RESAMPLE_DECIMATE_OML": "Specifies decimate resampling method in OML extensions.",
  "GL_POINT_SIZE_ARRAY_TYPE_OES": "Specifies the type of point size array (OES extension).",
  "GL_POINT_SIZE_ARRAY_STRIDE_OES": "Specifies the stride of point size array (OES extension).",
  "GL_POINT_SIZE_ARRAY_POINTER_OES": "Specifies the pointer for the point size array (OES extension).",
  "GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES": "Specifies the model view matrix format as integer bits (OES extension).",
  "GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES": "Specifies the projection matrix format as integer bits (OES extension).",
  "GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES": "Specifies the texture matrix format as integer bits (OES extension).",
  "GL_VERTEX_ATTRIB_MAP1_APPLE": "Specifies the first vertex attribute map (APPLE extension).",
  "GL_VERTEX_ATTRIB_MAP2_APPLE": "Specifies the second vertex attribute map (APPLE extension).",
  "GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE": "Specifies the size of the first vertex attribute map (APPLE extension).",
  "GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE": "Specifies the coefficients of the first vertex attribute map (APPLE extension).",
  "GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE": "Specifies the order of the first vertex attribute map (APPLE extension).",
  "GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE": "Specifies the domain of the first vertex attribute map (APPLE extension).",
  "GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE": "Specifies the size of the second vertex attribute map (APPLE extension).",
  "GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE": "Specifies the coefficients of the second vertex attribute map (APPLE extension).",
  "GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE": "Specifies the order of the second vertex attribute map (APPLE extension).",
  "GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE": "Specifies the domain of the second vertex attribute map (APPLE extension).",
  "GL_DRAW_PIXELS_APPLE": "Specifies the draw pixels operation (APPLE extension).",
  "GL_FENCE_APPLE": "Specifies a fence object (APPLE extension).",
  "GL_ELEMENT_ARRAY_APPLE": "Specifies an element array (APPLE extension).",
  "GL_ELEMENT_ARRAY_TYPE_APPLE": "Specifies the type of element array (APPLE extension).",
  "GL_ELEMENT_ARRAY_POINTER_APPLE": "Specifies the pointer to the element array (APPLE extension).",
  "GL_COLOR_FLOAT_APPLE": "Specifies floating-point color formats (APPLE extension).",
  "GL_UNIFORM_BUFFER": "Specifies a uniform buffer in OpenGL.",
  "GL_BUFFER_SERIALIZED_MODIFY_APPLE": "Specifies a serialized modification flag for buffers (APPLE extension).",
  "GL_BUFFER_FLUSHING_UNMAP_APPLE": "Specifies flushing and unmapping behavior for buffers (APPLE extension).",
  "GL_AUX_DEPTH_STENCIL_APPLE": "Specifies auxiliary depth/stencil buffers (APPLE extension).",
  "GL_PACK_ROW_BYTES_APPLE": "Specifies the number of bytes per row when packing data (APPLE extension).",
  "GL_UNPACK_ROW_BYTES_APPLE": "Specifies the number of bytes per row when unpacking data (APPLE extension).",
  "GL_RELEASED_APPLE": "Specifies released resources (APPLE extension).",
  "GL_VOLATILE_APPLE": "Specifies volatile resources (APPLE extension).",
  "GL_RETAINED_APPLE": "Specifies retained resources (APPLE extension).",
  "GL_UNDEFINED_APPLE": "Specifies undefined resources (APPLE extension).",
  "GL_PURGEABLE_APPLE": "Specifies purgeable resources (APPLE extension).",
  "GL_RGB_422_APPLE": "Specifies RGB 422 format (APPLE extension).",
  "GL_UNIFORM_BUFFER_BINDING": "Specifies the binding point for uniform buffers in OpenGL.",
  "GL_UNIFORM_BUFFER_START": "Specifies the start of a uniform buffer in OpenGL.",
  "GL_UNIFORM_BUFFER_SIZE": "Specifies the size of a uniform buffer in OpenGL.",
  "GL_MAX_VERTEX_UNIFORM_BLOCKS": "Specifies the maximum number of vertex uniform blocks supported.",
  "GL_MAX_GEOMETRY_UNIFORM_BLOCKS": "Specifies the maximum number of geometry uniform blocks supported.",
  "GL_MAX_GEOMETRY_UNIFORM_BLOCKS_EXT": "Specifies the maximum number of geometry uniform blocks supported (EXT extension).",
  "GL_MAX_GEOMETRY_UNIFORM_BLOCKS_OES": "Specifies the maximum number of geometry uniform blocks supported (OES extension).",
  "GL_MAX_FRAGMENT_UNIFORM_BLOCKS": "Specifies the maximum number of fragment uniform blocks supported.",
  "GL_MAX_COMBINED_UNIFORM_BLOCKS": "Specifies the maximum number of combined uniform blocks across all shader types.",
  "GL_MAX_UNIFORM_BUFFER_BINDINGS": "Specifies the maximum number of uniform buffer bindings.",
  "GL_MAX_UNIFORM_BLOCK_SIZE": "Specifies the maximum size of a single uniform block.",
  "GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS": "Specifies the maximum number of combined vertex uniform components.",
  "GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS": "Specifies the maximum number of combined geometry uniform components.",
  "GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_EXT": "Specifies the maximum number of combined geometry uniform components (EXT extension).",
  "GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_OES": "Specifies the maximum number of combined geometry uniform components (OES extension).",
  "GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS": "Specifies the maximum number of combined fragment uniform components.",
  "GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT": "Specifies the alignment requirements for uniform buffer offsets.",
  "GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH": "Specifies the maximum length of an active uniform block name.",
  "GL_ACTIVE_UNIFORM_BLOCKS": "Specifies the number of active uniform blocks.",
  "GL_UNIFORM_TYPE": "Specifies the type of a uniform variable.",
  "GL_UNIFORM_SIZE": "Specifies the size of a uniform variable.",
  "GL_UNIFORM_NAME_LENGTH": "Specifies the length of the name of a uniform variable.",
  "GL_UNIFORM_BLOCK_INDEX": "Specifies the index of a uniform block for a uniform variable.",
  "GL_UNIFORM_OFFSET": "Specifies the offset of a uniform variable within a uniform block.",
  "GL_UNIFORM_ARRAY_STRIDE": "Specifies the stride between consecutive elements of an array of uniform variables.",
  "GL_UNIFORM_MATRIX_STRIDE": "Specifies the stride between consecutive matrices in an array of uniform variables.",
  "GL_UNIFORM_IS_ROW_MAJOR": "Specifies whether a uniform matrix is stored in row-major order.",
  "GL_UNIFORM_BLOCK_BINDING": "Specifies the binding point for a uniform block.",
  "GL_UNIFORM_BLOCK_DATA_SIZE": "Specifies the data size of a uniform block.",
  "GL_UNIFORM_BLOCK_NAME_LENGTH": "Specifies the length of a uniform block name.",
  "GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS": "Specifies the number of active uniforms in a uniform block.",
  "GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES": "Specifies the indices of active uniforms in a uniform block.",
  "GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER": "Specifies whether a uniform block is referenced by the vertex shader.",
  "GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER": "Specifies whether a uniform block is referenced by the geometry shader.",
  "GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER": "Specifies whether a uniform block is referenced by the fragment shader.",
  "GL_TEXTURE_SRGB_DECODE_EXT": "Specifies the sRGB decode behavior for textures (EXT extension).",
  "GL_DECODE_EXT": "Specifies the decode behavior for textures (EXT extension).",
  "GL_SKIP_DECODE_EXT": "Specifies to skip the decode step for textures (EXT extension).",
  "GL_PROGRAM_PIPELINE_OBJECT_EXT": "Specifies a program pipeline object (EXT extension).",
  "GL_RGB_RAW_422_APPLE": "Specifies a raw RGB 422 format in the APPLE extension.",
  "GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT": "Specifies that the fragment shader can discard samples (EXT extension).",
  "GL_SYNC_OBJECT_APPLE": "Specifies a synchronization object in the APPLE extension.",
  "GL_COMPRESSED_SRGB_PVRTC_2BPPV1_EXT": "Specifies a compressed sRGB format with 2 bits per pixel in the PVRTC format.",
  "GL_COMPRESSED_SRGB_PVRTC_4BPPV1_EXT": "Specifies a compressed sRGB format with 4 bits per pixel in the PVRTC format.",
  "GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV1_EXT": "Specifies a compressed sRGB format with alpha and 2 bits per pixel in the PVRTC format.",
  "GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV1_EXT": "Specifies a compressed sRGB format with alpha and 4 bits per pixel in the PVRTC format.",
  "GL_FRAGMENT_SHADER": "Specifies a fragment shader object.",
  "GL_FRAGMENT_SHADER_ARB": "Specifies a fragment shader object (ARB extension).",
  "GL_VERTEX_SHADER": "Specifies a vertex shader object.",
  "GL_VERTEX_SHADER_ARB": "Specifies a vertex shader object (ARB extension).",
  "GL_PROGRAM_OBJECT_ARB": "Specifies a program object (ARB extension).",
  "GL_PROGRAM_OBJECT_EXT": "Specifies a program object (EXT extension).",
  "GL_SHADER_OBJECT_ARB": "Specifies a shader object (ARB extension).",
  "GL_SHADER_OBJECT_EXT": "Specifies a shader object (EXT extension).",
  "GL_MAX_FRAGMENT_UNIFORM_COMPONENTS": "Specifies the maximum number of fragment uniform components.",
  "GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB": "Specifies the maximum number of fragment uniform components (ARB extension).",
  "GL_MAX_VERTEX_UNIFORM_COMPONENTS": "Specifies the maximum number of vertex uniform components.",
  "GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB": "Specifies the maximum number of vertex uniform components (ARB extension).",
  "GL_MAX_VARYING_FLOATS": "Specifies the maximum number of varying float values.",
  "GL_MAX_VARYING_COMPONENTS": "Specifies the maximum number of varying components.",
  "GL_MAX_VARYING_COMPONENTS_EXT": "Specifies the maximum number of varying components (EXT extension).",
  "GL_MAX_VARYING_FLOATS_ARB": "Specifies the maximum number of varying float values (ARB extension).",
  "GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS": "Specifies the maximum number of vertex texture image units.",
  "GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB": "Specifies the maximum number of vertex texture image units (ARB extension).",
  "GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS": "Specifies the maximum number of combined texture image units.",
  "GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB": "Specifies the maximum number of combined texture image units (ARB extension).",
  "GL_OBJECT_TYPE_ARB": "Specifies the type of an object (ARB extension).",
  "GL_SHADER_TYPE": "Specifies the type of a shader object.",
  "GL_OBJECT_SUBTYPE_ARB": "Specifies the subtype of an object (ARB extension).",
  "GL_FLOAT_VEC2": "Specifies a 2-component vector of floating-point numbers.",
  "GL_FLOAT_VEC2_ARB": "Specifies a 2-component vector of floating-point numbers (ARB extension).",
  "GL_FLOAT_VEC3": "Specifies a 3-component vector of floating-point numbers.",
  "GL_FLOAT_VEC3_ARB": "Specifies a 3-component vector of floating-point numbers (ARB extension).",
  "GL_FLOAT_VEC4": "Specifies a 4-component vector of floating-point numbers.",
  "GL_FLOAT_VEC4_ARB": "Specifies a 4-component vector of floating-point numbers (ARB extension).",
  "GL_INT_VEC2": "Specifies a 2-component vector of integers.",
  "GL_INT_VEC2_ARB": "Specifies a 2-component vector of integers (ARB extension).",
  "GL_INT_VEC3": "Specifies a 3-component vector of integers.",
  "GL_INT_VEC3_ARB": "Specifies a 3-component vector of integers (ARB extension).",
  "GL_INT_VEC4": "Specifies a 4-component vector of integers.",
  "GL_INT_VEC4_ARB": "Specifies a 4-component vector of integers (ARB extension).",
  "GL_BOOL": "Specifies a boolean value.",
  "GL_BOOL_ARB": "Specifies a boolean value (ARB extension).",
  "GL_BOOL_VEC2": "Specifies a 2-component vector of boolean values.",
  "GL_BOOL_VEC2_ARB": "Specifies a 2-component vector of boolean values (ARB extension).",
  "GL_BOOL_VEC3": "Specifies a 3-component vector of boolean values.",
  "GL_BOOL_VEC3_ARB": "Specifies a 3-component vector of boolean values (ARB extension).",
  "GL_BOOL_VEC4": "Specifies a 4-component vector of boolean values.",
  "GL_BOOL_VEC4_ARB": "Specifies a 4-component vector of boolean values (ARB extension).",
  "GL_FLOAT_MAT2": "Specifies a 2x2 matrix of floating-point numbers.",
  "GL_FLOAT_MAT2_ARB": "Specifies a 2x2 matrix of floating-point numbers (ARB extension).",
  "GL_FLOAT_MAT3": "Specifies a 3x3 matrix of floating-point numbers.",
  "GL_FLOAT_MAT3_ARB": "Specifies a 3x3 matrix of floating-point numbers (ARB extension).",
  "GL_FLOAT_MAT4": "Specifies a 4x4 matrix of floating-point numbers.",
  "GL_FLOAT_MAT4_ARB": "Specifies a 4x4 matrix of floating-point numbers (ARB extension).",
  "GL_SAMPLER_1D": "Specifies a 1D sampler for textures.",
  "GL_SAMPLER_1D_ARB": "Specifies a 1D sampler for textures (ARB extension).",
  "GL_SAMPLER_2D": "Specifies a 2D sampler for textures.",
  "GL_SAMPLER_2D_ARB": "Specifies a 2D sampler for textures (ARB extension).",
  "GL_SAMPLER_3D": "Specifies a 3D sampler for textures.",
  "GL_SAMPLER_3D_ARB": "Specifies a 3D sampler for textures (ARB extension).",
  "GL_SAMPLER_3D_OES": "Specifies a 3D sampler for textures (OES extension).",
  "GL_SAMPLER_CUBE": "Specifies a cube map sampler for textures.",
  "GL_SAMPLER_CUBE_ARB": "Specifies a cube map sampler for textures (ARB extension).",
  "GL_SAMPLER_1D_SHADOW": "Specifies a 1D shadow sampler for textures.",
  "GL_SAMPLER_1D_SHADOW_ARB": "Specifies a 1D shadow sampler for textures (ARB extension).",
  "GL_SAMPLER_2D_SHADOW": "Specifies a 2D shadow sampler for textures.",
  "GL_SAMPLER_2D_SHADOW_ARB": "Specifies a 2D shadow sampler for textures (ARB extension).",
  "GL_SAMPLER_2D_SHADOW_EXT": "Specifies a 2D shadow sampler for textures (EXT extension).",
  "GL_SAMPLER_2D_RECT": "Specifies a rectangular 2D sampler for textures.",
  "GL_SAMPLER_2D_RECT_ARB": "Specifies a rectangular 2D sampler for textures (ARB extension).",
  "GL_SAMPLER_2D_RECT_SHADOW": "Specifies a shadow sampler for rectangular 2D textures.",
  "GL_SAMPLER_2D_RECT_SHADOW_ARB": "Specifies a shadow sampler for rectangular 2D textures (ARB extension).",
  "GL_FLOAT_MAT2x3": "Specifies a 2x3 matrix of floating-point numbers.",
  "GL_FLOAT_MAT2x3_NV": "Specifies a 2x3 matrix of floating-point numbers (NV extension).",
  "GL_FLOAT_MAT2x4": "Specifies a 2x4 matrix of floating-point numbers.",
  "GL_FLOAT_MAT2x4_NV": "Specifies a 2x4 matrix of floating-point numbers (NV extension).",
  "GL_FLOAT_MAT3x2": "Specifies a 3x2 matrix of floating-point numbers.",
  "GL_FLOAT_MAT3x2_NV": "Specifies a 3x2 matrix of floating-point numbers (NV extension).",
  "GL_FLOAT_MAT3x4": "Specifies a 3x4 matrix of floating-point numbers.",
  "GL_FLOAT_MAT3x4_NV": "Specifies a 3x4 matrix of floating-point numbers (NV extension).",
  "GL_FLOAT_MAT4x2": "Specifies a 4x2 matrix of floating-point numbers.",
  "GL_FLOAT_MAT4x2_NV": "Specifies a 4x2 matrix of floating-point numbers (NV extension).",
  "GL_FLOAT_MAT4x3": "Specifies a 4x3 matrix of floating-point numbers.",
  "GL_FLOAT_MAT4x3_NV": "Specifies a 4x3 matrix of floating-point numbers (NV extension).",
  "GL_DELETE_STATUS": "Specifies the delete status of an OpenGL object.",
  "GL_OBJECT_DELETE_STATUS_ARB": "Specifies the delete status of an OpenGL object (ARB extension).",
  "GL_COMPILE_STATUS": "Specifies the compile status of a shader object.",
  "GL_OBJECT_COMPILE_STATUS_ARB": "Specifies the compile status of a shader object (ARB extension).",
  "GL_LINK_STATUS": "Specifies the link status of a program object.",
  "GL_OBJECT_LINK_STATUS_ARB": "Specifies the link status of a program object (ARB extension).",
  "GL_VALIDATE_STATUS": "Specifies the validation status of a program object.",
  "GL_OBJECT_VALIDATE_STATUS_ARB": "Specifies the validation status of a program object (ARB extension).",
  "GL_INFO_LOG_LENGTH": "Specifies the length of the information log for a shader or program object.",
  "GL_OBJECT_INFO_LOG_LENGTH_ARB": "Specifies the length of the information log for a shader or program object (ARB extension).",
  "GL_ATTACHED_SHADERS": "Specifies the number of attached shaders to a program object.",
  "GL_OBJECT_ATTACHED_OBJECTS_ARB": "Specifies the number of attached objects (ARB extension).",
  "GL_ACTIVE_UNIFORMS": "Specifies the number of active uniform variables for a program object.",
  "GL_OBJECT_ACTIVE_UNIFORMS_ARB": "Specifies the number of active uniforms in a program object (ARB extension).",
  "GL_ACTIVE_UNIFORM_MAX_LENGTH": "Specifies the maximum length of an active uniform variable's name.",
  "GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB": "Specifies the maximum length of an active uniform variable's name (ARB extension).",
  "GL_SHADER_SOURCE_LENGTH": "Specifies the length of the source code for a shader object.",
  "GL_OBJECT_SHADER_SOURCE_LENGTH_ARB": "Specifies the length of the shader source code (ARB extension).",
  "GL_ACTIVE_ATTRIBUTES": "Specifies the number of active attribute variables for a program object.",
  "GL_OBJECT_ACTIVE_ATTRIBUTES_ARB": "Specifies the number of active attributes in a program object (ARB extension).",
  "GL_ACTIVE_ATTRIBUTE_MAX_LENGTH": "Specifies the maximum length of an active attribute variable's name.",
  "GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB": "Specifies the maximum length of an active attribute variable's name (ARB extension).",
  "GL_FRAGMENT_SHADER_DERIVATIVE_HINT": "Specifies the hint for fragment shader derivative calculations.",
  "GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB": "Specifies the hint for fragment shader derivative calculations (ARB extension).",
  "GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES": "Specifies the hint for fragment shader derivative calculations (OES extension).",
  "GL_SHADING_LANGUAGE_VERSION": "Specifies the version of the shading language used.",
  "GL_SHADING_LANGUAGE_VERSION_ARB": "Specifies the version of the shading language used (ARB extension).",
  "GL_CURRENT_PROGRAM": "Specifies the currently active program object.",
  "GL_ACTIVE_PROGRAM_EXT": "Specifies the active program object (EXT extension).",
  "GL_PALETTE4_RGB8_OES": "Specifies a 4-color RGB8 palette (OES extension).",
  "GL_PALETTE4_RGBA8_OES": "Specifies a 4-color RGBA8 palette (OES extension).",
  "GL_PALETTE4_R5_G6_B5_OES": "Specifies a 4-color R5G6B5 palette (OES extension).",
  "GL_PALETTE4_RGBA4_OES": "Specifies a 4-color RGBA4 palette (OES extension).",
  "GL_PALETTE4_RGB5_A1_OES": "Specifies a 4-color RGB5A1 palette (OES extension).",
  "GL_PALETTE8_RGB8_OES": "Specifies an 8-color RGB8 palette (OES extension).",
  "GL_PALETTE8_RGBA8_OES": "Specifies an 8-color RGBA8 palette (OES extension).",
  "GL_PALETTE8_R5_G6_B5_OES": "Specifies an 8-color R5G6B5 palette (OES extension).",
  "GL_PALETTE8_RGBA4_OES": "Specifies an 8-color RGBA4 palette (OES extension).",
  "GL_PALETTE8_RGB5_A1_OES": "Specifies an 8-color RGB5A1 palette (OES extension).",
  "GL_IMPLEMENTATION_COLOR_READ_TYPE": "Specifies the type for reading implementation colors.",
  "GL_IMPLEMENTATION_COLOR_READ_TYPE_OES": "Specifies the type for reading implementation colors (OES extension).",
  "GL_IMPLEMENTATION_COLOR_READ_FORMAT": "Specifies the format for reading implementation colors.",
  "GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES": "Specifies the format for reading implementation colors (OES extension).",
  "GL_POINT_SIZE_ARRAY_OES": "Specifies an array of point sizes (OES extension).",
  "GL_TEXTURE_CROP_RECT_OES": "Specifies a rectangular crop for textures (OES extension).",
  "GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES": "Specifies the buffer binding for matrix index arrays (OES extension).",
  "GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES": "Specifies the buffer binding for point size arrays (OES extension).",
  "GL_FRAGMENT_PROGRAM_POSITION_MESA": "Specifies the position in the fragment program in the MESA extension.",
  "GL_FRAGMENT_PROGRAM_CALLBACK_MESA": "Specifies the fragment program callback in the MESA extension.",
  "GL_FRAGMENT_PROGRAM_CALLBACK_FUNC_MESA": "Specifies the fragment program callback function in the MESA extension.",
  "GL_FRAGMENT_PROGRAM_CALLBACK_DATA_MESA": "Specifies the fragment program callback data in the MESA extension.",
  "GL_VERTEX_PROGRAM_POSITION_MESA": "Specifies the position in the vertex program in the MESA extension.",
  "GL_VERTEX_PROGRAM_CALLBACK_MESA": "Specifies the vertex program callback in the MESA extension.",
  "GL_VERTEX_PROGRAM_CALLBACK_FUNC_MESA": "Specifies the vertex program callback function in the MESA extension.",
  "GL_VERTEX_PROGRAM_CALLBACK_DATA_MESA": "Specifies the vertex program callback data in the MESA extension.",
  "GL_TILE_RASTER_ORDER_FIXED_MESA": "Specifies fixed raster order for tiles in the MESA extension.",
  "GL_TILE_RASTER_ORDER_INCREASING_X_MESA": "Specifies increasing raster order in the X direction in the MESA extension.",
  "GL_TILE_RASTER_ORDER_INCREASING_Y_MESA": "Specifies increasing raster order in the Y direction in the MESA extension.",
  "GL_FRAMEBUFFER_FLIP_Y_MESA": "Specifies the Y-axis flip for framebuffers in the MESA extension.",
  "GL_FRAMEBUFFER_FLIP_X_MESA": "Specifies the X-axis flip for framebuffers in the MESA extension.",
  "GL_FRAMEBUFFER_SWAP_XY_MESA": "Specifies the swap of X and Y axes for framebuffers in the MESA extension.",
  "GL_COUNTER_TYPE_AMD": "Specifies the type of counter in the AMD extension.",
  "GL_COUNTER_RANGE_AMD": "Specifies the range of the counter in the AMD extension.",
  "GL_UNSIGNED_INT64_AMD": "Specifies a 64-bit unsigned integer in the AMD extension.",
  "GL_PERCENTAGE_AMD": "Specifies a percentage value in the AMD extension.",
  "GL_PERFMON_RESULT_AVAILABLE_AMD": "Specifies the availability of performance monitor results in the AMD extension.",
  "GL_PERFMON_RESULT_SIZE_AMD": "Specifies the size of performance monitor results in the AMD extension.",
  "GL_PERFMON_RESULT_AMD": "Specifies the performance monitor result in the AMD extension.",
  "GL_TEXTURE_WIDTH_QCOM": "Specifies the width of a texture in the QCOM extension.",
  "GL_TEXTURE_HEIGHT_QCOM": "Specifies the height of a texture in the QCOM extension.",
  "GL_TEXTURE_DEPTH_QCOM": "Specifies the depth of a texture in the QCOM extension.",
  "GL_TEXTURE_INTERNAL_FORMAT_QCOM": "Specifies the internal format of a texture in the QCOM extension.",
  "GL_TEXTURE_FORMAT_QCOM": "Specifies the format of a texture in the QCOM extension.",
  "GL_TEXTURE_TYPE_QCOM": "Specifies the type of a texture in the QCOM extension.",
  "GL_TEXTURE_IMAGE_VALID_QCOM": "Specifies the validity of a texture image in the QCOM extension.",
  "GL_TEXTURE_NUM_LEVELS_QCOM": "Specifies the number of levels in a texture in the QCOM extension.",
  "GL_TEXTURE_TARGET_QCOM": "Specifies the target for a texture in the QCOM extension.",
  "GL_TEXTURE_OBJECT_VALID_QCOM": "Specifies the validity of a texture object in the QCOM extension.",
  "GL_STATE_RESTORE": "Indicates the state restoration for OpenGL contexts.",
  "GL_SAMPLER_EXTERNAL_2D_Y2Y_EXT": "Specifies an external 2D sampler with Y2Y filtering (EXT extension).",
  "GL_TEXTURE_PROTECTED_EXT": "Indicates that the texture is protected (EXT extension).",
  "GL_TEXTURE_FOVEATED_FEATURE_BITS_QCOM": "Specifies feature bits for foveated rendering in the QCOM extension.",
  "GL_TEXTURE_FOVEATED_MIN_PIXEL_DENSITY_QCOM": "Specifies the minimum pixel density for foveated rendering in the QCOM extension.",
  "GL_TEXTURE_FOVEATED_FEATURE_QUERY_QCOM": "Specifies a query for foveated rendering features in the QCOM extension.",
  "GL_TEXTURE_FOVEATED_NUM_FOCAL_POINTS_QUERY_QCOM": "Specifies a query for the number of focal points in foveated rendering in the QCOM extension.",
  "GL_FRAMEBUFFER_INCOMPLETE_FOVEATION_QCOM": "Indicates that the framebuffer is incomplete due to foveation in the QCOM extension.",
  "GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG": "Specifies a 4-bits-per-pixel compressed RGB format in the IMG extension.",
  "GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG": "Specifies a 2-bits-per-pixel compressed RGB format in the IMG extension.",
  "GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG": "Specifies a 4-bits-per-pixel compressed RGBA format in the IMG extension.",
  "GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG": "Specifies a 2-bits-per-pixel compressed RGBA format in the IMG extension.",
  "GL_MODULATE_COLOR_IMG": "Specifies color modulation in the IMG extension.",
  "GL_RECIP_ADD_SIGNED_ALPHA_IMG": "Specifies the signed alpha addition operation in the IMG extension.",
  "GL_TEXTURE_ALPHA_MODULATE_IMG": "Specifies texture alpha modulation in the IMG extension.",
  "GL_FACTOR_ALPHA_MODULATE_IMG": "Specifies factor alpha modulation in the IMG extension.",
  "GL_FRAGMENT_ALPHA_MODULATE_IMG": "Specifies fragment alpha modulation in the IMG extension.",
  "GL_ADD_BLEND_IMG": "Specifies additive blending in the IMG extension.",
  "GL_SGX_BINARY_IMG": "Specifies the SGX binary format in the IMG extension.",
  "GL_TEXTURE_RED_TYPE": "Specifies the red component type for textures.",
  "GL_TEXTURE_RED_TYPE_ARB": "Specifies the red component type for textures (ARB extension).",
  "GL_TEXTURE_GREEN_TYPE": "Specifies the green component type for textures.",
  "GL_TEXTURE_GREEN_TYPE_ARB": "Specifies the green component type for textures (ARB extension).",
  "GL_TEXTURE_BLUE_TYPE": "Specifies the blue component type for textures.",
  "GL_TEXTURE_BLUE_TYPE_ARB": "Specifies the blue component type for textures (ARB extension).",
  "GL_TEXTURE_ALPHA_TYPE": "Specifies the alpha component type for textures.",
  "GL_TEXTURE_ALPHA_TYPE_ARB": "Specifies the alpha component type for textures (ARB extension).",
  "GL_TEXTURE_LUMINANCE_TYPE": "Specifies the luminance component type for textures.",
  "GL_TEXTURE_LUMINANCE_TYPE_ARB": "Specifies the luminance component type for textures (ARB extension).",
  "GL_TEXTURE_INTENSITY_TYPE": "Specifies the intensity component type for textures.",
  "GL_TEXTURE_INTENSITY_TYPE_ARB": "Specifies the intensity component type for textures (ARB extension).",
  "GL_TEXTURE_DEPTH_TYPE": "Specifies the depth component type for textures.",
  "GL_TEXTURE_DEPTH_TYPE_ARB": "Specifies the depth component type for textures (ARB extension).",
  "GL_UNSIGNED_NORMALIZED": "Specifies unsigned normalized integer data types.",
  "GL_UNSIGNED_NORMALIZED_ARB": "Specifies unsigned normalized integer data types (ARB extension).",
  "GL_UNSIGNED_NORMALIZED_EXT": "Specifies unsigned normalized integer data types (EXT extension).",
  "GL_TEXTURE_1D_ARRAY": "Specifies a 1D array texture.",
  "GL_TEXTURE_1D_ARRAY_EXT": "Specifies a 1D array texture (EXT extension).",
  "GL_PROXY_TEXTURE_1D_ARRAY": "Specifies a proxy for a 1D array texture.",
  "GL_PROXY_TEXTURE_1D_ARRAY_EXT": "Specifies a proxy for a 1D array texture (EXT extension).",
  "GL_TEXTURE_2D_ARRAY": "Specifies a 2D array texture.",
  "GL_TEXTURE_2D_ARRAY_EXT": "Specifies a 2D array texture (EXT extension).",
  "GL_PROXY_TEXTURE_2D_ARRAY": "Specifies a proxy for a 2D array texture.",
  "GL_PROXY_TEXTURE_2D_ARRAY_EXT": "Specifies a proxy for a 2D array texture (EXT extension).",
  "GL_TEXTURE_BINDING_1D_ARRAY": "Specifies the currently bound 1D array texture.",
  "GL_TEXTURE_BINDING_1D_ARRAY_EXT": "Specifies the currently bound 1D array texture (EXT extension).",
  "GL_TEXTURE_BINDING_2D_ARRAY": "Specifies the currently bound 2D array texture.",
  "GL_TEXTURE_BINDING_2D_ARRAY_EXT": "Specifies the currently bound 2D array texture (EXT extension).",
  "GL_GEOMETRY_PROGRAM_NV": "Specifies the geometry program (NV extension).",
  "GL_MAX_PROGRAM_OUTPUT_VERTICES_NV": "Specifies the maximum number of output vertices for a geometry program (NV extension).",
  "GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV": "Specifies the maximum total output components for a geometry program (NV extension).",
  "GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS": "Specifies the maximum number of geometry texture image units.",
  "GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB": "Specifies the maximum number of geometry texture image units (ARB extension).",
  "GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT": "Specifies the maximum number of geometry texture image units (EXT extension).",
  "GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_OES": "Specifies the maximum number of geometry texture image units (OES extension).",
  "GL_TEXTURE_BUFFER": "Specifies a texture buffer.",
  "GL_TEXTURE_BUFFER_ARB": "Specifies a texture buffer (ARB extension).",
  "GL_TEXTURE_BUFFER_EXT": "Specifies a texture buffer (EXT extension).",
  "GL_TEXTURE_BUFFER_OES": "Specifies a texture buffer (OES extension).",
  "GL_TEXTURE_BUFFER_BINDING": "Specifies the binding for texture buffers.",
  "GL_TEXTURE_BUFFER_BINDING_EXT": "Specifies the binding for texture buffers (EXT extension).",
  "GL_TEXTURE_BUFFER_BINDING_OES": "Specifies the binding for texture buffers (OES extension).",
  "GL_MAX_TEXTURE_BUFFER_SIZE": "Specifies the maximum size of texture buffers.",
  "GL_MAX_TEXTURE_BUFFER_SIZE_ARB": "Specifies the maximum size of texture buffers (ARB extension).",
  "GL_MAX_TEXTURE_BUFFER_SIZE_EXT": "Specifies the maximum size of texture buffers (EXT extension).",
  "GL_MAX_TEXTURE_BUFFER_SIZE_OES": "Specifies the maximum size of texture buffers (OES extension).",
  "GL_TEXTURE_BINDING_BUFFER": "Specifies the binding for texture buffers.",
  "GL_TEXTURE_BINDING_BUFFER_ARB": "Specifies the binding for texture buffers (ARB extension).",
  "GL_TEXTURE_BINDING_BUFFER_EXT": "Specifies the binding for texture buffers (EXT extension).",
  "GL_TEXTURE_BINDING_BUFFER_OES": "Specifies the binding for texture buffers (OES extension).",
  "GL_TEXTURE_BUFFER_DATA_STORE_BINDING": "Specifies the data store binding for texture buffers.",
  "GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB": "Specifies the data store binding for texture buffers (ARB extension).",
  "GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT": "Specifies the data store binding for texture buffers (EXT extension).",
  "GL_TEXTURE_BUFFER_DATA_STORE_BINDING_OES": "Specifies the data store binding for texture buffers (OES extension).",
  "GL_TEXTURE_BUFFER_FORMAT_ARB": "Specifies the format for texture buffers (ARB extension).",
  "GL_TEXTURE_BUFFER_FORMAT_EXT": "Specifies the format for texture buffers (EXT extension).",
  "GL_ANY_SAMPLES_PASSED": "Specifies if any samples passed in the current sample.",
  "GL_ANY_SAMPLES_PASSED_EXT": "Specifies if any samples passed in the current sample (EXT extension).",
  "GL_SAMPLE_SHADING": "Specifies sample shading for rendering.",
  "GL_SAMPLE_SHADING_ARB": "Specifies sample shading for rendering (ARB extension).",
  "GL_SAMPLE_SHADING_OES": "Specifies sample shading for rendering (OES extension).",
  "GL_MIN_SAMPLE_SHADING_VALUE": "Specifies the minimum value for sample shading.",
  "GL_MIN_SAMPLE_SHADING_VALUE_ARB": "Specifies the minimum value for sample shading (ARB extension).",
  "GL_MIN_SAMPLE_SHADING_VALUE_OES": "Specifies the minimum value for sample shading (OES extension).",
  "GL_R11F_G11F_B10F": "Specifies the R11F_G11F_B10F format.",
  "GL_R11F_G11F_B10F_APPLE": "Specifies the R11F_G11F_B10F format in the APPLE extension.",
  "GL_R11F_G11F_B10F_EXT": "Specifies the R11F_G11F_B10F format (EXT extension).",
  "GL_UNSIGNED_INT_10F_11F_11F_REV": "Specifies the unsigned integer format 10F_11F_11F reversed.",
  "GL_UNSIGNED_INT_10F_11F_11F_REV_APPLE": "Specifies the unsigned integer format 10F_11F_11F reversed in the APPLE extension.",
  "GL_UNSIGNED_INT_10F_11F_11F_REV_EXT": "Specifies the unsigned integer format 10F_11F_11F reversed (EXT extension).",
  "GL_RGBA_SIGNED_COMPONENTS_EXT": "Specifies signed components for RGBA formats (EXT extension).",
  "GL_RGB9_E5": "Specifies the RGB9_E5 format.",
  "GL_RGB9_E5_APPLE": "Specifies the RGB9_E5 format in the APPLE extension.",
  "GL_RGB9_E5_EXT": "Specifies the RGB9_E5 format (EXT extension).",
  "GL_UNSIGNED_INT_5_9_9_9_REV": "Specifies the unsigned integer format 5_9_9_9 reversed.",
  "GL_UNSIGNED_INT_5_9_9_9_REV_APPLE": "Specifies the unsigned integer format 5_9_9_9 reversed in the APPLE extension.",
  "GL_UNSIGNED_INT_5_9_9_9_REV_EXT": "Specifies the unsigned integer format 5_9_9_9 reversed (EXT extension).",
  "GL_TEXTURE_SHARED_SIZE": "Specifies the shared size of a texture.",
  "GL_TEXTURE_SHARED_SIZE_EXT": "Specifies the shared size of a texture (EXT extension).",
  "GL_SRGB": "Specifies the sRGB color space.",
  "GL_SRGB_EXT": "Specifies the sRGB color space (EXT extension).",
  "GL_SRGB8": "Specifies a sRGB format with 8 bits per channel.",
  "GL_SRGB8_EXT": "Specifies a sRGB format with 8 bits per channel (EXT extension).",
  "GL_SRGB8_NV": "Specifies a sRGB format with 8 bits per channel (NV extension).",
  "GL_SRGB_ALPHA": "Specifies the sRGB alpha format.",
  "GL_SRGB_ALPHA_EXT": "Specifies the sRGB alpha format (EXT extension).",
  "GL_SRGB8_ALPHA8": "Specifies a sRGB alpha format with 8 bits per channel.",
  "GL_SRGB8_ALPHA8_EXT": "Specifies a sRGB alpha format with 8 bits per channel (EXT extension).",
  "GL_SLUMINANCE_ALPHA": "Specifies the sLuminance alpha format.",
  "GL_SLUMINANCE_ALPHA_EXT": "Specifies the sLuminance alpha format (EXT extension).",
  "GL_SLUMINANCE_ALPHA_NV": "Specifies the sLuminance alpha format (NV extension).",
  "GL_SLUMINANCE8_ALPHA8": "Specifies a sLuminance alpha format with 8 bits per channel.",
  "GL_SLUMINANCE8_ALPHA8_EXT": "Specifies a sLuminance alpha format with 8 bits per channel (EXT extension).",
  "GL_SLUMINANCE8_ALPHA8_NV": "Specifies a sLuminance alpha format with 8 bits per channel (NV extension).",
  "GL_SLUMINANCE": "Specifies the sLuminance format.",
  "GL_SLUMINANCE_EXT": "Specifies the sLuminance format (EXT extension).",
  "GL_SLUMINANCE_NV": "Specifies the sLuminance format (NV extension).",
  "GL_SLUMINANCE8": "Specifies a sLuminance format with 8 bits.",
  "GL_SLUMINANCE8_EXT": "Specifies a sLuminance format with 8 bits (EXT extension).",
  "GL_SLUMINANCE8_NV": "Specifies a sLuminance format with 8 bits (NV extension).",
  "GL_COMPRESSED_SRGB": "Specifies a compressed sRGB format.",
  "GL_COMPRESSED_SRGB_EXT": "Specifies a compressed sRGB format (EXT extension).",
  "GL_COMPRESSED_SRGB_ALPHA": "Specifies a compressed sRGB alpha format.",
  "GL_COMPRESSED_SRGB_ALPHA_EXT": "Specifies a compressed sRGB alpha format (EXT extension).",
  "GL_COMPRESSED_SLUMINANCE": "Specifies a compressed sLuminance format.",
  "GL_COMPRESSED_SLUMINANCE_EXT": "Specifies a compressed sLuminance format (EXT extension).",
  "GL_COMPRESSED_SLUMINANCE_ALPHA": "Specifies a compressed sLuminance alpha format.",
  "GL_COMPRESSED_SLUMINANCE_ALPHA_EXT": "Specifies a compressed sLuminance alpha format (EXT extension).",
  "GL_COMPRESSED_SRGB_S3TC_DXT1_EXT": "Specifies a compressed sRGB DXT1 format (EXT extension).",
  "GL_COMPRESSED_SRGB_S3TC_DXT1_NV": "Specifies a compressed sRGB DXT1 format (NV extension).",
  "GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT": "Specifies a compressed sRGB alpha DXT1 format (EXT extension).",
  "GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_NV": "Specifies a compressed sRGB alpha DXT1 format (NV extension).",
  "GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT": "Specifies a compressed sRGB alpha DXT3 format (EXT extension).",
  "GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_NV": "Specifies a compressed sRGB alpha DXT3 format (NV extension).",
  "GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT": "Specifies a compressed sRGB alpha DXT5 format (EXT extension).",
  "GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_NV": "Specifies a compressed sRGB alpha DXT5 format (NV extension).",
  "GL_COMPRESSED_LUMINANCE_LATC1_EXT": "Specifies a compressed luminance LATC1 format (EXT extension).",
  "GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT": "Specifies a compressed signed luminance LATC1 format (EXT extension).",
  "GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT": "Specifies a compressed luminance alpha LATC2 format (EXT extension).",
  "GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT": "Specifies a compressed signed luminance alpha LATC2 format (EXT extension).",
  "GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV": "Specifies the parameter buffer for tessellation control programs (NV extension).",
  "GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV": "Specifies the parameter buffer for tessellation evaluation programs (NV extension).",
  "GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH": "Specifies the maximum length of varying variables for transform feedback.",
  "GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT": "Specifies the maximum length of varying variables for transform feedback (EXT extension).",
  "GL_BACK_PRIMARY_COLOR_NV": "Specifies the primary color for the back face (NV extension).",
  "GL_BACK_SECONDARY_COLOR_NV": "Specifies the secondary color for the back face (NV extension).",
  "GL_TEXTURE_COORD_NV": "Specifies texture coordinates (NV extension).",
  "GL_CLIP_DISTANCE_NV": "Specifies the clip distance (NV extension).",
  "GL_VERTEX_ID_NV": "Specifies the vertex ID (NV extension).",
  "GL_PRIMITIVE_ID_NV": "Specifies the primitive ID (NV extension).",
  "GL_GENERIC_ATTRIB_NV": "Specifies a generic attribute (NV extension).",
  "GL_TRANSFORM_FEEDBACK_ATTRIBS_NV": "Specifies attributes for transform feedback (NV extension).",
  "GL_TRANSFORM_FEEDBACK_BUFFER_MODE": "Specifies the buffer mode for transform feedback.",
  "GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT": "Specifies the buffer mode for transform feedback (EXT extension).",
  "GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV": "Specifies the buffer mode for transform feedback (NV extension).",
  "GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS": "Specifies the maximum number of separate components for transform feedback.",
  "GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT": "Specifies the maximum number of separate components for transform feedback (EXT extension).",
  "GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV": "Specifies the maximum number of separate components for transform feedback (NV extension).",
  "GL_ACTIVE_VARYINGS_NV": "Specifies the active varyings (NV extension).",
  "GL_ACTIVE_VARYING_MAX_LENGTH_NV": "Specifies the maximum length of active varyings (NV extension).",
  "GL_TRANSFORM_FEEDBACK_VARYINGS": "Specifies the transform feedback varyings.",
  "GL_TRANSFORM_FEEDBACK_VARYINGS_EXT": "Specifies the transform feedback varyings (EXT extension).",
  "GL_TRANSFORM_FEEDBACK_VARYINGS_NV": "Specifies the transform feedback varyings (NV extension).",
  "GL_TRANSFORM_FEEDBACK_BUFFER_START": "Specifies the start of the transform feedback buffer.",
  "GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT": "Specifies the start of the transform feedback buffer (EXT extension).",
  "GL_TRANSFORM_FEEDBACK_BUFFER_START_NV": "Specifies the start of the transform feedback buffer (NV extension).",
  "GL_TRANSFORM_FEEDBACK_BUFFER_SIZE": "Specifies the size of the transform feedback buffer.",
  "GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT": "Specifies the size of the transform feedback buffer (EXT extension).",
  "GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV": "Specifies the size of the transform feedback buffer (NV extension).",
  "GL_TRANSFORM_FEEDBACK_RECORD_NV": "Specifies a record for transform feedback (NV extension).",
  "GL_PRIMITIVES_GENERATED": "Specifies the number of primitives generated.",
  "GL_PRIMITIVES_GENERATED_EXT": "Specifies the number of primitives generated (EXT extension).",
  "GL_PRIMITIVES_GENERATED_NV": "Specifies the number of primitives generated (NV extension).",
  "GL_PRIMITIVES_GENERATED_OES": "Specifies the number of primitives generated (OES extension).",
  "GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN": "Specifies the number of primitives written during transform feedback.",
  "GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT": "Specifies the number of primitives written during transform feedback (EXT extension).",
  "GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV": "Specifies the number of primitives written during transform feedback (NV extension).",
  "GL_RASTERIZER_DISCARD": "Specifies the rasterizer discard mode.",
  "GL_RASTERIZER_DISCARD_EXT": "Specifies the rasterizer discard mode (EXT extension).",
  "GL_RASTERIZER_DISCARD_NV": "Specifies the rasterizer discard mode (NV extension).",
  "GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS": "Specifies the maximum number of interleaved components for transform feedback.",
  "GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT": "Specifies the maximum number of interleaved components for transform feedback (EXT extension).",
  "GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV": "Specifies the maximum number of interleaved components for transform feedback (NV extension).",
  "GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS": "Specifies the maximum number of separate attributes for transform feedback.",
  "GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT": "Specifies the maximum number of separate attributes for transform feedback (EXT extension).",
  "GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV": "Specifies the maximum number of separate attributes for transform feedback (NV extension).",
  "GL_INTERLEAVED_ATTRIBS": "Specifies interleaved attributes.",
  "GL_INTERLEAVED_ATTRIBS_EXT": "Specifies interleaved attributes (EXT extension).",
  "GL_INTERLEAVED_ATTRIBS_NV": "Specifies interleaved attributes (NV extension).",
  "GL_SEPARATE_ATTRIBS": "Specifies separate attributes.",
  "GL_SEPARATE_ATTRIBS_EXT": "Specifies separate attributes (EXT extension).",
  "GL_SEPARATE_ATTRIBS_NV": "Specifies separate attributes (NV extension).",
  "GL_TRANSFORM_FEEDBACK_BUFFER": "Specifies the transform feedback buffer.",
  "GL_TRANSFORM_FEEDBACK_BUFFER_EXT": "Specifies the transform feedback buffer (EXT extension).",
  "GL_TRANSFORM_FEEDBACK_BUFFER_NV": "Specifies the transform feedback buffer (NV extension).",
  "GL_TRANSFORM_FEEDBACK_BUFFER_BINDING": "Specifies the binding of the transform feedback buffer.",
  "GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT": "Specifies the binding of the transform feedback buffer (EXT extension).",
  "GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV": "Specifies the binding of the transform feedback buffer (NV extension).",
  "GL_MOTION_ESTIMATION_SEARCH_BLOCK_X_QCOM": "Specifies the X coordinate of the search block for motion estimation in the QCOM extension.",
  "GL_MOTION_ESTIMATION_SEARCH_BLOCK_Y_QCOM": "Specifies the Y coordinate of the search block for motion estimation in the QCOM extension.",
  "GL_ATC_RGB_AMD": "Specifies the ATC RGB texture format in the AMD extension.",
  "GL_ATC_RGBA_EXPLICIT_ALPHA_AMD": "Specifies the ATC RGBA explicit alpha texture format in the AMD extension.",
  "GL_TEXTURE_LOD_BIAS_QCOM": "Specifies the level of detail bias for textures in the QCOM extension.",
  "GL_POINT_SPRITE_COORD_ORIGIN": "Specifies the origin of point sprite texture coordinates.",
  "GL_LOWER_LEFT": "Specifies that the lower-left corner is the origin for texture coordinates.",
  "GL_LOWER_LEFT_EXT": "Specifies that the lower-left corner is the origin for texture coordinates (EXT extension).",
  "GL_UPPER_LEFT": "Specifies that the upper-left corner is the origin for texture coordinates.",
  "GL_UPPER_LEFT_EXT": "Specifies that the upper-left corner is the origin for texture coordinates (EXT extension).",
  "GL_STENCIL_BACK_REF": "Specifies the reference value for stencil tests on the back face.",
  "GL_STENCIL_BACK_VALUE_MASK": "Specifies the mask value for the back face stencil tests.",
  "GL_STENCIL_BACK_WRITEMASK": "Specifies the write mask for the back face stencil buffer.",
  "GL_DRAW_FRAMEBUFFER_BINDING": "Specifies the binding of the draw framebuffer.",
  "GL_DRAW_FRAMEBUFFER_BINDING_ANGLE": "Specifies the binding of the draw framebuffer in the ANGLE extension.",
  "GL_DRAW_FRAMEBUFFER_BINDING_APPLE": "Specifies the binding of the draw framebuffer in the APPLE extension.",
  "GL_DRAW_FRAMEBUFFER_BINDING_EXT": "Specifies the binding of the draw framebuffer (EXT extension).",
  "GL_DRAW_FRAMEBUFFER_BINDING_NV": "Specifies the binding of the draw framebuffer (NV extension).",
  "GL_FRAMEBUFFER_BINDING": "Specifies the binding of the framebuffer.",
  "GL_FRAMEBUFFER_BINDING_ANGLE": "Specifies the binding of the framebuffer in the ANGLE extension.",
  "GL_FRAMEBUFFER_BINDING_EXT": "Specifies the binding of the framebuffer (EXT extension).",
  "GL_FRAMEBUFFER_BINDING_OES": "Specifies the binding of the framebuffer (OES extension).",
  "GL_RENDERBUFFER_BINDING": "Specifies the binding of the renderbuffer.",
  "GL_RENDERBUFFER_BINDING_ANGLE": "Specifies the binding of the renderbuffer in the ANGLE extension.",
  "GL_RENDERBUFFER_BINDING_EXT": "Specifies the binding of the renderbuffer (EXT extension).",
  "GL_RENDERBUFFER_BINDING_OES": "Specifies the binding of the renderbuffer (OES extension).",
  "GL_READ_FRAMEBUFFER": "Specifies the read framebuffer.",
  "GL_READ_FRAMEBUFFER_ANGLE": "Specifies the read framebuffer in the ANGLE extension.",
  "GL_READ_FRAMEBUFFER_APPLE": "Specifies the read framebuffer in the APPLE extension.",
  "GL_READ_FRAMEBUFFER_EXT": "Specifies the read framebuffer (EXT extension).",
  "GL_READ_FRAMEBUFFER_NV": "Specifies the read framebuffer (NV extension).",
  "GL_DRAW_FRAMEBUFFER": "Specifies the draw framebuffer.",
  "GL_DRAW_FRAMEBUFFER_ANGLE": "Specifies the draw framebuffer in the ANGLE extension.",
  "GL_DRAW_FRAMEBUFFER_APPLE": "Specifies the draw framebuffer in the APPLE extension.",
  "GL_DRAW_FRAMEBUFFER_EXT": "Specifies the draw framebuffer (EXT extension).",
  "GL_DRAW_FRAMEBUFFER_NV": "Specifies the draw framebuffer (NV extension).",
  "GL_READ_FRAMEBUFFER_BINDING": "Specifies the binding of the read framebuffer.",
  "GL_READ_FRAMEBUFFER_BINDING_ANGLE": "Specifies the binding of the read framebuffer in the ANGLE extension.",
  "GL_READ_FRAMEBUFFER_BINDING_APPLE": "Specifies the binding of the read framebuffer in the APPLE extension.",
  "GL_READ_FRAMEBUFFER_BINDING_EXT": "Specifies the binding of the read framebuffer (EXT extension).",
  "GL_READ_FRAMEBUFFER_BINDING_NV": "Specifies the binding of the read framebuffer (NV extension).",
  "GL_RENDERBUFFER_COVERAGE_SAMPLES_NV": "Specifies the number of coverage samples for renderbuffers (NV extension).",
  "GL_RENDERBUFFER_SAMPLES": "Specifies the number of samples for renderbuffers.",
  "GL_RENDERBUFFER_SAMPLES_ANGLE": "Specifies the number of samples for renderbuffers in the ANGLE extension.",
  "GL_RENDERBUFFER_SAMPLES_APPLE": "Specifies the number of samples for renderbuffers in the APPLE extension.",
  "GL_RENDERBUFFER_SAMPLES_EXT": "Specifies the number of samples for renderbuffers (EXT extension).",
  "GL_RENDERBUFFER_SAMPLES_NV": "Specifies the number of samples for renderbuffers (NV extension).",
  "GL_DEPTH_COMPONENT32F": "Specifies a 32-bit floating-point depth component format.",
  "GL_DEPTH32F_STENCIL8": "Specifies a depth-stencil format with 32-bit float depth and 8-bit stencil.",
  "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE": "Specifies the object type for framebuffer attachments.",
  "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT": "Specifies the object type for framebuffer attachments (EXT extension).",
  "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES": "Specifies the object type for framebuffer attachments (OES extension).",
  "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME": "Specifies the object name for framebuffer attachments.",
  "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT": "Specifies the object name for framebuffer attachments (EXT extension).",
  "GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES": "Specifies the object name for framebuffer attachments (OES extension).",
  "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL": "Specifies the texture level for framebuffer attachments.",
  "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT": "Specifies the texture level for framebuffer attachments (EXT extension).",
  "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES": "Specifies the texture level for framebuffer attachments (OES extension).",
  "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE": "Specifies the cube map face for framebuffer attachments.",
  "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT": "Specifies the cube map face for framebuffer attachments (EXT extension).",
  "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES": "Specifies the cube map face for framebuffer attachments (OES extension).",
  "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT": "Specifies the 3D texture Z-offset for framebuffer attachments (EXT extension).",
  "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES": "Specifies the 3D texture Z-offset for framebuffer attachments (OES extension).",
  "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER": "Specifies the texture layer for framebuffer attachments.",
  "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT": "Specifies the texture layer for framebuffer attachments (EXT extension).",
  "GL_FRAMEBUFFER_COMPLETE": "Specifies that the framebuffer is complete.",
  "GL_FRAMEBUFFER_COMPLETE_EXT": "Specifies that the framebuffer is complete (EXT extension).",
  "GL_FRAMEBUFFER_COMPLETE_OES": "Specifies that the framebuffer is complete (OES extension).",
  "GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT": "Specifies that the framebuffer is incomplete due to attachment issues.",
  "GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT": "Specifies that the framebuffer is incomplete due to attachment issues (EXT extension).",
  "GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES": "Specifies that the framebuffer is incomplete due to attachment issues (OES extension).",
  "GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT": "Specifies that the framebuffer is incomplete due to missing attachments.",
  "GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT": "Specifies that the framebuffer is incomplete due to missing attachments (EXT extension).",
  "GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES": "Specifies that the framebuffer is incomplete due to missing attachments (OES extension).",
  "GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS": "Specifies that the framebuffer is incomplete due to dimension mismatches.",
  "GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT": "Specifies that the framebuffer is incomplete due to dimension mismatches (EXT extension).",
  "GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES": "Specifies that the framebuffer is incomplete due to dimension mismatches (OES extension).",
  "GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT": "Specifies that the framebuffer is incomplete due to unsupported formats (EXT extension).",
  "GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES": "Specifies that the framebuffer is incomplete due to unsupported formats (OES extension).",
  "GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER": "Specifies that the framebuffer is incomplete due to draw buffer issues.",
  "GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT": "Specifies that the framebuffer is incomplete due to draw buffer issues (EXT extension).",
  "GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_OES": "Specifies that the framebuffer is incomplete due to draw buffer issues (OES extension).",
  "GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER": "Specifies that the framebuffer is incomplete due to read buffer issues.",
  "GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT": "Specifies that the framebuffer is incomplete due to read buffer issues (EXT extension).",
  "GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_OES": "Specifies that the framebuffer is incomplete due to read buffer issues (OES extension).",
  "GL_FRAMEBUFFER_UNSUPPORTED": "Specifies that the framebuffer is unsupported.",
  "GL_FRAMEBUFFER_UNSUPPORTED_EXT": "Specifies that the framebuffer is unsupported (EXT extension).",
  "GL_FRAMEBUFFER_UNSUPPORTED_OES": "Specifies that the framebuffer is unsupported (OES extension).",
  "GL_MAX_COLOR_ATTACHMENTS": "Specifies the maximum number of color attachments.",
  "GL_MAX_COLOR_ATTACHMENTS_EXT": "Specifies the maximum number of color attachments (EXT extension).",
  "GL_MAX_COLOR_ATTACHMENTS_NV": "Specifies the maximum number of color attachments (NV extension).",
  "GL_COLOR_ATTACHMENT0": "Specifies the first color attachment.",
  "GL_COLOR_ATTACHMENT0_EXT": "Specifies the first color attachment (EXT extension).",
  "GL_COLOR_ATTACHMENT0_NV": "Specifies the first color attachment (NV extension).",
  "GL_COLOR_ATTACHMENT0_OES": "Specifies the first color attachment (OES extension).",
  "GL_COLOR_ATTACHMENT1": "Specifies the second color attachment.",
  "GL_COLOR_ATTACHMENT1_EXT": "Specifies the second color attachment (EXT extension).",
  "GL_COLOR_ATTACHMENT1_NV": "Specifies the second color attachment (NV extension).",
  "GL_COLOR_ATTACHMENT2": "Specifies the third color attachment.",
  "GL_COLOR_ATTACHMENT2_EXT": "Specifies the third color attachment (EXT extension).",
  "GL_COLOR_ATTACHMENT2_NV": "Specifies the third color attachment (NV extension).",
  "GL_COLOR_ATTACHMENT3": "Specifies the fourth color attachment.",
  "GL_COLOR_ATTACHMENT3_EXT": "Specifies the fourth color attachment (EXT extension).",
  "GL_COLOR_ATTACHMENT3_NV": "Specifies the fourth color attachment (NV extension).",
  "GL_COLOR_ATTACHMENT4": "Specifies the fifth color attachment.",
  "GL_COLOR_ATTACHMENT4_EXT": "Specifies the fifth color attachment (EXT extension).",
  "GL_COLOR_ATTACHMENT4_NV": "Specifies the fifth color attachment (NV extension).",
  "GL_COLOR_ATTACHMENT5": "Specifies the sixth color attachment.",
  "GL_COLOR_ATTACHMENT5_EXT": "Specifies the sixth color attachment (EXT extension).",
  "GL_COLOR_ATTACHMENT5_NV": "Specifies the sixth color attachment (NV extension).",
  "GL_COLOR_ATTACHMENT6": "Specifies the seventh color attachment.",
  "GL_COLOR_ATTACHMENT6_EXT": "Specifies the seventh color attachment (EXT extension).",
  "GL_COLOR_ATTACHMENT6_NV": "Specifies the seventh color attachment (NV extension).",
  "GL_COLOR_ATTACHMENT7": "Specifies the eighth color attachment.",
  "GL_COLOR_ATTACHMENT7_EXT": "Specifies the eighth color attachment (EXT extension).",
  "GL_COLOR_ATTACHMENT7_NV": "Specifies the eighth color attachment (NV extension).",
  "GL_COLOR_ATTACHMENT8": "Specifies the ninth color attachment.",
  "GL_COLOR_ATTACHMENT8_EXT": "Specifies the ninth color attachment (EXT extension).",
  "GL_COLOR_ATTACHMENT8_NV": "Specifies the ninth color attachment (NV extension).",
  "GL_COLOR_ATTACHMENT9": "Specifies the tenth color attachment.",
  "GL_COLOR_ATTACHMENT9_EXT": "Specifies the tenth color attachment (EXT extension).",
  "GL_COLOR_ATTACHMENT9_NV": "Specifies the tenth color attachment (NV extension).",
  "GL_COLOR_ATTACHMENT10": "Specifies the eleventh color attachment.",
  "GL_COLOR_ATTACHMENT10_EXT": "Specifies the eleventh color attachment (EXT extension).",
  "GL_COLOR_ATTACHMENT10_NV": "Specifies the eleventh color attachment (NV extension).",
  "GL_COLOR_ATTACHMENT11": "Specifies the twelfth color attachment.",
  "GL_COLOR_ATTACHMENT11_EXT": "Specifies the twelfth color attachment (EXT extension).",
  "GL_COLOR_ATTACHMENT11_NV": "Specifies the twelfth color attachment (NV extension).",
  "GL_COLOR_ATTACHMENT12": "Specifies the thirteenth color attachment.",
  "GL_COLOR_ATTACHMENT12_EXT": "Specifies the thirteenth color attachment (EXT extension).",
  "GL_COLOR_ATTACHMENT12_NV": "Specifies the thirteenth color attachment (NV extension).",
  "GL_COLOR_ATTACHMENT13": "Specifies the fourteenth color attachment.",
  "GL_COLOR_ATTACHMENT13_EXT": "Specifies the fourteenth color attachment (EXT extension).",
  "GL_COLOR_ATTACHMENT13_NV": "Specifies the fourteenth color attachment (NV extension).",
  "GL_COLOR_ATTACHMENT14": "Specifies the fifteenth color attachment.",
  "GL_COLOR_ATTACHMENT14_EXT": "Specifies the fifteenth color attachment (EXT extension).",
  "GL_COLOR_ATTACHMENT14_NV": "Specifies the fifteenth color attachment (NV extension).",
  "GL_COLOR_ATTACHMENT15": "Specifies the sixteenth color attachment.",
  "GL_COLOR_ATTACHMENT15_EXT": "Specifies the sixteenth color attachment (EXT extension).",
  "GL_COLOR_ATTACHMENT15_NV": "Specifies the sixteenth color attachment (NV extension).",
  "GL_COLOR_ATTACHMENT16": "Specifies the seventeenth color attachment.",
  "GL_COLOR_ATTACHMENT17": "Specifies the eighteenth color attachment.",
  "GL_COLOR_ATTACHMENT18": "Specifies the nineteenth color attachment.",
  "GL_COLOR_ATTACHMENT19": "Specifies the twentieth color attachment.",
  "GL_COLOR_ATTACHMENT20": "Specifies the twenty-first color attachment.",
  "GL_COLOR_ATTACHMENT21": "Specifies the twenty-second color attachment.",
  "GL_COLOR_ATTACHMENT22": "Specifies the twenty-third color attachment.",
  "GL_COLOR_ATTACHMENT23": "Specifies the twenty-fourth color attachment.",
  "GL_COLOR_ATTACHMENT24": "Specifies the twenty-fifth color attachment.",
  "GL_COLOR_ATTACHMENT25": "Specifies the twenty-sixth color attachment.",
  "GL_COLOR_ATTACHMENT26": "Specifies the twenty-seventh color attachment.",
  "GL_COLOR_ATTACHMENT27": "Specifies the twenty-eighth color attachment.",
  "GL_COLOR_ATTACHMENT28": "Specifies the twenty-ninth color attachment.",
  "GL_COLOR_ATTACHMENT29": "Specifies the thirtieth color attachment.",
  "GL_COLOR_ATTACHMENT30": "Specifies the thirty-first color attachment.",
  "GL_COLOR_ATTACHMENT31": "Specifies the thirty-second color attachment.",
  "GL_DEPTH_ATTACHMENT": "Specifies the depth attachment.",
  "GL_DEPTH_ATTACHMENT_EXT": "Specifies the depth attachment (EXT extension).",
  "GL_DEPTH_ATTACHMENT_OES": "Specifies the depth attachment (OES extension).",
  "GL_STENCIL_ATTACHMENT": "Specifies the stencil attachment.",
  "GL_STENCIL_ATTACHMENT_EXT": "Specifies the stencil attachment (EXT extension).",
  "GL_STENCIL_ATTACHMENT_OES": "Specifies the stencil attachment (OES extension).",
  "GL_FRAMEBUFFER": "Specifies the framebuffer.",
  "GL_FRAMEBUFFER_EXT": "Specifies the framebuffer (EXT extension).",
  "GL_FRAMEBUFFER_OES": "Specifies the framebuffer (OES extension).",
  "GL_RENDERBUFFER": "Specifies the renderbuffer.",
  "GL_RENDERBUFFER_EXT": "Specifies the renderbuffer (EXT extension).",
  "GL_RENDERBUFFER_OES": "Specifies the renderbuffer (OES extension).",
  "GL_RENDERBUFFER_WIDTH": "Specifies the width of the renderbuffer.",
  "GL_RENDERBUFFER_WIDTH_EXT": "Specifies the width of the renderbuffer (EXT extension).",
  "GL_RENDERBUFFER_WIDTH_OES": "Specifies the width of the renderbuffer (OES extension).",
  "GL_RENDERBUFFER_HEIGHT": "Specifies the height of the renderbuffer.",
  "GL_RENDERBUFFER_HEIGHT_EXT": "Specifies the height of the renderbuffer (EXT extension).",
  "GL_RENDERBUFFER_HEIGHT_OES": "Specifies the height of the renderbuffer (OES extension).",
  "GL_RENDERBUFFER_INTERNAL_FORMAT": "Specifies the internal format of the renderbuffer.",
  "GL_RENDERBUFFER_INTERNAL_FORMAT_EXT": "Specifies the internal format of the renderbuffer (EXT extension).",
  "GL_RENDERBUFFER_INTERNAL_FORMAT_OES": "Specifies the internal format of the renderbuffer (OES extension).",
  "GL_STENCIL_INDEX1": "Specifies a stencil index format with 1 bit.",
  "GL_STENCIL_INDEX1_EXT": "Specifies a stencil index format with 1 bit (EXT extension).",
  "GL_STENCIL_INDEX1_OES": "Specifies a stencil index format with 1 bit (OES extension).",
  "GL_STENCIL_INDEX4": "Specifies a stencil index format with 4 bits.",
  "GL_STENCIL_INDEX4_EXT": "Specifies a stencil index format with 4 bits (EXT extension).",
  "GL_STENCIL_INDEX4_OES": "Specifies a stencil index format with 4 bits (OES extension).",
  "GL_STENCIL_INDEX8": "Specifies a stencil index format with 8 bits.",
  "GL_STENCIL_INDEX8_EXT": "Specifies a stencil index format with 8 bits (EXT extension).",
  "GL_STENCIL_INDEX8_OES": "Specifies a stencil index format with 8 bits (OES extension).",
  "GL_STENCIL_INDEX16": "Specifies a stencil index format with 16 bits.",
  "GL_STENCIL_INDEX16_EXT": "Specifies a stencil index format with 16 bits (EXT extension).",
  "GL_RENDERBUFFER_RED_SIZE": "Specifies the size of the red component in the renderbuffer.",
  "GL_RENDERBUFFER_RED_SIZE_EXT": "Specifies the size of the red component in the renderbuffer (EXT extension).",
  "GL_RENDERBUFFER_RED_SIZE_OES": "Specifies the size of the red component in the renderbuffer (OES extension).",
  "GL_RENDERBUFFER_GREEN_SIZE": "Specifies the size of the green component in the renderbuffer.",
  "GL_RENDERBUFFER_GREEN_SIZE_EXT": "Specifies the size of the green component in the renderbuffer (EXT extension).",
  "GL_RENDERBUFFER_GREEN_SIZE_OES": "Specifies the size of the green component in the renderbuffer (OES extension).",
  "GL_RENDERBUFFER_BLUE_SIZE": "Specifies the size of the blue component in the renderbuffer.",
  "GL_RENDERBUFFER_BLUE_SIZE_EXT": "Specifies the size of the blue component in the renderbuffer (EXT extension).",
  "GL_RENDERBUFFER_BLUE_SIZE_OES": "Specifies the size of the blue component in the renderbuffer (OES extension).",
  "GL_RENDERBUFFER_ALPHA_SIZE": "Specifies the size of the alpha component in the renderbuffer.",
  "GL_RENDERBUFFER_ALPHA_SIZE_EXT": "Specifies the size of the alpha component in the renderbuffer (EXT extension).",
  "GL_RENDERBUFFER_ALPHA_SIZE_OES": "Specifies the size of the alpha component in the renderbuffer (OES extension).",
  "GL_RENDERBUFFER_DEPTH_SIZE": "Specifies the depth size of a renderbuffer.",
  "GL_RENDERBUFFER_DEPTH_SIZE_EXT": "Specifies the depth size of a renderbuffer (EXT extension).",
  "GL_RENDERBUFFER_DEPTH_SIZE_OES": "Specifies the depth size of a renderbuffer (OES extension).",
  "GL_RENDERBUFFER_STENCIL_SIZE": "Specifies the stencil size of a renderbuffer.",
  "GL_RENDERBUFFER_STENCIL_SIZE_EXT": "Specifies the stencil size of a renderbuffer (EXT extension).",
  "GL_RENDERBUFFER_STENCIL_SIZE_OES": "Specifies the stencil size of a renderbuffer (OES extension).",
  "GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE": "Indicates that a framebuffer is incomplete due to multisample attachment.",
  "GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE": "Indicates framebuffer incomplete multisample condition in the ANGLE extension.",
  "GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE": "Indicates framebuffer incomplete multisample condition in the APPLE extension.",
  "GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT": "Indicates framebuffer incomplete multisample condition (EXT extension).",
  "GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_NV": "Indicates framebuffer incomplete multisample condition (NV extension).",
  "GL_MAX_SAMPLES": "Specifies the maximum number of samples for a multisample framebuffer.",
  "GL_MAX_SAMPLES_ANGLE": "Specifies the maximum number of samples in the ANGLE extension.",
  "GL_MAX_SAMPLES_APPLE": "Specifies the maximum number of samples in the APPLE extension.",
  "GL_MAX_SAMPLES_EXT": "Specifies the maximum number of samples (EXT extension).",
  "GL_MAX_SAMPLES_NV": "Specifies the maximum number of samples (NV extension).",
  "GL_TEXTURE_GEN_STR_OES": "Specifies the string for texture generation (OES extension).",
  "GL_HALF_FLOAT_OES": "Specifies half-precision floating point format (OES extension).",
  "GL_RGB565_OES": "Specifies RGB565 format (OES extension).",
  "GL_RGB565": "Specifies RGB565 format.",
  "GL_ETC1_RGB8_OES": "Specifies the ETC1 RGB8 format (OES extension).",
  "GL_TEXTURE_EXTERNAL_OES": "Specifies an external texture format (OES extension).",
  "GL_SAMPLER_EXTERNAL_OES": "Specifies an external sampler type (OES extension).",
  "GL_TEXTURE_BINDING_EXTERNAL_OES": "Specifies the current external texture binding (OES extension).",
  "GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES": "Specifies the required texture image units (OES extension).",
  "GL_PRIMITIVE_RESTART_FIXED_INDEX": "Specifies the fixed index for primitive restart.",
  "GL_ANY_SAMPLES_PASSED_CONSERVATIVE": "Indicates a conservative test for any samples passed.",
  "GL_ANY_SAMPLES_PASSED_CONSERVATIVE_EXT": "Indicates a conservative test for any samples passed (EXT extension).",
  "GL_MAX_ELEMENT_INDEX": "Specifies the maximum element index for indexed drawing.",
  "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT": "Specifies the number of samples of the texture attached to a framebuffer (EXT extension).",
  "GL_RGBA32UI": "Specifies an unsigned integer format with 32 bits per channel for RGBA.",
  "GL_RGBA32UI_EXT": "Specifies an unsigned integer format with 32 bits per channel for RGBA (EXT extension).",
  "GL_RGB32UI": "Specifies an unsigned integer format with 32 bits per channel for RGB.",
  "GL_RGB32UI_EXT": "Specifies an unsigned integer format with 32 bits per channel for RGB (EXT extension).",
  "GL_ALPHA32UI_EXT": "Specifies an unsigned integer format with 32 bits for alpha (EXT extension).",
  "GL_INTENSITY32UI_EXT": "Specifies an unsigned integer format with 32 bits for intensity (EXT extension).",
  "GL_LUMINANCE32UI_EXT": "Specifies an unsigned integer format with 32 bits for luminance (EXT extension).",
  "GL_LUMINANCE_ALPHA32UI_EXT": "Specifies an unsigned integer format with 32 bits for luminance and alpha (EXT extension).",
  "GL_RGBA16UI": "Specifies an unsigned integer format with 16 bits per channel for RGBA.",
  "GL_RGBA16UI_EXT": "Specifies an unsigned integer format with 16 bits per channel for RGBA (EXT extension).",
  "GL_RGB16UI": "Specifies an unsigned integer format with 16 bits per channel for RGB.",
  "GL_RGB16UI_EXT": "Specifies an unsigned integer format with 16 bits per channel for RGB (EXT extension).",
  "GL_ALPHA16UI_EXT": "Specifies an unsigned integer format with 16 bits for alpha (EXT extension).",
  "GL_INTENSITY16UI_EXT": "Specifies an unsigned integer format with 16 bits for intensity (EXT extension).",
  "GL_LUMINANCE16UI_EXT": "Specifies an unsigned integer format with 16 bits for luminance (EXT extension).",
  "GL_LUMINANCE_ALPHA16UI_EXT": "Specifies an unsigned integer format with 16 bits for luminance and alpha (EXT extension).",
  "GL_RGBA8UI": "Specifies an unsigned integer format with 8 bits per channel for RGBA.",
  "GL_RGBA8UI_EXT": "Specifies an unsigned integer format with 8 bits per channel for RGBA (EXT extension).",
  "GL_RGB8UI": "Specifies an unsigned integer format with 8 bits per channel for RGB.",
  "GL_RGB8UI_EXT": "Specifies an unsigned integer format with 8 bits per channel for RGB (EXT extension).",
  "GL_ALPHA8UI_EXT": "Specifies an unsigned integer format with 8 bits for alpha (EXT extension).",
  "GL_INTENSITY8UI_EXT": "Specifies an unsigned integer format with 8 bits for intensity (EXT extension).",
  "GL_LUMINANCE8UI_EXT": "Specifies an unsigned integer format with 8 bits for luminance (EXT extension).",
  "GL_LUMINANCE_ALPHA8UI_EXT": "Specifies an unsigned integer format with 8 bits for luminance and alpha (EXT extension).",
  "GL_RGBA32I": "Specifies a signed integer format with 32 bits per channel for RGBA.",
  "GL_RGBA32I_EXT": "Specifies a signed integer format with 32 bits per channel for RGBA (EXT extension).",
  "GL_RGB32I": "Specifies a signed integer format with 32 bits per channel for RGB.",
  "GL_RGB32I_EXT": "Specifies a signed integer format with 32 bits per channel for RGB (EXT extension).",
  "GL_ALPHA32I_EXT": "Specifies a signed integer format with 32 bits for alpha (EXT extension).",
  "GL_INTENSITY32I_EXT": "Specifies a signed integer format with 32 bits for intensity (EXT extension).",
  "GL_LUMINANCE32I_EXT": "Specifies a signed integer format with 32 bits for luminance (EXT extension).",
  "GL_LUMINANCE_ALPHA32I_EXT": "Specifies a signed integer format with 32 bits for luminance and alpha (EXT extension).",
  "GL_RGBA16I": "Specifies a signed integer format with 16 bits per channel for RGBA.",
  "GL_RGBA16I_EXT": "Specifies a signed integer format with 16 bits per channel for RGBA (EXT extension).",
  "GL_RGB16I": "Specifies a signed integer format with 16 bits per channel for RGB.",
  "GL_RGB16I_EXT": "Specifies a signed integer format with 16 bits per channel for RGB (EXT extension).",
  "GL_ALPHA16I_EXT": "Specifies a signed integer format with 16 bits for alpha (EXT extension).",
  "GL_INTENSITY16I_EXT": "Specifies a signed integer format with 16 bits for intensity (EXT extension).",
  "GL_LUMINANCE16I_EXT": "Specifies a signed integer format with 16 bits for luminance (EXT extension).",
  "GL_LUMINANCE_ALPHA16I_EXT": "Specifies a signed integer format with 16 bits for luminance and alpha (EXT extension).",
  "GL_RGBA8I": "Specifies a signed integer format with 8 bits per channel for RGBA.",
  "GL_RGBA8I_EXT": "Specifies a signed integer format with 8 bits per channel for RGBA (EXT extension).",
  "GL_RGB8I": "Specifies a signed integer format with 8 bits per channel for RGB.",
  "GL_RGB8I_EXT": "Specifies a signed integer format with 8 bits per channel for RGB (EXT extension).",
  "GL_ALPHA8I_EXT": "Specifies a signed integer format with 8 bits for alpha (EXT extension).",
  "GL_INTENSITY8I_EXT": "Specifies a signed integer format with 8 bits for intensity (EXT extension).",
  "GL_LUMINANCE8I_EXT": "Specifies a signed integer format with 8 bits for luminance (EXT extension).",
  "GL_LUMINANCE_ALPHA8I_EXT": "Specifies a signed integer format with 8 bits for luminance and alpha (EXT extension).",
  "GL_RED_INTEGER": "Specifies the red integer format.",
  "GL_RED_INTEGER_EXT": "Specifies the red integer format (EXT extension).",
  "GL_GREEN_INTEGER": "Specifies the green integer format.",
  "GL_GREEN_INTEGER_EXT": "Specifies the green integer format (EXT extension).",
  "GL_BLUE_INTEGER": "Specifies the blue integer format.",
  "GL_BLUE_INTEGER_EXT": "Specifies the blue integer format (EXT extension).",
  "GL_ALPHA_INTEGER": "Specifies the alpha integer format.",
  "GL_ALPHA_INTEGER_EXT": "Specifies the alpha integer format (EXT extension).",
  "GL_RGB_INTEGER": "Specifies the RGB integer format.",
  "GL_RGB_INTEGER_EXT": "Specifies the RGB integer format (EXT extension).",
  "GL_RGBA_INTEGER": "Specifies the RGBA integer format.",
  "GL_RGBA_INTEGER_EXT": "Specifies the RGBA integer format (EXT extension).",
  "GL_BGR_INTEGER": "Specifies the BGR integer format.",
  "GL_BGR_INTEGER_EXT": "Specifies the BGR integer format (EXT extension).",
  "GL_BGRA_INTEGER": "Specifies the BGRA integer format.",
  "GL_BGRA_INTEGER_EXT": "Specifies the BGRA integer format (EXT extension).",
  "GL_LUMINANCE_INTEGER_EXT": "Specifies the luminance integer format (EXT extension).",
  "GL_LUMINANCE_ALPHA_INTEGER_EXT": "Specifies the luminance alpha integer format (EXT extension).",
  "GL_RGBA_INTEGER_MODE_EXT": "Specifies the RGBA integer mode (EXT extension).",
  "GL_INT_2_10_10_10_REV": "Specifies the integer format with reversed 2-10-10-10 layout.",
  "GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV": "Specifies the maximum number of parameter buffer bindings (NV extension).",
  "GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV": "Specifies the maximum size of parameter buffers (NV extension).",
  "GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV": "Specifies the buffer object used for vertex program parameters (NV extension).",
  "GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV": "Specifies the buffer object used for geometry program parameters (NV extension).",
  "GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV": "Specifies the buffer object used for fragment program parameters (NV extension).",
  "GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV": "Specifies the maximum number of generic attributes for programs (NV extension).",
  "GL_MAX_PROGRAM_GENERIC_RESULTS_NV": "Specifies the maximum number of generic results for programs (NV extension).",
  "GL_FRAMEBUFFER_ATTACHMENT_LAYERED": "Indicates that a framebuffer attachment is layered.",
  "GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB": "Indicates that a framebuffer attachment is layered (ARB extension).",
  "GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT": "Indicates that a framebuffer attachment is layered (EXT extension).",
  "GL_FRAMEBUFFER_ATTACHMENT_LAYERED_OES": "Indicates that a framebuffer attachment is layered (OES extension).",
  "GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS": "Indicates incomplete framebuffer due to layer targets.",
  "GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB": "Indicates incomplete framebuffer layer targets (ARB extension).",
  "GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT": "Indicates incomplete framebuffer layer targets (EXT extension).",
  "GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_OES": "Indicates incomplete framebuffer layer targets (OES extension).",
  "GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB": "Indicates incomplete framebuffer due to layer count (ARB extension).",
  "GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT": "Indicates incomplete framebuffer due to layer count (EXT extension).",
  "GL_LAYER_NV": "Specifies a layer for multi-layer rendering (NV extension).",
  "GL_DEPTH_COMPONENT32F_NV": "Specifies a depth component format with 32-bit floating point (NV extension).",
  "GL_DEPTH32F_STENCIL8_NV": "Specifies a combined depth and stencil format (NV extension).",
  "GL_FLOAT_32_UNSIGNED_INT_24_8_REV": "Specifies a format with 32-bit floating point and 24-bit unsigned integer depth.",
  "GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV": "Specifies a format with 32-bit floating point and 24-bit unsigned integer depth (NV extension).",
  "GL_SHADER_INCLUDE_ARB": "Specifies shader include functionality (ARB extension).",
  "GL_DEPTH_BUFFER_FLOAT_MODE_NV": "Indicates the float mode for depth buffers (NV extension).",
  "GL_FRAMEBUFFER_SRGB": "Indicates support for sRGB framebuffer in OpenGL.",
  "GL_FRAMEBUFFER_SRGB_EXT": "Indicates support for sRGB framebuffer (EXT extension).",
  "GL_FRAMEBUFFER_SRGB_CAPABLE_EXT": "Indicates that the framebuffer is capable of sRGB operations (EXT extension).",
  "GL_COMPRESSED_RED_RGTC1": "Specifies the compressed format for single-channel red textures.",
  "GL_COMPRESSED_RED_RGTC1_EXT": "Specifies the compressed format for single-channel red textures (EXT extension).",
  "GL_COMPRESSED_SIGNED_RED_RGTC1": "Specifies the signed compressed format for single-channel red textures.",
  "GL_COMPRESSED_SIGNED_RED_RGTC1_EXT": "Specifies the signed compressed format for single-channel red textures (EXT extension).",
  "GL_COMPRESSED_RED_GREEN_RGTC2_EXT": "Specifies the compressed format for dual-channel red-green textures (EXT extension).",
  "GL_COMPRESSED_RG_RGTC2": "Specifies the compressed format for dual-channel red-green textures.",
  "GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT": "Specifies the signed compressed format for dual-channel red-green textures (EXT extension).",
  "GL_COMPRESSED_SIGNED_RG_RGTC2": "Specifies the signed compressed format for dual-channel red-green textures.",
  "GL_SAMPLER_1D_ARRAY": "Specifies a 1D array sampler.",
  "GL_SAMPLER_1D_ARRAY_EXT": "Specifies a 1D array sampler (EXT extension).",
  "GL_SAMPLER_2D_ARRAY": "Specifies a 2D array sampler.",
  "GL_SAMPLER_2D_ARRAY_EXT": "Specifies a 2D array sampler (EXT extension).",
  "GL_SAMPLER_BUFFER": "Specifies a buffer sampler.",
  "GL_SAMPLER_BUFFER_EXT": "Specifies a buffer sampler (EXT extension).",
  "GL_SAMPLER_BUFFER_OES": "Specifies a buffer sampler (OES extension).",
  "GL_SAMPLER_1D_ARRAY_SHADOW": "Specifies a shadow sampler for 1D arrays.",
  "GL_SAMPLER_1D_ARRAY_SHADOW_EXT": "Specifies a shadow sampler for 1D arrays (EXT extension).",
  "GL_SAMPLER_2D_ARRAY_SHADOW": "Specifies a shadow sampler for 2D arrays.",
  "GL_SAMPLER_2D_ARRAY_SHADOW_EXT": "Specifies a shadow sampler for 2D arrays (EXT extension).",
  "GL_SAMPLER_2D_ARRAY_SHADOW_NV": "Specifies a shadow sampler for 2D arrays (NV extension).",
  "GL_SAMPLER_CUBE_SHADOW": "Specifies a shadow sampler for cube maps.",
  "GL_SAMPLER_CUBE_SHADOW_EXT": "Specifies a shadow sampler for cube maps (EXT extension).",
  "GL_SAMPLER_CUBE_SHADOW_NV": "Specifies a shadow sampler for cube maps (NV extension).",
  "GL_UNSIGNED_INT_VEC2": "Specifies a 2D unsigned integer vector.",
  "GL_UNSIGNED_INT_VEC2_EXT": "Specifies a 2D unsigned integer vector (EXT extension).",
  "GL_UNSIGNED_INT_VEC3": "Specifies a 3D unsigned integer vector.",
  "GL_UNSIGNED_INT_VEC3_EXT": "Specifies a 3D unsigned integer vector (EXT extension).",
  "GL_UNSIGNED_INT_VEC4": "Specifies a 4D unsigned integer vector.",
  "GL_UNSIGNED_INT_VEC4_EXT": "Specifies a 4D unsigned integer vector (EXT extension).",
  "GL_INT_SAMPLER_1D": "Specifies a signed integer sampler for 1D textures.",
  "GL_INT_SAMPLER_1D_EXT": "Specifies a signed integer sampler for 1D textures (EXT extension).",
  "GL_INT_SAMPLER_2D": "Specifies a signed integer sampler for 2D textures.",
  "GL_INT_SAMPLER_2D_EXT": "Specifies a signed integer sampler for 2D textures (EXT extension).",
  "GL_INT_SAMPLER_3D": "Specifies a signed integer sampler for 3D textures.",
  "GL_INT_SAMPLER_3D_EXT": "Specifies a signed integer sampler for 3D textures (EXT extension).",
  "GL_INT_SAMPLER_CUBE": "Specifies a signed integer sampler for cube maps.",
  "GL_INT_SAMPLER_CUBE_EXT": "Specifies a signed integer sampler for cube maps (EXT extension).",
  "GL_INT_SAMPLER_2D_RECT": "Specifies a signed integer sampler for 2D rectangle textures.",
  "GL_INT_SAMPLER_2D_RECT_EXT": "Specifies a signed integer sampler for 2D rectangle textures (EXT extension).",
  "GL_INT_SAMPLER_1D_ARRAY": "Specifies a signed integer sampler for 1D arrays.",
  "GL_INT_SAMPLER_1D_ARRAY_EXT": "Specifies a signed integer sampler for 1D arrays (EXT extension).",
  "GL_INT_SAMPLER_2D_ARRAY": "Specifies a signed integer sampler for 2D arrays.",
  "GL_INT_SAMPLER_2D_ARRAY_EXT": "Specifies a signed integer sampler for 2D arrays (EXT extension).",
  "GL_INT_SAMPLER_BUFFER": "Specifies a signed integer sampler for buffer textures.",
  "GL_INT_SAMPLER_BUFFER_EXT": "Specifies a signed integer sampler for buffer textures (EXT extension).",
  "GL_INT_SAMPLER_BUFFER_OES": "Specifies a signed integer sampler for buffer textures (OES extension).",
  "GL_UNSIGNED_INT_SAMPLER_1D": "Specifies an unsigned integer sampler for 1D textures.",
  "GL_UNSIGNED_INT_SAMPLER_1D_EXT": "Specifies an unsigned integer sampler for 1D textures (EXT extension).",
  "GL_UNSIGNED_INT_SAMPLER_2D": "Specifies an unsigned integer sampler for 2D textures.",
  "GL_UNSIGNED_INT_SAMPLER_2D_EXT": "Specifies an unsigned integer sampler for 2D textures (EXT extension).",
  "GL_UNSIGNED_INT_SAMPLER_3D": "Specifies an unsigned integer sampler for 3D textures.",
  "GL_UNSIGNED_INT_SAMPLER_3D_EXT": "Specifies an unsigned integer sampler for 3D textures (EXT extension).",
  "GL_UNSIGNED_INT_SAMPLER_CUBE": "Specifies an unsigned integer sampler for cube maps.",
  "GL_UNSIGNED_INT_SAMPLER_CUBE_EXT": "Specifies an unsigned integer sampler for cube maps (EXT extension).",
  "GL_UNSIGNED_INT_SAMPLER_2D_RECT": "Specifies an unsigned integer sampler for 2D rectangle textures.",
  "GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT": "Specifies an unsigned integer sampler for 2D rectangle textures (EXT extension).",
  "GL_UNSIGNED_INT_SAMPLER_1D_ARRAY": "Specifies an unsigned integer sampler for 1D arrays.",
  "GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT": "Specifies an unsigned integer sampler for 1D arrays (EXT extension).",
  "GL_UNSIGNED_INT_SAMPLER_2D_ARRAY": "Specifies an unsigned integer sampler for 2D arrays.",
  "GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT": "Specifies an unsigned integer sampler for 2D arrays (EXT extension).",
  "GL_UNSIGNED_INT_SAMPLER_BUFFER": "Specifies an unsigned integer sampler for buffer textures.",
  "GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT": "Specifies an unsigned integer sampler for buffer textures (EXT extension).",
  "GL_UNSIGNED_INT_SAMPLER_BUFFER_OES": "Specifies an unsigned integer sampler for buffer textures (OES extension).",
  "GL_GEOMETRY_SHADER": "Specifies the geometry shader type.",
  "GL_GEOMETRY_SHADER_ARB": "Specifies the geometry shader type (ARB extension).",
  "GL_GEOMETRY_SHADER_EXT": "Specifies the geometry shader type (EXT extension).",
  "GL_GEOMETRY_SHADER_OES": "Specifies the geometry shader type (OES extension).",
  "GL_GEOMETRY_VERTICES_OUT_ARB": "Specifies the output vertices from a geometry shader (ARB extension).",
  "GL_GEOMETRY_VERTICES_OUT_EXT": "Specifies the output vertices from a geometry shader (EXT extension).",
  "GL_GEOMETRY_INPUT_TYPE_ARB": "Specifies the input type for a geometry shader (ARB extension).",
  "GL_GEOMETRY_INPUT_TYPE_EXT": "Specifies the input type for a geometry shader (EXT extension).",
  "GL_GEOMETRY_OUTPUT_TYPE_ARB": "Specifies the output type for a geometry shader (ARB extension).",
  "GL_GEOMETRY_OUTPUT_TYPE_EXT": "Specifies the output type for a geometry shader (EXT extension).",
  "GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB": "Specifies the maximum number of varying components from geometry shaders (ARB extension).",
  "GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT": "Specifies the maximum number of varying components from geometry shaders (EXT extension).",
  "GL_MAX_VERTEX_VARYING_COMPONENTS_ARB": "Specifies the maximum number of varying components per vertex for the ARB extension.",
  "GL_MAX_VERTEX_VARYING_COMPONENTS_EXT": "Specifies the maximum number of varying components per vertex for the EXT extension.",
  "GL_MAX_GEOMETRY_UNIFORM_COMPONENTS": "Specifies the maximum number of uniform components for geometry shaders.",
  "GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB": "Specifies the maximum number of uniform components for geometry shaders (ARB extension).",
  "GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT": "Specifies the maximum number of uniform components for geometry shaders (EXT extension).",
  "GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_OES": "Specifies the maximum number of uniform components for geometry shaders (OES extension).",
  "GL_MAX_GEOMETRY_OUTPUT_VERTICES": "Specifies the maximum number of output vertices from a geometry shader.",
  "GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB": "Specifies the maximum number of output vertices from geometry shaders (ARB extension).",
  "GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT": "Specifies the maximum number of output vertices from geometry shaders (EXT extension).",
  "GL_MAX_GEOMETRY_OUTPUT_VERTICES_OES": "Specifies the maximum number of output vertices from geometry shaders (OES extension).",
  "GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS": "Specifies the maximum total output components from a geometry shader.",
  "GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB": "Specifies the maximum total output components from geometry shaders (ARB extension).",
  "GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT": "Specifies the maximum total output components from geometry shaders (EXT extension).",
  "GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_OES": "Specifies the maximum total output components from geometry shaders (OES extension).",
  "GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT": "Specifies the maximum number of bindable uniforms for vertex shaders (EXT extension).",
  "GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT": "Specifies the maximum number of bindable uniforms for fragment shaders (EXT extension).",
  "GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT": "Specifies the maximum number of bindable uniforms for geometry shaders (EXT extension).",
  "GL_ACTIVE_SUBROUTINES": "Indicates the number of active subroutines in a program.",
  "GL_ACTIVE_SUBROUTINE_UNIFORMS": "Indicates the number of active subroutine uniforms in a program.",
  "GL_MAX_SUBROUTINES": "Specifies the maximum number of subroutines a shader can use.",
  "GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS": "Specifies the maximum number of uniform locations for subroutines.",
  "GL_NAMED_STRING_LENGTH_ARB": "Specifies the length of a named string (ARB extension).",
  "GL_NAMED_STRING_TYPE_ARB": "Specifies the type of a named string (ARB extension).",
  "GL_MAX_BINDABLE_UNIFORM_SIZE_EXT": "Specifies the maximum size for bindable uniforms (EXT extension).",
  "GL_UNIFORM_BUFFER_EXT": "Specifies the uniform buffer target (EXT extension).",
  "GL_UNIFORM_BUFFER_BINDING_EXT": "Specifies the uniform buffer binding target (EXT extension).",
  "GL_LOW_FLOAT": "Specifies the low precision float type.",
  "GL_MEDIUM_FLOAT": "Specifies the medium precision float type.",
  "GL_HIGH_FLOAT": "Specifies the high precision float type.",
  "GL_LOW_INT": "Specifies the low precision integer type.",
  "GL_MEDIUM_INT": "Specifies the medium precision integer type.",
  "GL_HIGH_INT": "Specifies the high precision integer type.",
  "GL_UNSIGNED_INT_10_10_10_2_OES": "Specifies the unsigned integer format with 10 bits for each color channel and 2 bits for alpha (OES extension).",
  "GL_INT_10_10_10_2_OES": "Specifies the signed integer format with 10 bits for each color channel and 2 bits for alpha (OES extension).",
  "GL_SHADER_BINARY_FORMATS": "Specifies the formats of binary shaders.",
  "GL_NUM_SHADER_BINARY_FORMATS": "Specifies the number of supported shader binary formats.",
  "GL_SHADER_COMPILER": "Specifies whether the shader compiler is available.",
  "GL_MAX_VERTEX_UNIFORM_VECTORS": "Specifies the maximum number of vectors for vertex shader uniforms.",
  "GL_MAX_VARYING_VECTORS": "Specifies the maximum number of varying vectors between vertex and fragment shaders.",
  "GL_MAX_FRAGMENT_UNIFORM_VECTORS": "Specifies the maximum number of vectors for fragment shader uniforms.",
  "GL_RENDERBUFFER_COLOR_SAMPLES_NV": "Specifies the number of color samples in a renderbuffer for NV extension.",
  "GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV": "Specifies the maximum number of multisample coverage modes for NV extension.",
  "GL_MULTISAMPLE_COVERAGE_MODES_NV": "Specifies the multisample coverage modes for NV extension.",
  "GL_QUERY_WAIT": "Specifies a query that will wait for results.",
  "GL_QUERY_WAIT_NV": "Specifies a query that will wait for results (NV extension).",
  "GL_QUERY_NO_WAIT": "Specifies a query that will not wait for results.",
  "GL_QUERY_NO_WAIT_NV": "Specifies a query that will not wait for results (NV extension).",
  "GL_QUERY_BY_REGION_WAIT": "Specifies a region query that will wait for results.",
  "GL_QUERY_BY_REGION_WAIT_NV": "Specifies a region query that will wait for results (NV extension).",
  "GL_QUERY_BY_REGION_NO_WAIT": "Specifies a region query that will not wait for results.",
  "GL_QUERY_BY_REGION_NO_WAIT_NV": "Specifies a region query that will not wait for results (NV extension).",
  "GL_QUERY_WAIT_INVERTED": "Specifies an inverted query that will wait for results.",
  "GL_QUERY_NO_WAIT_INVERTED": "Specifies an inverted query that will not wait for results.",
  "GL_QUERY_BY_REGION_WAIT_INVERTED": "Specifies an inverted region query that will wait for results.",
  "GL_QUERY_BY_REGION_NO_WAIT_INVERTED": "Specifies an inverted region query that will not wait for results.",
  "GL_POLYGON_OFFSET_CLAMP": "Specifies the clamping value for polygon offset.",
  "GL_POLYGON_OFFSET_CLAMP_EXT": "Specifies the clamping value for polygon offset (EXT extension).",
  "GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS": "Specifies the maximum combined uniform components for tessellation control shaders.",
  "GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_EXT": "Specifies the maximum combined uniform components for tessellation control shaders (EXT extension).",
  "GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_OES": "Specifies the maximum combined uniform components for tessellation control shaders (OES extension).",
  "GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS": "Specifies the maximum combined uniform components for tessellation evaluation shaders.",
  "GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT": "Specifies the maximum combined uniform components for tessellation evaluation shaders (EXT extension).",
  "GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_OES": "Specifies the maximum combined uniform components for tessellation evaluation shaders (OES extension).",
  "GL_COLOR_SAMPLES_NV": "Specifies the number of color samples in NV extension.",
  "GL_TRANSFORM_FEEDBACK": "Specifies the transform feedback target.",
  "GL_TRANSFORM_FEEDBACK_NV": "Specifies the transform feedback target (NV extension).",
  "GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED": "Indicates that the transform feedback buffer is paused.",
  "GL_TRANSFORM_FEEDBACK_PAUSED": "Indicates that transform feedback is paused.",
  "GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV": "Indicates that the transform feedback buffer is paused (NV extension).",
  "GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE": "Indicates that the transform feedback buffer is active.",
  "GL_TRANSFORM_FEEDBACK_ACTIVE": "Indicates that transform feedback is active.",
  "GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV": "Indicates that the transform feedback buffer is active (NV extension).",
  "GL_TRANSFORM_FEEDBACK_BINDING": "Specifies the binding for transform feedback.",
  "GL_TRANSFORM_FEEDBACK_BINDING_NV": "Specifies the binding for transform feedback (NV extension).",
  "GL_FRAME_NV": "Specifies a frame (NV extension).",
  "GL_FIELDS_NV": "Specifies fields (NV extension).",
  "GL_CURRENT_TIME_NV": "Specifies the current time (NV extension).",
  "GL_TIMESTAMP": "Specifies the timestamp in OpenGL.",
  "GL_TIMESTAMP_EXT": "Specifies the timestamp (EXT extension).",
  "GL_NUM_FILL_STREAMS_NV": "Specifies the number of fill streams (NV extension).",
  "GL_PRESENT_TIME_NV": "Specifies the present time (NV extension).",
  "GL_PRESENT_DURATION_NV": "Specifies the present duration (NV extension).",
  "GL_DEPTH_COMPONENT16_NONLINEAR_NV": "Specifies the 16-bit nonlinear depth component format (NV extension).",
  "GL_PROGRAM_MATRIX_EXT": "Specifies a program matrix (EXT extension).",
  "GL_TRANSPOSE_PROGRAM_MATRIX_EXT": "Specifies a transposed program matrix (EXT extension).",
  "GL_PROGRAM_MATRIX_STACK_DEPTH_EXT": "Specifies the stack depth of program matrices (EXT extension).",
  "GL_TEXTURE_SWIZZLE_R": "Specifies the swizzle component for red in texture operations.",
  "GL_TEXTURE_SWIZZLE_R_EXT": "Specifies the swizzle component for red in texture operations (EXT extension).",
  "GL_TEXTURE_SWIZZLE_G": "Specifies the swizzle component for green in texture operations.",
  "GL_TEXTURE_SWIZZLE_G_EXT": "Specifies the swizzle component for green in texture operations (EXT extension).",
  "GL_TEXTURE_SWIZZLE_B": "Specifies the swizzle component for blue in texture operations.",
  "GL_TEXTURE_SWIZZLE_B_EXT": "Specifies the swizzle component for blue in texture operations (EXT extension).",
  "GL_TEXTURE_SWIZZLE_A": "Specifies the swizzle component for alpha in texture operations.",
  "GL_TEXTURE_SWIZZLE_A_EXT": "Specifies the swizzle component for alpha in texture operations (EXT extension).",
  "GL_TEXTURE_SWIZZLE_RGBA": "Specifies the swizzle components for RGBA in texture operations.",
  "GL_TEXTURE_SWIZZLE_RGBA_EXT": "Specifies the swizzle components for RGBA in texture operations (EXT extension).",
  "GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS": "Indicates the number of active subroutine uniform locations.",
  "GL_ACTIVE_SUBROUTINE_MAX_LENGTH": "Specifies the maximum length of an active subroutine.",
  "GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH": "Specifies the maximum length of an active subroutine uniform.",
  "GL_NUM_COMPATIBLE_SUBROUTINES": "Specifies the number of compatible subroutines.",
  "GL_COMPATIBLE_SUBROUTINES": "Indicates that subroutines in a shader program are compatible with each other.",
  "GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION": "Specifies the convention for interpreting the first vertex of a quad.",
  "GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT": "Specifies the quad vertex convention (EXT extension).",
  "GL_FIRST_VERTEX_CONVENTION": "Specifies the convention for interpreting the first vertex in vertex processing.",
  "GL_FIRST_VERTEX_CONVENTION_EXT": "Specifies the first vertex convention (EXT extension).",
  "GL_FIRST_VERTEX_CONVENTION_OES": "Specifies the first vertex convention (OES extension).",
  "GL_LAST_VERTEX_CONVENTION": "Specifies the convention for interpreting the last vertex in vertex processing.",
  "GL_LAST_VERTEX_CONVENTION_EXT": "Specifies the last vertex convention (EXT extension).",
  "GL_LAST_VERTEX_CONVENTION_OES": "Specifies the last vertex convention (OES extension).",
  "GL_PROVOKING_VERTEX": "Specifies which vertex of a primitive is considered the provoking vertex.",
  "GL_PROVOKING_VERTEX_EXT": "Specifies the provoking vertex (EXT extension).",
  "GL_SAMPLE_POSITION": "Specifies the position of samples for multisampling.",
  "GL_SAMPLE_POSITION_NV": "Specifies the sample position (NV extension).",
  "GL_SAMPLE_LOCATION_ARB": "Specifies the location of samples (ARB extension).",
  "GL_SAMPLE_LOCATION_NV": "Specifies the sample location (NV extension).",
  "GL_SAMPLE_MASK": "Specifies a mask that controls sample writing.",
  "GL_SAMPLE_MASK_NV": "Specifies a sample mask (NV extension).",
  "GL_SAMPLE_MASK_VALUE": "Specifies the sample mask value.",
  "GL_SAMPLE_MASK_VALUE_NV": "Specifies the sample mask value (NV extension).",
  "GL_TEXTURE_BINDING_RENDERBUFFER_NV": "Specifies the binding of a texture to a renderbuffer (NV extension).",
  "GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV": "Specifies the data store binding for renderbuffers (NV extension).",
  "GL_TEXTURE_RENDERBUFFER_NV": "Specifies the texture renderbuffer (NV extension).",
  "GL_SAMPLER_RENDERBUFFER_NV": "Specifies a sampler for renderbuffers (NV extension).",
  "GL_INT_SAMPLER_RENDERBUFFER_NV": "Specifies an integer sampler for renderbuffers (NV extension).",
  "GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV": "Specifies an unsigned integer sampler for renderbuffers (NV extension).",
  "GL_MAX_SAMPLE_MASK_WORDS": "Specifies the maximum number of words in a sample mask.",
  "GL_MAX_SAMPLE_MASK_WORDS_NV": "Specifies the maximum number of words in a sample mask (NV extension).",
  "GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV": "Specifies the maximum number of invocations of geometry programs (NV extension).",
  "GL_MAX_GEOMETRY_SHADER_INVOCATIONS": "Specifies the maximum number of invocations of a geometry shader.",
  "GL_MAX_GEOMETRY_SHADER_INVOCATIONS_EXT": "Specifies the maximum number of invocations of a geometry shader (EXT extension).",
  "GL_MAX_GEOMETRY_SHADER_INVOCATIONS_OES": "Specifies the maximum number of invocations of a geometry shader (OES extension).",
  "GL_MIN_FRAGMENT_INTERPOLATION_OFFSET": "Specifies the minimum offset for fragment interpolation.",
  "GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_OES": "Specifies the minimum offset for fragment interpolation (OES extension).",
  "GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV": "Specifies the minimum offset for fragment interpolation (NV extension).",
  "GL_MAX_FRAGMENT_INTERPOLATION_OFFSET": "Specifies the maximum offset for fragment interpolation.",
  "GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_OES": "Specifies the maximum offset for fragment interpolation (OES extension).",
  "GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV": "Specifies the maximum offset for fragment interpolation (NV extension).",
  "GL_FRAGMENT_INTERPOLATION_OFFSET_BITS": "Specifies the number of bits used for fragment interpolation offset.",
  "GL_FRAGMENT_INTERPOLATION_OFFSET_BITS_OES": "Specifies the number of bits used for fragment interpolation offset (OES extension).",
  "GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV": "Specifies the number of bits used for fragment program interpolation offset (NV extension).",
  "GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET": "Specifies the minimum offset for texture gather in programs.",
  "GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB": "Specifies the minimum offset for texture gather in programs (ARB extension).",
  "GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV": "Specifies the minimum offset for texture gather in programs (NV extension).",
  "GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET": "Specifies the maximum offset for texture gather in programs.",
  "GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB": "Specifies the maximum offset for texture gather in programs (ARB extension).",
  "GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV": "Specifies the maximum offset for texture gather in programs (NV extension).",
  "GL_MAX_MESH_UNIFORM_BLOCKS_NV": "Specifies the maximum number of uniform blocks for mesh shaders (NV extension).",
  "GL_MAX_MESH_TEXTURE_IMAGE_UNITS_NV": "Specifies the maximum number of texture image units for mesh shaders (NV extension).",
  "GL_MAX_MESH_IMAGE_UNIFORMS_NV": "Specifies the maximum number of image uniforms for mesh shaders (NV extension).",
  "GL_MAX_MESH_UNIFORM_COMPONENTS_NV": "Specifies the maximum number of uniform components for mesh shaders (NV extension).",
  "GL_MAX_MESH_ATOMIC_COUNTER_BUFFERS_NV": "Specifies the maximum number of atomic counter buffers for mesh shaders (NV extension).",
  "GL_MAX_MESH_ATOMIC_COUNTERS_NV": "Specifies the maximum number of atomic counters for mesh shaders (NV extension).",
  "GL_MAX_MESH_SHADER_STORAGE_BLOCKS_NV": "Specifies the maximum number of shader storage blocks for mesh shaders (NV extension).",
  "GL_MAX_COMBINED_MESH_UNIFORM_COMPONENTS_NV": "Specifies the maximum combined uniform components for mesh shaders (NV extension).",
  "GL_MAX_TASK_UNIFORM_BLOCKS_NV": "Specifies the maximum number of uniform blocks for task shaders (NV extension).",
  "GL_MAX_TASK_TEXTURE_IMAGE_UNITS_NV": "Specifies the maximum number of texture image units for task shaders (NV extension).",
  "GL_MAX_TASK_IMAGE_UNIFORMS_NV": "Specifies the maximum number of image uniforms for task shaders (NV extension).",
  "GL_MAX_TASK_UNIFORM_COMPONENTS_NV": "Specifies the maximum number of uniform components for task shaders (NV extension).",
  "GL_MAX_TASK_ATOMIC_COUNTER_BUFFERS_NV": "Specifies the maximum number of atomic counter buffers for task shaders (NV extension).",
  "GL_MAX_TASK_ATOMIC_COUNTERS_NV": "Specifies the maximum number of atomic counters for task shaders (NV extension).",
  "GL_MAX_TASK_SHADER_STORAGE_BLOCKS_NV": "Specifies the maximum number of shader storage blocks for task shaders (NV extension).",
  "GL_MAX_COMBINED_TASK_UNIFORM_COMPONENTS_NV": "Specifies the maximum combined uniform components for task shaders (NV extension).",
  "GL_MAX_TRANSFORM_FEEDBACK_BUFFERS": "Specifies the maximum number of transform feedback buffers.",
  "GL_MAX_VERTEX_STREAMS": "Specifies the maximum number of vertex streams.",
  "GL_PATCH_VERTICES": "Specifies the number of vertices per patch.",
  "GL_PATCH_VERTICES_EXT": "Specifies the number of vertices per patch (EXT extension).",
  "GL_PATCH_VERTICES_OES": "Specifies the number of vertices per patch (OES extension).",
  "GL_PATCH_DEFAULT_INNER_LEVEL": "Specifies the default inner tessellation level.",
  "GL_PATCH_DEFAULT_INNER_LEVEL_EXT": "Specifies the default inner tessellation level (EXT extension).",
  "GL_PATCH_DEFAULT_OUTER_LEVEL": "Specifies the default outer tessellation level.",
  "GL_PATCH_DEFAULT_OUTER_LEVEL_EXT": "Specifies the default outer tessellation level (EXT extension).",
  "GL_TESS_CONTROL_OUTPUT_VERTICES": "Specifies the output vertices from tessellation control shaders.",
  "GL_TESS_CONTROL_OUTPUT_VERTICES_EXT": "Specifies the output vertices from tessellation control shaders (EXT extension).",
  "GL_TESS_CONTROL_OUTPUT_VERTICES_OES": "Specifies the output vertices from tessellation control shaders (OES extension).",
  "GL_TESS_GEN_MODE": "Specifies the tessellation generation mode.",
  "GL_TESS_GEN_MODE_EXT": "Specifies the tessellation generation mode (EXT extension).",
  "GL_TESS_GEN_MODE_OES": "Specifies the tessellation generation mode (OES extension).",
  "GL_TESS_GEN_SPACING": "Specifies the tessellation generation spacing.",
  "GL_TESS_GEN_SPACING_EXT": "Specifies the tessellation generation spacing (EXT extension).",
  "GL_TESS_GEN_SPACING_OES": "Specifies the tessellation generation spacing (OES extension).",
  "GL_TESS_GEN_VERTEX_ORDER": "Specifies the vertex order for tessellation generation.",
  "GL_TESS_GEN_VERTEX_ORDER_EXT": "Specifies the vertex order for tessellation generation (EXT extension).",
  "GL_TESS_GEN_VERTEX_ORDER_OES": "Specifies the vertex order for tessellation generation (OES extension).",
  "GL_TESS_GEN_POINT_MODE": "Specifies the point mode for tessellation generation.",
  "GL_TESS_GEN_POINT_MODE_EXT": "Specifies the point mode for tessellation generation (EXT extension).",
  "GL_TESS_GEN_POINT_MODE_OES": "Specifies the point mode for tessellation generation (OES extension).",
  "GL_ISOLINES": "Specifies that tessellation should be done in isolines.",
  "GL_ISOLINES_EXT": "Specifies isoline tessellation (EXT extension).",
  "GL_ISOLINES_OES": "Specifies isoline tessellation (OES extension).",
  "GL_FRACTIONAL_ODD": "Specifies a fractional odd value.",
  "GL_FRACTIONAL_ODD_EXT": "Specifies a fractional odd value (EXT extension).",
  "GL_FRACTIONAL_ODD_OES": "Specifies a fractional odd value (OES extension).",
  "GL_FRACTIONAL_EVEN": "Specifies a fractional even value.",
  "GL_FRACTIONAL_EVEN_EXT": "Specifies a fractional even value (EXT extension).",
  "GL_FRACTIONAL_EVEN_OES": "Specifies a fractional even value (OES extension).",
  "GL_MAX_PATCH_VERTICES": "Specifies the maximum number of vertices per patch.",
  "GL_MAX_PATCH_VERTICES_EXT": "Specifies the maximum number of vertices per patch (EXT extension).",
  "GL_MAX_PATCH_VERTICES_OES": "Specifies the maximum number of vertices per patch (OES extension).",
  "GL_MAX_TESS_GEN_LEVEL": "Specifies the maximum tessellation generation level.",
  "GL_MAX_TESS_GEN_LEVEL_EXT": "Specifies the maximum tessellation generation level (EXT extension).",
  "GL_MAX_TESS_GEN_LEVEL_OES": "Specifies the maximum tessellation generation level for the OES extension.",
  "GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS": "Specifies the maximum number of uniform components for tessellation control shaders.",
  "GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_EXT": "Specifies the maximum number of uniform components for tessellation control shaders (EXT extension).",
  "GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_OES": "Specifies the maximum number of uniform components for tessellation control shaders (OES extension).",
  "GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS": "Specifies the maximum number of uniform components for tessellation evaluation shaders.",
  "GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT": "Specifies the maximum number of uniform components for tessellation evaluation shaders (EXT extension).",
  "GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_OES": "Specifies the maximum number of uniform components for tessellation evaluation shaders (OES extension).",
  "GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS": "Specifies the maximum number of texture image units for tessellation control shaders.",
  "GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_EXT": "Specifies the maximum number of texture image units for tessellation control shaders (EXT extension).",
  "GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_OES": "Specifies the maximum number of texture image units for tessellation control shaders (OES extension).",
  "GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS": "Specifies the maximum number of texture image units for tessellation evaluation shaders.",
  "GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_EXT": "Specifies the maximum number of texture image units for tessellation evaluation shaders (EXT extension).",
  "GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_OES": "Specifies the maximum number of texture image units for tessellation evaluation shaders (OES extension).",
  "GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS": "Specifies the maximum number of output components for tessellation control shaders.",
  "GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_EXT": "Specifies the maximum number of output components for tessellation control shaders (EXT extension).",
  "GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_OES": "Specifies the maximum number of output components for tessellation control shaders (OES extension).",
  "GL_MAX_TESS_PATCH_COMPONENTS": "Specifies the maximum number of components per patch.",
  "GL_MAX_TESS_PATCH_COMPONENTS_EXT": "Specifies the maximum number of components per patch (EXT extension).",
  "GL_MAX_TESS_PATCH_COMPONENTS_OES": "Specifies the maximum number of components per patch (OES extension).",
  "GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS": "Specifies the maximum total output components for tessellation control shaders.",
  "GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_EXT": "Specifies the maximum total output components for tessellation control shaders (EXT extension).",
  "GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_OES": "Specifies the maximum total output components for tessellation control shaders (OES extension).",
  "GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS": "Specifies the maximum output components for tessellation evaluation shaders.",
  "GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_EXT": "Specifies the maximum output components for tessellation evaluation shaders (EXT extension).",
  "GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_OES": "Specifies the maximum output components for tessellation evaluation shaders (OES extension).",
  "GL_TESS_EVALUATION_SHADER": "Specifies the tessellation evaluation shader.",
  "GL_TESS_EVALUATION_SHADER_EXT": "Specifies the tessellation evaluation shader (EXT extension).",
  "GL_TESS_EVALUATION_SHADER_OES": "Specifies the tessellation evaluation shader (OES extension).",
  "GL_TESS_CONTROL_SHADER": "Specifies the tessellation control shader.",
  "GL_TESS_CONTROL_SHADER_EXT": "Specifies the tessellation control shader (EXT extension).",
  "GL_TESS_CONTROL_SHADER_OES": "Specifies the tessellation control shader (OES extension).",
  "GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS": "Specifies the maximum number of uniform blocks for tessellation control shaders.",
  "GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_EXT": "Specifies the maximum number of uniform blocks for tessellation control shaders (EXT extension).",
  "GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_OES": "Specifies the maximum number of uniform blocks for tessellation control shaders (OES extension).",
  "GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS": "Specifies the maximum number of uniform blocks for tessellation evaluation shaders.",
  "GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_EXT": "Specifies the maximum number of uniform blocks for tessellation evaluation shaders (EXT extension).",
  "GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_OES": "Specifies the maximum number of uniform blocks for tessellation evaluation shaders (OES extension).",
  "GL_COMPRESSED_RGBA_BPTC_UNORM": "Specifies the compressed format for RGBA textures using BPTC compression.",
  "GL_COMPRESSED_RGBA_BPTC_UNORM_ARB": "Specifies the compressed format for RGBA textures using BPTC compression (ARB extension).",
  "GL_COMPRESSED_RGBA_BPTC_UNORM_EXT": "Specifies the compressed format for RGBA textures using BPTC compression (EXT extension).",
  "GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM": "Specifies the compressed format for sRGB textures with alpha using BPTC compression.",
  "GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB": "Specifies the compressed format for sRGB textures with alpha using BPTC compression (ARB extension).",
  "GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT": "Specifies the compressed format for sRGB textures with alpha using BPTC compression (EXT extension).",
  "GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT": "Specifies the compressed format for RGB textures with signed floating point data using BPTC compression.",
  "GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB": "Specifies the compressed format for RGB textures with signed floating point data using BPTC compression (ARB extension).",
  "GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT": "Specifies the compressed format for RGB textures with signed floating point data using BPTC compression (EXT extension).",
  "GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT": "Specifies the compressed format for RGB textures with unsigned floating point data using BPTC compression.",
  "GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB": "Specifies the compressed format for RGB textures with unsigned floating point data using BPTC compression (ARB extension).",
  "GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT": "Specifies the compressed format for RGB textures with unsigned floating point data using BPTC compression (EXT extension).",
  "GL_TRP_IMG": "Specifies a constant related to the TRP (Texture Render Pipeline) in the IMG extension.",
  "GL_TRP_ERROR_CONTEXT_RESET_IMG": "Specifies a context reset error for the TRP in the IMG extension.",
  "GL_TRP_UNSUPPORTED_CONTEXT_IMG": "Specifies an unsupported context for the TRP in the IMG extension.",
  "GL_PVRIC_SIGNATURE_MISMATCH_IMG": "Specifies a signature mismatch for PVRIC (PowerVR Texture Compression) in the IMG extension.",
  "GL_COVERAGE_COMPONENT_NV": "Specifies coverage components for the NV extension.",
  "GL_COVERAGE_COMPONENT4_NV": "Specifies four coverage components for the NV extension.",
  "GL_COVERAGE_ATTACHMENT_NV": "Specifies coverage attachment for the NV extension.",
  "GL_COVERAGE_BUFFERS_NV": "Specifies coverage buffers for the NV extension.",
  "GL_COVERAGE_SAMPLES_NV": "Specifies the number of coverage samples for the NV extension.",
  "GL_COVERAGE_ALL_FRAGMENTS_NV": "Specifies that all fragments are covered (NV extension).",
  "GL_COVERAGE_EDGE_FRAGMENTS_NV": "Specifies edge fragments for coverage (NV extension).",
  "GL_COVERAGE_AUTOMATIC_NV": "Specifies automatic coverage (NV extension).",
  "GL_INCLUSIVE_EXT": "Specifies inclusive coverage (EXT extension).",
  "GL_EXCLUSIVE_EXT": "Specifies exclusive coverage (EXT extension).",
  "GL_WINDOW_RECTANGLE_EXT": "Specifies window rectangle settings (EXT extension).",
  "GL_WINDOW_RECTANGLE_MODE_EXT": "Specifies the mode for window rectangles (EXT extension).",
  "GL_MAX_WINDOW_RECTANGLES_EXT": "Specifies the maximum number of window rectangles (EXT extension).",
  "GL_NUM_WINDOW_RECTANGLES_EXT": "Specifies the number of window rectangles (EXT extension).",
  "GL_BUFFER_GPU_ADDRESS_NV": "Specifies a buffer GPU address (NV extension).",
  "GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV": "Specifies unified vertex attribute arrays (NV extension).",
  "GL_ELEMENT_ARRAY_UNIFIED_NV": "Specifies unified element arrays (NV extension).",
  "GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV": "Specifies the address of vertex attribute arrays (NV extension).",
  "GL_VERTEX_ARRAY_ADDRESS_NV": "Specifies the address of vertex arrays (NV extension).",
  "GL_NORMAL_ARRAY_ADDRESS_NV": "Specifies the address of normal arrays (NV extension).",
  "GL_COLOR_ARRAY_ADDRESS_NV": "Specifies the address of color arrays (NV extension).",
  "GL_INDEX_ARRAY_ADDRESS_NV": "Specifies the address of index arrays (NV extension).",
  "GL_TEXTURE_COORD_ARRAY_ADDRESS_NV": "Specifies the address of texture coordinate arrays (NV extension).",
  "GL_EDGE_FLAG_ARRAY_ADDRESS_NV": "Specifies the address of edge flag arrays (NV extension).",
  "GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV": "Specifies the address of secondary color arrays (NV extension).",
  "GL_FOG_COORD_ARRAY_ADDRESS_NV": "Specifies the address of fog coordinate arrays (NV extension).",
  "GL_ELEMENT_ARRAY_ADDRESS_NV": "Specifies the address of element arrays (NV extension).",
  "GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV": "Specifies the length of vertex attribute arrays (NV extension).",
  "GL_VERTEX_ARRAY_LENGTH_NV": "Specifies the length of vertex arrays (NV extension).",
  "GL_NORMAL_ARRAY_LENGTH_NV": "Specifies the length of normal arrays (NV extension).",
  "GL_COLOR_ARRAY_LENGTH_NV": "Specifies the length of color arrays (NV extension).",
  "GL_INDEX_ARRAY_LENGTH_NV": "Specifies the length of index arrays (NV extension).",
  "GL_TEXTURE_COORD_ARRAY_LENGTH_NV": "Specifies the length of texture coordinate arrays (NV extension).",
  "GL_EDGE_FLAG_ARRAY_LENGTH_NV": "Specifies the length of edge flag arrays (NV extension).",
  "GL_SECONDARY_COLOR_ARRAY_LENGTH_NV": "Specifies the length of secondary color arrays (NV extension).",
  "GL_FOG_COORD_ARRAY_LENGTH_NV": "Specifies the length of fog coordinate arrays (NV extension).",
  "GL_ELEMENT_ARRAY_LENGTH_NV": "Specifies the length of element arrays (NV extension).",
  "GL_GPU_ADDRESS_NV": "Specifies the GPU address (NV extension).",
  "GL_MAX_SHADER_BUFFER_ADDRESS_NV": "Specifies the maximum shader buffer address (NV extension).",
  "GL_COPY_READ_BUFFER": "Specifies the buffer used for reading during a copy operation.",
  "GL_COPY_READ_BUFFER_NV": "Specifies the buffer used for reading during a copy operation (NV extension).",
  "GL_COPY_READ_BUFFER_BINDING": "Specifies the binding for the copy read buffer.",
  "GL_COPY_WRITE_BUFFER": "Specifies the buffer used for writing during a copy operation.",
  "GL_COPY_WRITE_BUFFER_NV": "Specifies the buffer used for writing during a copy operation (NV extension).",
  "GL_COPY_WRITE_BUFFER_BINDING": "Specifies the binding for the copy write buffer.",
  "GL_MAX_IMAGE_UNITS": "Specifies the maximum number of image units for shaders.",
  "GL_MAX_IMAGE_UNITS_EXT": "Specifies the maximum number of image units for shaders (EXT extension).",
  "GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS": "Specifies the maximum number of image units combined with fragment shader outputs.",
  "GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT": "Specifies the maximum number of image units combined with fragment shader outputs (EXT extension).",
  "GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES": "Specifies the maximum number of resources that can be used as outputs from a shader program.",
  "GL_IMAGE_BINDING_NAME": "Specifies the image binding name used in shaders.",
  "GL_IMAGE_BINDING_NAME_EXT": "Specifies the image binding name used in shaders for the EXT extension.",
  "GL_IMAGE_BINDING_LEVEL": "Specifies the mipmap level used for image binding.",
  "GL_IMAGE_BINDING_LEVEL_EXT": "Specifies the mipmap level used for image binding (EXT extension).",
  "GL_IMAGE_BINDING_LAYERED": "Indicates whether the image binding is layered.",
  "GL_IMAGE_BINDING_LAYERED_EXT": "Indicates whether the image binding is layered (EXT extension).",
  "GL_IMAGE_BINDING_LAYER": "Specifies the layer index for layered image binding.",
  "GL_IMAGE_BINDING_LAYER_EXT": "Specifies the layer index for layered image binding (EXT extension).",
  "GL_IMAGE_BINDING_ACCESS": "Specifies the access type for the image binding (read, write, etc.).",
  "GL_IMAGE_BINDING_ACCESS_EXT": "Specifies the access type for the image binding (EXT extension).",
  "GL_DRAW_INDIRECT_BUFFER": "Specifies a buffer used for indirect draw calls.",
  "GL_DRAW_INDIRECT_UNIFIED_NV": "Specifies a unified indirect draw buffer (NV extension).",
  "GL_DRAW_INDIRECT_ADDRESS_NV": "Specifies the address for indirect draw calls (NV extension).",
  "GL_DRAW_INDIRECT_LENGTH_NV": "Specifies the length for indirect draw calls (NV extension).",
  "GL_DRAW_INDIRECT_BUFFER_BINDING": "Specifies the binding point for the draw indirect buffer.",
  "GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV": "Specifies the maximum number of parameters for program subroutines (NV extension).",
  "GL_MAX_PROGRAM_SUBROUTINE_NUM_NV": "Specifies the maximum number of subroutines in a program (NV extension).",
  "GL_DOUBLE_MAT2": "Specifies a 2x2 matrix of double-precision floating-point values.",
  "GL_DOUBLE_MAT2_EXT": "Specifies a 2x2 matrix of double-precision floating-point values (EXT extension).",
  "GL_DOUBLE_MAT3": "Specifies a 3x3 matrix of double-precision floating-point values.",
  "GL_DOUBLE_MAT3_EXT": "Specifies a 3x3 matrix of double-precision floating-point values (EXT extension).",
  "GL_DOUBLE_MAT4": "Specifies a 4x4 matrix of double-precision floating-point values.",
  "GL_DOUBLE_MAT4_EXT": "Specifies a 4x4 matrix of double-precision floating-point values (EXT extension).",
  "GL_DOUBLE_MAT2x3": "Specifies a 2x3 matrix of double-precision floating-point values.",
  "GL_DOUBLE_MAT2x3_EXT": "Specifies a 2x3 matrix of double-precision floating-point values (EXT extension).",
  "GL_DOUBLE_MAT2x4": "Specifies a 2x4 matrix of double-precision floating-point values.",
  "GL_DOUBLE_MAT2x4_EXT": "Specifies a 2x4 matrix of double-precision floating-point values (EXT extension).",
  "GL_DOUBLE_MAT3x2": "Specifies a 3x2 matrix of double-precision floating-point values.",
  "GL_DOUBLE_MAT3x2_EXT": "Specifies a 3x2 matrix of double-precision floating-point values (EXT extension).",
  "GL_DOUBLE_MAT3x4": "Specifies a 3x4 matrix of double-precision floating-point values.",
  "GL_DOUBLE_MAT3x4_EXT": "Specifies a 3x4 matrix of double-precision floating-point values (EXT extension).",
  "GL_DOUBLE_MAT4x2": "Specifies a 4x2 matrix of double-precision floating-point values.",
  "GL_DOUBLE_MAT4x2_EXT": "Specifies a 4x2 matrix of double-precision floating-point values (EXT extension).",
  "GL_DOUBLE_MAT4x3": "Specifies a 4x3 matrix of double-precision floating-point values.",
  "GL_DOUBLE_MAT4x3_EXT": "Specifies a 4x3 matrix of double-precision floating-point values (EXT extension).",
  "GL_VERTEX_BINDING_BUFFER": "Specifies the buffer object bound to vertex attributes.",
  "GL_MALI_SHADER_BINARY_ARM": "Specifies a shader binary format for ARM architecture.",
  "GL_MALI_PROGRAM_BINARY_ARM": "Specifies a program binary format for ARM architecture.",
  "GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_FAST_SIZE_EXT": "Specifies the maximum fast size for shader pixel local storage (EXT extension).",
  "GL_SHADER_PIXEL_LOCAL_STORAGE_EXT": "Specifies the shader pixel local storage (EXT extension).",
  "GL_FETCH_PER_SAMPLE_ARM": "Indicates whether per-sample fetching is supported in ARM shaders.",
  "GL_FRAGMENT_SHADER_FRAMEBUFFER_FETCH_MRT_ARM": "Specifies framebuffer fetch capabilities for multiple render targets in ARM fragment shaders.",
  "GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_SIZE_EXT": "Specifies the maximum size for shader pixel local storage (EXT extension).",
  "GL_TEXTURE_ASTC_DECODE_PRECISION_EXT": "Specifies the decode precision for ASTC textures (EXT extension).",
  "GL_TEXTURE_UNNORMALIZED_COORDINATES_ARM": "Indicates support for unnormalized texture coordinates in ARM architecture.",
  "GL_NUM_SURFACE_COMPRESSION_FIXED_RATES_EXT": "Specifies the number of fixed rates for surface compression (EXT extension).",
  "GL_FRAGMENT_SHADING_RATE_NON_TRIVIAL_COMBINERS_SUPPORTED_EXT": "Indicates support for non-trivial combiners for fragment shading rates (EXT extension).",
  "GL_RED_SNORM": "Specifies a normalized signed red component format.",
  "GL_RG_SNORM": "Specifies a normalized signed red-green component format.",
  "GL_RGB_SNORM": "Specifies a normalized signed RGB component format.",
  "GL_RGBA_SNORM": "Specifies a normalized signed RGBA component format.",
  "GL_R8_SNORM": "Specifies an 8-bit normalized signed red component format.",
  "GL_RG8_SNORM": "Specifies an 8-bit normalized signed red-green component format.",
  "GL_RGB8_SNORM": "Specifies an 8-bit normalized signed RGB component format.",
  "GL_RGBA8_SNORM": "Specifies an 8-bit normalized signed RGBA component format.",
  "GL_R16_SNORM": "Specifies a 16-bit normalized signed red component format.",
  "GL_R16_SNORM_EXT": "Specifies a 16-bit normalized signed red component format (EXT extension).",
  "GL_RG16_SNORM": "Specifies a 16-bit normalized signed red-green component format.",
  "GL_RG16_SNORM_EXT": "Specifies a 16-bit normalized signed red-green component format (EXT extension).",
  "GL_RGB16_SNORM": "Specifies a 16-bit normalized signed RGB component format.",
  "GL_RGB16_SNORM_EXT": "Specifies a 16-bit normalized signed RGB component format (EXT extension).",
  "GL_RGBA16_SNORM": "Specifies a 16-bit normalized signed RGBA component format.",
  "GL_RGBA16_SNORM_EXT": "Specifies a 16-bit normalized signed RGBA component format (EXT extension).",
  "GL_SIGNED_NORMALIZED": "Indicates that the texture format is signed normalized.",
  "GL_PRIMITIVE_RESTART": "Indicates the use of primitive restart in drawing commands.",
  "GL_PRIMITIVE_RESTART_INDEX": "Specifies the index used for primitive restart.",
  "GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB": "Specifies the maximum number of components that can be gathered from a texture in a shader program (ARB extension).",
  "GL_PERFMON_GLOBAL_MODE_QCOM": "Specifies the global performance monitoring mode in the QCOM extension.",
  "GL_MAX_SHADER_SUBSAMPLED_IMAGE_UNITS_QCOM": "Specifies the maximum number of subsampled image units available in the QCOM extension.",
  "GL_BINNING_CONTROL_HINT_QCOM": "Specifies a hint for binning control in the QCOM extension.",
  "GL_CPU_OPTIMIZED_QCOM": "Indicates CPU optimizations in the QCOM extension.",
  "GL_GPU_OPTIMIZED_QCOM": "Indicates GPU optimizations in the QCOM extension.",
  "GL_RENDER_DIRECT_TO_FRAMEBUFFER_QCOM": "Indicates support for rendering directly to framebuffer in the QCOM extension.",
  "GL_GPU_DISJOINT_EXT": "Specifies that the GPU is in a disjoint state (EXT extension).",
  "GL_SR8_EXT": "Specifies a texture format for 8-bit signed red (EXT extension).",
  "GL_SRG8_EXT": "Specifies a texture format for 8-bit signed red-green (EXT extension).",
  "GL_TEXTURE_FORMAT_SRGB_OVERRIDE_EXT": "Specifies the texture format with sRGB override (EXT extension).",
  "GL_SHADER_BINARY_VIV": "Specifies a shader binary format for VIV architecture.",
  "GL_INT8_NV": "Specifies an 8-bit integer format (NV extension).",
  "GL_INT8_VEC2_NV": "Specifies a 2-component vector of 8-bit integers (NV extension).",
  "GL_INT8_VEC3_NV": "Specifies a 3-component vector of 8-bit integers (NV extension).",
  "GL_INT8_VEC4_NV": "Specifies a 4-component vector of 8-bit integers (NV extension).",
  "GL_INT16_NV": "Specifies a 16-bit integer format (NV extension).",
  "GL_INT16_VEC2_NV": "Specifies a 2-component vector of 16-bit integers (NV extension).",
  "GL_INT16_VEC3_NV": "Specifies a 3-component vector of 16-bit integers (NV extension).",
  "GL_INT16_VEC4_NV": "Specifies a 4-component vector of 16-bit integers (NV extension).",
  "GL_INT64_VEC2_ARB": "Specifies a 2-component vector of 64-bit integers (ARB extension).",
  "GL_INT64_VEC2_NV": "Specifies a 2-component vector of 64-bit integers (NV extension).",
  "GL_INT64_VEC3_ARB": "Specifies a 3-component vector of 64-bit integers (ARB extension).",
  "GL_INT64_VEC3_NV": "Specifies a 3-component vector of 64-bit integers (NV extension).",
  "GL_INT64_VEC4_ARB": "Specifies a 4-component vector of 64-bit integers (ARB extension).",
  "GL_INT64_VEC4_NV": "Specifies a 4-component vector of 64-bit integers (NV extension).",
  "GL_UNSIGNED_INT8_NV": "Specifies an unsigned 8-bit integer format (NV extension).",
  "GL_UNSIGNED_INT8_VEC2_NV": "Specifies a 2-component vector of unsigned 8-bit integers (NV extension).",
  "GL_UNSIGNED_INT8_VEC3_NV": "Specifies a 3-component vector of unsigned 8-bit integers (NV extension).",
  "GL_UNSIGNED_INT8_VEC4_NV": "Specifies a 4-component vector of unsigned 8-bit integers (NV extension).",
  "GL_UNSIGNED_INT16_NV": "Specifies an unsigned 16-bit integer format (NV extension).",
  "GL_UNSIGNED_INT16_VEC2_NV": "Specifies a 2-component vector of unsigned 16-bit integers (NV extension).",
  "GL_UNSIGNED_INT16_VEC3_NV": "Specifies a 3-component vector of unsigned 16-bit integers (NV extension).",
  "GL_UNSIGNED_INT16_VEC4_NV": "Specifies a 4-component vector of unsigned 16-bit integers (NV extension).",
  "GL_UNSIGNED_INT64_VEC2_ARB": "Specifies a 2-component vector of unsigned 64-bit integers (ARB extension).",
  "GL_UNSIGNED_INT64_VEC2_NV": "Specifies a 2-component vector of unsigned 64-bit integers (NV extension).",
  "GL_UNSIGNED_INT64_VEC3_ARB": "Specifies a 3-component vector of unsigned 64-bit integers (ARB extension).",
  "GL_UNSIGNED_INT64_VEC3_NV": "Specifies a 3-component vector of unsigned 64-bit integers (NV extension).",
  "GL_UNSIGNED_INT64_VEC4_ARB": "Specifies a 4-component vector of unsigned 64-bit integers (ARB extension).",
  "GL_UNSIGNED_INT64_VEC4_NV": "Specifies a 4-component vector of unsigned 64-bit integers (NV extension).",
  "GL_FLOAT16_NV": "Specifies a 16-bit floating-point format (NV extension).",
  "GL_FLOAT16_VEC2_NV": "Specifies a 2-component vector of 16-bit floating-point values (NV extension).",
  "GL_FLOAT16_VEC3_NV": "Specifies a 3-component vector of 16-bit floating-point values (NV extension).",
  "GL_FLOAT16_VEC4_NV": "Specifies a 4-component vector of 16-bit floating-point values (NV extension).",
  "GL_DOUBLE_VEC2": "Specifies a 2-component vector of double-precision floating-point values.",
  "GL_DOUBLE_VEC2_EXT": "Specifies a 2-component vector of double-precision floating-point values (EXT extension).",
  "GL_DOUBLE_VEC3": "Specifies a 3-component vector of double-precision floating-point values.",
  "GL_DOUBLE_VEC3_EXT": "Specifies a 3-component vector of double-precision floating-point values (EXT extension).",
  "GL_DOUBLE_VEC4": "Specifies a 4-component vector of double-precision floating-point values.",
  "GL_DOUBLE_VEC4_EXT": "Specifies a 4-component vector of double-precision floating-point values (EXT extension).",
  "GL_SAMPLER_BUFFER_AMD": "Specifies a sampler for buffer textures in the AMD extension.",
  "GL_INT_SAMPLER_BUFFER_AMD": "Specifies an integer sampler for buffer textures in the AMD extension.",
  "GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD": "Specifies an unsigned integer sampler for buffer textures in the AMD extension.",
  "GL_TESSELLATION_MODE_AMD": "Specifies the tessellation mode in the AMD extension.",
  "GL_TESSELLATION_FACTOR_AMD": "Specifies the tessellation factor in the AMD extension.",
  "GL_DISCRETE_AMD": "Indicates discrete tessellation in the AMD extension.",
  "GL_CONTINUOUS_AMD": "Indicates continuous tessellation in the AMD extension.",
  "GL_TEXTURE_CUBE_MAP_ARRAY": "Specifies a texture format for cube map arrays.",
  "GL_TEXTURE_CUBE_MAP_ARRAY_ARB": "Specifies a texture format for cube map arrays (ARB extension).",
  "GL_TEXTURE_CUBE_MAP_ARRAY_EXT": "Specifies a texture format for cube map arrays (EXT extension).",
  "GL_TEXTURE_CUBE_MAP_ARRAY_OES": "Specifies a texture format for cube map arrays (OES extension).",
  "GL_TEXTURE_BINDING_CUBE_MAP_ARRAY": "Specifies the currently bound cube map array texture.",
  "GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB": "Specifies the currently bound cube map array texture (ARB extension).",
  "GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_EXT": "Specifies the currently bound cube map array texture (EXT extension).",
  "GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_OES": "Specifies the currently bound cube map array texture (OES extension).",
  "GL_PROXY_TEXTURE_CUBE_MAP_ARRAY": "Specifies a proxy texture for cube map arrays.",
  "GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB": "Specifies a proxy texture for cube map arrays (ARB extension).",
  "GL_SAMPLER_CUBE_MAP_ARRAY": "Specifies a sampler for cube map arrays.",
  "GL_SAMPLER_CUBE_MAP_ARRAY_ARB": "Specifies a sampler for cube map arrays (ARB extension).",
  "GL_SAMPLER_CUBE_MAP_ARRAY_EXT": "Specifies a sampler for cube map arrays (EXT extension).",
  "GL_SAMPLER_CUBE_MAP_ARRAY_OES": "Specifies a sampler for cube map arrays (OES extension).",
  "GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW": "Specifies a shadow sampler for cube map arrays.",
  "GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB": "Specifies a shadow sampler for cube map arrays (ARB extension).",
  "GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_EXT": "Specifies a shadow sampler for cube map arrays (EXT extension).",
  "GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_OES": "Specifies a shadow sampler for cube map arrays (OES extension).",
  "GL_INT_SAMPLER_CUBE_MAP_ARRAY": "Specifies an integer sampler for cube map arrays.",
  "GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB": "Specifies an integer sampler for cube map arrays (ARB extension).",
  "GL_INT_SAMPLER_CUBE_MAP_ARRAY_EXT": "Specifies an integer sampler for cube map arrays (EXT extension).",
  "GL_INT_SAMPLER_CUBE_MAP_ARRAY_OES": "Specifies an integer sampler for cube map arrays (OES extension).",
  "GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY": "Specifies an unsigned integer sampler for cube map arrays.",
  "GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB": "Specifies an unsigned integer sampler for cube map arrays (ARB extension).",
  "GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_EXT": "Specifies an unsigned integer sampler for cube map arrays (EXT extension).",
  "GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_OES": "Specifies an unsigned integer sampler for cube map arrays (OES extension).",
  "GL_ALPHA_SNORM": "Specifies a normalized signed alpha component format.",
  "GL_LUMINANCE_SNORM": "Specifies a normalized signed luminance component format.",
  "GL_LUMINANCE_ALPHA_SNORM": "Specifies a normalized signed luminance-alpha component format.",
  "GL_INTENSITY_SNORM": "Specifies a normalized signed intensity component format.",
  "GL_ALPHA8_SNORM": "Specifies an 8-bit normalized signed alpha component format.",
  "GL_LUMINANCE8_SNORM": "Specifies an 8-bit normalized signed luminance component format.",
  "GL_LUMINANCE8_ALPHA8_SNORM": "Specifies an 8-bit normalized signed luminance-alpha component format.",
  "GL_INTENSITY8_SNORM": "Specifies an 8-bit normalized signed intensity component format.",
  "GL_ALPHA16_SNORM": "Specifies a 16-bit normalized signed alpha component format.",
  "GL_LUMINANCE16_SNORM": "Specifies a 16-bit normalized signed luminance component format.",
  "GL_LUMINANCE16_ALPHA16_SNORM": "Specifies a 16-bit normalized signed luminance-alpha component format.",
  "GL_INTENSITY16_SNORM": "Specifies a 16-bit normalized signed intensity component format.",
  "GL_FACTOR_MIN_AMD": "Specifies the minimum factor for AMD-specific operations.",
  "GL_FACTOR_MAX_AMD": "Specifies the maximum factor for AMD-specific operations.",
  "GL_DEPTH_CLAMP_NEAR_AMD": "Specifies the near depth clamp for AMD-specific operations.",
  "GL_DEPTH_CLAMP_FAR_AMD": "Specifies the far depth clamp for AMD-specific operations.",
  "GL_VIDEO_BUFFER_NV": "Specifies a buffer for video data (NV extension).",
  "GL_VIDEO_BUFFER_BINDING_NV": "Specifies the currently bound video buffer (NV extension).",
  "GL_FIELD_UPPER_NV": "Indicates the upper field of video (NV extension).",
  "GL_FIELD_LOWER_NV": "Indicates the lower field of video (NV extension).",
  "GL_NUM_VIDEO_CAPTURE_STREAMS_NV": "Specifies the number of video capture streams (NV extension).",
  "GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV": "Specifies the status of the next video capture buffer (NV extension).",
  "GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV": "Indicates support for 4:2:2 video capture format (NV extension).",
  "GL_LAST_VIDEO_CAPTURE_STATUS_NV": "Specifies the last status of the video capture (NV extension).",
  "GL_VIDEO_BUFFER_PITCH_NV": "Specifies the pitch of the video buffer (NV extension).",
  "GL_VIDEO_COLOR_CONVERSION_MATRIX_NV": "Specifies the color conversion matrix for video (NV extension).",
  "GL_VIDEO_COLOR_CONVERSION_MAX_NV": "Specifies the maximum values for color conversion (NV extension).",
  "GL_VIDEO_COLOR_CONVERSION_MIN_NV": "Specifies the minimum values for color conversion (NV extension).",
  "GL_VIDEO_COLOR_CONVERSION_OFFSET_NV": "Specifies the offset for color conversion (NV extension).",
  "GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV": "Specifies the internal format of the video buffer (NV extension).",
  "GL_PARTIAL_SUCCESS_NV": "Indicates partial success in video operations (NV extension).",
  "GL_SUCCESS_NV": "Indicates success in video operations (NV extension).",
  "GL_FAILURE_NV": "Indicates failure in video operations (NV extension).",
  "GL_YCBYCR8_422_NV": "Specifies a YCbCr 4:2:2 format for video (NV extension).",
  "GL_YCBAYCR8A_4224_NV": "Specifies a YCbCr 4:2:2:4 format for video (NV extension).",
  "GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV": "Specifies a YCbCr 4:2:2 format with 6:10:6 bit depth for video (NV extension).",
  "GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV": "Specifies a YCbCr 4:2:2:4 format with 6:10:6:10 bit depth for video (NV extension).",
  "GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV": "Specifies a YCbCr 4:2:2 format with 4:12:4 bit depth for video (NV extension).",
  "GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV": "Specifies a YCbCr 4:2:2:4 format with 4:12:4:12 bit depth for video (NV extension).",
  "GL_Z4Y12Z4CB12Z4CR12_444_NV": "Specifies a YCbCr 4:4:4 format with 4:12:4 bit depth for video (NV extension).",
  "GL_VIDEO_CAPTURE_FRAME_WIDTH_NV": "Specifies the width of the video capture frame (NV extension).",
  "GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV": "Specifies the height of the video capture frame (NV extension).",
  "GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV": "Specifies the upper field height of the video capture (NV extension).",
  "GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV": "Specifies the lower field height of the video capture (NV extension).",
  "GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV": "Specifies the surface origin for video capture (NV extension).",
  "GL_TEXTURE_COVERAGE_SAMPLES_NV": "Specifies the number of texture coverage samples (NV extension).",
  "GL_TEXTURE_COLOR_SAMPLES_NV": "Specifies the number of texture color samples (NV extension).",
  "GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX": "Specifies the amount of dedicated video memory available in the NVX extension.",
  "GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX": "Specifies the total available GPU memory in the NVX extension.",
  "GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX": "Specifies the currently available video memory in the NVX extension.",
  "GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX": "Indicates the number of memory evictions in the NVX extension.",
  "GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX": "Specifies the amount of evicted memory in the NVX extension.",
  "GL_IMAGE_1D": "Specifies a 1D image format.",
  "GL_IMAGE_1D_EXT": "Specifies a 1D image format (EXT extension).",
  "GL_IMAGE_2D": "Specifies a 2D image format.",
  "GL_IMAGE_2D_EXT": "Specifies a 2D image format (EXT extension).",
  "GL_IMAGE_3D": "Specifies a 3D image format.",
  "GL_IMAGE_3D_EXT": "Specifies a 3D image format (EXT extension).",
  "GL_IMAGE_2D_RECT": "Specifies a 2D rectangular image format.",
  "GL_IMAGE_2D_RECT_EXT": "Specifies a 2D rectangular image format (EXT extension).",
  "GL_IMAGE_CUBE": "Specifies a cube map image format.",
  "GL_IMAGE_CUBE_EXT": "Specifies a cube map image format (EXT extension).",
  "GL_IMAGE_BUFFER": "Specifies a buffer image format.",
  "GL_IMAGE_BUFFER_EXT": "Specifies a buffer image format (EXT extension).",
  "GL_IMAGE_BUFFER_OES": "Specifies a buffer image format (OES extension).",
  "GL_IMAGE_1D_ARRAY": "Specifies a 1D array image format.",
  "GL_IMAGE_1D_ARRAY_EXT": "Specifies a 1D array image format (EXT extension).",
  "GL_IMAGE_2D_ARRAY": "Specifies a 2D array image format.",
  "GL_IMAGE_2D_ARRAY_EXT": "Specifies a 2D array image format (EXT extension).",
  "GL_IMAGE_CUBE_MAP_ARRAY": "Specifies a cube map array image format.",
  "GL_IMAGE_CUBE_MAP_ARRAY_EXT": "Specifies a cube map array image format (EXT extension).",
  "GL_IMAGE_CUBE_MAP_ARRAY_OES": "Specifies a cube map array image format (OES extension).",
  "GL_IMAGE_2D_MULTISAMPLE": "Specifies a 2D multisample image format.",
  "GL_IMAGE_2D_MULTISAMPLE_EXT": "Specifies a 2D multisample image format (EXT extension).",
  "GL_IMAGE_2D_MULTISAMPLE_ARRAY": "Specifies a 2D multisample array image format.",
  "GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT": "Specifies a 2D multisample array image format (EXT extension).",
  "GL_INT_IMAGE_1D": "Specifies an integer 1D image format.",
  "GL_INT_IMAGE_1D_EXT": "Specifies an integer 1D image format (EXT extension).",
  "GL_INT_IMAGE_2D": "Specifies an integer 2D image format.",
  "GL_INT_IMAGE_2D_EXT": "Specifies an integer 2D image format (EXT extension).",
  "GL_INT_IMAGE_3D": "Specifies an integer 3D image format.",
  "GL_INT_IMAGE_3D_EXT": "Specifies an integer 3D image format (EXT extension).",
  "GL_INT_IMAGE_2D_RECT": "Specifies an integer 2D rectangular image format.",
  "GL_INT_IMAGE_2D_RECT_EXT": "Specifies an integer 2D rectangular image format (EXT extension).",
  "GL_INT_IMAGE_CUBE": "Specifies an integer cube map image format.",
  "GL_INT_IMAGE_CUBE_EXT": "Specifies an integer cube map image format (EXT extension).",
  "GL_INT_IMAGE_BUFFER": "Specifies an integer buffer image format.",
  "GL_INT_IMAGE_BUFFER_EXT": "Specifies an integer buffer image format (EXT extension).",
  "GL_INT_IMAGE_BUFFER_OES": "Specifies an integer buffer image format (OES extension).",
  "GL_INT_IMAGE_1D_ARRAY": "Specifies an integer 1D array image format.",
  "GL_INT_IMAGE_1D_ARRAY_EXT": "Specifies an integer 1D array image format (EXT extension).",
  "GL_INT_IMAGE_2D_ARRAY": "Specifies an integer 2D array image format.",
  "GL_INT_IMAGE_2D_ARRAY_EXT": "Specifies an integer 2D array image format (EXT extension).",
  "GL_INT_IMAGE_CUBE_MAP_ARRAY": "Specifies an integer cube map array image format.",
  "GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT": "Specifies an integer cube map array image format (EXT extension).",
  "GL_INT_IMAGE_CUBE_MAP_ARRAY_OES": "Specifies an integer cube map array image format (OES extension).",
  "GL_INT_IMAGE_2D_MULTISAMPLE": "Specifies an integer 2D multisample image format.",
  "GL_INT_IMAGE_2D_MULTISAMPLE_EXT": "Specifies an integer 2D multisample image format (EXT extension).",
  "GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY": "Specifies an integer 2D multisample array image format.",
  "GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT": "Specifies an integer 2D multisample array image format (EXT extension).",
  "GL_UNSIGNED_INT_IMAGE_1D": "Specifies an unsigned integer 1D image format.",
  "GL_UNSIGNED_INT_IMAGE_1D_EXT": "Specifies an unsigned integer 1D image format (EXT extension).",
  "GL_UNSIGNED_INT_IMAGE_2D": "Specifies an unsigned integer 2D image format.",
  "GL_UNSIGNED_INT_IMAGE_2D_EXT": "Specifies an unsigned integer 2D image format (EXT extension).",
  "GL_UNSIGNED_INT_IMAGE_3D": "Specifies an unsigned integer 3D image format.",
  "GL_UNSIGNED_INT_IMAGE_3D_EXT": "Specifies an unsigned integer 3D image format (EXT extension).",
  "GL_UNSIGNED_INT_IMAGE_2D_RECT": "Specifies an unsigned integer 2D rectangular image format.",
  "GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT": "Specifies an unsigned integer 2D rectangular image format (EXT extension).",
  "GL_UNSIGNED_INT_IMAGE_CUBE": "Specifies an unsigned integer cube map image format.",
  "GL_UNSIGNED_INT_IMAGE_CUBE_EXT": "Specifies an unsigned integer cube map image format (EXT extension).",
  "GL_UNSIGNED_INT_IMAGE_BUFFER": "Specifies an unsigned integer buffer image format.",
  "GL_UNSIGNED_INT_IMAGE_BUFFER_EXT": "Specifies an unsigned integer buffer image format (EXT extension).",
  "GL_UNSIGNED_INT_IMAGE_BUFFER_OES": "Specifies an unsigned integer buffer image format (OES extension).",
  "GL_UNSIGNED_INT_IMAGE_1D_ARRAY": "Specifies an unsigned integer 1D array image format.",
  "GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT": "Specifies an unsigned integer 1D array image format (EXT extension).",
  "GL_UNSIGNED_INT_IMAGE_2D_ARRAY": "Specifies an unsigned integer 2D array image format.",
  "GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT": "Specifies an unsigned integer 2D array image format (EXT extension).",
  "GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY": "Specifies an unsigned integer cube map array image format.",
  "GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT": "Specifies an unsigned integer cube map array image format (EXT extension).",
  "GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_OES": "Specifies an unsigned integer cube map array image format (OES extension).",
  "GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE": "Specifies an unsigned integer 2D multisample image format.",
  "GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT": "Specifies an unsigned integer 2D multisample image format (EXT extension).",
  "GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY": "Specifies an unsigned integer 2D multisample array image format.",
  "GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT": "Specifies an unsigned integer 2D multisample array image format (EXT extension).",
  "GL_MAX_IMAGE_SAMPLES": "Specifies the maximum number of image samples.",
  "GL_MAX_IMAGE_SAMPLES_EXT": "Specifies the maximum number of image samples (EXT extension).",
  "GL_IMAGE_BINDING_FORMAT": "Specifies the format for image binding.",
  "GL_IMAGE_BINDING_FORMAT_EXT": "Specifies the format for image binding (EXT extension).",
  "GL_RGB10_A2UI": "Specifies a 10-2-10-2 unsigned integer format for images.",
  "GL_PATH_FORMAT_SVG_NV": "Specifies the SVG path format (NV extension).",
  "GL_PATH_FORMAT_PS_NV": "Specifies the PostScript path format (NV extension).",
  "GL_STANDARD_FONT_NAME_NV": "Specifies the standard font name (NV extension).",
  "GL_SYSTEM_FONT_NAME_NV": "Specifies the system font name (NV extension).",
  "GL_FILE_NAME_NV": "Specifies the file name (NV extension).",
  "GL_PATH_STROKE_WIDTH_NV": "Specifies the stroke width for paths (NV extension).",
  "GL_PATH_END_CAPS_NV": "Specifies the end caps style for paths (NV extension).",
  "GL_PATH_INITIAL_END_CAP_NV": "Specifies the initial end cap style for paths (NV extension).",
  "GL_PATH_TERMINAL_END_CAP_NV": "Specifies the terminal end cap style for paths (NV extension).",
  "GL_PATH_JOIN_STYLE_NV": "Specifies the join style for path segments (NV extension).",
  "GL_PATH_MITER_LIMIT_NV": "Specifies the miter limit for paths (NV extension).",
  "GL_PATH_DASH_CAPS_NV": "Specifies the dash caps style for dashed paths (NV extension).",
  "GL_PATH_INITIAL_DASH_CAP_NV": "Specifies the initial dash cap style for dashed paths (NV extension).",
  "GL_PATH_TERMINAL_DASH_CAP_NV": "Specifies the terminal dash cap style for dashed paths (NV extension).",
  "GL_PATH_DASH_OFFSET_NV": "Specifies the dash offset for dashed paths (NV extension).",
  "GL_PATH_CLIENT_LENGTH_NV": "Specifies the client length for paths (NV extension).",
  "GL_PATH_FILL_MODE_NV": "Specifies the fill mode for paths (NV extension).",
  "GL_PATH_FILL_MASK_NV": "Specifies the fill mask for paths (NV extension).",
  "GL_PATH_FILL_COVER_MODE_NV": "Specifies the fill cover mode for paths (NV extension).",
  "GL_PATH_STROKE_COVER_MODE_NV": "Specifies the cover mode for strokes in path rendering.",
  "GL_PATH_STROKE_MASK_NV": "Defines the mask used for path stroke rendering.",
  "GL_COUNT_UP_NV": "Increments the count for certain operations in NV path rendering.",
  "GL_COUNT_DOWN_NV": "Decrements the count for certain operations in NV path rendering.",
  "GL_PATH_OBJECT_BOUNDING_BOX_NV": "Specifies the bounding box for a path object.",
  "GL_CONVEX_HULL_NV": "Specifies the convex hull calculation mode for path rendering.",
  "GL_BOUNDING_BOX_NV": "Defines the bounding box for path or object.",
  "GL_TRANSLATE_X_NV": "Specifies the X-axis translation in NV path transformations.",
  "GL_TRANSLATE_Y_NV": "Specifies the Y-axis translation in NV path transformations.",
  "GL_TRANSLATE_2D_NV": "Specifies a 2D translation in NV path transformations.",
  "GL_TRANSLATE_3D_NV": "Specifies a 3D translation in NV path transformations.",
  "GL_AFFINE_2D_NV": "Specifies a 2D affine transformation.",
  "GL_AFFINE_3D_NV": "Specifies a 3D affine transformation.",
  "GL_TRANSPOSE_AFFINE_2D_NV": "Specifies the transpose of a 2D affine transformation.",
  "GL_TRANSPOSE_AFFINE_3D_NV": "Specifies the transpose of a 3D affine transformation.",
  "GL_UTF8_NV": "Specifies UTF-8 encoding for text in path rendering.",
  "GL_UTF16_NV": "Specifies UTF-16 encoding for text in path rendering.",
  "GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV": "Defines the bounding box encompassing multiple bounding boxes.",
  "GL_PATH_COMMAND_COUNT_NV": "Specifies the number of commands in a path.",
  "GL_PATH_COORD_COUNT_NV": "Specifies the number of coordinates in a path.",
  "GL_PATH_DASH_ARRAY_COUNT_NV": "Specifies the number of dashes in a dash array.",
  "GL_PATH_COMPUTED_LENGTH_NV": "Specifies the computed length of a path.",
  "GL_PATH_FILL_BOUNDING_BOX_NV": "Defines the bounding box for path fill operations.",
  "GL_PATH_STROKE_BOUNDING_BOX_NV": "Defines the bounding box for path stroke operations.",
  "GL_SQUARE_NV": "Specifies a square end cap style for strokes.",
  "GL_ROUND_NV": "Specifies a round end cap style for strokes.",
  "GL_TRIANGULAR_NV": "Specifies a triangular end cap style for strokes.",
  "GL_BEVEL_NV": "Specifies a bevel join style for strokes.",
  "GL_MITER_REVERT_NV": "Specifies a miter join with reversion for strokes.",
  "GL_MITER_TRUNCATE_NV": "Specifies a truncated miter join for strokes.",
  "GL_SKIP_MISSING_GLYPH_NV": "Specifies behavior to skip rendering of missing glyphs.",
  "GL_USE_MISSING_GLYPH_NV": "Specifies behavior to use a default glyph for missing characters.",
  "GL_PATH_ERROR_POSITION_NV": "Specifies the position of an error in a path command sequence.",
  "GL_PATH_FOG_GEN_MODE_NV": "Specifies the fog generation mode for path rendering.",
  "GL_ACCUM_ADJACENT_PAIRS_NV": "Accumulates adjacent path pairs in certain operations.",
  "GL_ADJACENT_PAIRS_NV": "Specifies adjacent pairs for path operations.",
  "GL_FIRST_TO_REST_NV": "Specifies operations from the first element to the rest.",
  "GL_PATH_GEN_MODE_NV": "Specifies the mode of path generation.",
  "GL_PATH_GEN_COEFF_NV": "Defines the coefficients for path generation.",
  "GL_PATH_GEN_COLOR_FORMAT_NV": "Specifies the color format for path generation.",
  "GL_PATH_GEN_COMPONENTS_NV": "Specifies the components used in path generation.",
  "GL_PATH_DASH_OFFSET_RESET_NV": "Resets the dash offset for path rendering.",
  "GL_MOVE_TO_RESETS_NV": "Specifies if the 'move to' operation resets the dash pattern.",
  "GL_MOVE_TO_CONTINUES_NV": "Specifies if the 'move to' operation continues the dash pattern.",
  "GL_PATH_STENCIL_FUNC_NV": "Specifies the stencil function for path rendering.",
  "GL_PATH_STENCIL_REF_NV": "Specifies the reference value for stencil testing in path rendering.",
  "GL_PATH_STENCIL_VALUE_MASK_NV": "Specifies the mask for stencil values in path rendering.",
  "GL_SCALED_RESOLVE_FASTEST_EXT": "Specifies the fastest mode for scaled resolve.",
  "GL_SCALED_RESOLVE_NICEST_EXT": "Specifies the nicest mode for scaled resolve.",
  "GL_MIN_MAP_BUFFER_ALIGNMENT": "Specifies the minimum alignment for buffer mapping.",
  "GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV": "Specifies the depth offset factor for stencil operations in path rendering.",
  "GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV": "Specifies the depth offset units for stencil operations in path rendering.",
  "GL_PATH_COVER_DEPTH_FUNC_NV": "Specifies the depth function for path cover rendering.",
  "GL_IMAGE_FORMAT_COMPATIBILITY_TYPE": "Specifies the compatibility type for image formats.",
  "GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE": "Specifies image format compatibility by size.",
  "GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS": "Specifies image format compatibility by class.",
  "GL_MAX_VERTEX_IMAGE_UNIFORMS": "Specifies the maximum number of image uniforms in vertex shaders.",
  "GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS": "Specifies the maximum number of image uniforms in tessellation control shaders.",
  "GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_EXT": "Specifies the maximum number of image uniforms in tessellation control shaders (EXT extension).",
  "GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_OES": "Specifies the maximum number of image uniforms in tessellation control shaders (OES extension).",
  "GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS": "Specifies the maximum number of image uniforms in tessellation evaluation shaders.",
  "GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_EXT": "Specifies the maximum number of image uniforms in tessellation evaluation shaders (EXT extension).",
  "GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_OES": "Specifies the maximum number of image uniforms in tessellation evaluation shaders (OES extension).",
  "GL_MAX_GEOMETRY_IMAGE_UNIFORMS": "Specifies the maximum number of image uniforms in geometry shaders.",
  "GL_MAX_GEOMETRY_IMAGE_UNIFORMS_EXT": "Specifies the maximum number of image uniforms in geometry shaders (EXT extension).",
  "GL_MAX_GEOMETRY_IMAGE_UNIFORMS_OES": "Specifies the maximum number of image uniforms in geometry shaders (OES extension).",
  "GL_MAX_FRAGMENT_IMAGE_UNIFORMS": "Specifies the maximum number of image uniforms in fragment shaders.",
  "GL_MAX_COMBINED_IMAGE_UNIFORMS": "Specifies the maximum number of combined image uniforms across all shader stages.",
  "GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV": "Specifies the maximum width and height for deep 3D textures.",
  "GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV": "Specifies the maximum depth for deep 3D textures.",
  "GL_SHADER_STORAGE_BUFFER": "Specifies the target for shader storage buffer objects.",
  "GL_SHADER_STORAGE_BUFFER_BINDING": "Specifies the binding point for shader storage buffers.",
  "GL_SHADER_STORAGE_BUFFER_START": "Specifies the starting offset for shader storage buffers.",
  "GL_SHADER_STORAGE_BUFFER_SIZE": "Specifies the size of shader storage buffers.",
  "GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS": "Specifies the maximum number of shader storage blocks in vertex shaders.",
  "GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS": "Specifies the maximum number of shader storage blocks in geometry shaders.",
  "GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_EXT": "Specifies the maximum number of shader storage blocks in geometry shaders (EXT extension).",
  "GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_OES": "Specifies the maximum number of shader storage blocks in geometry shaders (OES extension).",
  "GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS": "Specifies the maximum number of shader storage blocks in tessellation control shaders.",
  "GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_EXT": "Specifies the maximum number of shader storage blocks in tessellation control shaders (EXT extension).",
  "GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_OES": "Specifies the maximum number of shader storage blocks in tessellation control shaders (OES extension).",
  "GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS": "Specifies the maximum number of shader storage blocks in tessellation evaluation shaders.",
  "GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_EXT": "Specifies the maximum number of shader storage blocks in tessellation evaluation shaders (EXT extension).",
  "GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_OES": "Specifies the maximum number of shader storage blocks in tessellation evaluation shaders (OES extension).",
  "GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS": "Specifies the maximum number of shader storage blocks in fragment shaders.",
  "GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS": "Specifies the maximum number of shader storage blocks in compute shaders.",
  "GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS": "Specifies the maximum number of combined shader storage blocks across all shader stages.",
  "GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS": "Specifies the maximum number of shader storage buffer bindings.",
  "GL_MAX_SHADER_STORAGE_BLOCK_SIZE": "Specifies the maximum size for shader storage blocks.",
  "GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT": "Specifies the alignment requirements for shader storage buffer offsets.",
  "GL_SYNC_X11_FENCE_EXT": "Specifies synchronization with an X11 fence object (EXT extension).",
  "GL_DEPTH_STENCIL_TEXTURE_MODE": "Specifies the mode for depth-stencil textures.",
  "GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS": "Specifies the maximum number of invocations in a compute work group.",
  "GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB": "Specifies the maximum number of invocations in a fixed compute work group (ARB extension).",
  "GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER": "Specifies uniform blocks referenced by compute shaders.",
  "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER": "Specifies atomic counter buffers referenced by compute shaders.",
  "GL_DISPATCH_INDIRECT_BUFFER": "Specifies the buffer for indirect dispatch commands.",
  "GL_DISPATCH_INDIRECT_BUFFER_BINDING": "Specifies the binding point for indirect dispatch buffers.",
  "GL_COLOR_ATTACHMENT_EXT": "Specifies a color attachment point (EXT extension).",
  "GL_MULTIVIEW_EXT": "Specifies multiview rendering capabilities (EXT extension).",
  "GL_MAX_MULTIVIEW_BUFFERS_EXT": "Specifies the maximum number of multiview buffers (EXT extension).",
  "GL_CONTEXT_ROBUST_ACCESS": "Enables robust access in the OpenGL context.",
  "GL_CONTEXT_ROBUST_ACCESS_EXT": "Enables robust access in the OpenGL context (EXT extension).",
  "GL_CONTEXT_ROBUST_ACCESS_KHR": "Enables robust access in the OpenGL context (KHR extension).",
  "GL_COMPUTE_PROGRAM_NV": "Specifies a compute program object (NV extension).",
  "GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV": "Specifies a parameter buffer for compute programs (NV extension).",
  "GL_TEXTURE_2D_MULTISAMPLE": "Specifies a 2D multisample texture target.",
  "GL_PROXY_TEXTURE_2D_MULTISAMPLE": "Specifies a proxy target for 2D multisample textures.",
  "GL_TEXTURE_2D_MULTISAMPLE_ARRAY": "Specifies a 2D multisample array texture target.",
  "GL_TEXTURE_2D_MULTISAMPLE_ARRAY_OES": "Specifies a 2D multisample array texture target (OES extension).",
  "GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY": "Specifies a proxy target for 2D multisample array textures.",
  "GL_TEXTURE_BINDING_2D_MULTISAMPLE": "Specifies the binding point for 2D multisample textures.",
  "GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY": "Specifies the binding point for 2D multisample array textures.",
  "GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY_OES": "Specifies the binding point for 2D multisample array textures (OES extension).",
  "GL_TEXTURE_SAMPLES": "Specifies the number of samples in a multisample texture.",
  "GL_TEXTURE_FIXED_SAMPLE_LOCATIONS": "Specifies whether sample locations are fixed in a multisample texture.",
  "GL_SAMPLER_2D_MULTISAMPLE": "Specifies a sampler for 2D multisample textures.",
  "GL_INT_SAMPLER_2D_MULTISAMPLE": "Specifies an integer sampler for 2D multisample textures.",
  "GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE": "Specifies an unsigned integer sampler for 2D multisample textures.",
  "GL_SAMPLER_2D_MULTISAMPLE_ARRAY": "Specifies a sampler for 2D multisample array textures.",
  "GL_SAMPLER_2D_MULTISAMPLE_ARRAY_OES": "Specifies a sampler for 2D multisample array textures (OES extension).",
  "GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY": "Specifies an integer sampler for 2D multisample array textures.",
  "GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES": "Specifies an integer sampler for 2D multisample array textures (OES extension).",
  "GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY": "Specifies an unsigned integer sampler for 2D multisample array textures.",
  "GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES": "Specifies an unsigned integer sampler for 2D multisample array textures (OES extension).",
  "GL_MAX_COLOR_TEXTURE_SAMPLES": "Specifies the maximum number of color texture samples.",
  "GL_MAX_DEPTH_TEXTURE_SAMPLES": "Specifies the maximum number of depth texture samples.",
  "GL_MAX_INTEGER_SAMPLES": "Specifies the maximum number of integer texture samples.",
  "GL_MAX_SERVER_WAIT_TIMEOUT": "Specifies the maximum timeout for server wait operations.",
  "GL_MAX_SERVER_WAIT_TIMEOUT_APPLE": "Specifies the maximum timeout for server wait operations (Apple extension).",
  "GL_OBJECT_TYPE": "Specifies the type of an OpenGL object.",
  "GL_OBJECT_TYPE_APPLE": "Specifies the type of an OpenGL object (Apple extension).",
  "GL_SYNC_CONDITION": "Specifies the condition for synchronization objects.",
  "GL_SYNC_CONDITION_APPLE": "Specifies the condition for synchronization objects (Apple extension).",
  "GL_SYNC_STATUS": "Specifies the status of a synchronization object.",
  "GL_SYNC_STATUS_APPLE": "Specifies the status of a synchronization object (Apple extension).",
  "GL_SYNC_FLAGS": "Specifies the flags for synchronization objects.",
  "GL_SYNC_FLAGS_APPLE": "Specifies the flags for synchronization objects (Apple extension).",
  "GL_SYNC_FENCE": "Specifies a fence object for GPU synchronization.",
  "GL_SYNC_FENCE_APPLE": "Specifies a fence object for GPU synchronization (Apple extension).",
  "GL_SYNC_GPU_COMMANDS_COMPLETE": "Indicates that GPU commands have completed execution.",
  "GL_SYNC_GPU_COMMANDS_COMPLETE_APPLE": "Indicates that GPU commands have completed execution (Apple extension).",
  "GL_UNSIGNALED": "Indicates that a synchronization object has not been signaled.",
  "GL_UNSIGNALED_APPLE": "Indicates that a synchronization object has not been signaled (Apple extension).",
  "GL_SIGNALED": "Indicates that a synchronization object has been signaled.",
  "GL_SIGNALED_APPLE": "Indicates that a synchronization object has been signaled (Apple extension).",
  "GL_ALREADY_SIGNALED": "Indicates that a synchronization object was already signaled.",
  "GL_ALREADY_SIGNALED_APPLE": "Indicates that a synchronization object was already signaled (Apple extension).",
  "GL_TIMEOUT_EXPIRED": "Indicates that a timeout has expired for synchronization.",
  "GL_TIMEOUT_EXPIRED_APPLE": "Indicates that a timeout has expired for synchronization (Apple extension).",
  "GL_CONDITION_SATISFIED": "Indicates that the condition for synchronization has been satisfied.",
  "GL_CONDITION_SATISFIED_APPLE": "Indicates that the condition for synchronization has been satisfied (Apple extension).",
  "GL_WAIT_FAILED": "Indicates that the wait operation failed.",
  "GL_WAIT_FAILED_APPLE": "Indicates that the wait operation failed (Apple extension).",
  "GL_BUFFER_ACCESS_FLAGS": "Specifies the access flags for buffer objects.",
  "GL_BUFFER_MAP_LENGTH": "Specifies the length of a mapped buffer object.",
  "GL_BUFFER_MAP_OFFSET": "Specifies the offset for a mapped buffer object.",
  "GL_MAX_VERTEX_OUTPUT_COMPONENTS": "Specifies the maximum number of output components for vertex shaders.",
  "GL_MAX_GEOMETRY_INPUT_COMPONENTS": "Specifies the maximum number of input components for geometry shaders.",
  "GL_MAX_GEOMETRY_INPUT_COMPONENTS_EXT": "Specifies the maximum number of input components for geometry shaders (EXT extension).",
  "GL_MAX_GEOMETRY_INPUT_COMPONENTS_OES": "Specifies the maximum number of input components for geometry shaders (OES extension).",
  "GL_MAX_GEOMETRY_OUTPUT_COMPONENTS": "Specifies the maximum number of output components for geometry shaders.",
  "GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_EXT": "Specifies the maximum number of output components for geometry shaders (EXT extension).",
  "GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_OES": "Specifies the maximum number of output components for geometry shaders (OES extension).",
  "GL_MAX_FRAGMENT_INPUT_COMPONENTS": "Specifies the maximum number of input components for fragment shaders.",
  "GL_CONTEXT_PROFILE_MASK": "Specifies the profile mask for an OpenGL context.",
  "GL_UNPACK_COMPRESSED_BLOCK_WIDTH": "Specifies the width of a block in unpacked compressed textures.",
  "GL_UNPACK_COMPRESSED_BLOCK_HEIGHT": "Specifies the height of a block in unpacked compressed textures.",
  "GL_UNPACK_COMPRESSED_BLOCK_DEPTH": "Specifies the depth of a block in unpacked compressed textures.",
  "GL_UNPACK_COMPRESSED_BLOCK_SIZE": "Specifies the size of a block in unpacked compressed textures.",
  "GL_PACK_COMPRESSED_BLOCK_WIDTH": "Specifies the width of a block in packed compressed textures.",
  "GL_PACK_COMPRESSED_BLOCK_HEIGHT": "Specifies the height of a block in packed compressed textures.",
  "GL_PACK_COMPRESSED_BLOCK_DEPTH": "Specifies the depth of a block in packed compressed textures.",
  "GL_PACK_COMPRESSED_BLOCK_SIZE": "Specifies the size of a block in packed compressed textures.",
  "GL_TEXTURE_IMMUTABLE_FORMAT": "Specifies if the texture format is immutable.",
  "GL_TEXTURE_IMMUTABLE_FORMAT_EXT": "Specifies if the texture format is immutable (EXT extension).",
  "GL_SGX_PROGRAM_BINARY_IMG": "Specifies a binary format for SGX program binaries (IMG extension).",
  "GL_RENDERBUFFER_SAMPLES_IMG": "Specifies the number of samples for a renderbuffer (IMG extension).",
  "GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG": "Indicates incomplete multisampling in a framebuffer (IMG extension).",
  "GL_MAX_SAMPLES_IMG": "Specifies the maximum number of samples (IMG extension).",
  "GL_TEXTURE_SAMPLES_IMG": "Specifies the number of samples in a texture (IMG extension).",
  "GL_COMPRESSED_RGBA_PVRTC_2BPPV2_IMG": "Specifies a compressed RGBA format with 2 bits per pixel (IMG extension).",
  "GL_COMPRESSED_RGBA_PVRTC_4BPPV2_IMG": "Specifies a compressed RGBA format with 4 bits per pixel (IMG extension).",
  "GL_CUBIC_IMG": "Specifies cubic filtering (IMG extension).",
  "GL_CUBIC_MIPMAP_NEAREST_IMG": "Specifies cubic filtering with nearest mipmap selection (IMG extension).",
  "GL_CUBIC_MIPMAP_LINEAR_IMG": "Specifies cubic filtering with linear mipmap selection (IMG extension).",
  "GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_AND_DOWNSAMPLE_IMG": "Indicates incomplete multisampling and downsampling in a framebuffer (IMG extension).",
  "GL_NUM_DOWNSAMPLE_SCALES_IMG": "Specifies the number of downsample scales (IMG extension).",
  "GL_DOWNSAMPLE_SCALES_IMG": "Specifies the available downsample scales (IMG extension).",
  "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SCALE_IMG": "Specifies the texture scale for framebuffer attachments (IMG extension).",
  "GL_MAX_DEBUG_MESSAGE_LENGTH": "Specifies the maximum length of a debug message.",
  "GL_MAX_DEBUG_MESSAGE_LENGTH_AMD": "Specifies the maximum length of a debug message (AMD extension).",
  "GL_MAX_DEBUG_MESSAGE_LENGTH_ARB": "Specifies the maximum length of a debug message (ARB extension).",
  "GL_MAX_DEBUG_MESSAGE_LENGTH_KHR": "Specifies the maximum length of a debug message (KHR extension).",
  "GL_MAX_DEBUG_LOGGED_MESSAGES": "Specifies the maximum number of debug messages logged.",
  "GL_MAX_DEBUG_LOGGED_MESSAGES_AMD": "Specifies the maximum number of debug messages logged (AMD extension).",
  "GL_MAX_DEBUG_LOGGED_MESSAGES_ARB": "Specifies the maximum number of debug messages logged (ARB extension).",
  "GL_MAX_DEBUG_LOGGED_MESSAGES_KHR": "Specifies the maximum number of debug messages logged (KHR extension).",
  "GL_DEBUG_LOGGED_MESSAGES": "Specifies the number of debug messages currently logged.",
  "GL_DEBUG_LOGGED_MESSAGES_AMD": "Specifies the number of debug messages currently logged (AMD extension).",
  "GL_DEBUG_LOGGED_MESSAGES_ARB": "Specifies the number of debug messages logged (ARB extension).",
  "GL_DEBUG_LOGGED_MESSAGES_KHR": "Specifies the number of debug messages logged (KHR extension).",
  "GL_DEBUG_SEVERITY_HIGH": "Indicates a high-severity debug message.",
  "GL_DEBUG_SEVERITY_HIGH_AMD": "Indicates a high-severity debug message (AMD extension).",
  "GL_DEBUG_SEVERITY_HIGH_ARB": "Indicates a high-severity debug message (ARB extension).",
  "GL_DEBUG_SEVERITY_HIGH_KHR": "Indicates a high-severity debug message (KHR extension).",
  "GL_DEBUG_SEVERITY_MEDIUM": "Indicates a medium-severity debug message.",
  "GL_DEBUG_SEVERITY_MEDIUM_AMD": "Indicates a medium-severity debug message (AMD extension).",
  "GL_DEBUG_SEVERITY_MEDIUM_ARB": "Indicates a medium-severity debug message (ARB extension).",
  "GL_DEBUG_SEVERITY_MEDIUM_KHR": "Indicates a medium-severity debug message (KHR extension).",
  "GL_DEBUG_SEVERITY_LOW": "Indicates a low-severity debug message.",
  "GL_DEBUG_SEVERITY_LOW_AMD": "Indicates a low-severity debug message (AMD extension).",
  "GL_DEBUG_SEVERITY_LOW_ARB": "Indicates a low-severity debug message (ARB extension).",
  "GL_DEBUG_SEVERITY_LOW_KHR": "Indicates a low-severity debug message (KHR extension).",
  "GL_DEBUG_CATEGORY_API_ERROR_AMD": "Indicates an API error debug category (AMD extension).",
  "GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD": "Indicates a window system error debug category (AMD extension).",
  "GL_DEBUG_CATEGORY_DEPRECATION_AMD": "Indicates a deprecated behavior debug category (AMD extension).",
  "GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD": "Indicates an undefined behavior debug category (AMD extension).",
  "GL_DEBUG_CATEGORY_PERFORMANCE_AMD": "Indicates a performance issue debug category (AMD extension).",
  "GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD": "Indicates a shader compiler issue debug category (AMD extension).",
  "GL_DEBUG_CATEGORY_APPLICATION_AMD": "Indicates an application-related debug category (AMD extension).",
  "GL_DEBUG_CATEGORY_OTHER_AMD": "Indicates a miscellaneous debug category (AMD extension).",
  "GL_BUFFER_OBJECT_EXT": "Specifies a buffer object (EXT extension).",
  "GL_DATA_BUFFER_AMD": "Specifies a data buffer object (AMD extension).",
  "GL_PERFORMANCE_MONITOR_AMD": "Specifies a performance monitor object (AMD extension).",
  "GL_QUERY_OBJECT_AMD": "Specifies a query object (AMD extension).",
  "GL_QUERY_OBJECT_EXT": "Specifies a query object (EXT extension).",
  "GL_VERTEX_ARRAY_OBJECT_AMD": "Specifies a vertex array object (AMD extension).",
  "GL_VERTEX_ARRAY_OBJECT_EXT": "Specifies a vertex array object (EXT extension).",
  "GL_SAMPLER_OBJECT_AMD": "Specifies a sampler object (AMD extension).",
  "GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD": "Specifies an external virtual memory buffer (AMD extension).",
  "GL_QUERY_BUFFER": "Specifies a query buffer object.",
  "GL_QUERY_BUFFER_AMD": "Specifies a query buffer object (AMD extension).",
  "GL_QUERY_BUFFER_BINDING": "Specifies the binding point for query buffer objects.",
  "GL_QUERY_BUFFER_BINDING_AMD": "Specifies the binding point for query buffer objects (AMD extension).",
  "GL_QUERY_RESULT_NO_WAIT": "Specifies that query results are returned without waiting.",
  "GL_QUERY_RESULT_NO_WAIT_AMD": "Specifies that query results are returned without waiting (AMD extension).",
  "GL_VIRTUAL_PAGE_SIZE_X_ARB": "Specifies the virtual page size along the X axis (ARB extension).",
  "GL_VIRTUAL_PAGE_SIZE_X_EXT": "Specifies the virtual page size along the X axis (EXT extension).",
  "GL_VIRTUAL_PAGE_SIZE_X_AMD": "Specifies the virtual page size along the X axis (AMD extension).",
  "GL_VIRTUAL_PAGE_SIZE_Y_ARB": "Specifies the virtual page size along the Y axis (ARB extension).",
  "GL_VIRTUAL_PAGE_SIZE_Y_EXT": "Specifies the virtual page size along the Y axis (EXT extension).",
  "GL_VIRTUAL_PAGE_SIZE_Y_AMD": "Specifies the virtual page size along the Y axis (AMD extension).",
  "GL_VIRTUAL_PAGE_SIZE_Z_ARB": "Specifies the virtual page size along the Z axis (ARB extension).",
  "GL_VIRTUAL_PAGE_SIZE_Z_EXT": "Specifies the virtual page size along the Z axis (EXT extension).",
  "GL_VIRTUAL_PAGE_SIZE_Z_AMD": "Specifies the virtual page size along the Z axis (AMD extension).",
  "GL_MAX_SPARSE_TEXTURE_SIZE_ARB": "Specifies the maximum size of sparse textures (ARB extension).",
  "GL_MAX_SPARSE_TEXTURE_SIZE_EXT": "Specifies the maximum size of sparse textures (EXT extension).",
  "GL_MAX_SPARSE_TEXTURE_SIZE_AMD": "Specifies the maximum size of sparse textures (AMD extension).",
  "GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB": "Specifies the maximum size of 3D sparse textures (ARB extension).",
  "GL_MAX_SPARSE_3D_TEXTURE_SIZE_EXT": "Specifies the maximum size of 3D sparse textures (EXT extension).",
  "GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD": "Specifies the maximum size of 3D sparse textures (AMD extension).",
  "GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS": "Specifies the maximum number of layers in sparse array textures.",
  "GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB": "Specifies the maximum number of layers in sparse array textures (ARB extension).",
  "GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_EXT": "Specifies the maximum number of layers in sparse array textures (EXT extension).",
  "GL_MIN_SPARSE_LEVEL_AMD": "Specifies the minimum sparse texture level (AMD extension).",
  "GL_MIN_LOD_WARNING_AMD": "Indicates a warning for minimum level of detail (AMD extension).",
  "GL_TEXTURE_BUFFER_OFFSET": "Specifies the offset within a texture buffer.",
  "GL_TEXTURE_BUFFER_OFFSET_EXT": "Specifies the offset within a texture buffer (EXT extension).",
  "GL_TEXTURE_BUFFER_OFFSET_OES": "Specifies the offset within a texture buffer (OES extension).",
  "GL_TEXTURE_BUFFER_SIZE": "Specifies the size of a texture buffer.",
  "GL_TEXTURE_BUFFER_SIZE_EXT": "Specifies the size of a texture buffer (EXT extension).",
  "GL_TEXTURE_BUFFER_SIZE_OES": "Specifies the size of a texture buffer (OES extension).",
  "GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT": "Specifies the alignment requirement for texture buffer offsets.",
  "GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_EXT": "Specifies the alignment requirement for texture buffer offsets (EXT extension).",
  "GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_OES": "Specifies the alignment requirement for texture buffer offsets (OES extension).",
  "GL_STREAM_RASTERIZATION_AMD": "Enables stream rasterization (AMD extension).",
  "GL_VERTEX_ELEMENT_SWIZZLE_AMD": "Specifies the swizzle pattern for vertex elements (AMD extension).",
  "GL_VERTEX_ID_SWIZZLE_AMD": "Specifies the swizzle pattern for vertex IDs (AMD extension).",
  "GL_TEXTURE_SPARSE_ARB": "Enables sparse texture support (ARB extension).",
  "GL_TEXTURE_SPARSE_EXT": "Enables sparse texture support (EXT extension).",
  "GL_VIRTUAL_PAGE_SIZE_INDEX_ARB": "Specifies the index of the virtual page size (ARB extension).",
  "GL_VIRTUAL_PAGE_SIZE_INDEX_EXT": "Specifies the index of the virtual page size (EXT extension).",
  "GL_NUM_VIRTUAL_PAGE_SIZES_ARB": "Specifies the number of available virtual page sizes (ARB extension).",
  "GL_NUM_VIRTUAL_PAGE_SIZES_EXT": "Specifies the number of available virtual page sizes (EXT extension).",
  "GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB": "Enables full array cubemap mipmaps for sparse textures (ARB extension).",
  "GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_EXT": "Enables full array cubemap mipmaps for sparse textures (EXT extension).",
  "GL_NUM_SPARSE_LEVELS_ARB": "Specifies the number of sparse levels in a texture (ARB extension).",
  "GL_NUM_SPARSE_LEVELS_EXT": "Specifies the number of sparse levels in a texture (EXT extension).",
  "GL_PIXELS_PER_SAMPLE_PATTERN_X_AMD": "Specifies the pixel pattern along the X axis for multisample operations (AMD extension).",
  "GL_PIXELS_PER_SAMPLE_PATTERN_Y_AMD": "Specifies the pixel pattern along the Y axis for multisample operations (AMD extension).",
  "GL_MAX_SHADER_COMPILER_THREADS_KHR": "Specifies the maximum number of threads for shader compilation (KHR extension).",
  "GL_MAX_SHADER_COMPILER_THREADS_ARB": "Specifies the maximum number of threads for shader compilation (ARB extension).",
  "GL_COMPLETION_STATUS_KHR": "Indicates the completion status of a task (KHR extension).",
  "GL_COMPLETION_STATUS_ARB": "Indicates the completion status of a task (ARB extension).",
  "GL_RENDERBUFFER_STORAGE_SAMPLES_AMD": "Specifies the number of samples for renderbuffer storage (AMD extension).",
  "GL_MAX_COLOR_FRAMEBUFFER_SAMPLES_AMD": "Specifies the maximum number of samples for color framebuffer attachments (AMD extension).",
  "GL_MAX_COLOR_FRAMEBUFFER_STORAGE_SAMPLES_AMD": "Specifies the maximum number of samples for color framebuffer storage (AMD extension).",
  "GL_MAX_DEPTH_STENCIL_FRAMEBUFFER_SAMPLES_AMD": "Specifies the maximum number of samples for depth-stencil framebuffer attachments (AMD extension).",
  "GL_NUM_SUPPORTED_MULTISAMPLE_MODES_AMD": "Specifies the number of supported multisample modes (AMD extension).",
  "GL_SUPPORTED_MULTISAMPLE_MODES_AMD": "Lists the supported multisample modes (AMD extension).",
  "GL_COMPUTE_SHADER": "Specifies a compute shader stage.",
  "GL_MAX_COMPUTE_UNIFORM_BLOCKS": "Specifies the maximum number of uniform blocks in compute shaders.",
  "GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS": "Specifies the maximum number of texture image units in compute shaders.",
  "GL_MAX_COMPUTE_IMAGE_UNIFORMS": "Specifies the maximum number of image uniforms in compute shaders.",
  "GL_MAX_COMPUTE_WORK_GROUP_COUNT": "Specifies the maximum number of work groups for compute shaders.",
  "GL_MAX_COMPUTE_WORK_GROUP_SIZE": "Specifies the maximum size of a work group for compute shaders.",
  "GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB": "Specifies the maximum fixed group size for compute shaders (ARB extension).",
  "GL_FLOAT16_MAT2_AMD": "Specifies a 2x2 matrix of 16-bit floats (AMD extension).",
  "GL_FLOAT16_MAT3_AMD": "Specifies a 3x3 matrix of 16-bit floats (AMD extension).",
  "GL_FLOAT16_MAT4_AMD": "Specifies a 4x4 matrix of 16-bit floats (AMD extension).",
  "GL_FLOAT16_MAT2x3_AMD": "Specifies a 2x3 matrix of 16-bit floats (AMD extension).",
  "GL_FLOAT16_MAT2x4_AMD": "Specifies a 2x4 matrix of 16-bit floats (AMD extension).",
  "GL_FLOAT16_MAT3x2_AMD": "Specifies a 3x2 matrix of 16-bit floats (AMD extension).",
  "GL_FLOAT16_MAT3x4_AMD": "Specifies a 3x4 matrix of 16-bit floats (AMD extension).",
  "GL_FLOAT16_MAT4x2_AMD": "Specifies a 4x2 matrix of 16-bit floats (AMD extension).",
  "GL_FLOAT16_MAT4x3_AMD": "Specifies a 4x3 matrix of 16-bit floats (AMD extension).",
  "GL_UNPACK_FLIP_Y_WEBGL": "Indicates whether to flip the Y-axis when unpacking textures (WEBGL extension).",
  "GL_UNPACK_PREMULTIPLY_ALPHA_WEBGL": "Indicates whether to premultiply alpha when unpacking textures (WEBGL extension).",
  "GL_CONTEXT_LOST_WEBGL": "Indicates that the WebGL context has been lost (WEBGL extension).",
  "GL_UNPACK_COLORSPACE_CONVERSION_WEBGL": "Specifies colorspace conversion during texture unpacking (WEBGL extension).",
  "GL_BROWSER_DEFAULT_WEBGL": "Specifies the default behavior for browsers using WebGL (WEBGL extension).",
  "GL_UNMASKED_VENDOR_WEBGL": "Specifies the unmasked vendor string for WebGL (WEBGL extension).",
  "GL_UNMASKED_RENDERER_WEBGL": "Specifies the unmasked renderer string for WebGL (WEBGL extension).",
  "GL_MAX_CLIENT_WAIT_TIMEOUT_WEBGL": "Specifies the maximum wait timeout for client-side operations (WEBGL extension).",
  "GL_TEXTURE_VIDEO_IMAGE_WEBGL": "Specifies a video texture image for WebGL (WEBGL extension).",
  "GL_SAMPLER_VIDEO_IMAGE_WEBGL": "Specifies a sampler for video texture images (WEBGL extension).",
  "GL_SHADER_BINARY_DMP": "Specifies a shader binary format (DMP extension).",
  "GL_SMAPHS30_PROGRAM_BINARY_DMP": "Specifies a program binary format for SMAPHS30 shaders (DMP extension).",
  "GL_SMAPHS_PROGRAM_BINARY_DMP": "Specifies a program binary format for SMAPHS shaders (DMP extension).",
  "GL_DMP_PROGRAM_BINARY_DMP": "Specifies a program binary format for DMP shaders (DMP extension).",
  "GL_GCCSO_SHADER_BINARY_FJ": "Specifies a shader binary format (FJ extension).",
  "GL_COMPRESSED_R11_EAC": "Specifies a compressed single-channel texture format using EAC.",
  "GL_COMPRESSED_R11_EAC_OES": "Specifies a compressed single-channel texture format using EAC (OES extension).",
  "GL_COMPRESSED_SIGNED_R11_EAC": "Specifies a signed compressed single-channel texture format using EAC.",
  "GL_COMPRESSED_SIGNED_R11_EAC_OES": "Specifies a signed compressed single-channel texture format using EAC (OES extension).",
  "GL_COMPRESSED_RG11_EAC": "Specifies a compressed dual-channel texture format using EAC.",
  "GL_COMPRESSED_RG11_EAC_OES": "Specifies a compressed dual-channel texture format using EAC (OES extension).",
  "GL_COMPRESSED_SIGNED_RG11_EAC": "Specifies a signed compressed dual-channel texture format using EAC.",
  "GL_COMPRESSED_SIGNED_RG11_EAC_OES": "Specifies a signed compressed dual-channel texture format using EAC (OES extension).",
  "GL_COMPRESSED_RGB8_ETC2": "Specifies a compressed RGB texture format using ETC2.",
  "GL_COMPRESSED_RGB8_ETC2_OES": "Specifies a compressed RGB texture format using ETC2 (OES extension).",
  "GL_COMPRESSED_SRGB8_ETC2": "Specifies a compressed sRGB texture format using ETC2.",
  "GL_COMPRESSED_SRGB8_ETC2_OES": "Specifies a compressed sRGB texture format using ETC2 (OES extension).",
  "GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2": "Specifies a compressed RGB texture with punchthrough alpha using ETC2.",
  "GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2_OES": "Specifies a compressed RGB texture with punchthrough alpha using ETC2 (OES extension).",
  "GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2": "Specifies a compressed sRGB texture with punchthrough alpha using ETC2.",
  "GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2_OES": "Specifies a compressed sRGB texture with punchthrough alpha using ETC2 (OES extension).",
  "GL_COMPRESSED_RGBA8_ETC2_EAC": "Specifies a compressed RGBA texture format using ETC2 and EAC.",
  "GL_COMPRESSED_RGBA8_ETC2_EAC_OES": "Specifies a compressed RGBA texture format using ETC2 and EAC (OES extension).",
  "GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC": "Specifies a compressed sRGB texture format with alpha using ETC2 and EAC.",
  "GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC_OES": "Specifies a compressed sRGB texture format with alpha using ETC2 and EAC (OES extension).",
  "GL_BLEND_PREMULTIPLIED_SRC_NV": "Specifies that the source color is premultiplied by its alpha (NV extension).",
  "GL_BLEND_OVERLAP_NV": "Specifies the overlap mode for blending (NV extension).",
  "GL_UNCORRELATED_NV": "Specifies uncorrelated blending factors (NV extension).",
  "GL_DISJOINT_NV": "Specifies disjoint blending factors (NV extension).",
  "GL_CONJOINT_NV": "Specifies conjoint blending factors (NV extension).",
  "GL_BLEND_ADVANCED_COHERENT_KHR": "Enables advanced blending with coherent results (KHR extension).",
  "GL_BLEND_ADVANCED_COHERENT_NV": "Enables advanced blending with coherent results (NV extension).",
  "GL_SRC_NV": "Specifies the source blend factor (NV extension).",
  "GL_DST_NV": "Specifies the destination blend factor (NV extension).",
  "GL_SRC_OVER_NV": "Specifies source-over blending (NV extension).",
  "GL_DST_OVER_NV": "Specifies destination-over blending (NV extension).",
  "GL_SRC_IN_NV": "Specifies source-in blending (NV extension).",
  "GL_DST_IN_NV": "Specifies destination-in blending (NV extension).",
  "GL_SRC_OUT_NV": "Specifies source-out blending (NV extension).",
  "GL_DST_OUT_NV": "Specifies destination-out blending (NV extension).",
  "GL_SRC_ATOP_NV": "Specifies source-atop blending (NV extension).",
  "GL_DST_ATOP_NV": "Specifies destination-atop blending (NV extension).",
  "GL_PLUS_NV": "Specifies additive blending (NV extension).",
  "GL_PLUS_DARKER_NV": "Specifies additive blending that darkens the result (NV extension).",
  "GL_MULTIPLY": "Specifies multiply blending.",
  "GL_MULTIPLY_KHR": "Specifies multiply blending (KHR extension).",
  "GL_MULTIPLY_NV": "Specifies multiply blending (NV extension).",
  "GL_SCREEN": "Specifies screen blending.",
  "GL_SCREEN_KHR": "Specifies screen blending (KHR extension).",
  "GL_SCREEN_NV": "Specifies screen blending (NV extension).",
  "GL_OVERLAY": "Specifies overlay blending.",
  "GL_OVERLAY_KHR": "Specifies overlay blending (KHR extension).",
  "GL_OVERLAY_NV": "Specifies overlay blending (NV extension).",
  "GL_DARKEN": "Specifies darken blending.",
  "GL_DARKEN_KHR": "Specifies darken blending (KHR extension).",
  "GL_DARKEN_NV": "Specifies darken blending (NV extension).",
  "GL_LIGHTEN": "Specifies lighten blending.",
  "GL_LIGHTEN_KHR": "Specifies lighten blending (KHR extension).",
  "GL_LIGHTEN_NV": "Specifies lighten blending (NV extension).",
  "GL_COLORDODGE": "Specifies color dodge blending.",
  "GL_COLORDODGE_KHR": "Specifies color dodge blending (KHR extension).",
  "GL_COLORDODGE_NV": "Specifies color dodge blending (NV extension).",
  "GL_COLORBURN": "Specifies color burn blending.",
  "GL_COLORBURN_KHR": "Specifies color burn blending (KHR extension).",
  "GL_COLORBURN_NV": "Specifies color burn blending (NV extension).",
  "GL_HARDLIGHT": "Specifies hard light blending.",
  "GL_HARDLIGHT_KHR": "Specifies hard light blending (KHR extension).",
  "GL_HARDLIGHT_NV": "Specifies hard light blending (NV extension).",
  "GL_SOFTLIGHT": "Specifies soft light blending.",
  "GL_SOFTLIGHT_KHR": "Specifies soft light blending (KHR extension).",
  "GL_SOFTLIGHT_NV": "Specifies soft light blending (NV extension).",
  "GL_DIFFERENCE": "Specifies difference blending.",
  "GL_DIFFERENCE_KHR": "Specifies difference blending (KHR extension).",
  "GL_DIFFERENCE_NV": "Specifies difference blending (NV extension).",
  "GL_MINUS_NV": "Specifies subtraction blending (NV extension).",
  "GL_EXCLUSION": "Specifies exclusion blending.",
  "GL_EXCLUSION_KHR": "Specifies exclusion blending (KHR extension).",
  "GL_EXCLUSION_NV": "Specifies exclusion blending (NV extension).",
  "GL_CONTRAST_NV": "Specifies contrast blending (NV extension).",
  "GL_INVERT_RGB_NV": "Specifies RGB inversion for blending (NV extension).",
  "GL_LINEARDODGE_NV": "Specifies linear dodge blending (NV extension).",
  "GL_LINEARBURN_NV": "Specifies linear burn blending (NV extension).",
  "GL_VIVIDLIGHT_NV": "Specifies vivid light blending (NV extension).",
  "GL_LINEARLIGHT_NV": "Specifies the linear light blending mode (NV extension).",
  "GL_PINLIGHT_NV": "Specifies the pin light blending mode (NV extension).",
  "GL_HARDMIX_NV": "Specifies the hard mix blending mode (NV extension).",
  "GL_HSL_HUE": "Specifies the HSL hue blending mode.",
  "GL_HSL_HUE_KHR": "Specifies the HSL hue blending mode (KHR extension).",
  "GL_HSL_HUE_NV": "Specifies the HSL hue blending mode (NV extension).",
  "GL_HSL_SATURATION": "Specifies the HSL saturation blending mode.",
  "GL_HSL_SATURATION_KHR": "Specifies the HSL saturation blending mode (KHR extension).",
  "GL_HSL_SATURATION_NV": "Specifies the HSL saturation blending mode (NV extension).",
  "GL_HSL_COLOR": "Specifies the HSL color blending mode.",
  "GL_HSL_COLOR_KHR": "Specifies the HSL color blending mode (KHR extension).",
  "GL_HSL_COLOR_NV": "Specifies the HSL color blending mode (NV extension).",
  "GL_HSL_LUMINOSITY": "Specifies the HSL luminosity blending mode.",
  "GL_HSL_LUMINOSITY_KHR": "Specifies the HSL luminosity blending mode (KHR extension).",
  "GL_HSL_LUMINOSITY_NV": "Specifies the HSL luminosity blending mode (NV extension).",
  "GL_PLUS_CLAMPED_NV": "Specifies the clamped additive blending mode (NV extension).",
  "GL_PLUS_CLAMPED_ALPHA_NV": "Specifies the clamped additive blending mode with alpha (NV extension).",
  "GL_MINUS_CLAMPED_NV": "Specifies the clamped subtractive blending mode (NV extension).",
  "GL_INVERT_OVG_NV": "Specifies the inverted OVG blending mode (NV extension).",
  "GL_MAX_LGPU_GPUS_NVX": "Specifies the maximum number of logical GPUs (NVX extension).",
  "GL_MULTICAST_GPUS_NV": "Specifies multicast GPU functionality (NV extension).",
  "GL_PURGED_CONTEXT_RESET_NV": "Indicates a context reset due to purging (NV extension).",
  "GL_PRIMITIVE_BOUNDING_BOX_ARB": "Specifies a bounding box for geometry primitives (ARB extension).",
  "GL_PRIMITIVE_BOUNDING_BOX": "Specifies a bounding box for geometry primitives.",
  "GL_PRIMITIVE_BOUNDING_BOX_EXT": "Specifies a bounding box for geometry primitives (EXT extension).",
  "GL_PRIMITIVE_BOUNDING_BOX_OES": "Specifies a bounding box for geometry primitives (OES extension).",
  "GL_ALPHA_TO_COVERAGE_DITHER_MODE_NV": "Specifies the dither mode for alpha-to-coverage (NV extension).",
  "GL_ATOMIC_COUNTER_BUFFER": "Specifies an atomic counter buffer object.",
  "GL_ATOMIC_COUNTER_BUFFER_BINDING": "Specifies the binding point for atomic counter buffers.",
  "GL_ATOMIC_COUNTER_BUFFER_START": "Specifies the starting offset for atomic counter buffers.",
  "GL_ATOMIC_COUNTER_BUFFER_SIZE": "Specifies the size of atomic counter buffers.",
  "GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE": "Specifies the data size of atomic counter buffers.",
  "GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS": "Specifies the number of active atomic counters in a buffer.",
  "GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES": "Specifies the indices of active atomic counters in a buffer.",
  "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER": "Indicates if an atomic counter buffer is referenced by a vertex shader.",
  "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER": "Indicates if an atomic counter buffer is referenced by a tessellation control shader.",
  "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER": "Indicates if an atomic counter buffer is referenced by a tessellation evaluation shader.",
  "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER": "Indicates if an atomic counter buffer is referenced by a geometry shader.",
  "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER": "Indicates if an atomic counter buffer is referenced by a fragment shader.",
  "GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS": "Specifies the maximum number of atomic counter buffers in vertex shaders.",
  "GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS": "Specifies the maximum number of atomic counter buffers in tessellation control shaders.",
  "GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_EXT": "Specifies the maximum number of atomic counter buffers in tessellation control shaders (EXT extension).",
  "GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_OES": "Specifies the maximum number of atomic counter buffers in tessellation control shaders (OES extension).",
  "GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS": "Specifies the maximum number of atomic counter buffers in tessellation evaluation shaders.",
  "GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_EXT": "Specifies the maximum number of atomic counter buffers in tessellation evaluation shaders (EXT extension).",
  "GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_OES": "Specifies the maximum number of atomic counter buffers in tessellation evaluation shaders (OES extension).",
  "GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS": "Specifies the maximum number of atomic counter buffers in geometry shaders.",
  "GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_EXT": "Specifies the maximum number of atomic counter buffers in geometry shaders (EXT extension).",
  "GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_OES": "Specifies the maximum number of atomic counter buffers in geometry shaders (OES extension).",
  "GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS": "Specifies the maximum number of atomic counter buffers in fragment shaders.",
  "GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS": "Specifies the maximum number of atomic counter buffers across all shader stages.",
  "GL_MAX_VERTEX_ATOMIC_COUNTERS": "Specifies the maximum number of atomic counters in vertex shaders.",
  "GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS": "Specifies the maximum number of atomic counters in tessellation control shaders.",
  "GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_EXT": "Specifies the maximum number of atomic counters in tessellation control shaders (EXT extension).",
  "GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_OES": "Specifies the maximum number of atomic counters in tessellation control shaders (OES extension).",
  "GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS": "Specifies the maximum number of atomic counters in tessellation evaluation shaders.",
  "GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_EXT": "Specifies the maximum number of atomic counters in tessellation evaluation shaders (EXT extension).",
  "GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_OES": "Specifies the maximum number of atomic counters in tessellation evaluation shaders (OES extension).",
  "GL_MAX_GEOMETRY_ATOMIC_COUNTERS": "Specifies the maximum number of atomic counters in geometry shaders.",
  "GL_MAX_GEOMETRY_ATOMIC_COUNTERS_EXT": "Specifies the maximum number of atomic counters in geometry shaders (EXT extension).",
  "GL_MAX_GEOMETRY_ATOMIC_COUNTERS_OES": "Specifies the maximum number of atomic counters in geometry shaders (OES extension).",
  "GL_MAX_FRAGMENT_ATOMIC_COUNTERS": "Specifies the maximum number of atomic counters in fragment shaders.",
  "GL_MAX_COMBINED_ATOMIC_COUNTERS": "Specifies the maximum number of atomic counters across all shader stages.",
  "GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE": "Specifies the maximum size of an atomic counter buffer.",
  "GL_ACTIVE_ATOMIC_COUNTER_BUFFERS": "Specifies the number of active atomic counter buffers.",
  "GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX": "Specifies the atomic counter buffer index in a uniform.",
  "GL_UNSIGNED_INT_ATOMIC_COUNTER": "Specifies an unsigned integer atomic counter.",
  "GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS": "Specifies the maximum number of atomic counter buffer bindings.",
  "GL_FRAGMENT_COVERAGE_TO_COLOR_NV": "Specifies whether fragment coverage is written to a color output (NV extension).",
  "GL_FRAGMENT_COVERAGE_COLOR_NV": "Specifies the color output for fragment coverage (NV extension).",
  "GL_MESH_OUTPUT_PER_VERTEX_GRANULARITY_NV": "Specifies the granularity for mesh output per vertex (NV extension).",
  "GL_DEBUG_OUTPUT": "Enables or disables debug output messages.",
  "GL_DEBUG_OUTPUT_KHR": "Enables or disables debug output messages (KHR extension).",
  "GL_UNIFORM": "Specifies a uniform variable in a shader program.",
  "GL_UNIFORM_BLOCK": "Specifies a uniform block in a shader program.",
  "GL_PROGRAM_INPUT": "Specifies input to a shader program.",
  "GL_PROGRAM_OUTPUT": "Specifies output from a shader program.",
  "GL_BUFFER_VARIABLE": "Specifies a buffer variable in a shader program.",
  "GL_SHADER_STORAGE_BLOCK": "Specifies a shader storage block in a shader program.",
  "GL_IS_PER_PATCH": "Specifies whether a variable is per-patch.",
  "GL_IS_PER_PATCH_EXT": "Specifies whether a variable is per-patch (EXT extension).",
  "GL_IS_PER_PATCH_OES": "Specifies whether a variable is per-patch (OES extension).",
  "GL_VERTEX_SUBROUTINE": "Specifies a subroutine in a vertex shader.",
  "GL_TESS_CONTROL_SUBROUTINE": "Specifies a subroutine in a tessellation control shader.",
  "GL_TESS_EVALUATION_SUBROUTINE": "Specifies a subroutine in a tessellation evaluation shader.",
  "GL_GEOMETRY_SUBROUTINE": "Specifies a subroutine in a geometry shader.",
  "GL_FRAGMENT_SUBROUTINE": "Specifies a subroutine in a fragment shader.",
  "GL_COMPUTE_SUBROUTINE": "Specifies a subroutine in a compute shader.",
  "GL_VERTEX_SUBROUTINE_UNIFORM": "Specifies a uniform for a vertex shader subroutine.",
  "GL_TESS_CONTROL_SUBROUTINE_UNIFORM": "Specifies a uniform for a tessellation control shader subroutine.",
  "GL_TESS_EVALUATION_SUBROUTINE_UNIFORM": "Specifies a uniform for a tessellation evaluation shader subroutine.",
  "GL_GEOMETRY_SUBROUTINE_UNIFORM": "Specifies a uniform for a geometry shader subroutine.",
  "GL_FRAGMENT_SUBROUTINE_UNIFORM": "Specifies a uniform for a fragment shader subroutine.",
  "GL_COMPUTE_SUBROUTINE_UNIFORM": "Specifies a uniform for a compute shader subroutine.",
  "GL_TRANSFORM_FEEDBACK_VARYING": "Specifies a varying variable captured during transform feedback.",
  "GL_ACTIVE_RESOURCES": "Specifies the number of active resources in a program.",
  "GL_MAX_NAME_LENGTH": "Specifies the maximum length of a resource name.",
  "GL_MAX_NUM_ACTIVE_VARIABLES": "Specifies the maximum number of active variables in a program.",
  "GL_MAX_NUM_COMPATIBLE_SUBROUTINES": "Specifies the maximum number of compatible subroutines.",
  "GL_NAME_LENGTH": "Specifies the length of a resource name.",
  "GL_TYPE": "Specifies the data type of a variable or attribute.",
  "GL_ARRAY_SIZE": "Specifies the size of an array.",
  "GL_OFFSET": "Specifies the offset of a variable within a block.",
  "GL_BLOCK_INDEX": "Specifies the index of a block.",
  "GL_ARRAY_STRIDE": "Specifies the stride between elements in an array.",
  "GL_MATRIX_STRIDE": "Specifies the stride between columns in a matrix.",
  "GL_IS_ROW_MAJOR": "Indicates if a matrix is stored in row-major order.",
  "GL_ATOMIC_COUNTER_BUFFER_INDEX": "Specifies the index of an atomic counter buffer.",
  "GL_BUFFER_BINDING": "Specifies the binding point of a buffer.",
  "GL_BUFFER_DATA_SIZE": "Specifies the size of the data in a buffer.",
  "GL_NUM_ACTIVE_VARIABLES": "Specifies the number of active variables.",
  "GL_ACTIVE_VARIABLES": "Specifies the list of active variables.",
  "GL_REFERENCED_BY_VERTEX_SHADER": "Indicates if a resource is referenced by the vertex shader.",
  "GL_REFERENCED_BY_TESS_CONTROL_SHADER": "Indicates if a resource is referenced by the tessellation control shader.",
  "GL_REFERENCED_BY_TESS_CONTROL_SHADER_EXT": "Indicates if a resource is referenced by the tessellation control shader (EXT extension).",
  "GL_REFERENCED_BY_TESS_CONTROL_SHADER_OES": "Indicates if a resource is referenced by the tessellation control shader (OES extension).",
  "GL_REFERENCED_BY_TESS_EVALUATION_SHADER": "Indicates if a resource is referenced by the tessellation evaluation shader.",
  "GL_REFERENCED_BY_TESS_EVALUATION_SHADER_EXT": "Indicates if a resource is referenced by the tessellation evaluation shader (EXT extension).",
  "GL_REFERENCED_BY_TESS_EVALUATION_SHADER_OES": "Indicates if a resource is referenced by the tessellation evaluation shader (OES extension).",
  "GL_REFERENCED_BY_GEOMETRY_SHADER": "Indicates if a resource is referenced by the geometry shader.",
  "GL_REFERENCED_BY_GEOMETRY_SHADER_EXT": "Indicates if a resource is referenced by the geometry shader (EXT extension).",
  "GL_REFERENCED_BY_GEOMETRY_SHADER_OES": "Indicates if a resource is referenced by the geometry shader (OES extension).",
  "GL_REFERENCED_BY_FRAGMENT_SHADER": "Indicates if a resource is referenced by the fragment shader.",
  "GL_REFERENCED_BY_COMPUTE_SHADER": "Indicates if a resource is referenced by the compute shader.",
  "GL_TOP_LEVEL_ARRAY_SIZE": "Specifies the size of a top-level array.",
  "GL_TOP_LEVEL_ARRAY_STRIDE": "Specifies the stride between elements in a top-level array.",
  "GL_LOCATION": "Specifies the location of a variable in a program.",
  "GL_LOCATION_INDEX": "Specifies the location index of a variable.",
  "GL_LOCATION_INDEX_EXT": "Specifies the location index of a variable (EXT extension).",
  "GL_FRAMEBUFFER_DEFAULT_WIDTH": "Specifies the default width of the framebuffer.",
  "GL_FRAMEBUFFER_DEFAULT_HEIGHT": "Specifies the default height of the framebuffer.",
  "GL_FRAMEBUFFER_DEFAULT_LAYERS": "Specifies the default number of layers in the framebuffer.",
  "GL_FRAMEBUFFER_DEFAULT_LAYERS_EXT": "Specifies the default number of layers in the framebuffer (EXT extension).",
  "GL_FRAMEBUFFER_DEFAULT_LAYERS_OES": "Specifies the default number of layers in the framebuffer (OES extension).",
  "GL_FRAMEBUFFER_DEFAULT_SAMPLES": "Specifies the default number of samples in the framebuffer.",
  "GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS": "Specifies if fixed sample locations are used in the default framebuffer.",
  "GL_MAX_FRAMEBUFFER_WIDTH": "Specifies the maximum width of framebuffers.",
  "GL_MAX_FRAMEBUFFER_HEIGHT": "Specifies the maximum height of framebuffers.",
  "GL_MAX_FRAMEBUFFER_LAYERS": "Specifies the maximum number of layers in framebuffers.",
  "GL_MAX_FRAMEBUFFER_LAYERS_EXT": "Specifies the maximum number of layers in framebuffers (EXT extension).",
  "GL_MAX_FRAMEBUFFER_LAYERS_OES": "Specifies the maximum number of layers in framebuffers (OES extension).",
  "GL_MAX_FRAMEBUFFER_SAMPLES": "Specifies the maximum number of samples in framebuffers.",
  "GL_RASTER_MULTISAMPLE_EXT": "Enables multisample rasterization (EXT extension).",
  "GL_RASTER_SAMPLES_EXT": "Specifies the number of raster samples (EXT extension).",
  "GL_MAX_RASTER_SAMPLES_EXT": "Specifies the maximum number of raster samples (EXT extension).",
  "GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT": "Indicates if fixed sample locations are used during rasterization (EXT extension).",
  "GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT": "Indicates if multisample rasterization is allowed (EXT extension).",
  "GL_EFFECTIVE_RASTER_SAMPLES_EXT": "Specifies the effective number of raster samples (EXT extension).",
  "GL_DEPTH_SAMPLES_NV": "Specifies the number of depth samples (NV extension).",
  "GL_STENCIL_SAMPLES_NV": "Specifies the number of stencil samples (NV extension).",
  "GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV": "Indicates if mixed depth samples are supported (NV extension).",
  "GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV": "Indicates if mixed stencil samples are supported (NV extension).",
  "GL_COVERAGE_MODULATION_TABLE_NV": "Specifies the coverage modulation table (NV extension).",
  "GL_COVERAGE_MODULATION_NV": "Specifies the coverage modulation mode (NV extension).",
  "GL_COVERAGE_MODULATION_TABLE_SIZE_NV": "Specifies the size of the coverage modulation table (NV extension).",
  "GL_WARP_SIZE_NV": "Specifies the warp size in NVIDIA GPUs.",
  "GL_WARPS_PER_SM_NV": "Specifies the number of warps per streaming multiprocessor in NVIDIA GPUs.",
  "GL_SM_COUNT_NV": "Specifies the number of streaming multiprocessors in NVIDIA GPUs.",
  "GL_FILL_RECTANGLE_NV": "Specifies rectangle filling mode (NV extension).",
  "GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB": "Specifies the number of subpixel bits for sample locations (ARB extension).",
  "GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV": "Specifies the number of subpixel bits for sample locations (NV extension).",
  "GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB": "Specifies the width of the pixel grid for sample locations (ARB extension).",
  "GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV": "Specifies the width of the pixel grid for sample locations (NV extension).",
  "GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB": "Specifies the height of the pixel grid for sample locations (ARB extension).",
  "GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV": "Specifies the height of the pixel grid for sample locations (NV extension).",
  "GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB": "Specifies the size of the programmable sample location table (ARB extension).",
  "GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV": "Specifies the size of the programmable sample location table (NV extension).",
  "GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB": "Indicates if programmable sample locations are supported (ARB extension).",
  "GL_PROGRAMMABLE_SAMPLE_LOCATION_NV": "Indicates if programmable sample locations are supported (NV extension).",
  "GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB": "Specifies programmable sample locations in a framebuffer (ARB extension).",
  "GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV": "Specifies programmable sample locations in a framebuffer (NV extension).",
  "GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB": "Specifies the pixel grid for sample locations in a framebuffer (ARB extension).",
  "GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV": "Specifies the pixel grid for sample locations in a framebuffer (NV extension).",
  "GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB": "Specifies the maximum number of invocations in a variable-sized compute group (ARB extension).",
  "GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB": "Specifies the maximum size of a variable-sized compute group (ARB extension).",
  "GL_CONSERVATIVE_RASTERIZATION_NV": "Enables conservative rasterization (NV extension).",
  "GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV": "Specifies the number of bits of subpixel precision bias along the X axis (NV extension).",
  "GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV": "Specifies the number of bits of subpixel precision bias along the Y axis (NV extension).",
  "GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV": "Specifies the maximum number of bits of subpixel precision bias (NV extension).",
  "GL_LOCATION_COMPONENT": "Specifies the component of a location variable.",
  "GL_TRANSFORM_FEEDBACK_BUFFER_INDEX": "Specifies the buffer index for transform feedback.",
  "GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE": "Specifies the stride of a transform feedback buffer.",
  "GL_ALPHA_TO_COVERAGE_DITHER_DEFAULT_NV": "Specifies the default dither mode for alpha-to-coverage (NV extension).",
  "GL_ALPHA_TO_COVERAGE_DITHER_ENABLE_NV": "Enables dithering for alpha-to-coverage (NV extension).",
  "GL_ALPHA_TO_COVERAGE_DITHER_DISABLE_NV": "Disables dithering for alpha-to-coverage (NV extension).",
  "GL_VIEWPORT_SWIZZLE_POSITIVE_X_NV": "Specifies a positive X-axis swizzle for the viewport (NV extension).",
  "GL_VIEWPORT_SWIZZLE_NEGATIVE_X_NV": "Specifies a negative X-axis swizzle for the viewport (NV extension).",
  "GL_VIEWPORT_SWIZZLE_POSITIVE_Y_NV": "Specifies a positive Y-axis swizzle for the viewport (NV extension).",
  "GL_VIEWPORT_SWIZZLE_NEGATIVE_Y_NV": "Specifies a negative Y-axis swizzle for the viewport (NV extension).",
  "GL_VIEWPORT_SWIZZLE_POSITIVE_Z_NV": "Specifies a positive Z-axis swizzle for the viewport (NV extension).",
  "GL_VIEWPORT_SWIZZLE_NEGATIVE_Z_NV": "Specifies a negative Z-axis swizzle for the viewport (NV extension).",
  "GL_VIEWPORT_SWIZZLE_POSITIVE_W_NV": "Specifies a positive W-axis swizzle for the viewport (NV extension).",
  "GL_VIEWPORT_SWIZZLE_NEGATIVE_W_NV": "Specifies a negative W-axis swizzle for the viewport (NV extension).",
  "GL_VIEWPORT_SWIZZLE_X_NV": "Specifies an X-axis swizzle for the viewport (NV extension).",
  "GL_VIEWPORT_SWIZZLE_Y_NV": "Specifies a Y-axis swizzle for the viewport (NV extension).",
  "GL_VIEWPORT_SWIZZLE_Z_NV": "Specifies a Z-axis swizzle for the viewport (NV extension).",
  "GL_VIEWPORT_SWIZZLE_W_NV": "Specifies a W-axis swizzle for the viewport (NV extension).",
  "GL_CLIP_ORIGIN": "Specifies the origin for clipping coordinates.",
  "GL_CLIP_ORIGIN_EXT": "Specifies the origin for clipping coordinates (EXT extension).",
  "GL_CLIP_DEPTH_MODE": "Specifies the depth mode for clipping coordinates.",
  "GL_CLIP_DEPTH_MODE_EXT": "Specifies the depth mode for clipping coordinates (EXT extension).",
  "GL_NEGATIVE_ONE_TO_ONE": "Specifies the clip space depth range from -1 to 1.",
  "GL_NEGATIVE_ONE_TO_ONE_EXT": "Specifies the clip space depth range from -1 to 1 (EXT extension).",
  "GL_ZERO_TO_ONE": "Specifies the clip space depth range from 0 to 1.",
  "GL_ZERO_TO_ONE_EXT": "Specifies the clip space depth range from 0 to 1 (EXT extension).",
  "GL_CLEAR_TEXTURE": "Clears a texture to a specified value.",
  "GL_TEXTURE_REDUCTION_MODE_ARB": "Specifies the texture reduction mode (ARB extension).",
  "GL_TEXTURE_REDUCTION_MODE_EXT": "Specifies the texture reduction mode (EXT extension).",
  "GL_WEIGHTED_AVERAGE_ARB": "Specifies a weighted average texture reduction mode (ARB extension).",
  "GL_WEIGHTED_AVERAGE_EXT": "Specifies a weighted average texture reduction mode (EXT extension).",
  "GL_FONT_GLYPHS_AVAILABLE_NV": "Indicates available font glyphs (NV extension).",
  "GL_FONT_TARGET_UNAVAILABLE_NV": "Indicates the font target is unavailable (NV extension).",
  "GL_FONT_UNAVAILABLE_NV": "Indicates the font is unavailable (NV extension).",
  "GL_FONT_UNINTELLIGIBLE_NV": "Indicates the font is unintelligible (NV extension).",
  "GL_STANDARD_FONT_FORMAT_NV": "Specifies a standard font format (NV extension).",
  "GL_FRAGMENT_INPUT_NV": "Specifies a fragment input variable (NV extension).",
  "GL_UNIFORM_BUFFER_UNIFIED_NV": "Indicates that the uniform buffer is unified (NV extension).",
  "GL_UNIFORM_BUFFER_ADDRESS_NV": "Specifies the address of a uniform buffer (NV extension).",
  "GL_UNIFORM_BUFFER_LENGTH_NV": "Specifies the length of a uniform buffer (NV extension).",
  "GL_MULTISAMPLES_NV": "Specifies the number of multisamples (NV extension).",
  "GL_SUPERSAMPLE_SCALE_X_NV": "Specifies the supersample scale factor in the X direction (NV extension).",
  "GL_SUPERSAMPLE_SCALE_Y_NV": "Specifies the supersample scale factor in the Y direction (NV extension).",
  "GL_CONFORMANT_NV": "Indicates whether the rendering is conformant (NV extension).",
  "GL_CONSERVATIVE_RASTER_DILATE_NV": "Specifies the dilate factor for conservative rasterization (NV extension).",
  "GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV": "Specifies the range of dilation for conservative rasterization (NV extension).",
  "GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV": "Specifies the granularity of dilation for conservative rasterization (NV extension).",
  "GL_VIEWPORT_POSITION_W_SCALE_NV": "Specifies W scale for viewport position (NV extension).",
  "GL_VIEWPORT_POSITION_W_SCALE_X_COEFF_NV": "Specifies the X coefficient for W scale in the viewport (NV extension).",
  "GL_VIEWPORT_POSITION_W_SCALE_Y_COEFF_NV": "Specifies the Y coefficient for W scale in the viewport (NV extension).",
  "GL_REPRESENTATIVE_FRAGMENT_TEST_NV": "Enables representative fragment testing (NV extension).",
  "GL_NUM_SAMPLE_COUNTS": "Specifies the number of supported sample counts.",
  "GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB": "Specifies the range of multisample line widths (ARB extension).",
  "GL_MULTISAMPLE_LINE_WIDTH_RANGE": "Specifies the range of multisample line widths.",
  "GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB": "Specifies the granularity of multisample line widths (ARB extension).",
  "GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY": "Specifies the granularity of multisample line widths.",
  "GL_VIEW_CLASS_EAC_R11": "Specifies the view class for EAC R11 textures.",
  "GL_VIEW_CLASS_EAC_RG11": "Specifies the view class for EAC RG11 textures.",
  "GL_VIEW_CLASS_ETC2_RGB": "Specifies the view class for ETC2 RGB textures.",
  "GL_VIEW_CLASS_ETC2_RGBA": "Specifies the view class for ETC2 RGBA textures.",
  "GL_VIEW_CLASS_ETC2_EAC_RGBA": "Specifies the view class for ETC2 EAC RGBA textures.",
  "GL_VIEW_CLASS_ASTC_4x4_RGBA": "Specifies the view class for ASTC 4x4 RGBA textures.",
  "GL_VIEW_CLASS_ASTC_5x4_RGBA": "Specifies the view class for ASTC 5x4 RGBA textures.",
  "GL_VIEW_CLASS_ASTC_5x5_RGBA": "Specifies the view class for ASTC 5x5 RGBA textures.",
  "GL_VIEW_CLASS_ASTC_6x5_RGBA": "Specifies the view class for ASTC 6x5 RGBA textures.",
  "GL_VIEW_CLASS_ASTC_6x6_RGBA": "Specifies the view class for ASTC 6x6 RGBA textures.",
  "GL_VIEW_CLASS_ASTC_8x5_RGBA": "Specifies the view class for ASTC 8x5 RGBA textures.",
  "GL_VIEW_CLASS_ASTC_8x6_RGBA": "Specifies the view class for ASTC 8x6 RGBA textures.",
  "GL_VIEW_CLASS_ASTC_8x8_RGBA": "Specifies the view class for ASTC 8x8 RGBA textures.",
  "GL_VIEW_CLASS_ASTC_10x5_RGBA": "Specifies the view class for ASTC 10x5 RGBA textures.",
  "GL_VIEW_CLASS_ASTC_10x6_RGBA": "Specifies the view class for ASTC 10x6 RGBA textures.",
  "GL_VIEW_CLASS_ASTC_10x8_RGBA": "Specifies the view class for ASTC 10x8 RGBA textures.",
  "GL_VIEW_CLASS_ASTC_10x10_RGBA": "Specifies the view class for ASTC 10x10 RGBA textures.",
  "GL_VIEW_CLASS_ASTC_12x10_RGBA": "Specifies the view class for ASTC 12x10 RGBA textures.",
  "GL_VIEW_CLASS_ASTC_12x12_RGBA": "Specifies the view class for ASTC 12x12 RGBA textures.",
  "GL_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE": "Specifies the length of the translated shader source (ANGLE extension).",
  "GL_BGRA8_EXT": "Specifies a BGRA format with 8-bit components (EXT extension).",
  "GL_TEXTURE_USAGE_ANGLE": "Specifies the usage mode for a texture (ANGLE extension).",
  "GL_FRAMEBUFFER_ATTACHMENT_ANGLE": "Specifies a framebuffer attachment (ANGLE extension).",
  "GL_PACK_REVERSE_ROW_ORDER_ANGLE": "Specifies if row order is reversed when packing data (ANGLE extension).",
  "GL_PROGRAM_BINARY_ANGLE": "Specifies a binary format for shader programs (ANGLE extension).",
  "GL_COMPRESSED_RGBA_ASTC_4x4": "Specifies a compressed RGBA texture format with ASTC 4x4.",
  "GL_COMPRESSED_RGBA_ASTC_4x4_KHR": "Specifies a compressed RGBA texture format with ASTC 4x4 (KHR extension).",
  "GL_COMPRESSED_RGBA_ASTC_5x4": "Specifies a compressed RGBA texture format with ASTC 5x4.",
  "GL_COMPRESSED_RGBA_ASTC_5x4_KHR": "Specifies a compressed RGBA texture format with ASTC 5x4 (KHR extension).",
  "GL_COMPRESSED_RGBA_ASTC_5x5": "Specifies a compressed RGBA texture format with ASTC 5x5.",
  "GL_COMPRESSED_RGBA_ASTC_5x5_KHR": "Specifies a compressed RGBA texture format with ASTC 5x5 (KHR extension).",
  "GL_COMPRESSED_RGBA_ASTC_6x5": "Specifies a compressed RGBA texture format with ASTC 6x5.",
  "GL_COMPRESSED_RGBA_ASTC_6x5_KHR": "Specifies a compressed RGBA texture format with ASTC 6x5 (KHR extension).",
  "GL_COMPRESSED_RGBA_ASTC_6x6": "Specifies a compressed RGBA texture format with ASTC 6x6.",
  "GL_COMPRESSED_RGBA_ASTC_6x6_KHR": "Specifies a compressed RGBA texture format with ASTC 6x6 (KHR extension).",
  "GL_COMPRESSED_RGBA_ASTC_8x5": "Specifies a compressed RGBA texture format with ASTC 8x5.",
  "GL_COMPRESSED_RGBA_ASTC_8x5_KHR": "Specifies a compressed RGBA texture format with ASTC 8x5 (KHR extension).",
  "GL_COMPRESSED_RGBA_ASTC_8x6": "Specifies a compressed RGBA texture format with ASTC 8x6.",
  "GL_COMPRESSED_RGBA_ASTC_8x6_KHR": "Specifies a compressed RGBA texture format with ASTC 8x6 (KHR extension).",
  "GL_COMPRESSED_RGBA_ASTC_8x8": "Specifies a compressed RGBA texture format with ASTC 8x8.",
  "GL_COMPRESSED_RGBA_ASTC_8x8_KHR": "Specifies a compressed RGBA texture format with ASTC 8x8 (KHR extension).",
  "GL_COMPRESSED_RGBA_ASTC_10x5": "Specifies a compressed RGBA texture format with ASTC 10x5.",
  "GL_COMPRESSED_RGBA_ASTC_10x5_KHR": "Specifies a compressed RGBA texture format with ASTC 10x5 (KHR extension).",
  "GL_COMPRESSED_RGBA_ASTC_10x6": "Specifies a compressed RGBA texture format with ASTC 10x6.",
  "GL_COMPRESSED_RGBA_ASTC_10x6_KHR": "Specifies a compressed RGBA texture format with ASTC 10x6 (KHR extension).",
  "GL_COMPRESSED_RGBA_ASTC_10x8": "Specifies a compressed RGBA texture format with ASTC 10x8.",
  "GL_COMPRESSED_RGBA_ASTC_10x8_KHR": "Specifies a compressed RGBA texture format with ASTC 10x8 (KHR extension).",
  "GL_COMPRESSED_RGBA_ASTC_10x10": "Specifies a compressed RGBA texture format with ASTC 10x10.",
  "GL_COMPRESSED_RGBA_ASTC_10x10_KHR": "Specifies a compressed RGBA texture format with ASTC 10x10 (KHR extension).",
  "GL_COMPRESSED_RGBA_ASTC_12x10": "Specifies a compressed RGBA texture format with ASTC 12x10.",
  "GL_COMPRESSED_RGBA_ASTC_12x10_KHR": "Specifies a compressed RGBA texture format with ASTC 12x10 (KHR extension).",
  "GL_COMPRESSED_RGBA_ASTC_12x12": "Specifies a compressed RGBA texture format with ASTC 12x12.",
  "GL_COMPRESSED_RGBA_ASTC_12x12_KHR": "Specifies a compressed RGBA texture format with ASTC 12x12 (KHR extension).",
  "GL_COMPRESSED_RGBA_ASTC_3x3x3_OES": "Specifies a compressed RGBA texture format with ASTC 3x3x3 (OES extension).",
  "GL_COMPRESSED_RGBA_ASTC_4x3x3_OES": "Specifies a compressed RGBA texture format with ASTC 4x3x3 (OES extension).",
  "GL_COMPRESSED_RGBA_ASTC_4x4x3_OES": "Specifies a compressed RGBA texture format with ASTC 4x4x3 (OES extension).",
  "GL_COMPRESSED_RGBA_ASTC_4x4x4_OES": "Specifies a compressed RGBA texture format with ASTC 4x4x4 (OES extension).",
  "GL_COMPRESSED_RGBA_ASTC_5x4x4_OES": "Specifies a compressed RGBA texture format with ASTC 5x4x4 (OES extension).",
  "GL_COMPRESSED_RGBA_ASTC_5x5x4_OES": "Specifies a compressed RGBA texture format with ASTC 5x5x4 (OES extension).",
  "GL_COMPRESSED_RGBA_ASTC_5x5x5_OES": "Specifies a compressed RGBA texture format with ASTC 5x5x5 (OES extension).",
  "GL_COMPRESSED_RGBA_ASTC_6x5x5_OES": "Specifies a compressed RGBA texture format with ASTC 6x5x5 (OES extension).",
  "GL_COMPRESSED_RGBA_ASTC_6x6x5_OES": "Specifies a compressed RGBA texture format with ASTC 6x6x5 (OES extension).",
  "GL_COMPRESSED_RGBA_ASTC_6x6x6_OES": "Specifies a compressed RGBA texture format with ASTC 6x6x6 (OES extension).",
  "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4": "Specifies a compressed sRGB alpha texture format with ASTC 4x4.",
  "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR": "Specifies a compressed sRGB alpha texture format with ASTC 4x4 (KHR extension).",
  "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4": "Specifies a compressed sRGB alpha texture format with ASTC 5x4.",
  "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR": "Specifies a compressed sRGB alpha texture format with ASTC 5x4 (KHR extension).",
  "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5": "Specifies a compressed sRGB alpha texture format with ASTC 5x5.",
  "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR": "Specifies a compressed sRGB alpha texture format with ASTC 5x5 (KHR extension).",
  "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5": "Specifies a compressed sRGB alpha texture format with ASTC 6x5.",
  "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR": "Specifies a compressed sRGB alpha texture format with ASTC 6x5 (KHR extension).",
  "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6": "Specifies a compressed sRGB alpha texture format with ASTC 6x6.",
  "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR": "Specifies a compressed sRGB alpha texture format with ASTC 6x6 (KHR extension).",
  "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5": "Specifies a compressed sRGB alpha texture format with ASTC 8x5.",
  "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR": "Specifies a compressed sRGB alpha texture format with ASTC 8x5 (KHR extension).",
  "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6": "Specifies a compressed sRGB alpha texture format with ASTC 8x6.",
  "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR": "Specifies a compressed sRGB alpha texture format with ASTC 8x6 (KHR extension).",
  "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8": "Specifies a compressed sRGB alpha texture format with ASTC 8x8.",
  "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR": "Specifies a compressed sRGB alpha texture format with ASTC 8x8 (KHR extension).",
  "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5": "Specifies a compressed sRGB alpha texture format with ASTC 10x5.",
  "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR": "Specifies a compressed sRGB alpha texture format with ASTC 10x5 (KHR extension).",
  "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6": "Specifies a compressed sRGB alpha texture format with ASTC 10x6.",
  "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR": "Specifies a compressed sRGB alpha texture format with ASTC 10x6 (KHR extension).",
  "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8": "Specifies a compressed sRGB alpha texture format with ASTC 10x8.",
  "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR": "Specifies a compressed sRGB alpha texture format with ASTC 10x8 (KHR extension).",
  "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10": "Specifies a compressed sRGB alpha texture format with ASTC 10x10.",
  "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR": "Specifies a compressed sRGB alpha texture format with ASTC 10x10 (KHR extension).",
  "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10": "Specifies a compressed sRGB alpha texture format with ASTC 12x10.",
  "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR": "Specifies a compressed sRGB alpha texture format with ASTC 12x10 (KHR extension).",
  "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12": "Specifies a compressed sRGB alpha texture format with ASTC 12x12.",
  "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR": "Specifies a compressed sRGB alpha texture format with ASTC 12x12 (KHR extension).",
  "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_3x3x3_OES": "Specifies a compressed sRGB alpha texture format with ASTC 3x3x3 (OES extension).",
  "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x3x3_OES": "Specifies a compressed sRGB alpha texture format with ASTC 4x3x3 (OES extension).",
  "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x3_OES": "Specifies a compressed sRGB alpha texture format with ASTC 4x4x3 (OES extension).",
  "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x4_OES": "Specifies a compressed sRGB alpha texture format with ASTC 4x4x4 (OES extension).",
  "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4x4_OES": "Specifies a compressed sRGB alpha texture format with ASTC 5x4x4 (OES extension).",
  "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x4_OES": "Specifies a compressed sRGB alpha texture format with ASTC 5x5x4 (OES extension).",
  "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x5_OES": "Specifies a compressed sRGB alpha texture format with ASTC 5x5x5 (OES extension).",
  "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5x5_OES": "Specifies a compressed sRGB alpha texture format with ASTC 6x5x5 (OES extension).",
  "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x5_OES": "Specifies a compressed sRGB alpha texture format with ASTC 6x6x5 (OES extension).",
  "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x6_OES": "Specifies a compressed sRGB alpha texture format with ASTC 6x6x6 (OES extension).",
  "GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV2_IMG": "Specifies a compressed sRGB alpha format with PVRTC at 2 bits per pixel (IMG extension).",
  "GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV2_IMG": "Specifies a compressed sRGB alpha format with PVRTC at 4 bits per pixel (IMG extension).",
  "GL_PERFQUERY_COUNTER_EVENT_INTEL": "Specifies an event-based performance query counter (Intel extension).",
  "GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL": "Specifies a normalized duration-based performance query counter (Intel extension).",
  "GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL": "Specifies a raw duration-based performance query counter (Intel extension).",
  "GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL": "Specifies a throughput-based performance query counter (Intel extension).",
  "GL_PERFQUERY_COUNTER_RAW_INTEL": "Specifies a raw performance query counter (Intel extension).",
  "GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL": "Specifies a timestamp-based performance query counter (Intel extension).",
  "GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL": "Specifies performance query counter data as a 32-bit unsigned integer (Intel extension).",
  "GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL": "Specifies performance query counter data as a 64-bit unsigned integer (Intel extension).",
  "GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL": "Specifies performance query counter data as a float (Intel extension).",
  "GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL": "Specifies performance query counter data as a double (Intel extension).",
  "GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL": "Specifies performance query counter data as a 32-bit boolean (Intel extension).",
  "GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL": "Specifies the maximum length of a performance query name (Intel extension).",
  "GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL": "Specifies the maximum length of a performance query counter name (Intel extension).",
  "GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL": "Specifies the maximum length of a performance query counter description (Intel extension).",
  "GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL": "Indicates whether extended counters are supported for performance queries (Intel extension).",
  "GL_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_EXT": "Specifies a layout where depth is read-only and stencil is an attachment (EXT extension).",
  "GL_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_EXT": "Specifies a layout where depth is an attachment and stencil is read-only (EXT extension).",
  "GL_SUBGROUP_SIZE_KHR": "Specifies the size of a shader subgroup (KHR extension).",
  "GL_SUBGROUP_SUPPORTED_STAGES_KHR": "Specifies the shader stages that support subgroups (KHR extension).",
  "GL_SUBGROUP_SUPPORTED_FEATURES_KHR": "Specifies the features supported by shader subgroups (KHR extension).",
  "GL_SUBGROUP_QUAD_ALL_STAGES_KHR": "Indicates that shader subgroup quads are supported in all stages (KHR extension).",
  "GL_MAX_MESH_TOTAL_MEMORY_SIZE_NV": "Specifies the maximum total memory size for mesh shaders (NV extension).",
  "GL_MAX_TASK_TOTAL_MEMORY_SIZE_NV": "Specifies the maximum total memory size for task shaders (NV extension).",
  "GL_MAX_MESH_OUTPUT_VERTICES_NV": "Specifies the maximum number of vertices output by mesh shaders (NV extension).",
  "GL_MAX_MESH_OUTPUT_PRIMITIVES_NV": "Specifies the maximum number of primitives output by mesh shaders (NV extension).",
  "GL_MAX_TASK_OUTPUT_COUNT_NV": "Specifies the maximum number of outputs from task shaders (NV extension).",
  "GL_MAX_MESH_WORK_GROUP_SIZE_NV": "Specifies the maximum work group size for mesh shaders (NV extension).",
  "GL_MAX_TASK_WORK_GROUP_SIZE_NV": "Specifies the maximum work group size for task shaders (NV extension).",
  "GL_MAX_DRAW_MESH_TASKS_COUNT_NV": "Specifies the maximum number of mesh tasks that can be drawn (NV extension).",
  "GL_MESH_WORK_GROUP_SIZE_NV": "Specifies the work group size for mesh shaders (NV extension).",
  "GL_TASK_WORK_GROUP_SIZE_NV": "Specifies the work group size for task shaders (NV extension).",
  "GL_QUERY_RESOURCE_TYPE_VIDMEM_ALLOC_NV": "Specifies the type of video memory allocation for resource queries (NV extension).",
  "GL_QUERY_RESOURCE_MEMTYPE_VIDMEM_NV": "Specifies the video memory type for resource queries (NV extension).",
  "GL_MESH_OUTPUT_PER_PRIMITIVE_GRANULARITY_NV": "Specifies the granularity of mesh shader output per primitive (NV extension).",
  "GL_QUERY_RESOURCE_SYS_RESERVED_NV": "Specifies if system resources are reserved for queries (NV extension).",
  "GL_QUERY_RESOURCE_TEXTURE_NV": "Specifies a texture resource for queries (NV extension).",
  "GL_QUERY_RESOURCE_RENDERBUFFER_NV": "Specifies a renderbuffer resource for queries (NV extension).",
  "GL_QUERY_RESOURCE_BUFFEROBJECT_NV": "Specifies a buffer object resource for queries (NV extension).",
  "GL_PER_GPU_STORAGE_NV": "Enables per-GPU storage (NV extension).",
  "GL_MULTICAST_PROGRAMMABLE_SAMPLE_LOCATION_NV": "Specifies programmable sample locations for multicast rendering (NV extension).",
  "GL_UPLOAD_GPU_MASK_NVX": "Specifies the mask for uploading data to multiple GPUs (NVX extension).",
  "GL_CONSERVATIVE_RASTER_MODE_NV": "Specifies the conservative rasterization mode (NV extension).",
  "GL_CONSERVATIVE_RASTER_MODE_POST_SNAP_NV": "Specifies post-snap conservative rasterization mode (NV extension).",
  "GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV": "Specifies pre-snap conservative rasterization mode for triangles (NV extension).",
  "GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_NV": "Specifies pre-snap conservative rasterization mode (NV extension).",
  "GL_SHADER_BINARY_FORMAT_SPIR_V": "Specifies the SPIR-V shader binary format.",
  "GL_SHADER_BINARY_FORMAT_SPIR_V_ARB": "Specifies the SPIR-V shader binary format (ARB extension).",
  "GL_SPIR_V_BINARY": "Specifies a SPIR-V binary.",
  "GL_SPIR_V_BINARY_ARB": "Specifies a SPIR-V binary (ARB extension).",
  "GL_SPIR_V_EXTENSIONS": "Specifies SPIR-V extensions available.",
  "GL_NUM_SPIR_V_EXTENSIONS": "Specifies the number of available SPIR-V extensions.",
  "GL_SCISSOR_TEST_EXCLUSIVE_NV": "Enables exclusive scissor testing (NV extension).",
  "GL_SCISSOR_BOX_EXCLUSIVE_NV": "Specifies the exclusive scissor box (NV extension).",
  "GL_MAX_MESH_VIEWS_NV": "Specifies the maximum number of mesh views (NV extension).",
  "GL_RENDER_GPU_MASK_NV": "Specifies the GPU mask for rendering (NV extension).",
  "GL_MESH_SHADER_NV": "Enables the use of mesh shaders (NV extension).",
  "GL_TASK_SHADER_NV": "Enables the use of task shaders (NV extension).",
  "GL_SHADING_RATE_IMAGE_BINDING_NV": "Specifies the binding for shading rate images (NV extension).",
  "GL_SHADING_RATE_IMAGE_TEXEL_WIDTH_NV": "Specifies the texel width for shading rate images (NV extension).",
  "GL_SHADING_RATE_IMAGE_TEXEL_HEIGHT_NV": "Specifies the texel height for shading rate images (NV extension).",
  "GL_SHADING_RATE_IMAGE_PALETTE_SIZE_NV": "Specifies the size of the shading rate image palette (NV extension).",
  "GL_MAX_COARSE_FRAGMENT_SAMPLES_NV": "Specifies the maximum number of coarse fragment samples (NV extension).",
  "GL_SHADING_RATE_IMAGE_NV": "Specifies the shading rate image (NV extension).",
  "GL_SHADING_RATE_NO_INVOCATIONS_NV": "Indicates no shader invocations for the specified shading rate (NV extension).",
  "GL_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV": "Specifies 1 shader invocation per pixel (NV extension).",
  "GL_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV": "Specifies 1 shader invocation per 1x2 pixels (NV extension).",
  "GL_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV": "Specifies 1 shader invocation per 2x1 pixels (NV extension).",
  "GL_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV": "Specifies 1 shader invocation per 2x2 pixels (NV extension).",
  "GL_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV": "Specifies 1 shader invocation per 2x4 pixels (NV extension).",
  "GL_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV": "Specifies 1 shader invocation per 4x2 pixels (NV extension).",
  "GL_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV": "Specifies 1 shader invocation per 4x4 pixels (NV extension).",
  "GL_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV": "Specifies 2 shader invocations per pixel (NV extension).",
  "GL_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV": "Specifies 4 shader invocations per pixel (NV extension).",
  "GL_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV": "Specifies 8 shader invocations per pixel (NV extension).",
  "GL_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV": "Specifies 16 shader invocations per pixel (NV extension).",
  "GL_MESH_VERTICES_OUT_NV": "Specifies the number of vertices output by a mesh shader (NV extension).",
  "GL_MESH_PRIMITIVES_OUT_NV": "Specifies the number of primitives output by a mesh shader (NV extension).",
  "GL_MESH_OUTPUT_TYPE_NV": "Specifies the output type of a mesh shader (NV extension).",
  "GL_MESH_SUBROUTINE_NV": "Specifies a subroutine for mesh shaders (NV extension).",
  "GL_TASK_SUBROUTINE_NV": "Specifies a subroutine for task shaders (NV extension).",
  "GL_MESH_SUBROUTINE_UNIFORM_NV": "Specifies a uniform for mesh shader subroutines (NV extension).",
  "GL_TASK_SUBROUTINE_UNIFORM_NV": "Specifies a uniform for task shader subroutines (NV extension).",
  "GL_TEXTURE_TILING_EXT": "Specifies the tiling mode for textures (EXT extension).",
  "GL_DEDICATED_MEMORY_OBJECT_EXT": "Indicates whether a memory object is dedicated (EXT extension).",
  "GL_NUM_TILING_TYPES_EXT": "Specifies the number of available tiling types (EXT extension).",
  "GL_TILING_TYPES_EXT": "Lists the available tiling types (EXT extension).",
  "GL_OPTIMAL_TILING_EXT": "Specifies optimal tiling mode for memory objects (EXT extension).",
  "GL_LINEAR_TILING_EXT": "Specifies linear tiling mode for memory objects (EXT extension).",
  "GL_HANDLE_TYPE_OPAQUE_FD_EXT": "Specifies an opaque file descriptor handle type (EXT extension).",
  "GL_HANDLE_TYPE_OPAQUE_WIN32_EXT": "Specifies an opaque Windows handle type (EXT extension).",
  "GL_HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT": "Specifies an opaque Windows Kernel-Mode handle type (EXT extension).",
  "GL_HANDLE_TYPE_D3D12_TILEPOOL_EXT": "Specifies a D3D12 tile pool handle type (EXT extension).",
  "GL_HANDLE_TYPE_D3D12_RESOURCE_EXT": "Specifies a D3D12 resource handle type (EXT extension).",
  "GL_HANDLE_TYPE_D3D11_IMAGE_EXT": "Specifies a D3D11 image handle type (EXT extension).",
  "GL_HANDLE_TYPE_D3D11_IMAGE_KMT_EXT": "Specifies a D3D11 image Kernel-Mode handle type (EXT extension).",
  "GL_LAYOUT_GENERAL_EXT": "Specifies a general layout for resources (EXT extension).",
  "GL_LAYOUT_COLOR_ATTACHMENT_EXT": "Specifies a layout for color attachments (EXT extension).",
  "GL_LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT": "Specifies a layout for depth-stencil attachments (EXT extension).",
  "GL_LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT": "Specifies a layout for read-only depth-stencil attachments (EXT extension).",
  "GL_LAYOUT_SHADER_READ_ONLY_EXT": "Specifies a layout for shader read-only resources (EXT extension).",
  "GL_LAYOUT_TRANSFER_SRC_EXT": "Specifies a layout for transfer source resources (EXT extension).",
  "GL_LAYOUT_TRANSFER_DST_EXT": "Specifies a layout for transfer destination resources (EXT extension).",
  "GL_HANDLE_TYPE_D3D12_FENCE_EXT": "Specifies a D3D12 fence handle type (EXT extension).",
  "GL_D3D12_FENCE_VALUE_EXT": "Specifies a D3D12 fence value (EXT extension).",
  "GL_TIMELINE_SEMAPHORE_VALUE_NV": "Specifies the value of a timeline semaphore (NV extension).",
  "GL_NUM_DEVICE_UUIDS_EXT": "Specifies the number of available device UUIDs (EXT extension).",
  "GL_DEVICE_UUID_EXT": "Specifies a device UUID (EXT extension).",
  "GL_DRIVER_UUID_EXT": "Specifies a driver UUID (EXT extension).",
  "GL_DEVICE_LUID_EXT": "Specifies a device LUID (EXT extension).",
  "GL_DEVICE_NODE_MASK_EXT": "Specifies a device node mask (EXT extension).",
  "GL_PROTECTED_MEMORY_OBJECT_EXT": "Indicates that a memory object is protected (EXT extension).",
  "GL_UNIFORM_BLOCK_REFERENCED_BY_MESH_SHADER_NV": "Indicates if a uniform block is referenced by a mesh shader (NV extension).",
  "GL_UNIFORM_BLOCK_REFERENCED_BY_TASK_SHADER_NV": "Indicates if a uniform block is referenced by a task shader (NV extension).",
  "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_MESH_SHADER_NV": "Indicates if an atomic counter buffer is referenced by a mesh shader (NV extension).",
  "GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TASK_SHADER_NV": "Indicates if an atomic counter buffer is referenced by a task shader (NV extension).",
  "GL_REFERENCED_BY_MESH_SHADER_NV": "Indicates if a resource is referenced by a mesh shader (NV extension).",
  "GL_REFERENCED_BY_TASK_SHADER_NV": "Indicates if a resource is referenced by a task shader (NV extension).",
  "GL_MAX_MESH_WORK_GROUP_INVOCATIONS_NV": "Specifies the maximum number of mesh work group invocations (NV extension).",
  "GL_MAX_TASK_WORK_GROUP_INVOCATIONS_NV": "Specifies the maximum number of task work group invocations (NV extension).",
  "GL_ATTACHED_MEMORY_OBJECT_NV": "Specifies the attached memory object (NV extension).",
  "GL_ATTACHED_MEMORY_OFFSET_NV": "Specifies the attached memory offset (NV extension).",
  "GL_MEMORY_ATTACHABLE_ALIGNMENT_NV": "Specifies the alignment requirement for attachable memory (NV extension).",
  "GL_MEMORY_ATTACHABLE_SIZE_NV": "Specifies the size of attachable memory (NV extension).",
  "GL_MEMORY_ATTACHABLE_NV": "Indicates if memory is attachable (NV extension).",
  "GL_DETACHED_MEMORY_INCARNATION_NV": "Specifies the incarnation of detached memory (NV extension).",
  "GL_DETACHED_TEXTURES_NV": "Specifies the number of detached textures (NV extension).",
  "GL_DETACHED_BUFFERS_NV": "Specifies the number of detached buffers (NV extension).",
  "GL_MAX_DETACHED_TEXTURES_NV": "Specifies the maximum number of detached textures (NV extension).",
  "GL_MAX_DETACHED_BUFFERS_NV": "Specifies the maximum number of detached buffers (NV extension).",
  "GL_SHADING_RATE_SAMPLE_ORDER_DEFAULT_NV": "Specifies the default shading rate sample order (NV extension).",
  "GL_SHADING_RATE_SAMPLE_ORDER_PIXEL_MAJOR_NV": "Specifies pixel-major shading rate sample order (NV extension).",
  "GL_SHADING_RATE_SAMPLE_ORDER_SAMPLE_MAJOR_NV": "Specifies sample-major shading rate sample order (NV extension).",
  "GL_SHADING_RATE_IMAGE_PER_PRIMITIVE_NV": "Specifies the shading rate image per primitive (NV extension).",
  "GL_SHADING_RATE_IMAGE_PALETTE_COUNT_NV": "Specifies the number of entries in the shading rate image palette (NV extension).",
  "GL_SEMAPHORE_TYPE_NV": "Specifies the type of semaphore (NV extension).",
  "GL_SEMAPHORE_TYPE_BINARY_NV": "Specifies a binary semaphore type (NV extension).",
  "GL_SEMAPHORE_TYPE_TIMELINE_NV": "Specifies a timeline semaphore type (NV extension).",
  "GL_MAX_TIMELINE_SEMAPHORE_VALUE_DIFFERENCE_NV": "Specifies the maximum difference between timeline semaphore values (NV extension).",
  "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR": "Specifies the number of views for a framebuffer texture attachment (OVR extension).",
  "GL_MAX_VIEWS_OVR": "Specifies the maximum number of views (OVR extension).",
  "GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR": "Specifies the base view index for a framebuffer texture attachment (OVR extension).",
  "GL_FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR": "Indicates incomplete view targets in a framebuffer (OVR extension).",
  "GL_GS_SHADER_BINARY_MTK": "Specifies a shader binary format for GS (MTK extension).",
  "GL_GS_PROGRAM_BINARY_MTK": "Specifies a program binary format for GS (MTK extension).",
  "GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_FAST_SIZE_EXT": "Specifies the maximum fast local storage size for combined shaders (EXT extension).",
  "GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_SIZE_EXT": "Specifies the maximum local storage size for combined shaders (EXT extension).",
  "GL_FRAMEBUFFER_INCOMPLETE_INSUFFICIENT_SHADER_COMBINED_LOCAL_STORAGE_EXT": "Indicates insufficient shader local storage in a framebuffer (EXT extension).",
  "GL_TEXTURE_FOVEATED_CUTOFF_DENSITY_QCOM": "Specifies the cutoff density for foveated textures (QCOM extension).",
  "GL_FRAMEBUFFER_FETCH_NONCOHERENT_QCOM": "Indicates non-coherent framebuffer fetch (QCOM extension).",
  "GL_VALIDATE_SHADER_BINARY_QCOM": "Validates a shader binary (QCOM extension).",
  "GL_SHADING_RATE_QCOM": "Specifies the shading rate (QCOM extension).",
  "GL_SHADING_RATE_PRESERVE_ASPECT_RATIO_QCOM": "Preserves the aspect ratio for shading rates (QCOM extension).",
  "GL_SHADING_RATE_1X1_PIXELS_QCOM": "Specifies a shading rate of 1x1 pixels (QCOM extension).",
  "GL_SHADING_RATE_1X2_PIXELS_QCOM": "Specifies a shading rate of 1x2 pixels (QCOM extension).",
  "GL_SHADING_RATE_2X1_PIXELS_QCOM": "Specifies a shading rate of 2x1 pixels (QCOM extension).",
  "GL_SHADING_RATE_2X2_PIXELS_QCOM": "Specifies a shading rate of 2x2 pixels (QCOM extension).",
  "GL_SHADING_RATE_1X4_PIXELS_QCOM": "Specifies a shading rate of 1x4 pixels (QCOM extension).",
  "GL_SHADING_RATE_4X1_PIXELS_QCOM": "Specifies a shading rate of 4x1 pixels (QCOM extension).",
  "GL_SHADING_RATE_4X2_PIXELS_QCOM": "Specifies a shading rate of 4x2 pixels (QCOM extension).",
  "GL_SHADING_RATE_2X4_PIXELS_QCOM": "Specifies a shading rate of 2x4 pixels (QCOM extension).",
  "GL_SHADING_RATE_4X4_PIXELS_QCOM": "Specifies a shading rate of 4x4 pixels (QCOM extension).",
  "GL_SHADING_RATE_1X1_PIXELS_EXT": "Specifies a shading rate of 1x1 pixels (EXT extension).",
  "GL_SHADING_RATE_1X2_PIXELS_EXT": "Specifies a shading rate of 1x2 pixels (EXT extension).",
  "GL_SHADING_RATE_2X1_PIXELS_EXT": "Specifies a shading rate of 2x1 pixels (EXT extension).",
  "GL_SHADING_RATE_2X2_PIXELS_EXT": "Specifies a shading rate of 2x2 pixels (EXT extension).",
  "GL_SHADING_RATE_1X4_PIXELS_EXT": "Specifies a shading rate of 1x4 pixels (EXT extension).",
  "GL_SHADING_RATE_4X1_PIXELS_EXT": "Specifies a shading rate of 4x1 pixels (EXT extension).",
  "GL_SHADING_RATE_4X2_PIXELS_EXT": "Specifies a shading rate of 4x2 pixels (EXT extension).",
  "GL_SHADING_RATE_2X4_PIXELS_EXT": "Specifies a shading rate of 2x4 pixels (EXT extension).",
  "GL_SHADING_RATE_4X4_PIXELS_EXT": "Specifies a shading rate of 4x4 pixels (EXT extension).",
  "GL_SURFACE_COMPRESSION_EXT": "Indicates whether surface compression is enabled (EXT extension).",
  "GL_SURFACE_COMPRESSION_FIXED_RATE_NONE_EXT": "Specifies no fixed-rate surface compression (EXT extension).",
  "GL_SURFACE_COMPRESSION_FIXED_RATE_DEFAULT_EXT": "Specifies default fixed-rate surface compression (EXT extension).",
  "GL_SURFACE_COMPRESSION_FIXED_RATE_1BPC_EXT": "Specifies fixed-rate surface compression at 1 bit per component (EXT extension).",
  "GL_SURFACE_COMPRESSION_FIXED_RATE_2BPC_EXT": "Specifies fixed-rate surface compression at 2 bits per component (EXT extension).",
  "GL_SURFACE_COMPRESSION_FIXED_RATE_3BPC_EXT": "Specifies fixed-rate surface compression at 3 bits per component (EXT extension).",
  "GL_SURFACE_COMPRESSION_FIXED_RATE_4BPC_EXT": "Specifies fixed-rate surface compression at 4 bits per component (EXT extension).",
  "GL_SURFACE_COMPRESSION_FIXED_RATE_5BPC_EXT": "Specifies fixed-rate surface compression at 5 bits per component (EXT extension).",
  "GL_SURFACE_COMPRESSION_FIXED_RATE_6BPC_EXT": "Specifies fixed-rate surface compression at 6 bits per component (EXT extension).",
  "GL_SURFACE_COMPRESSION_FIXED_RATE_7BPC_EXT": "Specifies fixed-rate surface compression at 7 bits per component (EXT extension).",
  "GL_SURFACE_COMPRESSION_FIXED_RATE_8BPC_EXT": "Specifies fixed-rate surface compression at 8 bits per component (EXT extension).",
  "GL_SURFACE_COMPRESSION_FIXED_RATE_9BPC_EXT": "Specifies fixed-rate surface compression at 9 bits per component (EXT extension).",
  "GL_SURFACE_COMPRESSION_FIXED_RATE_10BPC_EXT": "Specifies fixed-rate surface compression at 10 bits per component (EXT extension).",
  "GL_SURFACE_COMPRESSION_FIXED_RATE_11BPC_EXT": "Specifies fixed-rate surface compression at 11 bits per component (EXT extension).",
  "GL_SURFACE_COMPRESSION_FIXED_RATE_12BPC_EXT": "Specifies fixed-rate surface compression at 12 bits per component (EXT extension).",
  "GL_SHADING_RATE_EXT": "Specifies the shading rate (EXT extension).",
  "GL_SHADING_RATE_ATTACHMENT_EXT": "Specifies the shading rate attachment (EXT extension).",
  "GL_FRAGMENT_SHADING_RATE_COMBINER_OP_KEEP_EXT": "Specifies to keep the current shading rate (EXT extension).",
  "GL_FRAGMENT_SHADING_RATE_COMBINER_OP_REPLACE_EXT": "Specifies to replace the current shading rate (EXT extension).",
  "GL_FRAGMENT_SHADING_RATE_COMBINER_OP_MIN_EXT": "Specifies the minimum shading rate (EXT extension).",
  "GL_FRAGMENT_SHADING_RATE_COMBINER_OP_MAX_EXT": "Specifies the maximum shading rate (EXT extension).",
  "GL_FRAGMENT_SHADING_RATE_COMBINER_OP_MUL_EXT": "Specifies to multiply the current shading rate (EXT extension).",
  "GL_MIN_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_WIDTH_EXT": "Specifies the minimum texel width for fragment shading rate attachments (EXT extension).",
  "GL_MAX_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_WIDTH_EXT": "Specifies the maximum texel width for fragment shading rate attachments (EXT extension).",
  "GL_MIN_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_HEIGHT_EXT": "Specifies the minimum texel height for fragment shading rate attachments (EXT extension).",
  "GL_MAX_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_HEIGHT_EXT": "Specifies the maximum texel height for fragment shading rate attachments (EXT extension).",
  "GL_MAX_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_ASPECT_RATIO_EXT": "Specifies the maximum aspect ratio for fragment shading rate attachments (EXT extension).",
  "GL_MAX_FRAGMENT_SHADING_RATE_ATTACHMENT_LAYERS_EXT": "Specifies the maximum number of layers for fragment shading rate attachments (EXT extension).",
  "GL_FRAGMENT_SHADING_RATE_WITH_SHADER_DEPTH_STENCIL_WRITES_SUPPORTED_EXT": "Indicates support for fragment shading rates with depth and stencil writes (EXT extension).",
  "GL_FRAGMENT_SHADING_RATE_WITH_SAMPLE_MASK_SUPPORTED_EXT": "Indicates support for fragment shading rates with sample mask (EXT extension).",
  "GL_FRAGMENT_SHADING_RATE_ATTACHMENT_WITH_DEFAULT_FRAMEBUFFER_SUPPORTED_EXT": "Indicates support for fragment shading rate attachments with default framebuffers (EXT extension).",
  "GL_SHADER_CORE_COUNT_ARM": "Specifies the number of shader cores (ARM extension).",
  "GL_SHADER_CORE_ACTIVE_COUNT_ARM": "Specifies the number of active shader cores (ARM extension).",
  "GL_SHADER_CORE_PRESENT_MASK_ARM": "Specifies the present shader core mask (ARM extension).",
  "GL_SHADER_CORE_MAX_WARP_COUNT_ARM": "Specifies the maximum warp count for shader cores (ARM extension).",
  "GL_SHADER_CORE_PIXEL_RATE_ARM": "Specifies the pixel rate for shader cores (ARM extension).",
  "GL_SHADER_CORE_TEXEL_RATE_ARM": "Specifies the texel rate for shader cores (ARM extension).",
  "GL_SHADER_CORE_FMA_RATE_ARM": "Specifies the fused multiply-add rate for shader cores (ARM extension).",
  "GL_TEXTURE_Y_DEGAMMA_QCOM": "Specifies Y component degamma for textures (QCOM extension).",
  "GL_TEXTURE_CBCR_DEGAMMA_QCOM": "Specifies CbCr component degamma for textures (QCOM extension).",
  "GL_RASTER_POSITION_UNCLIPPED_IBM": "Specifies unclipped raster position (IBM extension).",
  "GL_CULL_VERTEX_IBM": "Enables vertex culling (IBM extension).",
  "GL_ALL_STATIC_DATA_IBM": "Indicates all data is static (IBM extension).",
  "GL_STATIC_VERTEX_ARRAY_IBM": "Specifies static vertex array data (IBM extension).",
  "GL_VERTEX_ARRAY_LIST_IBM": "Specifies a list of vertex arrays (IBM extension).",
  "GL_NORMAL_ARRAY_LIST_IBM": "Specifies a list of normal arrays (IBM extension).",
  "GL_COLOR_ARRAY_LIST_IBM": "Specifies a list of color arrays (IBM extension).",
  "GL_INDEX_ARRAY_LIST_IBM": "Specifies a list of index arrays (IBM extension).",
  "GL_TEXTURE_COORD_ARRAY_LIST_IBM": "Specifies a list of texture coordinate arrays (IBM extension).",
  "GL_EDGE_FLAG_ARRAY_LIST_IBM": "Specifies a list of edge flag arrays (IBM extension).",
  "GL_FOG_COORDINATE_ARRAY_LIST_IBM": "Specifies a list of fog coordinate arrays (IBM extension).",
  "GL_SECONDARY_COLOR_ARRAY_LIST_IBM": "Specifies a list of secondary color arrays (IBM extension).",
  "GL_VERTEX_ARRAY_LIST_STRIDE_IBM": "Specifies the stride of a vertex array list (IBM extension).",
  "GL_NORMAL_ARRAY_LIST_STRIDE_IBM": "Specifies the stride of a normal array list (IBM extension).",
  "GL_COLOR_ARRAY_LIST_STRIDE_IBM": "Specifies the stride of a color array list (IBM extension).",
  "GL_INDEX_ARRAY_LIST_STRIDE_IBM": "Specifies the stride of an index array list (IBM extension).",
  "GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM": "Specifies the stride of a texture coordinate array list (IBM extension).",
  "GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM": "Specifies the stride of an edge flag array list (IBM extension).",
  "GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM": "Specifies the stride of a fog coordinate array list (IBM extension).",
  "GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM": "Specifies the stride of a secondary color array list (IBM extension).",
  "GL_PREFER_DOUBLEBUFFER_HINT_PGI": "Indicates a preference for double buffering (PGI extension).",
  "GL_CONSERVE_MEMORY_HINT_PGI": "Indicates a hint to conserve memory (PGI extension).",
  "GL_RECLAIM_MEMORY_HINT_PGI": "Indicates a hint to reclaim memory (PGI extension).",
  "GL_NATIVE_GRAPHICS_HANDLE_PGI": "Specifies a native graphics handle (PGI extension).",
  "GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI": "Indicates a hint to begin using native graphics (PGI extension).",
  "GL_NATIVE_GRAPHICS_END_HINT_PGI": "Indicates a hint to end using native graphics (PGI extension).",
  "GL_ALWAYS_FAST_HINT_PGI": "Indicates a hint for always fast rendering (PGI extension).",
  "GL_ALWAYS_SOFT_HINT_PGI": "Indicates a hint for always soft rendering (PGI extension).",
  "GL_ALLOW_DRAW_OBJ_HINT_PGI": "Indicates a hint to allow drawing of objects (PGI extension).",
  "GL_ALLOW_DRAW_WIN_HINT_PGI": "Indicates a hint to allow drawing of windows (PGI extension).",
  "GL_ALLOW_DRAW_FRG_HINT_PGI": "Indicates a hint to allow drawing of fragments (PGI extension).",
  "GL_ALLOW_DRAW_MEM_HINT_PGI": "Indicates a hint to allow drawing of memory (PGI extension).",
  "GL_STRICT_DEPTHFUNC_HINT_PGI": "Indicates a hint for strict depth function checks (PGI extension).",
  "GL_STRICT_LIGHTING_HINT_PGI": "Indicates a hint for strict lighting checks (PGI extension).",
  "GL_STRICT_SCISSOR_HINT_PGI": "Indicates a hint for strict scissor checks (PGI extension).",
  "GL_FULL_STIPPLE_HINT_PGI": "Indicates a hint for full stipple rendering (PGI extension).",
  "GL_CLIP_NEAR_HINT_PGI": "Indicates a hint for near clipping (PGI extension).",
  "GL_CLIP_FAR_HINT_PGI": "Indicates a hint for far clipping (PGI extension).",
  "GL_WIDE_LINE_HINT_PGI": "Indicates a hint for wide line rendering (PGI extension).",
  "GL_BACK_NORMALS_HINT_PGI": "Indicates a hint for backface normal rendering (PGI extension).",
  "GL_VERTEX_DATA_HINT_PGI": "Indicates a hint for vertex data optimization (PGI extension).",
  "GL_VERTEX_CONSISTENT_HINT_PGI": "Indicates a hint for vertex consistency (PGI extension).",
  "GL_MATERIAL_SIDE_HINT_PGI": "Indicates a hint for material side rendering (PGI extension).",
  "GL_MAX_VERTEX_HINT_PGI": "Indicates a hint for the maximum vertex count (PGI extension)."
}