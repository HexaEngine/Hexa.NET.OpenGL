// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using HexaGen.Runtime;
using System.Runtime.CompilerServices;
using System.Numerics;

namespace Hexa.NET.OpenGLES.NV
{
	public static unsafe partial class GLNVTimelineSemaphore
	{
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void CreateSemaphoresNVNative(int n, uint* semaphores)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<int, uint*, void>)funcTable[0])(n, semaphores);
			#else
			((delegate* unmanaged[Cdecl]<int, nint, void>)funcTable[0])(n, (nint)semaphores);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_timeline_semaphore</remarks>
		public static void CreateSemaphoresNV(int n, uint* semaphores)
		{
			CreateSemaphoresNVNative(n, semaphores);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_timeline_semaphore</remarks>
		public static void CreateSemaphoresNV(int n, Span<uint> semaphores)
		{
			fixed (uint* psemaphores0 = semaphores)
			{
				CreateSemaphoresNVNative(n, psemaphores0);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_timeline_semaphore</remarks>
		public static void CreateSemaphoresNV(int n, ref uint semaphores)
		{
			fixed (uint* psemaphores0 = &semaphores)
			{
				CreateSemaphoresNVNative(n, psemaphores0);
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void GetSemaphoreParameterivNVNative(uint semaphore, GLSemaphoreParameterName pname, int* @params)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<uint, GLSemaphoreParameterName, int*, void>)funcTable[1])(semaphore, pname, @params);
			#else
			((delegate* unmanaged[Cdecl]<uint, GLSemaphoreParameterName, nint, void>)funcTable[1])(semaphore, pname, (nint)@params);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_timeline_semaphore</remarks>
		public static void GetSemaphoreParameterivNV(uint semaphore, GLSemaphoreParameterName pname, int* @params)
		{
			GetSemaphoreParameterivNVNative(semaphore, pname, @params);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_timeline_semaphore</remarks>
		public static void GetSemaphoreParameterivNV(uint semaphore, GLSemaphoreParameterName pname, Span<int> @params)
		{
			fixed (int* pparams0 = @params)
			{
				GetSemaphoreParameterivNVNative(semaphore, pname, pparams0);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_timeline_semaphore</remarks>
		public static void GetSemaphoreParameterivNV(uint semaphore, GLSemaphoreParameterName pname, ref int @params)
		{
			fixed (int* pparams0 = &@params)
			{
				GetSemaphoreParameterivNVNative(semaphore, pname, pparams0);
			}
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void SemaphoreParameterivNVNative(uint semaphore, GLSemaphoreParameterName pname, int* @params)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<uint, GLSemaphoreParameterName, int*, void>)funcTable[2])(semaphore, pname, @params);
			#else
			((delegate* unmanaged[Cdecl]<uint, GLSemaphoreParameterName, nint, void>)funcTable[2])(semaphore, pname, (nint)@params);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_timeline_semaphore</remarks>
		public static void SemaphoreParameterivNV(uint semaphore, GLSemaphoreParameterName pname, int* @params)
		{
			SemaphoreParameterivNVNative(semaphore, pname, @params);
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_timeline_semaphore</remarks>
		public static void SemaphoreParameterivNV(uint semaphore, GLSemaphoreParameterName pname, Span<int> @params)
		{
			fixed (int* pparams0 = @params)
			{
				SemaphoreParameterivNVNative(semaphore, pname, pparams0);
			}
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		/// <remarks>Used by Extensions:<br/>GL_NV_timeline_semaphore</remarks>
		public static void SemaphoreParameterivNV(uint semaphore, GLSemaphoreParameterName pname, ref int @params)
		{
			fixed (int* pparams0 = &@params)
			{
				SemaphoreParameterivNVNative(semaphore, pname, pparams0);
			}
		}

	}
}
