// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using HexaGen.Runtime;
using System.Runtime.CompilerServices;
using System.Numerics;

namespace Hexa.NET.OpenGL.AMD
{
	public static unsafe partial class GLAMDMultiDrawIndirect
	{
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void MultiDrawArraysIndirectAMDNative(GLPrimitiveType mode, void* indirect, int primcount, int stride)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<GLPrimitiveType, void*, int, int, void>)funcTable[0])(mode, indirect, primcount, stride);
			#else
			((delegate* unmanaged[Cdecl]<GLPrimitiveType, nint, int, int, void>)funcTable[0])(mode, (nint)indirect, primcount, stride);
			#endif
		}

		public static void MultiDrawArraysIndirectAMD(GLPrimitiveType mode, void* indirect, int primcount, int stride)
		{
			MultiDrawArraysIndirectAMDNative(mode, indirect, primcount, stride);
		}

		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void MultiDrawElementsIndirectAMDNative(GLPrimitiveType mode, GLDrawElementsType type, void* indirect, int primcount, int stride)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<GLPrimitiveType, GLDrawElementsType, void*, int, int, void>)funcTable[1])(mode, type, indirect, primcount, stride);
			#else
			((delegate* unmanaged[Cdecl]<GLPrimitiveType, GLDrawElementsType, nint, int, int, void>)funcTable[1])(mode, type, (nint)indirect, primcount, stride);
			#endif
		}

		public static void MultiDrawElementsIndirectAMD(GLPrimitiveType mode, GLDrawElementsType type, void* indirect, int primcount, int stride)
		{
			MultiDrawElementsIndirectAMDNative(mode, type, indirect, primcount, stride);
		}

	}
}
